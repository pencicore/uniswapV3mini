{
	"id": "8504090a5fd979a70558f45bb4e7a435",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/UniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\nimport \"./lib/Math.sol\";\r\nimport \"./lib/Position.sol\";\r\nimport \"./lib/Tick.sol\";\r\nimport \"./lib/TickBitmap.sol\";\r\nimport \"./lib/TickMath.sol\";\r\nimport \"./interfaces/callback/IUniswapV3MintCallback.sol\";\r\nimport \"./interfaces/callback/IUniswapV3SwapCallback.sol\";\r\nimport \"./interfaces/pool/IUniswapV3PoolEvents.sol\";\r\nimport \"./interfaces/IERC20.sol\";\r\n\r\ncontract UniswapV3Pool is \r\n    IUniswapV3PoolEvents\r\n{\r\n    using Tick for mapping(int24 => Tick.Info);\r\n    using Position for mapping(bytes32 => Position.Info);\r\n    using Position for Position.Info;\r\n    using TickBitmap for mapping(int16 => uint256);\r\n\r\n    int24 internal constant MIN_TICK = -887272;\r\n    int24 internal constant MAX_TICK = -MIN_TICK;\r\n\r\n    error InvalidTickRange();\r\n    error ZeroLiquidity();\r\n    error InsufficientInputAmount();\r\n\r\n    // 池子代币，不可变\r\n    address public immutable token0;\r\n    address public immutable token1;\r\n\r\n    // 打包一起读取的变量\r\n    struct Slot0 {\r\n        // 当前 sqrt(P)\r\n        uint160 sqrtPriceX96;\r\n        // 当前 tick\r\n        int24 tick;\r\n    }\r\n    Slot0 public slot0;\r\n\r\n    // 流动性数量，L。\r\n    uint128 public liquidity;\r\n\r\n    // Ticks 信息\r\n    mapping(int24 => Tick.Info) public ticks;\r\n    // Ticks 位图\r\n    mapping(int16 => uint256) public tickBitmap;\r\n    // 头寸信息\r\n    mapping(bytes32 => Position.Info) public positions;\r\n\r\n    //构造函数\r\n    constructor(\r\n        address token0_,\r\n        address token1_,\r\n        uint160 sqrtPriceX96,\r\n        int24 tick\r\n    ) {\r\n        token0 = token0_;\r\n        token1 = token1_;\r\n        slot0 = Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick});\r\n    }\r\n\r\n    //铸造\r\n    function mint(\r\n        address owner,\r\n        int24 lowerTick,\r\n        int24 upperTick,\r\n        uint128 amount,\r\n        bytes calldata data // <--- 新行\r\n    ) external returns (uint256 amount0, uint256 amount1) {\r\n        if (\r\n            lowerTick >= upperTick ||\r\n            lowerTick < MIN_TICK ||\r\n            upperTick > MAX_TICK\r\n        ) revert InvalidTickRange();\r\n        if (amount == 0) revert ZeroLiquidity();\r\n\r\n        bool flippedLower = ticks.update(lowerTick, amount);\r\n        bool flippedUpper = ticks.update(upperTick, amount);\r\n        if(flippedLower) {\r\n            tickBitmap.flipTick(lowerTick, 1);\r\n        }\r\n        if(flippedUpper) {\r\n            tickBitmap.flipTick(upperTick, 1);\r\n        }\r\n\r\n        Position.Info storage position = positions.get(\r\n            owner,\r\n            lowerTick,\r\n            upperTick\r\n        );\r\n        position.update(amount);\r\n\r\n        Slot0 memory slot0_ = slot0;\r\n\r\n        amount0 = Math.calcAmount0Delta(\r\n            slot0_.sqrtPriceX96,\r\n            TickMath.getSqrtRatioAtTick(upperTick),\r\n            amount\r\n        );\r\n\r\n        amount1 = Math.calcAmount1Delta(\r\n            slot0_.sqrtPriceX96,\r\n            TickMath.getSqrtRatioAtTick(lowerTick),\r\n            amount\r\n        );\r\n\r\n        liquidity += uint128(amount);\r\n\r\n        uint256 balance0Before;\r\n        uint256 balance1Before;\r\n        if (amount0 > 0) balance0Before = balance0();\r\n        if (amount1 > 0) balance1Before = balance1();\r\n        IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback(\r\n            amount0,\r\n            amount1,\r\n            data\r\n        );\r\n        if (amount0 > 0 && balance0Before + amount0 > balance0())\r\n            revert InsufficientInputAmount();\r\n        if (amount1 > 0 && balance1Before + amount1 > balance1())\r\n            revert InsufficientInputAmount();\r\n\r\n        emit Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1);\r\n    }\r\n    \r\n    //交易代币\r\n    function swap(address recipient, bytes calldata data)\r\n        public\r\n        returns (int256 amount0, int256 amount1)\r\n    {\r\n        int24 nextTick = 85184;\r\n        uint160 nextPrice = 5604469350942327889444743441197;\r\n        amount0 = -0.008396714242162444 ether;\r\n        amount1 = 42 ether;\r\n        (slot0.tick, slot0.sqrtPriceX96) = (nextTick, nextPrice);\r\n        \r\n        IERC20(token0).transfer(recipient, uint256(-amount0));\r\n        uint256 balance1Before = balance1();\r\n        IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(\r\n            amount0,\r\n            amount1,\r\n            data\r\n        );\r\n        if (balance1Before + uint256(amount1) < balance1())\r\n            revert InsufficientInputAmount();\r\n\r\n        emit Swap(\r\n            msg.sender,\r\n            recipient,\r\n            amount0,\r\n            amount1,\r\n            slot0.sqrtPriceX96,\r\n            liquidity,\r\n            slot0.tick\r\n        );\r\n    }\r\n\r\n    //代币0余额\r\n    function balance0() internal view returns (uint256 balance) {\r\n        balance = IERC20(token0).balanceOf(address(this));\r\n    }\r\n\r\n    //代币1余额\r\n    function balance1() internal view returns (uint256 balance) {\r\n        balance = IERC20(token1).balanceOf(address(this));\r\n    }\r\n\r\n}\r\n"
			},
			"src/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Minimal ERC20 interface for Uniswap\r\n/// @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3\r\ninterface IERC20 {\r\n    /// @notice Returns the balance of a token\r\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\r\n    /// @return The number of tokens held by the account\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\r\n    /// @param recipient The account that will receive the amount transferred\r\n    /// @param amount The number of tokens to send from the sender to the recipient\r\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /// @notice Returns the current allowance given to a spender by an owner\r\n    /// @param owner The account of the token owner\r\n    /// @param spender The account of the token spender\r\n    /// @return The current allowance granted by `owner` to `spender`\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\r\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\r\n    /// @param amount The amount of tokens allowed to be used by `spender`\r\n    /// @return Returns true for a successful approval, false for unsuccessful\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\r\n    /// @param sender The account from which the transfer will be initiated\r\n    /// @param recipient The recipient of the transfer\r\n    /// @param amount The amount of the transfer\r\n    /// @return Returns true for a successful transfer, false for unsuccessful\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\r\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\r\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\r\n    /// @param value The amount of tokens that were transferred\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\r\n    /// @param owner The account that approved spending of its tokens\r\n    /// @param spender The account for which the spending allowance was modified\r\n    /// @param value The new allowance from the owner to the spender\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Events emitted by a pool\r\n/// @notice Contains all events emitted by the pool\r\ninterface IUniswapV3PoolEvents {\r\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\r\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\r\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\r\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\r\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\r\n\r\n    /// @notice Emitted when liquidity is minted for a given position\r\n    /// @param sender The address that minted the liquidity\r\n    /// @param owner The owner of the position and recipient of any minted liquidity\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity minted to the position range\r\n    /// @param amount0 How much token0 was required for the minted liquidity\r\n    /// @param amount1 How much token1 was required for the minted liquidity\r\n    event Mint(\r\n        address sender,\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted when fees are collected by the owner of a position\r\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\r\n    /// @param owner The owner of the position for which fees are collected\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount0 The amount of token0 fees collected\r\n    /// @param amount1 The amount of token1 fees collected\r\n    event Collect(\r\n        address indexed owner,\r\n        address recipient,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount0,\r\n        uint128 amount1\r\n    );\r\n\r\n    /// @notice Emitted when a position's liquidity is removed\r\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\r\n    /// @param owner The owner of the position for which liquidity is removed\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity to remove\r\n    /// @param amount0 The amount of token0 withdrawn\r\n    /// @param amount1 The amount of token1 withdrawn\r\n    event Burn(\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any swaps between token0 and token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the output of the swap\r\n    /// @param amount0 The delta of the token0 balance of the pool\r\n    /// @param amount1 The delta of the token1 balance of the pool\r\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\r\n    /// @param liquidity The liquidity of the pool after the swap\r\n    /// @param tick The log base 1.0001 of price of the pool after the swap\r\n    event Swap(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        int256 amount0,\r\n        int256 amount1,\r\n        uint160 sqrtPriceX96,\r\n        uint128 liquidity,\r\n        int24 tick\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any flashes of token0/token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the tokens from flash\r\n    /// @param amount0 The amount of token0 that was flashed\r\n    /// @param amount1 The amount of token1 that was flashed\r\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\r\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\r\n    event Flash(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        uint256 paid0,\r\n        uint256 paid1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\r\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\r\n    /// just before a mint/swap/burn.\r\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\r\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\r\n    event IncreaseObservationCardinalityNext(\r\n        uint16 observationCardinalityNextOld,\r\n        uint16 observationCardinalityNextNew\r\n    );\r\n\r\n    /// @notice Emitted when the protocol fee is changed by the pool\r\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\r\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\r\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\r\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\r\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\r\n\r\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\r\n    /// @param sender The address that collects the protocol fees\r\n    /// @param recipient The address that receives the collected protocol fees\r\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\r\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\r\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\r\n}\r\n"
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#swap\r\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\r\ninterface IUniswapV3SwapCallback {\r\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\r\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\r\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\r\n    function uniswapV3SwapCallback(\r\n        int256 amount0Delta,\r\n        int256 amount1Delta,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#mint\r\n/// @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface\r\ninterface IUniswapV3MintCallback {\r\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\r\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\r\n    function uniswapV3MintCallback(\r\n        uint256 amount0Owed,\r\n        uint256 amount1Owed,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"src/lib/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(uint24(MAX_TICK)), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}"
			},
			"src/lib/TickBitmap.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport './BitMath.sol';\n\n/// @title Packed tick initialized state library\n/// @notice Stores a packed mapping of tick index to its initialized state\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\nlibrary TickBitmap {\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\n    /// @param tick The tick for which to compute the position\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\n    /// @return bitPos The bit position in the word where the flag is stored\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\n        wordPos = int16(tick >> 8);\n        bitPos = uint8(uint24(tick % 256));\n    }\n\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\n    /// @param self The mapping in which to flip the tick\n    /// @param tick The tick to flip\n    /// @param tickSpacing The spacing between usable ticks\n    function flipTick(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing\n    ) internal {\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\n        uint256 mask = 1 << bitPos;\n        self[wordPos] ^= mask;\n    }\n\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n    /// to the left (less than or equal to) or right (greater than) of the given tick\n    /// @param self The mapping in which to compute the next initialized tick\n    /// @param tick The starting tick\n    /// @param tickSpacing The spacing between usable ticks\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\n    function nextInitializedTickWithinOneWord(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing,\n        bool lte\n    ) internal view returns (int24 next, bool initialized) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\n\n        if (lte) {\n            (int16 wordPos, uint8 bitPos) = position(compressed);\n            // all the 1s at or to the right of the current bitPos\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked)))) * tickSpacing\n                : (compressed - int24(uint24(bitPos))) * tickSpacing;\n        } else {\n            // start from the word of the next tick, since the current tick state doesn't matter\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\n            // all the 1s at or to the left of the bitPos\n            uint256 mask = ~((1 << bitPos) - 1);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed + 1 + int24(uint24((BitMath.leastSignificantBit(masked) - bitPos)))) * tickSpacing\n                : (compressed + 1 + int24(uint24((type(uint8).max - bitPos)))) * tickSpacing;\n        }\n    }\n}"
			},
			"src/lib/Tick.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nlibrary Tick {\n    struct Info {\n        bool initialized;\n        uint128 liquidity;\n    }\n\n    function update(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tick,\n        uint128 liquidityDelta\n    ) internal returns (bool flipped) {\n        Tick.Info storage tickInfo = self[tick];\n        uint128 liquidityBefore = tickInfo.liquidity;\n        uint128 liquidityAfter = liquidityBefore + liquidityDelta;\n\n        flipped = (liquidityAfter == 0) != (liquidityBefore == 0);\n\n        if (liquidityBefore == 0) {\n            tickInfo.initialized = true;\n        }\n\n        tickInfo.liquidity = liquidityAfter;\n    }\n}\n"
			},
			"src/lib/Position.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nlibrary Position {\n    struct Info {\n        uint128 liquidity;\n    }\n\n    function get(\n        mapping(bytes32 => Info) storage self,\n        address owner,\n        int24 lowerTick,\n        int24 upperTick\n    ) internal view returns (Position.Info storage position) {\n        position = self[\n            keccak256(abi.encodePacked(owner, lowerTick, upperTick))\n        ];\n    }\n\n    function update(Info storage self, uint128 liquidityDelta) internal {\n        uint128 liquidityBefore = self.liquidity;\n        uint128 liquidityAfter = liquidityBefore + liquidityDelta;\n\n        self.liquidity = liquidityAfter;\n    }\n}\n"
			},
			"src/lib/Math.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nimport \"./FixedPoint96.sol\";\nimport \"./PRBMath.sol\";\n\nlibrary Math {\n    /// @notice Calculates amount0 delta between two prices\n    /// TODO: round down when removing liquidity\n    function calcAmount0Delta(\n        uint160 sqrtPriceAX96,\n        uint160 sqrtPriceBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount0) {\n        if (sqrtPriceAX96 > sqrtPriceBX96)\n            (sqrtPriceAX96, sqrtPriceBX96) = (sqrtPriceBX96, sqrtPriceAX96);\n\n        require(sqrtPriceAX96 > 0);\n\n        amount0 = divRoundingUp(\n            mulDivRoundingUp(\n                (uint256(liquidity) << FixedPoint96.RESOLUTION),\n                (sqrtPriceBX96 - sqrtPriceAX96),\n                sqrtPriceBX96\n            ),\n            sqrtPriceAX96\n        );\n    }\n\n    /// @notice Calculates amount1 delta between two prices\n    /// TODO: round down when removing liquidity\n    function calcAmount1Delta(\n        uint160 sqrtPriceAX96,\n        uint160 sqrtPriceBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount1) {\n        if (sqrtPriceAX96 > sqrtPriceBX96)\n            (sqrtPriceAX96, sqrtPriceBX96) = (sqrtPriceBX96, sqrtPriceAX96);\n\n        amount1 = mulDivRoundingUp(\n            liquidity,\n            (sqrtPriceBX96 - sqrtPriceAX96),\n            FixedPoint96.Q96\n        );\n    }\n\n    function getNextSqrtPriceFromInput(\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        uint256 amountIn,\n        bool zeroForOne\n    ) internal pure returns (uint160 sqrtPriceNextX96) {\n        sqrtPriceNextX96 = zeroForOne\n            ? getNextSqrtPriceFromAmount0RoundingUp(\n                sqrtPriceX96,\n                liquidity,\n                amountIn\n            )\n            : getNextSqrtPriceFromAmount1RoundingDown(\n                sqrtPriceX96,\n                liquidity,\n                amountIn\n            );\n    }\n\n    function getNextSqrtPriceFromAmount0RoundingUp(\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        uint256 amountIn\n    ) internal pure returns (uint160) {\n        uint256 numerator = uint256(liquidity) << FixedPoint96.RESOLUTION;\n        uint256 product = amountIn * sqrtPriceX96;\n\n        // If product doesn't overflow, use the precise formula.\n        if (product / amountIn == sqrtPriceX96) {\n            uint256 denominator = numerator + product;\n            if (denominator >= numerator) {\n                return\n                    uint160(\n                        mulDivRoundingUp(numerator, sqrtPriceX96, denominator)\n                    );\n            }\n        }\n\n        // If product overflows, use a less precise formula.\n        return\n            uint160(\n                divRoundingUp(numerator, (numerator / sqrtPriceX96) + amountIn)\n            );\n    }\n\n    function getNextSqrtPriceFromAmount1RoundingDown(\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        uint256 amountIn\n    ) internal pure returns (uint160) {\n        return\n            sqrtPriceX96 +\n            uint160((amountIn << FixedPoint96.RESOLUTION) / liquidity);\n    }\n\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = PRBMath.mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n\n    function divRoundingUp(uint256 numerator, uint256 denominator)\n        internal\n        pure\n        returns (uint256 result)\n    {\n        assembly {\n            result := add(\n                div(numerator, denominator),\n                gt(mod(numerator, denominator), 0)\n            )\n        }\n    }\n}\n"
			},
			"src/lib/BitMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title BitMath\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\nlibrary BitMath {\n    /// @notice Returns the index of the most significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\n    /// @return r the index of the most significant bit\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            r += 128;\n        }\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            r += 64;\n        }\n        if (x >= 0x100000000) {\n            x >>= 32;\n            r += 32;\n        }\n        if (x >= 0x10000) {\n            x >>= 16;\n            r += 16;\n        }\n        if (x >= 0x100) {\n            x >>= 8;\n            r += 8;\n        }\n        if (x >= 0x10) {\n            x >>= 4;\n            r += 4;\n        }\n        if (x >= 0x4) {\n            x >>= 2;\n            r += 2;\n        }\n        if (x >= 0x2) r += 1;\n    }\n\n    /// @notice Returns the index of the least significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\n    /// @return r the index of the least significant bit\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        r = 255;\n        if (x & type(uint128).max > 0) {\n            r -= 128;\n        } else {\n            x >>= 128;\n        }\n        if (x & type(uint64).max > 0) {\n            r -= 64;\n        } else {\n            x >>= 64;\n        }\n        if (x & type(uint32).max > 0) {\n            r -= 32;\n        } else {\n            x >>= 32;\n        }\n        if (x & type(uint16).max > 0) {\n            r -= 16;\n        } else {\n            x >>= 16;\n        }\n        if (x & type(uint8).max > 0) {\n            r -= 8;\n        } else {\n            x >>= 8;\n        }\n        if (x & 0xf > 0) {\n            r -= 4;\n        } else {\n            x >>= 4;\n        }\n        if (x & 0x3 > 0) {\n            r -= 2;\n        } else {\n            x >>= 2;\n        }\n        if (x & 0x1 > 0) r -= 1;\n    }\n}"
			},
			"src/lib/PRBMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.4;\r\n\r\n/// @title PRBMath\r\n/// @author Paul Razvan Berg\r\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 and int256.\r\n\r\nlibrary PRBMath {\r\n    /// @notice The maximum value an uint256 number can have.\r\n    uint256 internal constant MAX_UINT256 =\r\n        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n    /// @notice The maximum value an int256 number can have.\r\n    int256 internal constant MAX_INT256 = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n    /// @notice The minimum value an int256 number can have.\r\n    int256 internal constant MIN_INT256 = -0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF - 1;\r\n\r\n    /// @notice The scaling factor used for fixed-point numbers: 1e18.\r\n    uint256 internal constant SCALE = 1e18;\r\n\r\n    /// @notice The half scale, used for rounding.\r\n    uint256 internal constant HALF_SCALE = 5e17;\r\n\r\n    /// @notice Calculates floor(a × b ÷ denominator) with full precision.\r\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\r\n    function mulDiv(\r\n        uint256 x,\r\n        uint256 y,\r\n        uint256 denominator\r\n    ) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256.\r\n            require(denominator > prod1, \"PRBMath: overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0]\r\n            uint256 remainder;\r\n            assembly {\r\n                remainder := mulmod(x, y, denominator)\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor\r\n            uint256 lpotdod = denominator & (~denominator + 1);\r\n            assembly {\r\n                denominator := div(denominator, lpotdod)\r\n                prod0 := div(prod0, lpotdod)\r\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0\r\n            prod0 |= prod1 * lpotdod;\r\n\r\n            // Invert the denominator mod 2^256\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /// @notice Calculates floor(x * y / SCALE) with full precision.\r\n    function mulDivFixedPoint(uint256 x, uint256 y) internal pure returns (uint256 result) {\r\n        result = mulDiv(x, y, SCALE);\r\n    }\r\n\r\n    /// @notice Rounds x to the nearest integer. If the fractional part is 0.5 or more, it rounds up.\r\n    function round(uint256 x) internal pure returns (uint256 result) {\r\n        result = (x + HALF_SCALE) / SCALE;\r\n    }\r\n}\r\n"
			},
			"src/lib/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.14;\n\nlibrary FixedPoint96 {\n    uint8 internal constant RESOLUTION = 96;\n    uint256 internal constant Q96 = 2**96;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/UniswapV3Pool.sol": {
				"UniswapV3Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1_",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InsufficientInputAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTickRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroLiquidity",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "lowerTick",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "upperTick",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/UniswapV3Pool.sol\":416:5014  contract UniswapV3Pool is ... */\n  mstore(0x40, 0xc0)\n    /* \"src/UniswapV3Pool.sol\":1487:1738  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/UniswapV3Pool.sol\":1630:1637  token0_ */\n  dup4\n    /* \"src/UniswapV3Pool.sol\":1621:1637  token0 = token0_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":1657:1664  token1_ */\n  dup3\n    /* \"src/UniswapV3Pool.sol\":1648:1664  token1 = token1_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":1683:1730  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"src/UniswapV3Pool.sol\":1704:1716  sqrtPriceX96 */\n  dup4\n    /* \"src/UniswapV3Pool.sol\":1683:1730  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"src/UniswapV3Pool.sol\":1724:1728  tick */\n  dup3\n    /* \"src/UniswapV3Pool.sol\":1683:1730  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0x02\n  signextend\n  dup2\n  mstore\n  pop\n    /* \"src/UniswapV3Pool.sol\":1675:1680  slot0 */\n  0x00\n    /* \"src/UniswapV3Pool.sol\":1675:1730  slot0 = Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  signextend\n  0xffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":1487:1738  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":416:5014  contract UniswapV3Pool is ... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_25\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_27\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_28:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_30\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:967   */\ntag_14:\n    /* \"#utility.yul\":918:942   */\n  tag_32\n    /* \"#utility.yul\":936:941   */\n  dup2\n    /* \"#utility.yul\":918:942   */\n  tag_10\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":908:943   */\n  eq\n    /* \"#utility.yul\":898:961   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":957:958   */\n  0x00\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":947:959   */\n  revert\n    /* \"#utility.yul\":898:961   */\ntag_33:\n    /* \"#utility.yul\":845:967   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":973:1116   */\ntag_15:\n    /* \"#utility.yul\":1030:1035   */\n  0x00\n    /* \"#utility.yul\":1061:1067   */\n  dup2\n    /* \"#utility.yul\":1055:1068   */\n  mload\n    /* \"#utility.yul\":1046:1068   */\n  swap1\n  pop\n    /* \"#utility.yul\":1077:1110   */\n  tag_35\n    /* \"#utility.yul\":1104:1109   */\n  dup2\n    /* \"#utility.yul\":1077:1110   */\n  tag_14\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":973:1116   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1122:1212   */\ntag_16:\n    /* \"#utility.yul\":1157:1164   */\n  0x00\n    /* \"#utility.yul\":1200:1205   */\n  dup2\n    /* \"#utility.yul\":1197:1198   */\n  0x02\n    /* \"#utility.yul\":1186:1206   */\n  signextend\n    /* \"#utility.yul\":1175:1206   */\n  swap1\n  pop\n    /* \"#utility.yul\":1122:1212   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1218:1336   */\ntag_17:\n    /* \"#utility.yul\":1289:1311   */\n  tag_38\n    /* \"#utility.yul\":1305:1310   */\n  dup2\n    /* \"#utility.yul\":1289:1311   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1282:1287   */\n  dup2\n    /* \"#utility.yul\":1279:1312   */\n  eq\n    /* \"#utility.yul\":1269:1330   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1326:1327   */\n  0x00\n    /* \"#utility.yul\":1323:1324   */\n  0x00\n    /* \"#utility.yul\":1316:1328   */\n  revert\n    /* \"#utility.yul\":1269:1330   */\ntag_39:\n    /* \"#utility.yul\":1218:1336   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1342:1481   */\ntag_18:\n    /* \"#utility.yul\":1397:1402   */\n  0x00\n    /* \"#utility.yul\":1428:1434   */\n  dup2\n    /* \"#utility.yul\":1422:1435   */\n  mload\n    /* \"#utility.yul\":1413:1435   */\n  swap1\n  pop\n    /* \"#utility.yul\":1444:1475   */\n  tag_41\n    /* \"#utility.yul\":1469:1474   */\n  dup2\n    /* \"#utility.yul\":1444:1475   */\n  tag_17\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1342:1481   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1487:2303   */\ntag_3:\n    /* \"#utility.yul\":1582:1588   */\n  0x00\n    /* \"#utility.yul\":1590:1596   */\n  0x00\n    /* \"#utility.yul\":1598:1604   */\n  0x00\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1655:1658   */\n  0x80\n    /* \"#utility.yul\":1643:1652   */\n  dup6\n    /* \"#utility.yul\":1634:1641   */\n  dup8\n    /* \"#utility.yul\":1630:1653   */\n  sub\n    /* \"#utility.yul\":1626:1659   */\n  slt\n    /* \"#utility.yul\":1623:1743   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1662:1741   */\n  tag_44\n  tag_8\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1623:1743   */\ntag_43:\n    /* \"#utility.yul\":1782:1783   */\n  0x00\n    /* \"#utility.yul\":1807:1871   */\n  tag_45\n    /* \"#utility.yul\":1863:1870   */\n  dup8\n    /* \"#utility.yul\":1854:1860   */\n  dup3\n    /* \"#utility.yul\":1843:1852   */\n  dup9\n    /* \"#utility.yul\":1839:1861   */\n  add\n    /* \"#utility.yul\":1807:1871   */\n  tag_13\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1797:1871   */\n  swap5\n  pop\n    /* \"#utility.yul\":1753:1881   */\n  pop\n    /* \"#utility.yul\":1920:1922   */\n  0x20\n    /* \"#utility.yul\":1946:2010   */\n  tag_46\n    /* \"#utility.yul\":2002:2009   */\n  dup8\n    /* \"#utility.yul\":1993:1999   */\n  dup3\n    /* \"#utility.yul\":1982:1991   */\n  dup9\n    /* \"#utility.yul\":1978:2000   */\n  add\n    /* \"#utility.yul\":1946:2010   */\n  tag_13\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1936:2010   */\n  swap4\n  pop\n    /* \"#utility.yul\":1891:2020   */\n  pop\n    /* \"#utility.yul\":2059:2061   */\n  0x40\n    /* \"#utility.yul\":2085:2149   */\n  tag_47\n    /* \"#utility.yul\":2141:2148   */\n  dup8\n    /* \"#utility.yul\":2132:2138   */\n  dup3\n    /* \"#utility.yul\":2121:2130   */\n  dup9\n    /* \"#utility.yul\":2117:2139   */\n  add\n    /* \"#utility.yul\":2085:2149   */\n  tag_15\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2075:2149   */\n  swap3\n  pop\n    /* \"#utility.yul\":2030:2159   */\n  pop\n    /* \"#utility.yul\":2198:2200   */\n  0x60\n    /* \"#utility.yul\":2224:2286   */\n  tag_48\n    /* \"#utility.yul\":2278:2285   */\n  dup8\n    /* \"#utility.yul\":2269:2275   */\n  dup3\n    /* \"#utility.yul\":2258:2267   */\n  dup9\n    /* \"#utility.yul\":2254:2276   */\n  add\n    /* \"#utility.yul\":2224:2286   */\n  tag_18\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2214:2286   */\n  swap2\n  pop\n    /* \"#utility.yul\":2169:2296   */\n  pop\n    /* \"#utility.yul\":1487:2303   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"src/UniswapV3Pool.sol\":416:5014  contract UniswapV3Pool is ... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xf928ede1c39c5595ff22fe845412ee05a93eeaa584f8ef0c46b5eeb14cb99ec8\")\n  0x00\n  assignImmutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/UniswapV3Pool.sol\":416:5014  contract UniswapV3Pool is ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x514ea4bf\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x514ea4bf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5339c296\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe3547335\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf30dba93\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1a686502\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3850c7bd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3c8a7d8d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"src/UniswapV3Pool.sol\":913:944  address public immutable token0 */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1215:1239  uint128 public liquidity */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1157:1175  Slot0 public slot0 */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1760:3714  function mint(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1408:1458  mapping(bytes32 => Position.Info) public positions */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1337:1380  mapping(int16 => uint256) public tickBitmap */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":951:982  address public immutable token1 */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":3746:4695  function swap(address recipient, bytes calldata data)... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1269:1309  mapping(int24 => Tick.Info) public ticks */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":913:944  address public immutable token0 */\n    tag_14:\n      immutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1215:1239  uint128 public liquidity */\n    tag_18:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1157:1175  Slot0 public slot0 */\n    tag_22:\n      0x00\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1760:3714  function mint(... */\n    tag_28:\n        /* \"src/UniswapV3Pool.sol\":1945:1960  uint256 amount0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":1962:1977  uint256 amount1 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2021:2030  upperTick */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":2008:2030  lowerTick >= upperTick */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":2008:2017  lowerTick */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2008:2030  lowerTick >= upperTick */\n      0x02\n      signextend\n      slt\n      iszero\n        /* \"src/UniswapV3Pool.sol\":2008:2067  lowerTick >= upperTick ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":714:721  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"src/UniswapV3Pool.sol\":2047:2067  lowerTick < MIN_TICK */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":2047:2056  lowerTick */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2047:2067  lowerTick < MIN_TICK */\n      0x02\n      signextend\n      slt\n        /* \"src/UniswapV3Pool.sol\":2008:2067  lowerTick >= upperTick ||... */\n    tag_58:\n        /* \"src/UniswapV3Pool.sol\":2008:2104  lowerTick >= upperTick ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":714:721  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"src/UniswapV3Pool.sol\":763:772  -MIN_TICK */\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"src/UniswapV3Pool.sol\":2084:2104  upperTick > MAX_TICK */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":2084:2093  upperTick */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":2084:2104  upperTick > MAX_TICK */\n      0x02\n      signextend\n      sgt\n        /* \"src/UniswapV3Pool.sol\":2008:2104  lowerTick >= upperTick ||... */\n    tag_59:\n        /* \"src/UniswapV3Pool.sol\":1990:2141  if (... */\n      iszero\n      tag_62\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2123:2141  InvalidTickRange() */\n      mload(0x40)\n      0x064847d000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":1990:2141  if (... */\n    tag_62:\n        /* \"src/UniswapV3Pool.sol\":2166:2167  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2156:2162  amount */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":2156:2167  amount == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/UniswapV3Pool.sol\":2152:2191  if (amount == 0) revert ZeroLiquidity() */\n      tag_63\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2176:2191  ZeroLiquidity() */\n      mload(0x40)\n      0x1007454800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":2152:2191  if (amount == 0) revert ZeroLiquidity() */\n    tag_63:\n        /* \"src/UniswapV3Pool.sol\":2204:2221  bool flippedLower */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2224:2255  ticks.update(lowerTick, amount) */\n      tag_64\n        /* \"src/UniswapV3Pool.sol\":2237:2246  lowerTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2248:2254  amount */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2224:2229  ticks */\n      0x02\n        /* \"src/UniswapV3Pool.sol\":2224:2236  ticks.update */\n      tag_65\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2224:2255  ticks.update(lowerTick, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"src/UniswapV3Pool.sol\":2204:2255  bool flippedLower = ticks.update(lowerTick, amount) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2266:2283  bool flippedUpper */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2286:2317  ticks.update(upperTick, amount) */\n      tag_66\n        /* \"src/UniswapV3Pool.sol\":2299:2308  upperTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2310:2316  amount */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2286:2291  ticks */\n      0x02\n        /* \"src/UniswapV3Pool.sol\":2286:2298  ticks.update */\n      tag_65\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2286:2317  ticks.update(upperTick, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"src/UniswapV3Pool.sol\":2266:2317  bool flippedUpper = ticks.update(upperTick, amount) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2331:2343  flippedLower */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":2328:2405  if(flippedLower) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2360:2393  tickBitmap.flipTick(lowerTick, 1) */\n      tag_68\n        /* \"src/UniswapV3Pool.sol\":2380:2389  lowerTick */\n      dup10\n        /* \"src/UniswapV3Pool.sol\":2391:2392  1 */\n      0x01\n        /* \"src/UniswapV3Pool.sol\":2360:2370  tickBitmap */\n      0x03\n        /* \"src/UniswapV3Pool.sol\":2360:2379  tickBitmap.flipTick */\n      tag_69\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2360:2393  tickBitmap.flipTick(lowerTick, 1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"src/UniswapV3Pool.sol\":2328:2405  if(flippedLower) {... */\n    tag_67:\n        /* \"src/UniswapV3Pool.sol\":2418:2430  flippedUpper */\n      dup1\n        /* \"src/UniswapV3Pool.sol\":2415:2492  if(flippedUpper) {... */\n      iszero\n      tag_70\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2447:2480  tickBitmap.flipTick(upperTick, 1) */\n      tag_71\n        /* \"src/UniswapV3Pool.sol\":2467:2476  upperTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2478:2479  1 */\n      0x01\n        /* \"src/UniswapV3Pool.sol\":2447:2457  tickBitmap */\n      0x03\n        /* \"src/UniswapV3Pool.sol\":2447:2466  tickBitmap.flipTick */\n      tag_69\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2447:2480  tickBitmap.flipTick(upperTick, 1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"src/UniswapV3Pool.sol\":2415:2492  if(flippedUpper) {... */\n    tag_70:\n        /* \"src/UniswapV3Pool.sol\":2504:2534  Position.Info storage position */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2537:2629  positions.get(... */\n      tag_72\n        /* \"src/UniswapV3Pool.sol\":2565:2570  owner */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2585:2594  lowerTick */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2609:2618  upperTick */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2537:2546  positions */\n      0x04\n        /* \"src/UniswapV3Pool.sol\":2537:2550  positions.get */\n      tag_73\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2537:2629  positions.get(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"src/UniswapV3Pool.sol\":2504:2629  Position.Info storage position = positions.get(... */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2640:2663  position.update(amount) */\n      tag_74\n        /* \"src/UniswapV3Pool.sol\":2656:2662  amount */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2640:2648  position */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":2640:2655  position.update */\n      tag_75\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2640:2663  position.update(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"src/UniswapV3Pool.sol\":2676:2695  Slot0 memory slot0_ */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2698:2703  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2676:2703  Slot0 memory slot0_ = slot0 */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2726:2866  Math.calcAmount0Delta(... */\n      tag_76\n        /* \"src/UniswapV3Pool.sol\":2762:2768  slot0_ */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":2762:2781  slot0_.sqrtPriceX96 */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":2796:2834  TickMath.getSqrtRatioAtTick(upperTick) */\n      tag_77\n        /* \"src/UniswapV3Pool.sol\":2824:2833  upperTick */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":2796:2823  TickMath.getSqrtRatioAtTick */\n      tag_78\n        /* \"src/UniswapV3Pool.sol\":2796:2834  TickMath.getSqrtRatioAtTick(upperTick) */\n      jump\t// in\n    tag_77:\n        /* \"src/UniswapV3Pool.sol\":2849:2855  amount */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2726:2747  Math.calcAmount0Delta */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":2726:2866  Math.calcAmount0Delta(... */\n      jump\t// in\n    tag_76:\n        /* \"src/UniswapV3Pool.sol\":2716:2866  amount0 = Math.calcAmount0Delta(... */\n      swap6\n      pop\n        /* \"src/UniswapV3Pool.sol\":2889:3029  Math.calcAmount1Delta(... */\n      tag_80\n        /* \"src/UniswapV3Pool.sol\":2925:2931  slot0_ */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":2925:2944  slot0_.sqrtPriceX96 */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":2959:2997  TickMath.getSqrtRatioAtTick(lowerTick) */\n      tag_81\n        /* \"src/UniswapV3Pool.sol\":2987:2996  lowerTick */\n      dup14\n        /* \"src/UniswapV3Pool.sol\":2959:2986  TickMath.getSqrtRatioAtTick */\n      tag_78\n        /* \"src/UniswapV3Pool.sol\":2959:2997  TickMath.getSqrtRatioAtTick(lowerTick) */\n      jump\t// in\n    tag_81:\n        /* \"src/UniswapV3Pool.sol\":3012:3018  amount */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2889:2910  Math.calcAmount1Delta */\n      tag_82\n        /* \"src/UniswapV3Pool.sol\":2889:3029  Math.calcAmount1Delta(... */\n      jump\t// in\n    tag_80:\n        /* \"src/UniswapV3Pool.sol\":2879:3029  amount1 = Math.calcAmount1Delta(... */\n      swap5\n      pop\n        /* \"src/UniswapV3Pool.sol\":3063:3069  amount */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3042:3051  liquidity */\n      0x01\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3042:3070  liquidity += uint128(amount) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/UniswapV3Pool.sol\":3083:3105  uint256 balance0Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3116:3138  uint256 balance1Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3163:3164  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3153:3160  amount0 */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3153:3164  amount0 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3149:3193  if (amount0 > 0) balance0Before = balance0() */\n      iszero\n      tag_85\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":3183:3193  balance0() */\n      tag_86\n        /* \"src/UniswapV3Pool.sol\":3183:3191  balance0 */\n      tag_87\n        /* \"src/UniswapV3Pool.sol\":3183:3193  balance0() */\n      jump\t// in\n    tag_86:\n        /* \"src/UniswapV3Pool.sol\":3166:3193  balance0Before = balance0() */\n      swap2\n      pop\n        /* \"src/UniswapV3Pool.sol\":3149:3193  if (amount0 > 0) balance0Before = balance0() */\n    tag_85:\n        /* \"src/UniswapV3Pool.sol\":3218:3219  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3208:3215  amount1 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":3208:3219  amount1 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3204:3248  if (amount1 > 0) balance1Before = balance1() */\n      iszero\n      tag_88\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":3238:3248  balance1() */\n      tag_89\n        /* \"src/UniswapV3Pool.sol\":3238:3246  balance1 */\n      tag_90\n        /* \"src/UniswapV3Pool.sol\":3238:3248  balance1() */\n      jump\t// in\n    tag_89:\n        /* \"src/UniswapV3Pool.sol\":3221:3248  balance1Before = balance1() */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":3204:3248  if (amount1 > 0) balance1Before = balance1() */\n    tag_88:\n        /* \"src/UniswapV3Pool.sol\":3282:3292  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":3259:3315  IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd3487997\n        /* \"src/UniswapV3Pool.sol\":3330:3337  amount0 */\n      dup10\n        /* \"src/UniswapV3Pool.sol\":3352:3359  amount1 */\n      dup10\n        /* \"src/UniswapV3Pool.sol\":3374:3378  data */\n      dup14\n      dup14\n        /* \"src/UniswapV3Pool.sol\":3259:3389  IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      revert(0x00, 0x00)\n    tag_93:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":3414:3415  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3404:3411  amount0 */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3404:3415  amount0 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3404:3456  amount0 > 0 && balance0Before + amount0 > balance0() */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":3446:3456  balance0() */\n      tag_97\n        /* \"src/UniswapV3Pool.sol\":3446:3454  balance0 */\n      tag_87\n        /* \"src/UniswapV3Pool.sol\":3446:3456  balance0() */\n      jump\t// in\n    tag_97:\n        /* \"src/UniswapV3Pool.sol\":3436:3443  amount0 */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3419:3433  balance0Before */\n      dup4\n        /* \"src/UniswapV3Pool.sol\":3419:3443  balance0Before + amount0 */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"src/UniswapV3Pool.sol\":3419:3456  balance0Before + amount0 > balance0() */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3404:3456  amount0 > 0 && balance0Before + amount0 > balance0() */\n    tag_96:\n        /* \"src/UniswapV3Pool.sol\":3400:3503  if (amount0 > 0 && balance0Before + amount0 > balance0())... */\n      iszero\n      tag_100\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":3478:3503  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":3400:3503  if (amount0 > 0 && balance0Before + amount0 > balance0())... */\n    tag_100:\n        /* \"src/UniswapV3Pool.sol\":3528:3529  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3518:3525  amount1 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":3518:3529  amount1 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3518:3570  amount1 > 0 && balance1Before + amount1 > balance1() */\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":3560:3570  balance1() */\n      tag_102\n        /* \"src/UniswapV3Pool.sol\":3560:3568  balance1 */\n      tag_90\n        /* \"src/UniswapV3Pool.sol\":3560:3570  balance1() */\n      jump\t// in\n    tag_102:\n        /* \"src/UniswapV3Pool.sol\":3550:3557  amount1 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":3533:3547  balance1Before */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":3533:3557  balance1Before + amount1 */\n      tag_103\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_103:\n        /* \"src/UniswapV3Pool.sol\":3533:3570  balance1Before + amount1 > balance1() */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3518:3570  amount1 > 0 && balance1Before + amount1 > balance1() */\n    tag_101:\n        /* \"src/UniswapV3Pool.sol\":3514:3617  if (amount1 > 0 && balance1Before + amount1 > balance1())... */\n      iszero\n      tag_104\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":3592:3617  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":3514:3617  if (amount1 > 0 && balance1Before + amount1 > balance1())... */\n    tag_104:\n        /* \"src/UniswapV3Pool.sol\":3670:3679  upperTick */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":3635:3706  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":3659:3668  lowerTick */\n      dup14\n        /* \"src/UniswapV3Pool.sol\":3635:3706  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":3652:3657  owner */\n      dup16\n        /* \"src/UniswapV3Pool.sol\":3635:3706  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde\n        /* \"src/UniswapV3Pool.sol\":3640:3650  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":3681:3687  amount */\n      dup16\n        /* \"src/UniswapV3Pool.sol\":3689:3696  amount0 */\n      dup14\n        /* \"src/UniswapV3Pool.sol\":3698:3705  amount1 */\n      dup14\n        /* \"src/UniswapV3Pool.sol\":3635:3706  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      mload(0x40)\n      tag_105\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/UniswapV3Pool.sol\":1979:3714  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":1760:3714  function mint(... */\n      swap7\n      pop\n      swap7\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1408:1458  mapping(bytes32 => Position.Info) public positions */\n    tag_34:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1337:1380  mapping(int16 => uint256) public tickBitmap */\n    tag_39:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":951:982  address public immutable token1 */\n    tag_43:\n      immutable(\"0xf928ede1c39c5595ff22fe845412ee05a93eeaa584f8ef0c46b5eeb14cb99ec8\")\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":3746:4695  function swap(address recipient, bytes calldata data)... */\n    tag_48:\n        /* \"src/UniswapV3Pool.sol\":3834:3848  int256 amount0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3850:3864  int256 amount1 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3882:3896  int24 nextTick */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3899:3904  85184 */\n      0x014cc0\n        /* \"src/UniswapV3Pool.sol\":3882:3904  int24 nextTick = 85184 */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":3915:3932  uint160 nextPrice */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3935:3966  5604469350942327889444743441197 */\n      0x46bd046408013d67ed5d406b2d\n        /* \"src/UniswapV3Pool.sol\":3915:3966  uint160 nextPrice = 5604469350942327889444743441197 */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":3987:4014  -0.008396714242162444 ether */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffe22b3b9e50c0f4\n        /* \"src/UniswapV3Pool.sol\":3977:4014  amount0 = -0.008396714242162444 ether */\n      swap4\n      pop\n        /* \"src/UniswapV3Pool.sol\":4035:4043  42 ether */\n      0x0246ddf97976680000\n        /* \"src/UniswapV3Pool.sol\":4025:4043  amount1 = 42 ether */\n      swap3\n      pop\n        /* \"src/UniswapV3Pool.sol\":4090:4098  nextTick */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":4100:4109  nextPrice */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":4055:4060  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4055:4065  slot0.tick */\n      0x00\n      add\n      0x14\n        /* \"src/UniswapV3Pool.sol\":4067:4072  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4067:4085  slot0.sqrtPriceX96 */\n      0x00\n      add\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4054:4110  (slot0.tick, slot0.sqrtPriceX96) = (nextTick, nextPrice) */\n      dup5\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      dup4\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      signextend\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":4138:4144  token0 */\n      immutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n        /* \"src/UniswapV3Pool.sol\":4131:4154  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/UniswapV3Pool.sol\":4155:4164  recipient */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":4175:4182  amount0 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":4174:4182  -amount0 */\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"src/UniswapV3Pool.sol\":4131:4184  IERC20(token0).transfer(recipient, uint256(-amount0)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap3\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      pop\n        /* \"src/UniswapV3Pool.sol\":4195:4217  uint256 balance1Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4220:4230  balance1() */\n      tag_116\n        /* \"src/UniswapV3Pool.sol\":4220:4228  balance1 */\n      tag_90\n        /* \"src/UniswapV3Pool.sol\":4220:4230  balance1() */\n      jump\t// in\n    tag_116:\n        /* \"src/UniswapV3Pool.sol\":4195:4230  uint256 balance1Before = balance1() */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":4264:4274  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":4241:4297  IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfa461e33\n        /* \"src/UniswapV3Pool.sol\":4312:4319  amount0 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":4334:4341  amount1 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":4356:4360  data */\n      dup11\n      dup11\n        /* \"src/UniswapV3Pool.sol\":4241:4371  IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      revert(0x00, 0x00)\n    tag_119:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":4422:4432  balance1() */\n      tag_122\n        /* \"src/UniswapV3Pool.sol\":4422:4430  balance1 */\n      tag_90\n        /* \"src/UniswapV3Pool.sol\":4422:4432  balance1() */\n      jump\t// in\n    tag_122:\n        /* \"src/UniswapV3Pool.sol\":4411:4418  amount1 */\n      dup5\n        /* \"src/UniswapV3Pool.sol\":4386:4400  balance1Before */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":4386:4419  balance1Before + uint256(amount1) */\n      tag_123\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_123:\n        /* \"src/UniswapV3Pool.sol\":4386:4432  balance1Before + uint256(amount1) < balance1() */\n      lt\n        /* \"src/UniswapV3Pool.sol\":4382:4479  if (balance1Before + uint256(amount1) < balance1())... */\n      iszero\n      tag_124\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":4454:4479  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":4382:4479  if (balance1Before + uint256(amount1) < balance1())... */\n    tag_124:\n        /* \"src/UniswapV3Pool.sol\":4541:4550  recipient */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4497:4687  Swap(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":4516:4526  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":4497:4687  Swap(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67\n        /* \"src/UniswapV3Pool.sol\":4565:4572  amount0 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4587:4594  amount1 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4609:4614  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4609:4627  slot0.sqrtPriceX96 */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":4642:4651  liquidity */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":4666:4671  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4666:4676  slot0.tick */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":4497:4687  Swap(... */\n      mload(0x40)\n      tag_125\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/UniswapV3Pool.sol\":3871:4695  {... */\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":3746:4695  function swap(address recipient, bytes calldata data)... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1269:1309  mapping(int24 => Tick.Info) public ticks */\n    tag_54:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/lib/Tick.sol\":160:695  function update(... */\n    tag_65:\n        /* \"src/lib/Tick.sol\":302:314  bool flipped */\n      0x00\n        /* \"src/lib/Tick.sol\":326:352  Tick.Info storage tickInfo */\n      0x00\n        /* \"src/lib/Tick.sol\":355:359  self */\n      dup5\n        /* \"src/lib/Tick.sol\":355:365  self[tick] */\n      0x00\n        /* \"src/lib/Tick.sol\":360:364  tick */\n      dup6\n        /* \"src/lib/Tick.sol\":355:365  self[tick] */\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/lib/Tick.sol\":326:365  Tick.Info storage tickInfo = self[tick] */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":375:398  uint128 liquidityBefore */\n      0x00\n        /* \"src/lib/Tick.sol\":401:409  tickInfo */\n      dup2\n        /* \"src/lib/Tick.sol\":401:419  tickInfo.liquidity */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Tick.sol\":375:419  uint128 liquidityBefore = tickInfo.liquidity */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":429:451  uint128 liquidityAfter */\n      0x00\n        /* \"src/lib/Tick.sol\":472:486  liquidityDelta */\n      dup5\n        /* \"src/lib/Tick.sol\":454:469  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":454:486  liquidityBefore + liquidityDelta */\n      tag_128\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_128:\n        /* \"src/lib/Tick.sol\":429:486  uint128 liquidityAfter = liquidityBefore + liquidityDelta */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":552:553  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":533:548  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":533:553  liquidityBefore == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/lib/Tick.sol\":507:554  (liquidityAfter == 0) != (liquidityBefore == 0) */\n      iszero\n      iszero\n        /* \"src/lib/Tick.sol\":526:527  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":508:522  liquidityAfter */\n      dup3\n        /* \"src/lib/Tick.sol\":508:527  liquidityAfter == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/lib/Tick.sol\":507:554  (liquidityAfter == 0) != (liquidityBefore == 0) */\n      iszero\n      iszero\n      eq\n      iszero\n        /* \"src/lib/Tick.sol\":497:554  flipped = (liquidityAfter == 0) != (liquidityBefore == 0) */\n      swap4\n      pop\n        /* \"src/lib/Tick.sol\":588:589  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":569:584  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":569:589  liquidityBefore == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/lib/Tick.sol\":565:643  if (liquidityBefore == 0) {... */\n      tag_129\n      jumpi\n        /* \"src/lib/Tick.sol\":628:632  true */\n      0x01\n        /* \"src/lib/Tick.sol\":605:613  tickInfo */\n      dup4\n        /* \"src/lib/Tick.sol\":605:625  tickInfo.initialized */\n      0x00\n      add\n      0x00\n        /* \"src/lib/Tick.sol\":605:632  tickInfo.initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Tick.sol\":565:643  if (liquidityBefore == 0) {... */\n    tag_129:\n        /* \"src/lib/Tick.sol\":674:688  liquidityAfter */\n      dup1\n        /* \"src/lib/Tick.sol\":653:661  tickInfo */\n      dup4\n        /* \"src/lib/Tick.sol\":653:671  tickInfo.liquidity */\n      0x00\n      add\n      0x01\n        /* \"src/lib/Tick.sol\":653:688  tickInfo.liquidity = liquidityAfter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Tick.sol\":316:695  {... */\n      pop\n      pop\n      pop\n        /* \"src/lib/Tick.sol\":160:695  function update(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":1110:1458  function flipTick(... */\n    tag_69:\n        /* \"src/lib/TickBitmap.sol\":1278:1279  0 */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1263:1274  tickSpacing */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":1256:1260  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":1256:1274  tick % tickSpacing */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"src/lib/TickBitmap.sol\":1256:1279  tick % tickSpacing == 0 */\n      0x02\n      signextend\n      eq\n        /* \"src/lib/TickBitmap.sol\":1248:1280  require(tick % tickSpacing == 0) */\n      tag_133\n      jumpi\n      revert(0x00, 0x00)\n    tag_133:\n        /* \"src/lib/TickBitmap.sol\":1325:1338  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1340:1352  uint8 bitPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1356:1384  position(tick / tickSpacing) */\n      tag_134\n        /* \"src/lib/TickBitmap.sol\":1372:1383  tickSpacing */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":1365:1369  tick */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":1365:1383  tick / tickSpacing */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"src/lib/TickBitmap.sol\":1356:1364  position */\n      tag_137\n        /* \"src/lib/TickBitmap.sol\":1356:1384  position(tick / tickSpacing) */\n      jump\t// in\n    tag_134:\n        /* \"src/lib/TickBitmap.sol\":1324:1384  (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":1394:1406  uint256 mask */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1414:1420  bitPos */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":1409:1420  1 << bitPos */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":1409:1410  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":1409:1420  1 << bitPos */\n      swap1\n      shl\n        /* \"src/lib/TickBitmap.sol\":1394:1420  uint256 mask = 1 << bitPos */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":1447:1451  mask */\n      dup1\n        /* \"src/lib/TickBitmap.sol\":1430:1434  self */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":1430:1443  self[wordPos] */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1435:1442  wordPos */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":1430:1443  self[wordPos] */\n      0x01\n      signextend\n      0x01\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1430:1451  self[wordPos] ^= mask */\n      dup3\n      dup3\n      sload\n      xor\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/lib/TickBitmap.sol\":1238:1458  {... */\n      pop\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":1110:1458  function flipTick(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Position.sol\":138:444  function get(... */\n    tag_73:\n        /* \"src/lib/Position.sol\":300:330  Position.Info storage position */\n      0x00\n        /* \"src/lib/Position.sol\":353:357  self */\n      dup5\n        /* \"src/lib/Position.sol\":353:437  self[... */\n      0x00\n        /* \"src/lib/Position.sol\":398:403  owner */\n      dup6\n        /* \"src/lib/Position.sol\":405:414  lowerTick */\n      dup6\n        /* \"src/lib/Position.sol\":416:425  upperTick */\n      dup6\n        /* \"src/lib/Position.sol\":381:426  abi.encodePacked(owner, lowerTick, upperTick) */\n      add(0x20, mload(0x40))\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/lib/Position.sol\":371:427  keccak256(abi.encodePacked(owner, lowerTick, upperTick)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/lib/Position.sol\":353:437  self[... */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/lib/Position.sol\":342:437  position = self[... */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":138:444  function get(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Position.sol\":450:684  function update(Info storage self, uint128 liquidityDelta) internal {... */\n    tag_75:\n        /* \"src/lib/Position.sol\":528:551  uint128 liquidityBefore */\n      0x00\n        /* \"src/lib/Position.sol\":554:558  self */\n      dup3\n        /* \"src/lib/Position.sol\":554:568  self.liquidity */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Position.sol\":528:568  uint128 liquidityBefore = self.liquidity */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":578:600  uint128 liquidityAfter */\n      0x00\n        /* \"src/lib/Position.sol\":621:635  liquidityDelta */\n      dup3\n        /* \"src/lib/Position.sol\":603:618  liquidityBefore */\n      dup3\n        /* \"src/lib/Position.sol\":603:635  liquidityBefore + liquidityDelta */\n      tag_142\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_142:\n        /* \"src/lib/Position.sol\":578:635  uint128 liquidityAfter = liquidityBefore + liquidityDelta */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":663:677  liquidityAfter */\n      dup1\n        /* \"src/lib/Position.sol\":646:650  self */\n      dup5\n        /* \"src/lib/Position.sol\":646:660  self.liquidity */\n      0x00\n      add\n      0x00\n        /* \"src/lib/Position.sol\":646:677  self.liquidity = liquidityAfter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Position.sol\":518:684  {... */\n      pop\n      pop\n        /* \"src/lib/Position.sol\":450:684  function update(Info storage self, uint128 liquidityDelta) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/TickMath.sol\":1355:3943  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_78:\n        /* \"src/lib/TickMath.sol\":1418:1438  uint160 sqrtPriceX96 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1450:1465  uint256 absTick */\n      0x00\n        /* \"src/lib/TickMath.sol\":1475:1476  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1468:1472  tick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1468:1476  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"src/lib/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_144\n      jumpi\n        /* \"src/lib/TickMath.sol\":1519:1523  tick */\n      dup3\n        /* \"src/lib/TickMath.sol\":1512:1524  int256(tick) */\n      0x02\n      signextend\n        /* \"src/lib/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_145)\n    tag_144:\n        /* \"src/lib/TickMath.sol\":1495:1499  tick */\n      dup3\n        /* \"src/lib/TickMath.sol\":1488:1500  int256(tick) */\n      0x02\n      signextend\n        /* \"src/lib/TickMath.sol\":1487:1500  -int256(tick) */\n      tag_146\n      swap1\n      tag_109\n      jump\t// in\n    tag_146:\n        /* \"src/lib/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_145:\n        /* \"src/lib/TickMath.sol\":1450:1525  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":477:484  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"src/lib/TickMath.sol\":637:646  -MIN_TICK */\n      tag_147\n      swap1\n      tag_61\n      jump\t// in\n    tag_147:\n        /* \"src/lib/TickMath.sol\":1554:1579  uint256(uint24(MAX_TICK)) */\n      0xffffff\n      and\n        /* \"src/lib/TickMath.sol\":1543:1550  absTick */\n      dup2\n        /* \"src/lib/TickMath.sol\":1543:1579  absTick <= uint256(uint24(MAX_TICK)) */\n      gt\n      iszero\n        /* \"src/lib/TickMath.sol\":1535:1585  require(absTick <= uint256(uint24(MAX_TICK)), 'T') */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"src/lib/TickMath.sol\":1596:1609  uint256 ratio */\n      0x00\n        /* \"src/lib/TickMath.sol\":1629:1630  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1622:1625  0x1 */\n      0x01\n        /* \"src/lib/TickMath.sol\":1612:1619  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1612:1625  absTick & 0x1 */\n      and\n        /* \"src/lib/TickMath.sol\":1612:1630  absTick & 0x1 != 0 */\n      sub\n        /* \"src/lib/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_151\n      jumpi\n        /* \"src/lib/TickMath.sol\":1670:1705  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"src/lib/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      jump(tag_152)\n    tag_151:\n        /* \"src/lib/TickMath.sol\":1633:1667  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"src/lib/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_152:\n        /* \"src/lib/TickMath.sol\":1596:1705  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1736:1737  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1729:1732  0x2 */\n      0x02\n        /* \"src/lib/TickMath.sol\":1719:1726  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1719:1732  absTick & 0x2 */\n      and\n        /* \"src/lib/TickMath.sol\":1719:1737  absTick & 0x2 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":1715:1798  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_153\n      jumpi\n        /* \"src/lib/TickMath.sol\":1795:1798  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":1756:1790  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"src/lib/TickMath.sol\":1748:1753  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":1748:1790  ratio * 0xfff97272373d413259a46990580e213a */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"src/lib/TickMath.sol\":1747:1798  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":1739:1798  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1715:1798  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_153:\n        /* \"src/lib/TickMath.sol\":1829:1830  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1822:1825  0x4 */\n      0x04\n        /* \"src/lib/TickMath.sol\":1812:1819  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1812:1825  absTick & 0x4 */\n      and\n        /* \"src/lib/TickMath.sol\":1812:1830  absTick & 0x4 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":1808:1891  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_156\n      jumpi\n        /* \"src/lib/TickMath.sol\":1888:1891  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":1849:1883  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"src/lib/TickMath.sol\":1841:1846  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":1841:1883  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      tag_157\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_157:\n        /* \"src/lib/TickMath.sol\":1840:1891  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":1832:1891  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1808:1891  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_156:\n        /* \"src/lib/TickMath.sol\":1922:1923  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1915:1918  0x8 */\n      0x08\n        /* \"src/lib/TickMath.sol\":1905:1912  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1905:1918  absTick & 0x8 */\n      and\n        /* \"src/lib/TickMath.sol\":1905:1923  absTick & 0x8 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":1901:1984  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_158\n      jumpi\n        /* \"src/lib/TickMath.sol\":1981:1984  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":1942:1976  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"src/lib/TickMath.sol\":1934:1939  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":1934:1976  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      tag_159\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_159:\n        /* \"src/lib/TickMath.sol\":1933:1984  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":1925:1984  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1901:1984  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_158:\n        /* \"src/lib/TickMath.sol\":2016:2017  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2008:2012  0x10 */\n      0x10\n        /* \"src/lib/TickMath.sol\":1998:2005  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1998:2012  absTick & 0x10 */\n      and\n        /* \"src/lib/TickMath.sol\":1998:2017  absTick & 0x10 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":1994:2078  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_160\n      jumpi\n        /* \"src/lib/TickMath.sol\":2075:2078  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2036:2070  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"src/lib/TickMath.sol\":2028:2033  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2028:2070  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      tag_161\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_161:\n        /* \"src/lib/TickMath.sol\":2027:2078  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2019:2078  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1994:2078  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_160:\n        /* \"src/lib/TickMath.sol\":2110:2111  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2102:2106  0x20 */\n      0x20\n        /* \"src/lib/TickMath.sol\":2092:2099  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2092:2106  absTick & 0x20 */\n      and\n        /* \"src/lib/TickMath.sol\":2092:2111  absTick & 0x20 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2088:2172  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_162\n      jumpi\n        /* \"src/lib/TickMath.sol\":2169:2172  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2130:2164  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"src/lib/TickMath.sol\":2122:2127  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2122:2164  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      tag_163\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_163:\n        /* \"src/lib/TickMath.sol\":2121:2172  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2113:2172  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2088:2172  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_162:\n        /* \"src/lib/TickMath.sol\":2204:2205  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2196:2200  0x40 */\n      0x40\n        /* \"src/lib/TickMath.sol\":2186:2193  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2186:2200  absTick & 0x40 */\n      and\n        /* \"src/lib/TickMath.sol\":2186:2205  absTick & 0x40 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2182:2266  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_164\n      jumpi\n        /* \"src/lib/TickMath.sol\":2263:2266  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2224:2258  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"src/lib/TickMath.sol\":2216:2221  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2216:2258  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      tag_165\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_165:\n        /* \"src/lib/TickMath.sol\":2215:2266  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2207:2266  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2182:2266  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_164:\n        /* \"src/lib/TickMath.sol\":2298:2299  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2290:2294  0x80 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2280:2287  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2280:2294  absTick & 0x80 */\n      and\n        /* \"src/lib/TickMath.sol\":2280:2299  absTick & 0x80 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2276:2360  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_166\n      jumpi\n        /* \"src/lib/TickMath.sol\":2357:2360  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2318:2352  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"src/lib/TickMath.sol\":2310:2315  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2310:2352  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      tag_167\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_167:\n        /* \"src/lib/TickMath.sol\":2309:2360  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2301:2360  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2276:2360  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_166:\n        /* \"src/lib/TickMath.sol\":2393:2394  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2384:2389  0x100 */\n      0x0100\n        /* \"src/lib/TickMath.sol\":2374:2381  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2374:2389  absTick & 0x100 */\n      and\n        /* \"src/lib/TickMath.sol\":2374:2394  absTick & 0x100 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2370:2455  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_168\n      jumpi\n        /* \"src/lib/TickMath.sol\":2452:2455  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2413:2447  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"src/lib/TickMath.sol\":2405:2410  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2405:2447  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      tag_169\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_169:\n        /* \"src/lib/TickMath.sol\":2404:2455  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2396:2455  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2370:2455  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_168:\n        /* \"src/lib/TickMath.sol\":2488:2489  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2479:2484  0x200 */\n      0x0200\n        /* \"src/lib/TickMath.sol\":2469:2476  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2469:2484  absTick & 0x200 */\n      and\n        /* \"src/lib/TickMath.sol\":2469:2489  absTick & 0x200 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2465:2550  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_170\n      jumpi\n        /* \"src/lib/TickMath.sol\":2547:2550  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2508:2542  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"src/lib/TickMath.sol\":2500:2505  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2500:2542  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      tag_171\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_171:\n        /* \"src/lib/TickMath.sol\":2499:2550  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2491:2550  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2465:2550  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_170:\n        /* \"src/lib/TickMath.sol\":2583:2584  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2574:2579  0x400 */\n      0x0400\n        /* \"src/lib/TickMath.sol\":2564:2571  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2564:2579  absTick & 0x400 */\n      and\n        /* \"src/lib/TickMath.sol\":2564:2584  absTick & 0x400 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2560:2645  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_172\n      jumpi\n        /* \"src/lib/TickMath.sol\":2642:2645  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2603:2637  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"src/lib/TickMath.sol\":2595:2600  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2595:2637  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      tag_173\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_173:\n        /* \"src/lib/TickMath.sol\":2594:2645  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2586:2645  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2560:2645  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_172:\n        /* \"src/lib/TickMath.sol\":2678:2679  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2669:2674  0x800 */\n      0x0800\n        /* \"src/lib/TickMath.sol\":2659:2666  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2659:2674  absTick & 0x800 */\n      and\n        /* \"src/lib/TickMath.sol\":2659:2679  absTick & 0x800 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2655:2740  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_174\n      jumpi\n        /* \"src/lib/TickMath.sol\":2737:2740  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2698:2732  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"src/lib/TickMath.sol\":2690:2695  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2690:2732  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      tag_175\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_175:\n        /* \"src/lib/TickMath.sol\":2689:2740  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2681:2740  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2655:2740  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_174:\n        /* \"src/lib/TickMath.sol\":2774:2775  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2764:2770  0x1000 */\n      0x1000\n        /* \"src/lib/TickMath.sol\":2754:2761  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2754:2770  absTick & 0x1000 */\n      and\n        /* \"src/lib/TickMath.sol\":2754:2775  absTick & 0x1000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2750:2836  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_176\n      jumpi\n        /* \"src/lib/TickMath.sol\":2833:2836  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2794:2828  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"src/lib/TickMath.sol\":2786:2791  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2786:2828  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      tag_177\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_177:\n        /* \"src/lib/TickMath.sol\":2785:2836  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2777:2836  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2750:2836  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_176:\n        /* \"src/lib/TickMath.sol\":2870:2871  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2860:2866  0x2000 */\n      0x2000\n        /* \"src/lib/TickMath.sol\":2850:2857  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2850:2866  absTick & 0x2000 */\n      and\n        /* \"src/lib/TickMath.sol\":2850:2871  absTick & 0x2000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2846:2932  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_178\n      jumpi\n        /* \"src/lib/TickMath.sol\":2929:2932  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2890:2924  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"src/lib/TickMath.sol\":2882:2887  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2882:2924  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      tag_179\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_179:\n        /* \"src/lib/TickMath.sol\":2881:2932  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2873:2932  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2846:2932  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_178:\n        /* \"src/lib/TickMath.sol\":2966:2967  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2956:2962  0x4000 */\n      0x4000\n        /* \"src/lib/TickMath.sol\":2946:2953  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2946:2962  absTick & 0x4000 */\n      and\n        /* \"src/lib/TickMath.sol\":2946:2967  absTick & 0x4000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2942:3028  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_180\n      jumpi\n        /* \"src/lib/TickMath.sol\":3025:3028  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2986:3020  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"src/lib/TickMath.sol\":2978:2983  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2978:3020  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      tag_181\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_181:\n        /* \"src/lib/TickMath.sol\":2977:3028  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2969:3028  ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2942:3028  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_180:\n        /* \"src/lib/TickMath.sol\":3062:3063  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3052:3058  0x8000 */\n      0x8000\n        /* \"src/lib/TickMath.sol\":3042:3049  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3042:3058  absTick & 0x8000 */\n      and\n        /* \"src/lib/TickMath.sol\":3042:3063  absTick & 0x8000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3038:3124  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_182\n      jumpi\n        /* \"src/lib/TickMath.sol\":3121:3124  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3082:3116  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"src/lib/TickMath.sol\":3074:3079  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3074:3116  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      tag_183\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_183:\n        /* \"src/lib/TickMath.sol\":3073:3124  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3065:3124  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3038:3124  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_182:\n        /* \"src/lib/TickMath.sol\":3159:3160  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3148:3155  0x10000 */\n      0x010000\n        /* \"src/lib/TickMath.sol\":3138:3145  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3138:3155  absTick & 0x10000 */\n      and\n        /* \"src/lib/TickMath.sol\":3138:3160  absTick & 0x10000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3134:3220  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_184\n      jumpi\n        /* \"src/lib/TickMath.sol\":3217:3220  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3179:3212  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"src/lib/TickMath.sol\":3171:3176  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3171:3212  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      tag_185\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_185:\n        /* \"src/lib/TickMath.sol\":3170:3220  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3162:3220  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3134:3220  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_184:\n        /* \"src/lib/TickMath.sol\":3255:3256  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3244:3251  0x20000 */\n      0x020000\n        /* \"src/lib/TickMath.sol\":3234:3241  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3234:3251  absTick & 0x20000 */\n      and\n        /* \"src/lib/TickMath.sol\":3234:3256  absTick & 0x20000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3230:3315  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_186\n      jumpi\n        /* \"src/lib/TickMath.sol\":3312:3315  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3275:3307  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"src/lib/TickMath.sol\":3267:3272  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3267:3307  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      tag_187\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_187:\n        /* \"src/lib/TickMath.sol\":3266:3315  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3258:3315  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3230:3315  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_186:\n        /* \"src/lib/TickMath.sol\":3350:3351  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3339:3346  0x40000 */\n      0x040000\n        /* \"src/lib/TickMath.sol\":3329:3336  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3329:3346  absTick & 0x40000 */\n      and\n        /* \"src/lib/TickMath.sol\":3329:3351  absTick & 0x40000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3325:3408  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_188\n      jumpi\n        /* \"src/lib/TickMath.sol\":3405:3408  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3370:3400  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"src/lib/TickMath.sol\":3362:3367  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3362:3400  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      tag_189\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_189:\n        /* \"src/lib/TickMath.sol\":3361:3408  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3353:3408  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3325:3408  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_188:\n        /* \"src/lib/TickMath.sol\":3443:3444  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3432:3439  0x80000 */\n      0x080000\n        /* \"src/lib/TickMath.sol\":3422:3429  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3422:3439  absTick & 0x80000 */\n      and\n        /* \"src/lib/TickMath.sol\":3422:3444  absTick & 0x80000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3418:3496  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_190\n      jumpi\n        /* \"src/lib/TickMath.sol\":3493:3496  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3463:3488  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"src/lib/TickMath.sol\":3455:3460  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3455:3488  ratio * 0x48a170391f7dc42444e8fa2 */\n      tag_191\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_191:\n        /* \"src/lib/TickMath.sol\":3454:3496  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3446:3496  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3418:3496  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_190:\n        /* \"src/lib/TickMath.sol\":3518:3519  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3511:3515  tick */\n      dup5\n        /* \"src/lib/TickMath.sol\":3511:3519  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"src/lib/TickMath.sol\":3507:3554  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_192\n      jumpi\n        /* \"src/lib/TickMath.sol\":3549:3554  ratio */\n      dup1\n        /* \"src/lib/TickMath.sol\":3529:3546  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/lib/TickMath.sol\":3529:3554  type(uint256).max / ratio */\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"src/lib/TickMath.sol\":3521:3554  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3507:3554  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_192:\n        /* \"src/lib/TickMath.sol\":3925:3926  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3913:3920  1 << 32 */\n      0x0100000000\n        /* \"src/lib/TickMath.sol\":3904:3909  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3904:3921  ratio % (1 << 32) */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"src/lib/TickMath.sol\":3904:3926  ratio % (1 << 32) == 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_197\n      jumpi\n        /* \"src/lib/TickMath.sol\":3933:3934  1 */\n      0x01\n        /* \"src/lib/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_198)\n    tag_197:\n        /* \"src/lib/TickMath.sol\":3929:3930  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_198:\n        /* \"src/lib/TickMath.sol\":3887:3935  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"src/lib/TickMath.sol\":3897:3899  32 */\n      0x20\n        /* \"src/lib/TickMath.sol\":3888:3893  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3888:3899  ratio >> 32 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3887:3935  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      tag_199\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_199:\n        /* \"src/lib/TickMath.sol\":3864:3936  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":1440:3943  {... */\n      pop\n      pop\n        /* \"src/lib/TickMath.sol\":1355:3943  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":245:830  function calcAmount0Delta(... */\n    tag_79:\n        /* \"src/lib/Math.sol\":389:404  uint256 amount0 */\n      0x00\n        /* \"src/lib/Math.sol\":436:449  sqrtPriceBX96 */\n      dup3\n        /* \"src/lib/Math.sol\":420:449  sqrtPriceAX96 > sqrtPriceBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":420:433  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":420:449  sqrtPriceAX96 > sqrtPriceBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"src/lib/Math.sol\":416:526  if (sqrtPriceAX96 > sqrtPriceBX96)... */\n      iszero\n      tag_201\n      jumpi\n        /* \"src/lib/Math.sol\":497:510  sqrtPriceBX96 */\n      dup3\n        /* \"src/lib/Math.sol\":512:525  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":463:526  (sqrtPriceAX96, sqrtPriceBX96) = (sqrtPriceBX96, sqrtPriceAX96) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"src/lib/Math.sol\":416:526  if (sqrtPriceAX96 > sqrtPriceBX96)... */\n    tag_201:\n        /* \"src/lib/Math.sol\":561:562  0 */\n      0x00\n        /* \"src/lib/Math.sol\":545:558  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":545:562  sqrtPriceAX96 > 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"src/lib/Math.sol\":537:563  require(sqrtPriceAX96 > 0) */\n      tag_202\n      jumpi\n      revert(0x00, 0x00)\n    tag_202:\n        /* \"src/lib/Math.sol\":584:823  divRoundingUp(... */\n      tag_203\n        /* \"src/lib/Math.sol\":611:786  mulDivRoundingUp(... */\n      tag_204\n        /* \"src/lib/FixedPoint96.sol\":135:137  96 */\n      0x60\n        /* \"src/lib/Math.sol\":646:691  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      0xff\n      and\n        /* \"src/lib/Math.sol\":654:663  liquidity */\n      dup5\n        /* \"src/lib/Math.sol\":646:664  uint256(liquidity) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":646:691  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      swap1\n      shl\n        /* \"src/lib/Math.sol\":727:740  sqrtPriceAX96 */\n      dup7\n        /* \"src/lib/Math.sol\":711:724  sqrtPriceBX96 */\n      dup7\n        /* \"src/lib/Math.sol\":711:740  sqrtPriceBX96 - sqrtPriceAX96 */\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"src/lib/Math.sol\":611:786  mulDivRoundingUp(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":759:772  sqrtPriceBX96 */\n      dup7\n        /* \"src/lib/Math.sol\":611:786  mulDivRoundingUp(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":611:627  mulDivRoundingUp */\n      tag_207\n        /* \"src/lib/Math.sol\":611:786  mulDivRoundingUp(... */\n      jump\t// in\n    tag_204:\n        /* \"src/lib/Math.sol\":800:813  sqrtPriceAX96 */\n      dup6\n        /* \"src/lib/Math.sol\":584:823  divRoundingUp(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":584:597  divRoundingUp */\n      tag_208\n        /* \"src/lib/Math.sol\":584:823  divRoundingUp(... */\n      jump\t// in\n    tag_203:\n        /* \"src/lib/Math.sol\":574:823  amount0 = divRoundingUp(... */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":245:830  function calcAmount0Delta(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":945:1378  function calcAmount1Delta(... */\n    tag_82:\n        /* \"src/lib/Math.sol\":1089:1104  uint256 amount1 */\n      0x00\n        /* \"src/lib/Math.sol\":1136:1149  sqrtPriceBX96 */\n      dup3\n        /* \"src/lib/Math.sol\":1120:1149  sqrtPriceAX96 > sqrtPriceBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":1120:1133  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":1120:1149  sqrtPriceAX96 > sqrtPriceBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"src/lib/Math.sol\":1116:1226  if (sqrtPriceAX96 > sqrtPriceBX96)... */\n      iszero\n      tag_210\n      jumpi\n        /* \"src/lib/Math.sol\":1197:1210  sqrtPriceBX96 */\n      dup3\n        /* \"src/lib/Math.sol\":1212:1225  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":1163:1226  (sqrtPriceAX96, sqrtPriceBX96) = (sqrtPriceBX96, sqrtPriceAX96) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"src/lib/Math.sol\":1116:1226  if (sqrtPriceAX96 > sqrtPriceBX96)... */\n    tag_210:\n        /* \"src/lib/Math.sol\":1247:1371  mulDivRoundingUp(... */\n      tag_211\n        /* \"src/lib/Math.sol\":1277:1286  liquidity */\n      dup3\n        /* \"src/lib/Math.sol\":1247:1371  mulDivRoundingUp(... */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":1317:1330  sqrtPriceAX96 */\n      dup6\n        /* \"src/lib/Math.sol\":1301:1314  sqrtPriceBX96 */\n      dup6\n        /* \"src/lib/Math.sol\":1301:1330  sqrtPriceBX96 - sqrtPriceAX96 */\n      tag_212\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_212:\n        /* \"src/lib/Math.sol\":1247:1371  mulDivRoundingUp(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/FixedPoint96.sol\":175:180  2**96 */\n      0x01000000000000000000000000\n        /* \"src/lib/Math.sol\":1247:1263  mulDivRoundingUp */\n      tag_207\n        /* \"src/lib/Math.sol\":1247:1371  mulDivRoundingUp(... */\n      jump\t// in\n    tag_211:\n        /* \"src/lib/Math.sol\":1237:1371  amount1 = mulDivRoundingUp(... */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":945:1378  function calcAmount1Delta(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":4724:4852  function balance0() internal view returns (uint256 balance) {... */\n    tag_87:\n        /* \"src/UniswapV3Pool.sol\":4767:4782  uint256 balance */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4812:4818  token0 */\n      immutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n        /* \"src/UniswapV3Pool.sol\":4805:4829  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/UniswapV3Pool.sol\":4838:4842  this */\n      address\n        /* \"src/UniswapV3Pool.sol\":4805:4844  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_214:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"src/UniswapV3Pool.sol\":4795:4844  balance = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":4724:4852  function balance0() internal view returns (uint256 balance) {... */\n      swap1\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":4881:5009  function balance1() internal view returns (uint256 balance) {... */\n    tag_90:\n        /* \"src/UniswapV3Pool.sol\":4924:4939  uint256 balance */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4969:4975  token1 */\n      immutable(\"0xf928ede1c39c5595ff22fe845412ee05a93eeaa584f8ef0c46b5eeb14cb99ec8\")\n        /* \"src/UniswapV3Pool.sol\":4962:4986  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/UniswapV3Pool.sol\":4995:4999  this */\n      address\n        /* \"src/UniswapV3Pool.sol\":4962:5001  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_223:\n        /* \"src/UniswapV3Pool.sol\":4952:5001  balance = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":4881:5009  function balance1() internal view returns (uint256 balance) {... */\n      swap1\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":686:854  function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {... */\n    tag_137:\n        /* \"src/lib/TickBitmap.sol\":738:751  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":753:765  uint8 bitPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":801:802  8 */\n      0x08\n        /* \"src/lib/TickBitmap.sol\":793:797  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":793:802  tick >> 8 */\n      0x02\n      signextend\n      swap1\n      sar\n        /* \"src/lib/TickBitmap.sol\":777:803  wordPos = int16(tick >> 8) */\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":842:845  256 */\n      0x0100\n        /* \"src/lib/TickBitmap.sol\":835:839  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":835:845  tick % 256 */\n      tag_225\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_225:\n        /* \"src/lib/TickBitmap.sol\":813:847  bitPos = uint8(uint24(tick % 256)) */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":686:854  function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"src/lib/Math.sol\":3124:3447  function mulDivRoundingUp(... */\n    tag_207:\n        /* \"src/lib/Math.sol\":3246:3260  uint256 result */\n      0x00\n        /* \"src/lib/Math.sol\":3281:3314  PRBMath.mulDiv(a, b, denominator) */\n      tag_227\n        /* \"src/lib/Math.sol\":3296:3297  a */\n      dup5\n        /* \"src/lib/Math.sol\":3299:3300  b */\n      dup5\n        /* \"src/lib/Math.sol\":3302:3313  denominator */\n      dup5\n        /* \"src/lib/Math.sol\":3281:3295  PRBMath.mulDiv */\n      tag_228\n        /* \"src/lib/Math.sol\":3281:3314  PRBMath.mulDiv(a, b, denominator) */\n      jump\t// in\n    tag_227:\n        /* \"src/lib/Math.sol\":3272:3314  result = PRBMath.mulDiv(a, b, denominator) */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":3356:3357  0 */\n      0x00\n        /* \"src/lib/Math.sol\":3341:3352  denominator */\n      dup3\n        /* \"src/lib/Math.sol\":3328:3353  mulmod(a, b, denominator) */\n      dup1\n      tag_229\n      jumpi\n      tag_230\n      tag_231\n      jump\t// in\n    tag_230:\n    tag_229:\n        /* \"src/lib/Math.sol\":3338:3339  b */\n      dup5\n        /* \"src/lib/Math.sol\":3335:3336  a */\n      dup7\n        /* \"src/lib/Math.sol\":3328:3353  mulmod(a, b, denominator) */\n      mulmod\n        /* \"src/lib/Math.sol\":3328:3357  mulmod(a, b, denominator) > 0 */\n      gt\n        /* \"src/lib/Math.sol\":3324:3441  if (mulmod(a, b, denominator) > 0) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"src/lib/Math.sol\":3390:3407  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/lib/Math.sol\":3381:3387  result */\n      dup2\n        /* \"src/lib/Math.sol\":3381:3407  result < type(uint256).max */\n      lt\n        /* \"src/lib/Math.sol\":3373:3408  require(result < type(uint256).max) */\n      tag_233\n      jumpi\n      revert(0x00, 0x00)\n    tag_233:\n        /* \"src/lib/Math.sol\":3422:3430  result++ */\n      dup1\n      dup1\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      swap2\n      pop\n      pop\n        /* \"src/lib/Math.sol\":3324:3441  if (mulmod(a, b, denominator) > 0) {... */\n    tag_232:\n        /* \"src/lib/Math.sol\":3124:3447  function mulDivRoundingUp(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":3453:3756  function divRoundingUp(uint256 numerator, uint256 denominator)... */\n    tag_208:\n        /* \"src/lib/Math.sol\":3563:3577  uint256 result */\n      0x00\n        /* \"src/lib/Math.sol\":3724:3725  0 */\n      0x00\n        /* \"src/lib/Math.sol\":3710:3721  denominator */\n      dup3\n        /* \"src/lib/Math.sol\":3699:3708  numerator */\n      dup5\n        /* \"src/lib/Math.sol\":3695:3722  mod(numerator, denominator) */\n      mod\n        /* \"src/lib/Math.sol\":3692:3726  gt(mod(numerator, denominator), 0) */\n      gt\n        /* \"src/lib/Math.sol\":3662:3673  denominator */\n      dup3\n        /* \"src/lib/Math.sol\":3651:3660  numerator */\n      dup5\n        /* \"src/lib/Math.sol\":3647:3674  div(numerator, denominator) */\n      div\n        /* \"src/lib/Math.sol\":3626:3740  add(... */\n      add\n        /* \"src/lib/Math.sol\":3616:3740  result := add(... */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":3453:3756  function divRoundingUp(uint256 numerator, uint256 denominator)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/PRBMath.sol\":1169:3554  function mulDiv(... */\n    tag_228:\n        /* \"src/lib/PRBMath.sol\":1285:1299  uint256 result */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1392:1405  uint256 prod0 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1465:1478  uint256 prod1 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1594:1595  0 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1590:1596  not(0) */\n      not\n        /* \"src/lib/PRBMath.sol\":1587:1588  y */\n      dup6\n        /* \"src/lib/PRBMath.sol\":1584:1585  x */\n      dup8\n        /* \"src/lib/PRBMath.sol\":1577:1597  mulmod(x, y, not(0)) */\n      mulmod\n        /* \"src/lib/PRBMath.sol\":1631:1632  y */\n      dup6\n        /* \"src/lib/PRBMath.sol\":1628:1629  x */\n      dup8\n        /* \"src/lib/PRBMath.sol\":1624:1633  mul(x, y) */\n      mul\n        /* \"src/lib/PRBMath.sol\":1615:1633  prod0 := mul(x, y) */\n      swap3\n      pop\n        /* \"src/lib/PRBMath.sol\":1687:1692  prod0 */\n      dup3\n        /* \"src/lib/PRBMath.sol\":1683:1685  mm */\n      dup2\n        /* \"src/lib/PRBMath.sol\":1680:1693  lt(mm, prod0) */\n      lt\n        /* \"src/lib/PRBMath.sol\":1672:1677  prod0 */\n      dup4\n        /* \"src/lib/PRBMath.sol\":1668:1670  mm */\n      dup3\n        /* \"src/lib/PRBMath.sol\":1664:1678  sub(mm, prod0) */\n      sub\n        /* \"src/lib/PRBMath.sol\":1660:1694  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"src/lib/PRBMath.sol\":1651:1694  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"src/lib/PRBMath.sol\":1548:1709  {... */\n      pop\n        /* \"src/lib/PRBMath.sol\":1801:1802  0 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1792:1797  prod1 */\n      dup2\n        /* \"src/lib/PRBMath.sol\":1792:1802  prod1 == 0 */\n      sub\n        /* \"src/lib/PRBMath.sol\":1788:1865  if (prod1 == 0) {... */\n      tag_238\n      jumpi\n        /* \"src/lib/PRBMath.sol\":1838:1849  denominator */\n      dup4\n        /* \"src/lib/PRBMath.sol\":1830:1835  prod0 */\n      dup3\n        /* \"src/lib/PRBMath.sol\":1830:1849  prod0 / denominator */\n      dup2\n      tag_239\n      jumpi\n      tag_240\n      tag_231\n      jump\t// in\n    tag_240:\n    tag_239:\n      div\n        /* \"src/lib/PRBMath.sol\":1823:1849  return prod0 / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_237)\n        /* \"src/lib/PRBMath.sol\":1788:1865  if (prod1 == 0) {... */\n    tag_238:\n        /* \"src/lib/PRBMath.sol\":1960:1965  prod1 */\n      dup1\n        /* \"src/lib/PRBMath.sol\":1946:1957  denominator */\n      dup5\n        /* \"src/lib/PRBMath.sol\":1946:1965  denominator > prod1 */\n      gt\n        /* \"src/lib/PRBMath.sol\":1938:1987  require(denominator > prod1, \"PRBMath: overflow\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"src/lib/PRBMath.sol\":2249:2266  uint256 remainder */\n      0x00\n        /* \"src/lib/PRBMath.sol\":2335:2346  denominator */\n      dup5\n        /* \"src/lib/PRBMath.sol\":2332:2333  y */\n      dup7\n        /* \"src/lib/PRBMath.sol\":2329:2330  x */\n      dup9\n        /* \"src/lib/PRBMath.sol\":2322:2347  mulmod(x, y, denominator) */\n      mulmod\n        /* \"src/lib/PRBMath.sol\":2309:2347  remainder := mulmod(x, y, denominator) */\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":2399:2404  prod0 */\n      dup3\n        /* \"src/lib/PRBMath.sol\":2388:2397  remainder */\n      dup2\n        /* \"src/lib/PRBMath.sol\":2385:2405  gt(remainder, prod0) */\n      gt\n        /* \"src/lib/PRBMath.sol\":2378:2383  prod1 */\n      dup3\n        /* \"src/lib/PRBMath.sol\":2374:2406  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"src/lib/PRBMath.sol\":2365:2406  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"src/lib/PRBMath.sol\":2444:2453  remainder */\n      dup1\n        /* \"src/lib/PRBMath.sol\":2437:2442  prod0 */\n      dup4\n        /* \"src/lib/PRBMath.sol\":2433:2454  sub(prod0, remainder) */\n      sub\n        /* \"src/lib/PRBMath.sol\":2424:2454  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"src/lib/PRBMath.sol\":2582:2597  uint256 lpotdod */\n      0x00\n        /* \"src/lib/PRBMath.sol\":2630:2631  1 */\n      0x01\n        /* \"src/lib/PRBMath.sol\":2616:2627  denominator */\n      dup7\n        /* \"src/lib/PRBMath.sol\":2615:2627  ~denominator */\n      not\n        /* \"src/lib/PRBMath.sol\":2615:2631  ~denominator + 1 */\n      add\n        /* \"src/lib/PRBMath.sol\":2600:2611  denominator */\n      dup7\n        /* \"src/lib/PRBMath.sol\":2600:2632  denominator & (~denominator + 1) */\n      and\n        /* \"src/lib/PRBMath.sol\":2582:2632  uint256 lpotdod = denominator & (~denominator + 1) */\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":2707:2714  lpotdod */\n      dup1\n        /* \"src/lib/PRBMath.sol\":2694:2705  denominator */\n      dup7\n        /* \"src/lib/PRBMath.sol\":2690:2715  div(denominator, lpotdod) */\n      div\n        /* \"src/lib/PRBMath.sol\":2675:2715  denominator := div(denominator, lpotdod) */\n      swap6\n      pop\n        /* \"src/lib/PRBMath.sol\":2753:2760  lpotdod */\n      dup1\n        /* \"src/lib/PRBMath.sol\":2746:2751  prod0 */\n      dup5\n        /* \"src/lib/PRBMath.sol\":2742:2761  div(prod0, lpotdod) */\n      div\n        /* \"src/lib/PRBMath.sol\":2733:2761  prod0 := div(prod0, lpotdod) */\n      swap4\n      pop\n        /* \"src/lib/PRBMath.sol\":2825:2826  1 */\n      0x01\n        /* \"src/lib/PRBMath.sol\":2815:2822  lpotdod */\n      dup2\n        /* \"src/lib/PRBMath.sol\":2805:2812  lpotdod */\n      dup3\n        /* \"src/lib/PRBMath.sol\":2802:2803  0 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":2798:2813  sub(0, lpotdod) */\n      sub\n        /* \"src/lib/PRBMath.sol\":2794:2823  div(sub(0, lpotdod), lpotdod) */\n      div\n        /* \"src/lib/PRBMath.sol\":2790:2827  add(div(sub(0, lpotdod), lpotdod), 1) */\n      add\n        /* \"src/lib/PRBMath.sol\":2779:2827  lpotdod := add(div(sub(0, lpotdod), lpotdod), 1) */\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":2927:2934  lpotdod */\n      dup1\n        /* \"src/lib/PRBMath.sol\":2919:2924  prod1 */\n      dup4\n        /* \"src/lib/PRBMath.sol\":2919:2934  prod1 * lpotdod */\n      mul\n        /* \"src/lib/PRBMath.sol\":2910:2934  prod0 |= prod1 * lpotdod */\n      dup5\n      or\n      swap4\n      pop\n        /* \"src/lib/PRBMath.sol\":3000:3015  uint256 inverse */\n      0x00\n        /* \"src/lib/PRBMath.sol\":3038:3039  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3023:3034  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3019:3020  3 */\n      0x03\n        /* \"src/lib/PRBMath.sol\":3019:3034  3 * denominator */\n      mul\n        /* \"src/lib/PRBMath.sol\":3018:3039  (3 * denominator) ^ 2 */\n      xor\n        /* \"src/lib/PRBMath.sol\":3000:3039  uint256 inverse = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3083:3090  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3069:3080  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3069:3090  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3065:3066  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3065:3090  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3054:3090  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3153:3160  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3139:3150  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3139:3160  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3135:3136  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3135:3160  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3124:3160  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3224:3231  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3210:3221  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3210:3231  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3206:3207  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3206:3231  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3195:3231  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3295:3302  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3281:3292  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3281:3302  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3277:3278  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3277:3302  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3266:3302  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3366:3373  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3352:3363  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3352:3373  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3348:3349  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3348:3373  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3337:3373  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3438:3445  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3424:3435  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3424:3445  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3420:3421  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3420:3445  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3409:3445  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3500:3507  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3492:3497  prod0 */\n      dup6\n        /* \"src/lib/PRBMath.sol\":3492:3507  prod0 * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3483:3507  result = prod0 * inverse */\n      swap6\n      pop\n        /* \"src/lib/PRBMath.sol\":3522:3535  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/lib/PRBMath.sol\":1169:3554  function mulDiv(... */\n    tag_237:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_244:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_245:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_301\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_244\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_246:\n        /* \"#utility.yul\":328:352   */\n      tag_303\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_245\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_305\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_246\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:711   */\n    tag_247:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":670:704   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":663:668   */\n      dup3\n        /* \"#utility.yul\":659:705   */\n      and\n        /* \"#utility.yul\":648:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":717:835   */\n    tag_248:\n        /* \"#utility.yul\":804:828   */\n      tag_308\n        /* \"#utility.yul\":822:827   */\n      dup2\n        /* \"#utility.yul\":804:828   */\n      tag_247\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":799:802   */\n      dup3\n        /* \"#utility.yul\":792:829   */\n      mstore\n        /* \"#utility.yul\":717:835   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1063   */\n    tag_20:\n        /* \"#utility.yul\":934:938   */\n      0x00\n        /* \"#utility.yul\":972:974   */\n      0x20\n        /* \"#utility.yul\":961:970   */\n      dup3\n        /* \"#utility.yul\":957:975   */\n      add\n        /* \"#utility.yul\":949:975   */\n      swap1\n      pop\n        /* \"#utility.yul\":985:1056   */\n      tag_310\n        /* \"#utility.yul\":1053:1054   */\n      0x00\n        /* \"#utility.yul\":1042:1051   */\n      dup4\n        /* \"#utility.yul\":1038:1055   */\n      add\n        /* \"#utility.yul\":1029:1035   */\n      dup5\n        /* \"#utility.yul\":985:1056   */\n      tag_248\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":841:1063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1069:1187   */\n    tag_249:\n        /* \"#utility.yul\":1156:1180   */\n      tag_312\n        /* \"#utility.yul\":1174:1179   */\n      dup2\n        /* \"#utility.yul\":1156:1180   */\n      tag_244\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1151:1154   */\n      dup3\n        /* \"#utility.yul\":1144:1181   */\n      mstore\n        /* \"#utility.yul\":1069:1187   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1283   */\n    tag_250:\n        /* \"#utility.yul\":1228:1235   */\n      0x00\n        /* \"#utility.yul\":1271:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1269   */\n      0x02\n        /* \"#utility.yul\":1257:1277   */\n      signextend\n        /* \"#utility.yul\":1246:1277   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1289:1401   */\n    tag_251:\n        /* \"#utility.yul\":1372:1394   */\n      tag_315\n        /* \"#utility.yul\":1388:1393   */\n      dup2\n        /* \"#utility.yul\":1372:1394   */\n      tag_250\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1367:1370   */\n      dup3\n        /* \"#utility.yul\":1360:1395   */\n      mstore\n        /* \"#utility.yul\":1289:1401   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1407:1731   */\n    tag_24:\n        /* \"#utility.yul\":1524:1528   */\n      0x00\n        /* \"#utility.yul\":1562:1564   */\n      0x40\n        /* \"#utility.yul\":1551:1560   */\n      dup3\n        /* \"#utility.yul\":1547:1565   */\n      add\n        /* \"#utility.yul\":1539:1565   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1646   */\n      tag_317\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1632:1641   */\n      dup4\n        /* \"#utility.yul\":1628:1645   */\n      add\n        /* \"#utility.yul\":1619:1625   */\n      dup6\n        /* \"#utility.yul\":1575:1646   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1656:1724   */\n      tag_318\n        /* \"#utility.yul\":1720:1722   */\n      0x20\n        /* \"#utility.yul\":1709:1718   */\n      dup4\n        /* \"#utility.yul\":1705:1723   */\n      add\n        /* \"#utility.yul\":1696:1702   */\n      dup5\n        /* \"#utility.yul\":1656:1724   */\n      tag_251\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1407:1731   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1818:1935   */\n    tag_253:\n        /* \"#utility.yul\":1927:1928   */\n      0x00\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1917:1929   */\n      revert\n        /* \"#utility.yul\":1941:2058   */\n    tag_254:\n        /* \"#utility.yul\":2050:2051   */\n      0x00\n        /* \"#utility.yul\":2047:2048   */\n      0x00\n        /* \"#utility.yul\":2040:2052   */\n      revert\n        /* \"#utility.yul\":2064:2186   */\n    tag_255:\n        /* \"#utility.yul\":2137:2161   */\n      tag_323\n        /* \"#utility.yul\":2155:2160   */\n      dup2\n        /* \"#utility.yul\":2137:2161   */\n      tag_245\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2130:2135   */\n      dup2\n        /* \"#utility.yul\":2127:2162   */\n      eq\n        /* \"#utility.yul\":2117:2180   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2176:2177   */\n      0x00\n        /* \"#utility.yul\":2173:2174   */\n      0x00\n        /* \"#utility.yul\":2166:2178   */\n      revert\n        /* \"#utility.yul\":2117:2180   */\n    tag_324:\n        /* \"#utility.yul\":2064:2186   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2192:2331   */\n    tag_256:\n        /* \"#utility.yul\":2238:2243   */\n      0x00\n        /* \"#utility.yul\":2276:2282   */\n      dup2\n        /* \"#utility.yul\":2263:2283   */\n      calldataload\n        /* \"#utility.yul\":2254:2283   */\n      swap1\n      pop\n        /* \"#utility.yul\":2292:2325   */\n      tag_326\n        /* \"#utility.yul\":2319:2324   */\n      dup2\n        /* \"#utility.yul\":2292:2325   */\n      tag_255\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2192:2331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2337:2455   */\n    tag_257:\n        /* \"#utility.yul\":2408:2430   */\n      tag_328\n        /* \"#utility.yul\":2424:2429   */\n      dup2\n        /* \"#utility.yul\":2408:2430   */\n      tag_250\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2401:2406   */\n      dup2\n        /* \"#utility.yul\":2398:2431   */\n      eq\n        /* \"#utility.yul\":2388:2449   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":2445:2446   */\n      0x00\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2435:2447   */\n      revert\n        /* \"#utility.yul\":2388:2449   */\n    tag_329:\n        /* \"#utility.yul\":2337:2455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2461:2596   */\n    tag_258:\n        /* \"#utility.yul\":2505:2510   */\n      0x00\n        /* \"#utility.yul\":2543:2549   */\n      dup2\n        /* \"#utility.yul\":2530:2550   */\n      calldataload\n        /* \"#utility.yul\":2521:2550   */\n      swap1\n      pop\n        /* \"#utility.yul\":2559:2590   */\n      tag_331\n        /* \"#utility.yul\":2584:2589   */\n      dup2\n        /* \"#utility.yul\":2559:2590   */\n      tag_257\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2461:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2724   */\n    tag_259:\n        /* \"#utility.yul\":2675:2699   */\n      tag_333\n        /* \"#utility.yul\":2693:2698   */\n      dup2\n        /* \"#utility.yul\":2675:2699   */\n      tag_247\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2668:2673   */\n      dup2\n        /* \"#utility.yul\":2665:2700   */\n      eq\n        /* \"#utility.yul\":2655:2718   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2714:2715   */\n      0x00\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2704:2716   */\n      revert\n        /* \"#utility.yul\":2655:2718   */\n    tag_334:\n        /* \"#utility.yul\":2602:2724   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2730:2869   */\n    tag_260:\n        /* \"#utility.yul\":2776:2781   */\n      0x00\n        /* \"#utility.yul\":2814:2820   */\n      dup2\n        /* \"#utility.yul\":2801:2821   */\n      calldataload\n        /* \"#utility.yul\":2792:2821   */\n      swap1\n      pop\n        /* \"#utility.yul\":2830:2863   */\n      tag_336\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2830:2863   */\n      tag_259\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2730:2869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2875:2992   */\n    tag_261:\n        /* \"#utility.yul\":2984:2985   */\n      0x00\n        /* \"#utility.yul\":2981:2982   */\n      0x00\n        /* \"#utility.yul\":2974:2986   */\n      revert\n        /* \"#utility.yul\":2998:3115   */\n    tag_262:\n        /* \"#utility.yul\":3107:3108   */\n      0x00\n        /* \"#utility.yul\":3104:3105   */\n      0x00\n        /* \"#utility.yul\":3097:3109   */\n      revert\n        /* \"#utility.yul\":3121:3238   */\n    tag_263:\n        /* \"#utility.yul\":3230:3231   */\n      0x00\n        /* \"#utility.yul\":3227:3228   */\n      0x00\n        /* \"#utility.yul\":3220:3232   */\n      revert\n        /* \"#utility.yul\":3257:3809   */\n    tag_264:\n        /* \"#utility.yul\":3314:3322   */\n      0x00\n        /* \"#utility.yul\":3324:3330   */\n      0x00\n        /* \"#utility.yul\":3374:3377   */\n      dup4\n        /* \"#utility.yul\":3367:3371   */\n      0x1f\n        /* \"#utility.yul\":3359:3365   */\n      dup5\n        /* \"#utility.yul\":3355:3372   */\n      add\n        /* \"#utility.yul\":3351:3378   */\n      slt\n        /* \"#utility.yul\":3341:3463   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":3382:3461   */\n      tag_342\n      tag_261\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3341:3463   */\n    tag_341:\n        /* \"#utility.yul\":3495:3501   */\n      dup3\n        /* \"#utility.yul\":3482:3502   */\n      calldataload\n        /* \"#utility.yul\":3472:3502   */\n      swap1\n      pop\n        /* \"#utility.yul\":3525:3543   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3517:3523   */\n      dup2\n        /* \"#utility.yul\":3514:3544   */\n      gt\n        /* \"#utility.yul\":3511:3628   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":3547:3626   */\n      tag_344\n      tag_262\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3511:3628   */\n    tag_343:\n        /* \"#utility.yul\":3661:3665   */\n      0x20\n        /* \"#utility.yul\":3653:3659   */\n      dup4\n        /* \"#utility.yul\":3649:3666   */\n      add\n        /* \"#utility.yul\":3637:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3715:3718   */\n      dup4\n        /* \"#utility.yul\":3707:3711   */\n      0x01\n        /* \"#utility.yul\":3699:3705   */\n      dup3\n        /* \"#utility.yul\":3695:3712   */\n      mul\n        /* \"#utility.yul\":3685:3693   */\n      dup4\n        /* \"#utility.yul\":3681:3713   */\n      add\n        /* \"#utility.yul\":3678:3719   */\n      gt\n        /* \"#utility.yul\":3675:3803   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":3722:3801   */\n      tag_346\n      tag_263\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3675:3803   */\n    tag_345:\n        /* \"#utility.yul\":3257:3809   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4916   */\n    tag_27:\n        /* \"#utility.yul\":3917:3923   */\n      0x00\n        /* \"#utility.yul\":3925:3931   */\n      0x00\n        /* \"#utility.yul\":3933:3939   */\n      0x00\n        /* \"#utility.yul\":3941:3947   */\n      0x00\n        /* \"#utility.yul\":3949:3955   */\n      0x00\n        /* \"#utility.yul\":3957:3963   */\n      0x00\n        /* \"#utility.yul\":4006:4009   */\n      0xa0\n        /* \"#utility.yul\":3994:4003   */\n      dup8\n        /* \"#utility.yul\":3985:3992   */\n      dup10\n        /* \"#utility.yul\":3981:4004   */\n      sub\n        /* \"#utility.yul\":3977:4010   */\n      slt\n        /* \"#utility.yul\":3974:4094   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":4013:4092   */\n      tag_349\n      tag_253\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":3974:4094   */\n    tag_348:\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4158:4211   */\n      tag_350\n        /* \"#utility.yul\":4203:4210   */\n      dup10\n        /* \"#utility.yul\":4194:4200   */\n      dup3\n        /* \"#utility.yul\":4183:4192   */\n      dup11\n        /* \"#utility.yul\":4179:4201   */\n      add\n        /* \"#utility.yul\":4158:4211   */\n      tag_256\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4148:4211   */\n      swap7\n      pop\n        /* \"#utility.yul\":4104:4221   */\n      pop\n        /* \"#utility.yul\":4260:4262   */\n      0x20\n        /* \"#utility.yul\":4286:4337   */\n      tag_351\n        /* \"#utility.yul\":4329:4336   */\n      dup10\n        /* \"#utility.yul\":4320:4326   */\n      dup3\n        /* \"#utility.yul\":4309:4318   */\n      dup11\n        /* \"#utility.yul\":4305:4327   */\n      add\n        /* \"#utility.yul\":4286:4337   */\n      tag_258\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4276:4337   */\n      swap6\n      pop\n        /* \"#utility.yul\":4231:4347   */\n      pop\n        /* \"#utility.yul\":4386:4388   */\n      0x40\n        /* \"#utility.yul\":4412:4463   */\n      tag_352\n        /* \"#utility.yul\":4455:4462   */\n      dup10\n        /* \"#utility.yul\":4446:4452   */\n      dup3\n        /* \"#utility.yul\":4435:4444   */\n      dup11\n        /* \"#utility.yul\":4431:4453   */\n      add\n        /* \"#utility.yul\":4412:4463   */\n      tag_258\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":4402:4463   */\n      swap5\n      pop\n        /* \"#utility.yul\":4357:4473   */\n      pop\n        /* \"#utility.yul\":4512:4514   */\n      0x60\n        /* \"#utility.yul\":4538:4591   */\n      tag_353\n        /* \"#utility.yul\":4583:4590   */\n      dup10\n        /* \"#utility.yul\":4574:4580   */\n      dup3\n        /* \"#utility.yul\":4563:4572   */\n      dup11\n        /* \"#utility.yul\":4559:4581   */\n      add\n        /* \"#utility.yul\":4538:4591   */\n      tag_260\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4528:4591   */\n      swap4\n      pop\n        /* \"#utility.yul\":4483:4601   */\n      pop\n        /* \"#utility.yul\":4668:4671   */\n      0x80\n        /* \"#utility.yul\":4657:4666   */\n      dup8\n        /* \"#utility.yul\":4653:4672   */\n      add\n        /* \"#utility.yul\":4640:4673   */\n      calldataload\n        /* \"#utility.yul\":4700:4718   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4692:4698   */\n      dup2\n        /* \"#utility.yul\":4689:4719   */\n      gt\n        /* \"#utility.yul\":4686:4803   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":4722:4801   */\n      tag_355\n      tag_254\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4686:4803   */\n    tag_354:\n        /* \"#utility.yul\":4835:4899   */\n      tag_356\n        /* \"#utility.yul\":4891:4898   */\n      dup10\n        /* \"#utility.yul\":4882:4888   */\n      dup3\n        /* \"#utility.yul\":4871:4880   */\n      dup11\n        /* \"#utility.yul\":4867:4889   */\n      add\n        /* \"#utility.yul\":4835:4899   */\n      tag_264\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4817:4899   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4611:4909   */\n      pop\n        /* \"#utility.yul\":3815:4916   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4922:4999   */\n    tag_265:\n        /* \"#utility.yul\":4959:4966   */\n      0x00\n        /* \"#utility.yul\":4988:4993   */\n      dup2\n        /* \"#utility.yul\":4977:4993   */\n      swap1\n      pop\n        /* \"#utility.yul\":4922:4999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5005:5123   */\n    tag_266:\n        /* \"#utility.yul\":5092:5116   */\n      tag_359\n        /* \"#utility.yul\":5110:5115   */\n      dup2\n        /* \"#utility.yul\":5092:5116   */\n      tag_265\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5087:5090   */\n      dup3\n        /* \"#utility.yul\":5080:5117   */\n      mstore\n        /* \"#utility.yul\":5005:5123   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5129:5461   */\n    tag_30:\n        /* \"#utility.yul\":5250:5254   */\n      0x00\n        /* \"#utility.yul\":5288:5290   */\n      0x40\n        /* \"#utility.yul\":5277:5286   */\n      dup3\n        /* \"#utility.yul\":5273:5291   */\n      add\n        /* \"#utility.yul\":5265:5291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5301:5372   */\n      tag_361\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5358:5367   */\n      dup4\n        /* \"#utility.yul\":5354:5371   */\n      add\n        /* \"#utility.yul\":5345:5351   */\n      dup6\n        /* \"#utility.yul\":5301:5372   */\n      tag_266\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5382:5454   */\n      tag_362\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup4\n        /* \"#utility.yul\":5435:5453   */\n      add\n        /* \"#utility.yul\":5426:5432   */\n      dup5\n        /* \"#utility.yul\":5382:5454   */\n      tag_266\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5129:5461   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5467:5544   */\n    tag_267:\n        /* \"#utility.yul\":5504:5511   */\n      0x00\n        /* \"#utility.yul\":5533:5538   */\n      dup2\n        /* \"#utility.yul\":5522:5538   */\n      swap1\n      pop\n        /* \"#utility.yul\":5467:5544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5550:5672   */\n    tag_268:\n        /* \"#utility.yul\":5623:5647   */\n      tag_365\n        /* \"#utility.yul\":5641:5646   */\n      dup2\n        /* \"#utility.yul\":5623:5647   */\n      tag_267\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5616:5621   */\n      dup2\n        /* \"#utility.yul\":5613:5648   */\n      eq\n        /* \"#utility.yul\":5603:5666   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":5662:5663   */\n      0x00\n        /* \"#utility.yul\":5659:5660   */\n      0x00\n        /* \"#utility.yul\":5652:5664   */\n      revert\n        /* \"#utility.yul\":5603:5666   */\n    tag_366:\n        /* \"#utility.yul\":5550:5672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:5817   */\n    tag_269:\n        /* \"#utility.yul\":5724:5729   */\n      0x00\n        /* \"#utility.yul\":5762:5768   */\n      dup2\n        /* \"#utility.yul\":5749:5769   */\n      calldataload\n        /* \"#utility.yul\":5740:5769   */\n      swap1\n      pop\n        /* \"#utility.yul\":5778:5811   */\n      tag_368\n        /* \"#utility.yul\":5805:5810   */\n      dup2\n        /* \"#utility.yul\":5778:5811   */\n      tag_268\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5678:5817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5823:6152   */\n    tag_33:\n        /* \"#utility.yul\":5882:5888   */\n      0x00\n        /* \"#utility.yul\":5931:5933   */\n      0x20\n        /* \"#utility.yul\":5919:5928   */\n      dup3\n        /* \"#utility.yul\":5910:5917   */\n      dup5\n        /* \"#utility.yul\":5906:5929   */\n      sub\n        /* \"#utility.yul\":5902:5934   */\n      slt\n        /* \"#utility.yul\":5899:6018   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5937:6016   */\n      tag_371\n      tag_253\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":5899:6018   */\n    tag_370:\n        /* \"#utility.yul\":6057:6058   */\n      0x00\n        /* \"#utility.yul\":6082:6135   */\n      tag_372\n        /* \"#utility.yul\":6127:6134   */\n      dup5\n        /* \"#utility.yul\":6118:6124   */\n      dup3\n        /* \"#utility.yul\":6107:6116   */\n      dup6\n        /* \"#utility.yul\":6103:6125   */\n      add\n        /* \"#utility.yul\":6082:6135   */\n      tag_269\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6072:6135   */\n      swap2\n      pop\n        /* \"#utility.yul\":6028:6145   */\n      pop\n        /* \"#utility.yul\":5823:6152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6158:6248   */\n    tag_270:\n        /* \"#utility.yul\":6193:6200   */\n      0x00\n        /* \"#utility.yul\":6236:6241   */\n      dup2\n        /* \"#utility.yul\":6233:6234   */\n      0x01\n        /* \"#utility.yul\":6222:6242   */\n      signextend\n        /* \"#utility.yul\":6211:6242   */\n      swap1\n      pop\n        /* \"#utility.yul\":6158:6248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6254:6372   */\n    tag_271:\n        /* \"#utility.yul\":6325:6347   */\n      tag_375\n        /* \"#utility.yul\":6341:6346   */\n      dup2\n        /* \"#utility.yul\":6325:6347   */\n      tag_270\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6318:6323   */\n      dup2\n        /* \"#utility.yul\":6315:6348   */\n      eq\n        /* \"#utility.yul\":6305:6366   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":6362:6363   */\n      0x00\n        /* \"#utility.yul\":6359:6360   */\n      0x00\n        /* \"#utility.yul\":6352:6364   */\n      revert\n        /* \"#utility.yul\":6305:6366   */\n    tag_376:\n        /* \"#utility.yul\":6254:6372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6378:6513   */\n    tag_272:\n        /* \"#utility.yul\":6422:6427   */\n      0x00\n        /* \"#utility.yul\":6460:6466   */\n      dup2\n        /* \"#utility.yul\":6447:6467   */\n      calldataload\n        /* \"#utility.yul\":6438:6467   */\n      swap1\n      pop\n        /* \"#utility.yul\":6476:6507   */\n      tag_378\n        /* \"#utility.yul\":6501:6506   */\n      dup2\n        /* \"#utility.yul\":6476:6507   */\n      tag_271\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6378:6513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6519:6844   */\n    tag_38:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6625:6627   */\n      0x20\n        /* \"#utility.yul\":6613:6622   */\n      dup3\n        /* \"#utility.yul\":6604:6611   */\n      dup5\n        /* \"#utility.yul\":6600:6623   */\n      sub\n        /* \"#utility.yul\":6596:6628   */\n      slt\n        /* \"#utility.yul\":6593:6712   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6631:6710   */\n      tag_381\n      tag_253\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6593:6712   */\n    tag_380:\n        /* \"#utility.yul\":6751:6752   */\n      0x00\n        /* \"#utility.yul\":6776:6827   */\n      tag_382\n        /* \"#utility.yul\":6819:6826   */\n      dup5\n        /* \"#utility.yul\":6810:6816   */\n      dup3\n        /* \"#utility.yul\":6799:6808   */\n      dup6\n        /* \"#utility.yul\":6795:6817   */\n      add\n        /* \"#utility.yul\":6776:6827   */\n      tag_272\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6766:6827   */\n      swap2\n      pop\n        /* \"#utility.yul\":6722:6837   */\n      pop\n        /* \"#utility.yul\":6519:6844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6850:7072   */\n    tag_41:\n        /* \"#utility.yul\":6943:6947   */\n      0x00\n        /* \"#utility.yul\":6981:6983   */\n      0x20\n        /* \"#utility.yul\":6970:6979   */\n      dup3\n        /* \"#utility.yul\":6966:6984   */\n      add\n        /* \"#utility.yul\":6958:6984   */\n      swap1\n      pop\n        /* \"#utility.yul\":6994:7065   */\n      tag_384\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7051:7060   */\n      dup4\n        /* \"#utility.yul\":7047:7064   */\n      add\n        /* \"#utility.yul\":7038:7044   */\n      dup5\n        /* \"#utility.yul\":6994:7065   */\n      tag_266\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":6850:7072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7078:7750   */\n    tag_47:\n        /* \"#utility.yul\":7157:7163   */\n      0x00\n        /* \"#utility.yul\":7165:7171   */\n      0x00\n        /* \"#utility.yul\":7173:7179   */\n      0x00\n        /* \"#utility.yul\":7222:7224   */\n      0x40\n        /* \"#utility.yul\":7210:7219   */\n      dup5\n        /* \"#utility.yul\":7201:7208   */\n      dup7\n        /* \"#utility.yul\":7197:7220   */\n      sub\n        /* \"#utility.yul\":7193:7225   */\n      slt\n        /* \"#utility.yul\":7190:7309   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":7228:7307   */\n      tag_387\n      tag_253\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7190:7309   */\n    tag_386:\n        /* \"#utility.yul\":7348:7349   */\n      0x00\n        /* \"#utility.yul\":7373:7426   */\n      tag_388\n        /* \"#utility.yul\":7418:7425   */\n      dup7\n        /* \"#utility.yul\":7409:7415   */\n      dup3\n        /* \"#utility.yul\":7398:7407   */\n      dup8\n        /* \"#utility.yul\":7394:7416   */\n      add\n        /* \"#utility.yul\":7373:7426   */\n      tag_256\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7363:7426   */\n      swap4\n      pop\n        /* \"#utility.yul\":7319:7436   */\n      pop\n        /* \"#utility.yul\":7503:7505   */\n      0x20\n        /* \"#utility.yul\":7492:7501   */\n      dup5\n        /* \"#utility.yul\":7488:7506   */\n      add\n        /* \"#utility.yul\":7475:7507   */\n      calldataload\n        /* \"#utility.yul\":7534:7552   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7526:7532   */\n      dup2\n        /* \"#utility.yul\":7523:7553   */\n      gt\n        /* \"#utility.yul\":7520:7637   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":7556:7635   */\n      tag_390\n      tag_254\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7520:7637   */\n    tag_389:\n        /* \"#utility.yul\":7669:7733   */\n      tag_391\n        /* \"#utility.yul\":7725:7732   */\n      dup7\n        /* \"#utility.yul\":7716:7722   */\n      dup3\n        /* \"#utility.yul\":7705:7714   */\n      dup8\n        /* \"#utility.yul\":7701:7723   */\n      add\n        /* \"#utility.yul\":7669:7733   */\n      tag_264\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7651:7733   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":7446:7743   */\n      pop\n        /* \"#utility.yul\":7078:7750   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7756:7832   */\n    tag_273:\n        /* \"#utility.yul\":7792:7799   */\n      0x00\n        /* \"#utility.yul\":7821:7826   */\n      dup2\n        /* \"#utility.yul\":7810:7826   */\n      swap1\n      pop\n        /* \"#utility.yul\":7756:7832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7838:7953   */\n    tag_274:\n        /* \"#utility.yul\":7923:7946   */\n      tag_394\n        /* \"#utility.yul\":7940:7945   */\n      dup2\n        /* \"#utility.yul\":7923:7946   */\n      tag_273\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7918:7921   */\n      dup3\n        /* \"#utility.yul\":7911:7947   */\n      mstore\n        /* \"#utility.yul\":7838:7953   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7959:8283   */\n    tag_50:\n        /* \"#utility.yul\":8076:8080   */\n      0x00\n        /* \"#utility.yul\":8114:8116   */\n      0x40\n        /* \"#utility.yul\":8103:8112   */\n      dup3\n        /* \"#utility.yul\":8099:8117   */\n      add\n        /* \"#utility.yul\":8091:8117   */\n      swap1\n      pop\n        /* \"#utility.yul\":8127:8196   */\n      tag_396\n        /* \"#utility.yul\":8193:8194   */\n      0x00\n        /* \"#utility.yul\":8182:8191   */\n      dup4\n        /* \"#utility.yul\":8178:8195   */\n      add\n        /* \"#utility.yul\":8169:8175   */\n      dup6\n        /* \"#utility.yul\":8127:8196   */\n      tag_274\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8206:8276   */\n      tag_397\n        /* \"#utility.yul\":8272:8274   */\n      0x20\n        /* \"#utility.yul\":8261:8270   */\n      dup4\n        /* \"#utility.yul\":8257:8275   */\n      add\n        /* \"#utility.yul\":8248:8254   */\n      dup5\n        /* \"#utility.yul\":8206:8276   */\n      tag_274\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7959:8283   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8289:8614   */\n    tag_53:\n        /* \"#utility.yul\":8346:8352   */\n      0x00\n        /* \"#utility.yul\":8395:8397   */\n      0x20\n        /* \"#utility.yul\":8383:8392   */\n      dup3\n        /* \"#utility.yul\":8374:8381   */\n      dup5\n        /* \"#utility.yul\":8370:8393   */\n      sub\n        /* \"#utility.yul\":8366:8398   */\n      slt\n        /* \"#utility.yul\":8363:8482   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":8401:8480   */\n      tag_400\n      tag_253\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8363:8482   */\n    tag_399:\n        /* \"#utility.yul\":8521:8522   */\n      0x00\n        /* \"#utility.yul\":8546:8597   */\n      tag_401\n        /* \"#utility.yul\":8589:8596   */\n      dup5\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8569:8578   */\n      dup6\n        /* \"#utility.yul\":8565:8587   */\n      add\n        /* \"#utility.yul\":8546:8597   */\n      tag_258\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":8536:8597   */\n      swap2\n      pop\n        /* \"#utility.yul\":8492:8607   */\n      pop\n        /* \"#utility.yul\":8289:8614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8620:8710   */\n    tag_275:\n        /* \"#utility.yul\":8654:8661   */\n      0x00\n        /* \"#utility.yul\":8697:8702   */\n      dup2\n        /* \"#utility.yul\":8690:8703   */\n      iszero\n        /* \"#utility.yul\":8683:8704   */\n      iszero\n        /* \"#utility.yul\":8672:8704   */\n      swap1\n      pop\n        /* \"#utility.yul\":8620:8710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8716:8825   */\n    tag_276:\n        /* \"#utility.yul\":8797:8818   */\n      tag_404\n        /* \"#utility.yul\":8812:8817   */\n      dup2\n        /* \"#utility.yul\":8797:8818   */\n      tag_275\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":8792:8795   */\n      dup3\n        /* \"#utility.yul\":8785:8819   */\n      mstore\n        /* \"#utility.yul\":8716:8825   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8831:9151   */\n    tag_56:\n        /* \"#utility.yul\":8946:8950   */\n      0x00\n        /* \"#utility.yul\":8984:8986   */\n      0x40\n        /* \"#utility.yul\":8973:8982   */\n      dup3\n        /* \"#utility.yul\":8969:8987   */\n      add\n        /* \"#utility.yul\":8961:8987   */\n      swap1\n      pop\n        /* \"#utility.yul\":8997:9062   */\n      tag_406\n        /* \"#utility.yul\":9059:9060   */\n      0x00\n        /* \"#utility.yul\":9048:9057   */\n      dup4\n        /* \"#utility.yul\":9044:9061   */\n      add\n        /* \"#utility.yul\":9035:9041   */\n      dup6\n        /* \"#utility.yul\":8997:9062   */\n      tag_276\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9072:9144   */\n      tag_407\n        /* \"#utility.yul\":9140:9142   */\n      0x20\n        /* \"#utility.yul\":9129:9138   */\n      dup4\n        /* \"#utility.yul\":9125:9143   */\n      add\n        /* \"#utility.yul\":9116:9122   */\n      dup5\n        /* \"#utility.yul\":9072:9144   */\n      tag_248\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8831:9151   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9157:9337   */\n    tag_277:\n        /* \"#utility.yul\":9205:9282   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9202:9203   */\n      0x00\n        /* \"#utility.yul\":9195:9283   */\n      mstore\n        /* \"#utility.yul\":9302:9306   */\n      0x11\n        /* \"#utility.yul\":9299:9300   */\n      0x04\n        /* \"#utility.yul\":9292:9307   */\n      mstore\n        /* \"#utility.yul\":9326:9330   */\n      0x24\n        /* \"#utility.yul\":9323:9324   */\n      0x00\n        /* \"#utility.yul\":9316:9331   */\n      revert\n        /* \"#utility.yul\":9343:9569   */\n    tag_61:\n        /* \"#utility.yul\":9377:9380   */\n      0x00\n        /* \"#utility.yul\":9400:9422   */\n      tag_410\n        /* \"#utility.yul\":9416:9421   */\n      dup3\n        /* \"#utility.yul\":9400:9422   */\n      tag_250\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9391:9422   */\n      swap2\n      pop\n        /* \"#utility.yul\":9444:9510   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":9437:9442   */\n      dup3\n        /* \"#utility.yul\":9434:9511   */\n      sub\n        /* \"#utility.yul\":9431:9534   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":9514:9532   */\n      tag_412\n      tag_277\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9431:9534   */\n    tag_411:\n        /* \"#utility.yul\":9557:9562   */\n      dup2\n        /* \"#utility.yul\":9554:9555   */\n      0x00\n        /* \"#utility.yul\":9550:9563   */\n      sub\n        /* \"#utility.yul\":9543:9563   */\n      swap1\n      pop\n        /* \"#utility.yul\":9343:9569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9575:9799   */\n    tag_84:\n        /* \"#utility.yul\":9615:9618   */\n      0x00\n        /* \"#utility.yul\":9634:9654   */\n      tag_414\n        /* \"#utility.yul\":9652:9653   */\n      dup3\n        /* \"#utility.yul\":9634:9654   */\n      tag_247\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9629:9654   */\n      swap2\n      pop\n        /* \"#utility.yul\":9668:9688   */\n      tag_415\n        /* \"#utility.yul\":9686:9687   */\n      dup4\n        /* \"#utility.yul\":9668:9688   */\n      tag_247\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9663:9688   */\n      swap3\n      pop\n        /* \"#utility.yul\":9711:9712   */\n      dup3\n        /* \"#utility.yul\":9708:9709   */\n      dup3\n        /* \"#utility.yul\":9704:9713   */\n      add\n        /* \"#utility.yul\":9697:9713   */\n      swap1\n      pop\n        /* \"#utility.yul\":9734:9768   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9729:9732   */\n      dup2\n        /* \"#utility.yul\":9726:9769   */\n      gt\n        /* \"#utility.yul\":9723:9792   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":9772:9790   */\n      tag_417\n      tag_277\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9723:9792   */\n    tag_416:\n        /* \"#utility.yul\":9575:9799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9805:9973   */\n    tag_278:\n        /* \"#utility.yul\":9888:9899   */\n      0x00\n        /* \"#utility.yul\":9922:9928   */\n      dup3\n        /* \"#utility.yul\":9917:9920   */\n      dup3\n        /* \"#utility.yul\":9910:9929   */\n      mstore\n        /* \"#utility.yul\":9962:9966   */\n      0x20\n        /* \"#utility.yul\":9957:9960   */\n      dup3\n        /* \"#utility.yul\":9953:9967   */\n      add\n        /* \"#utility.yul\":9938:9967   */\n      swap1\n      pop\n        /* \"#utility.yul\":9805:9973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:10127   */\n    tag_279:\n        /* \"#utility.yul\":10077:10083   */\n      dup3\n        /* \"#utility.yul\":10072:10075   */\n      dup2\n        /* \"#utility.yul\":10067:10070   */\n      dup4\n        /* \"#utility.yul\":10054:10084   */\n      calldatacopy\n        /* \"#utility.yul\":10118:10119   */\n      0x00\n        /* \"#utility.yul\":10109:10115   */\n      dup4\n        /* \"#utility.yul\":10104:10107   */\n      dup4\n        /* \"#utility.yul\":10100:10116   */\n      add\n        /* \"#utility.yul\":10093:10120   */\n      mstore\n        /* \"#utility.yul\":9979:10127   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10133:10235   */\n    tag_280:\n        /* \"#utility.yul\":10174:10180   */\n      0x00\n        /* \"#utility.yul\":10225:10227   */\n      0x1f\n        /* \"#utility.yul\":10221:10228   */\n      not\n        /* \"#utility.yul\":10216:10218   */\n      0x1f\n        /* \"#utility.yul\":10209:10214   */\n      dup4\n        /* \"#utility.yul\":10205:10219   */\n      add\n        /* \"#utility.yul\":10201:10229   */\n      and\n        /* \"#utility.yul\":10191:10229   */\n      swap1\n      pop\n        /* \"#utility.yul\":10133:10235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10263:10577   */\n    tag_281:\n        /* \"#utility.yul\":10359:10362   */\n      0x00\n        /* \"#utility.yul\":10380:10450   */\n      tag_422\n        /* \"#utility.yul\":10443:10449   */\n      dup4\n        /* \"#utility.yul\":10438:10441   */\n      dup6\n        /* \"#utility.yul\":10380:10450   */\n      tag_278\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10373:10450   */\n      swap4\n      pop\n        /* \"#utility.yul\":10460:10516   */\n      tag_423\n        /* \"#utility.yul\":10509:10515   */\n      dup4\n        /* \"#utility.yul\":10504:10507   */\n      dup6\n        /* \"#utility.yul\":10497:10502   */\n      dup5\n        /* \"#utility.yul\":10460:10516   */\n      tag_279\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10541:10570   */\n      tag_424\n        /* \"#utility.yul\":10563:10569   */\n      dup4\n        /* \"#utility.yul\":10541:10570   */\n      tag_280\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10536:10539   */\n      dup5\n        /* \"#utility.yul\":10532:10571   */\n      add\n        /* \"#utility.yul\":10525:10571   */\n      swap1\n      pop\n        /* \"#utility.yul\":10263:10577   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10583:11132   */\n    tag_92:\n        /* \"#utility.yul\":10760:10764   */\n      0x00\n        /* \"#utility.yul\":10798:10800   */\n      0x60\n        /* \"#utility.yul\":10787:10796   */\n      dup3\n        /* \"#utility.yul\":10783:10801   */\n      add\n        /* \"#utility.yul\":10775:10801   */\n      swap1\n      pop\n        /* \"#utility.yul\":10811:10882   */\n      tag_426\n        /* \"#utility.yul\":10879:10880   */\n      0x00\n        /* \"#utility.yul\":10868:10877   */\n      dup4\n        /* \"#utility.yul\":10864:10881   */\n      add\n        /* \"#utility.yul\":10855:10861   */\n      dup8\n        /* \"#utility.yul\":10811:10882   */\n      tag_266\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":10892:10964   */\n      tag_427\n        /* \"#utility.yul\":10960:10962   */\n      0x20\n        /* \"#utility.yul\":10949:10958   */\n      dup4\n        /* \"#utility.yul\":10945:10963   */\n      add\n        /* \"#utility.yul\":10936:10942   */\n      dup7\n        /* \"#utility.yul\":10892:10964   */\n      tag_266\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11011:11020   */\n      dup2\n        /* \"#utility.yul\":11005:11009   */\n      dup2\n        /* \"#utility.yul\":11001:11021   */\n      sub\n        /* \"#utility.yul\":10996:10998   */\n      0x40\n        /* \"#utility.yul\":10985:10994   */\n      dup4\n        /* \"#utility.yul\":10981:10999   */\n      add\n        /* \"#utility.yul\":10974:11022   */\n      mstore\n        /* \"#utility.yul\":11039:11125   */\n      tag_428\n        /* \"#utility.yul\":11120:11124   */\n      dup2\n        /* \"#utility.yul\":11111:11117   */\n      dup5\n        /* \"#utility.yul\":11103:11109   */\n      dup7\n        /* \"#utility.yul\":11039:11125   */\n      tag_281\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11031:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10583:11132   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11138:11329   */\n    tag_99:\n        /* \"#utility.yul\":11178:11181   */\n      0x00\n        /* \"#utility.yul\":11197:11217   */\n      tag_430\n        /* \"#utility.yul\":11215:11216   */\n      dup3\n        /* \"#utility.yul\":11197:11217   */\n      tag_265\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":11192:11217   */\n      swap2\n      pop\n        /* \"#utility.yul\":11231:11251   */\n      tag_431\n        /* \"#utility.yul\":11249:11250   */\n      dup4\n        /* \"#utility.yul\":11231:11251   */\n      tag_265\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11226:11251   */\n      swap3\n      pop\n        /* \"#utility.yul\":11274:11275   */\n      dup3\n        /* \"#utility.yul\":11271:11272   */\n      dup3\n        /* \"#utility.yul\":11267:11276   */\n      add\n        /* \"#utility.yul\":11260:11276   */\n      swap1\n      pop\n        /* \"#utility.yul\":11295:11298   */\n      dup1\n        /* \"#utility.yul\":11292:11293   */\n      dup3\n        /* \"#utility.yul\":11289:11299   */\n      gt\n        /* \"#utility.yul\":11286:11322   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":11302:11320   */\n      tag_433\n      tag_277\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11286:11322   */\n    tag_432:\n        /* \"#utility.yul\":11138:11329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11335:11888   */\n    tag_106:\n        /* \"#utility.yul\":11512:11516   */\n      0x00\n        /* \"#utility.yul\":11550:11553   */\n      0x80\n        /* \"#utility.yul\":11539:11548   */\n      dup3\n        /* \"#utility.yul\":11535:11554   */\n      add\n        /* \"#utility.yul\":11527:11554   */\n      swap1\n      pop\n        /* \"#utility.yul\":11564:11635   */\n      tag_435\n        /* \"#utility.yul\":11632:11633   */\n      0x00\n        /* \"#utility.yul\":11621:11630   */\n      dup4\n        /* \"#utility.yul\":11617:11634   */\n      add\n        /* \"#utility.yul\":11608:11614   */\n      dup8\n        /* \"#utility.yul\":11564:11635   */\n      tag_246\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":11645:11717   */\n      tag_436\n        /* \"#utility.yul\":11713:11715   */\n      0x20\n        /* \"#utility.yul\":11702:11711   */\n      dup4\n        /* \"#utility.yul\":11698:11716   */\n      add\n        /* \"#utility.yul\":11689:11695   */\n      dup7\n        /* \"#utility.yul\":11645:11717   */\n      tag_248\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":11727:11799   */\n      tag_437\n        /* \"#utility.yul\":11795:11797   */\n      0x40\n        /* \"#utility.yul\":11784:11793   */\n      dup4\n        /* \"#utility.yul\":11780:11798   */\n      add\n        /* \"#utility.yul\":11771:11777   */\n      dup6\n        /* \"#utility.yul\":11727:11799   */\n      tag_266\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":11809:11881   */\n      tag_438\n        /* \"#utility.yul\":11877:11879   */\n      0x60\n        /* \"#utility.yul\":11866:11875   */\n      dup4\n        /* \"#utility.yul\":11862:11880   */\n      add\n        /* \"#utility.yul\":11853:11859   */\n      dup5\n        /* \"#utility.yul\":11809:11881   */\n      tag_266\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11335:11888   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11894:12122   */\n    tag_109:\n        /* \"#utility.yul\":11929:11932   */\n      0x00\n        /* \"#utility.yul\":11952:11975   */\n      tag_440\n        /* \"#utility.yul\":11969:11974   */\n      dup3\n        /* \"#utility.yul\":11952:11975   */\n      tag_273\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11943:11975   */\n      swap2\n      pop\n        /* \"#utility.yul\":11997:12063   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11990:11995   */\n      dup3\n        /* \"#utility.yul\":11987:12064   */\n      sub\n        /* \"#utility.yul\":11984:12087   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":12067:12085   */\n      tag_442\n      tag_277\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11984:12087   */\n    tag_441:\n        /* \"#utility.yul\":12110:12115   */\n      dup2\n        /* \"#utility.yul\":12107:12108   */\n      0x00\n        /* \"#utility.yul\":12103:12116   */\n      sub\n        /* \"#utility.yul\":12096:12116   */\n      swap1\n      pop\n        /* \"#utility.yul\":11894:12122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12128:12460   */\n    tag_111:\n        /* \"#utility.yul\":12249:12253   */\n      0x00\n        /* \"#utility.yul\":12287:12289   */\n      0x40\n        /* \"#utility.yul\":12276:12285   */\n      dup3\n        /* \"#utility.yul\":12272:12290   */\n      add\n        /* \"#utility.yul\":12264:12290   */\n      swap1\n      pop\n        /* \"#utility.yul\":12300:12371   */\n      tag_444\n        /* \"#utility.yul\":12368:12369   */\n      0x00\n        /* \"#utility.yul\":12357:12366   */\n      dup4\n        /* \"#utility.yul\":12353:12370   */\n      add\n        /* \"#utility.yul\":12344:12350   */\n      dup6\n        /* \"#utility.yul\":12300:12371   */\n      tag_246\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":12381:12453   */\n      tag_445\n        /* \"#utility.yul\":12449:12451   */\n      0x20\n        /* \"#utility.yul\":12438:12447   */\n      dup4\n        /* \"#utility.yul\":12434:12452   */\n      add\n        /* \"#utility.yul\":12425:12431   */\n      dup5\n        /* \"#utility.yul\":12381:12453   */\n      tag_266\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":12128:12460   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12466:12582   */\n    tag_282:\n        /* \"#utility.yul\":12536:12557   */\n      tag_447\n        /* \"#utility.yul\":12551:12556   */\n      dup2\n        /* \"#utility.yul\":12536:12557   */\n      tag_275\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12529:12534   */\n      dup2\n        /* \"#utility.yul\":12526:12558   */\n      eq\n        /* \"#utility.yul\":12516:12576   */\n      tag_448\n      jumpi\n        /* \"#utility.yul\":12572:12573   */\n      0x00\n        /* \"#utility.yul\":12569:12570   */\n      0x00\n        /* \"#utility.yul\":12562:12574   */\n      revert\n        /* \"#utility.yul\":12516:12576   */\n    tag_448:\n        /* \"#utility.yul\":12466:12582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12588:12725   */\n    tag_283:\n        /* \"#utility.yul\":12642:12647   */\n      0x00\n        /* \"#utility.yul\":12673:12679   */\n      dup2\n        /* \"#utility.yul\":12667:12680   */\n      mload\n        /* \"#utility.yul\":12658:12680   */\n      swap1\n      pop\n        /* \"#utility.yul\":12689:12719   */\n      tag_450\n        /* \"#utility.yul\":12713:12718   */\n      dup2\n        /* \"#utility.yul\":12689:12719   */\n      tag_282\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12588:12725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12731:13076   */\n    tag_115:\n        /* \"#utility.yul\":12798:12804   */\n      0x00\n        /* \"#utility.yul\":12847:12849   */\n      0x20\n        /* \"#utility.yul\":12835:12844   */\n      dup3\n        /* \"#utility.yul\":12826:12833   */\n      dup5\n        /* \"#utility.yul\":12822:12845   */\n      sub\n        /* \"#utility.yul\":12818:12850   */\n      slt\n        /* \"#utility.yul\":12815:12934   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":12853:12932   */\n      tag_453\n      tag_253\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12815:12934   */\n    tag_452:\n        /* \"#utility.yul\":12973:12974   */\n      0x00\n        /* \"#utility.yul\":12998:13059   */\n      tag_454\n        /* \"#utility.yul\":13051:13058   */\n      dup5\n        /* \"#utility.yul\":13042:13048   */\n      dup3\n        /* \"#utility.yul\":13031:13040   */\n      dup6\n        /* \"#utility.yul\":13027:13049   */\n      add\n        /* \"#utility.yul\":12998:13059   */\n      tag_283\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12988:13059   */\n      swap2\n      pop\n        /* \"#utility.yul\":12944:13069   */\n      pop\n        /* \"#utility.yul\":12731:13076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13082:13623   */\n    tag_118:\n        /* \"#utility.yul\":13255:13259   */\n      0x00\n        /* \"#utility.yul\":13293:13295   */\n      0x60\n        /* \"#utility.yul\":13282:13291   */\n      dup3\n        /* \"#utility.yul\":13278:13296   */\n      add\n        /* \"#utility.yul\":13270:13296   */\n      swap1\n      pop\n        /* \"#utility.yul\":13306:13375   */\n      tag_456\n        /* \"#utility.yul\":13372:13373   */\n      0x00\n        /* \"#utility.yul\":13361:13370   */\n      dup4\n        /* \"#utility.yul\":13357:13374   */\n      add\n        /* \"#utility.yul\":13348:13354   */\n      dup8\n        /* \"#utility.yul\":13306:13375   */\n      tag_274\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13385:13455   */\n      tag_457\n        /* \"#utility.yul\":13451:13453   */\n      0x20\n        /* \"#utility.yul\":13440:13449   */\n      dup4\n        /* \"#utility.yul\":13436:13454   */\n      add\n        /* \"#utility.yul\":13427:13433   */\n      dup7\n        /* \"#utility.yul\":13385:13455   */\n      tag_274\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13502:13511   */\n      dup2\n        /* \"#utility.yul\":13496:13500   */\n      dup2\n        /* \"#utility.yul\":13492:13512   */\n      sub\n        /* \"#utility.yul\":13487:13489   */\n      0x40\n        /* \"#utility.yul\":13476:13485   */\n      dup4\n        /* \"#utility.yul\":13472:13490   */\n      add\n        /* \"#utility.yul\":13465:13513   */\n      mstore\n        /* \"#utility.yul\":13530:13616   */\n      tag_458\n        /* \"#utility.yul\":13611:13615   */\n      dup2\n        /* \"#utility.yul\":13602:13608   */\n      dup5\n        /* \"#utility.yul\":13594:13600   */\n      dup7\n        /* \"#utility.yul\":13530:13616   */\n      tag_281\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13522:13616   */\n      swap1\n      pop\n        /* \"#utility.yul\":13082:13623   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13629:14277   */\n    tag_126:\n        /* \"#utility.yul\":13826:13830   */\n      0x00\n        /* \"#utility.yul\":13864:13867   */\n      0xa0\n        /* \"#utility.yul\":13853:13862   */\n      dup3\n        /* \"#utility.yul\":13849:13868   */\n      add\n        /* \"#utility.yul\":13841:13868   */\n      swap1\n      pop\n        /* \"#utility.yul\":13878:13947   */\n      tag_460\n        /* \"#utility.yul\":13944:13945   */\n      0x00\n        /* \"#utility.yul\":13933:13942   */\n      dup4\n        /* \"#utility.yul\":13929:13946   */\n      add\n        /* \"#utility.yul\":13920:13926   */\n      dup9\n        /* \"#utility.yul\":13878:13947   */\n      tag_274\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13957:14027   */\n      tag_461\n        /* \"#utility.yul\":14023:14025   */\n      0x20\n        /* \"#utility.yul\":14012:14021   */\n      dup4\n        /* \"#utility.yul\":14008:14026   */\n      add\n        /* \"#utility.yul\":13999:14005   */\n      dup8\n        /* \"#utility.yul\":13957:14027   */\n      tag_274\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":14037:14109   */\n      tag_462\n        /* \"#utility.yul\":14105:14107   */\n      0x40\n        /* \"#utility.yul\":14094:14103   */\n      dup4\n        /* \"#utility.yul\":14090:14108   */\n      add\n        /* \"#utility.yul\":14081:14087   */\n      dup7\n        /* \"#utility.yul\":14037:14109   */\n      tag_249\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14119:14191   */\n      tag_463\n        /* \"#utility.yul\":14187:14189   */\n      0x60\n        /* \"#utility.yul\":14176:14185   */\n      dup4\n        /* \"#utility.yul\":14172:14190   */\n      add\n        /* \"#utility.yul\":14163:14169   */\n      dup6\n        /* \"#utility.yul\":14119:14191   */\n      tag_248\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14201:14270   */\n      tag_464\n        /* \"#utility.yul\":14265:14268   */\n      0x80\n        /* \"#utility.yul\":14254:14263   */\n      dup4\n        /* \"#utility.yul\":14250:14269   */\n      add\n        /* \"#utility.yul\":14241:14247   */\n      dup5\n        /* \"#utility.yul\":14201:14270   */\n      tag_251\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13629:14277   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14283:14463   */\n    tag_231:\n        /* \"#utility.yul\":14331:14408   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14328:14329   */\n      0x00\n        /* \"#utility.yul\":14321:14409   */\n      mstore\n        /* \"#utility.yul\":14428:14432   */\n      0x12\n        /* \"#utility.yul\":14425:14426   */\n      0x04\n        /* \"#utility.yul\":14418:14433   */\n      mstore\n        /* \"#utility.yul\":14452:14456   */\n      0x24\n        /* \"#utility.yul\":14449:14450   */\n      0x00\n        /* \"#utility.yul\":14442:14457   */\n      revert\n        /* \"#utility.yul\":14469:14640   */\n    tag_132:\n        /* \"#utility.yul\":14499:14500   */\n      0x00\n        /* \"#utility.yul\":14516:14534   */\n      tag_467\n        /* \"#utility.yul\":14532:14533   */\n      dup3\n        /* \"#utility.yul\":14516:14534   */\n      tag_250\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":14511:14534   */\n      swap2\n      pop\n        /* \"#utility.yul\":14548:14566   */\n      tag_468\n        /* \"#utility.yul\":14564:14565   */\n      dup4\n        /* \"#utility.yul\":14548:14566   */\n      tag_250\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":14543:14566   */\n      swap3\n      pop\n        /* \"#utility.yul\":14585:14586   */\n      dup3\n        /* \"#utility.yul\":14575:14610   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":14590:14608   */\n      tag_470\n      tag_231\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":14575:14610   */\n    tag_469:\n        /* \"#utility.yul\":14632:14633   */\n      dup3\n        /* \"#utility.yul\":14629:14630   */\n      dup3\n        /* \"#utility.yul\":14624:14634   */\n      smod\n        /* \"#utility.yul\":14619:14634   */\n      swap1\n      pop\n        /* \"#utility.yul\":14469:14640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14646:15028   */\n    tag_136:\n        /* \"#utility.yul\":14684:14685   */\n      0x00\n        /* \"#utility.yul\":14701:14719   */\n      tag_472\n        /* \"#utility.yul\":14717:14718   */\n      dup3\n        /* \"#utility.yul\":14701:14719   */\n      tag_250\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14696:14719   */\n      swap2\n      pop\n        /* \"#utility.yul\":14733:14751   */\n      tag_473\n        /* \"#utility.yul\":14749:14750   */\n      dup4\n        /* \"#utility.yul\":14733:14751   */\n      tag_250\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14728:14751   */\n      swap3\n      pop\n        /* \"#utility.yul\":14770:14771   */\n      dup3\n        /* \"#utility.yul\":14760:14795   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":14775:14793   */\n      tag_475\n      tag_231\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14760:14795   */\n    tag_474:\n        /* \"#utility.yul\":14961:14962   */\n      0x01\n        /* \"#utility.yul\":14958:14959   */\n      0x00\n        /* \"#utility.yul\":14954:14963   */\n      sub\n        /* \"#utility.yul\":14951:14952   */\n      dup4\n        /* \"#utility.yul\":14948:14964   */\n      eq\n        /* \"#utility.yul\":14867:14933   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":14864:14865   */\n      dup4\n        /* \"#utility.yul\":14861:14934   */\n      eq\n        /* \"#utility.yul\":14844:14974   */\n      and\n        /* \"#utility.yul\":14841:14997   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":14977:14995   */\n      tag_477\n      tag_277\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14841:14997   */\n    tag_476:\n        /* \"#utility.yul\":15020:15021   */\n      dup3\n        /* \"#utility.yul\":15017:15018   */\n      dup3\n        /* \"#utility.yul\":15012:15022   */\n      sdiv\n        /* \"#utility.yul\":15007:15022   */\n      swap1\n      pop\n        /* \"#utility.yul\":14646:15028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15034:15128   */\n    tag_284:\n        /* \"#utility.yul\":15067:15075   */\n      0x00\n        /* \"#utility.yul\":15115:15120   */\n      dup2\n        /* \"#utility.yul\":15111:15113   */\n      0x60\n        /* \"#utility.yul\":15107:15121   */\n      shl\n        /* \"#utility.yul\":15086:15121   */\n      swap1\n      pop\n        /* \"#utility.yul\":15034:15128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15134:15228   */\n    tag_285:\n        /* \"#utility.yul\":15173:15180   */\n      0x00\n        /* \"#utility.yul\":15202:15222   */\n      tag_480\n        /* \"#utility.yul\":15216:15221   */\n      dup3\n        /* \"#utility.yul\":15202:15222   */\n      tag_284\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":15191:15222   */\n      swap1\n      pop\n        /* \"#utility.yul\":15134:15228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15234:15334   */\n    tag_286:\n        /* \"#utility.yul\":15273:15280   */\n      0x00\n        /* \"#utility.yul\":15302:15328   */\n      tag_482\n        /* \"#utility.yul\":15322:15327   */\n      dup3\n        /* \"#utility.yul\":15302:15328   */\n      tag_285\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":15291:15328   */\n      swap1\n      pop\n        /* \"#utility.yul\":15234:15334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15340:15497   */\n    tag_287:\n        /* \"#utility.yul\":15445:15490   */\n      tag_484\n        /* \"#utility.yul\":15465:15489   */\n      tag_485\n        /* \"#utility.yul\":15483:15488   */\n      dup3\n        /* \"#utility.yul\":15465:15489   */\n      tag_245\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":15445:15490   */\n      tag_286\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":15440:15443   */\n      dup3\n        /* \"#utility.yul\":15433:15491   */\n      mstore\n        /* \"#utility.yul\":15340:15497   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15503:15599   */\n    tag_288:\n        /* \"#utility.yul\":15537:15545   */\n      0x00\n        /* \"#utility.yul\":15586:15591   */\n      dup2\n        /* \"#utility.yul\":15581:15584   */\n      0xe8\n        /* \"#utility.yul\":15577:15592   */\n      shl\n        /* \"#utility.yul\":15556:15592   */\n      swap1\n      pop\n        /* \"#utility.yul\":15503:15599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15605:15698   */\n    tag_289:\n        /* \"#utility.yul\":15642:15649   */\n      0x00\n        /* \"#utility.yul\":15671:15692   */\n      tag_488\n        /* \"#utility.yul\":15686:15691   */\n      dup3\n        /* \"#utility.yul\":15671:15692   */\n      tag_288\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":15660:15692   */\n      swap1\n      pop\n        /* \"#utility.yul\":15605:15698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15704:15853   */\n    tag_290:\n        /* \"#utility.yul\":15805:15846   */\n      tag_490\n        /* \"#utility.yul\":15823:15845   */\n      tag_491\n        /* \"#utility.yul\":15839:15844   */\n      dup3\n        /* \"#utility.yul\":15823:15845   */\n      tag_250\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":15805:15846   */\n      tag_289\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":15800:15803   */\n      dup3\n        /* \"#utility.yul\":15793:15847   */\n      mstore\n        /* \"#utility.yul\":15704:15853   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15859:16379   */\n    tag_140:\n        /* \"#utility.yul\":16019:16022   */\n      0x00\n        /* \"#utility.yul\":16034:16109   */\n      tag_493\n        /* \"#utility.yul\":16105:16108   */\n      dup3\n        /* \"#utility.yul\":16096:16102   */\n      dup7\n        /* \"#utility.yul\":16034:16109   */\n      tag_287\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":16134:16136   */\n      0x14\n        /* \"#utility.yul\":16129:16132   */\n      dup3\n        /* \"#utility.yul\":16125:16137   */\n      add\n        /* \"#utility.yul\":16118:16137   */\n      swap2\n      pop\n        /* \"#utility.yul\":16147:16218   */\n      tag_494\n        /* \"#utility.yul\":16214:16217   */\n      dup3\n        /* \"#utility.yul\":16205:16211   */\n      dup6\n        /* \"#utility.yul\":16147:16218   */\n      tag_290\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":16243:16244   */\n      0x03\n        /* \"#utility.yul\":16238:16241   */\n      dup3\n        /* \"#utility.yul\":16234:16245   */\n      add\n        /* \"#utility.yul\":16227:16245   */\n      swap2\n      pop\n        /* \"#utility.yul\":16255:16326   */\n      tag_495\n        /* \"#utility.yul\":16322:16325   */\n      dup3\n        /* \"#utility.yul\":16313:16319   */\n      dup5\n        /* \"#utility.yul\":16255:16326   */\n      tag_290\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16351:16352   */\n      0x03\n        /* \"#utility.yul\":16346:16349   */\n      dup3\n        /* \"#utility.yul\":16342:16353   */\n      add\n        /* \"#utility.yul\":16335:16353   */\n      swap2\n      pop\n        /* \"#utility.yul\":16370:16373   */\n      dup2\n        /* \"#utility.yul\":16363:16373   */\n      swap1\n      pop\n        /* \"#utility.yul\":15859:16379   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16385:16554   */\n    tag_291:\n        /* \"#utility.yul\":16469:16480   */\n      0x00\n        /* \"#utility.yul\":16503:16509   */\n      dup3\n        /* \"#utility.yul\":16498:16501   */\n      dup3\n        /* \"#utility.yul\":16491:16510   */\n      mstore\n        /* \"#utility.yul\":16543:16547   */\n      0x20\n        /* \"#utility.yul\":16538:16541   */\n      dup3\n        /* \"#utility.yul\":16534:16548   */\n      add\n        /* \"#utility.yul\":16519:16548   */\n      swap1\n      pop\n        /* \"#utility.yul\":16385:16554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16560:16711   */\n    tag_292:\n        /* \"#utility.yul\":16700:16703   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16696:16697   */\n      0x00\n        /* \"#utility.yul\":16688:16694   */\n      dup3\n        /* \"#utility.yul\":16684:16698   */\n      add\n        /* \"#utility.yul\":16677:16704   */\n      mstore\n        /* \"#utility.yul\":16560:16711   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16717:17082   */\n    tag_293:\n        /* \"#utility.yul\":16859:16862   */\n      0x00\n        /* \"#utility.yul\":16880:16946   */\n      tag_499\n        /* \"#utility.yul\":16944:16945   */\n      0x01\n        /* \"#utility.yul\":16939:16942   */\n      dup4\n        /* \"#utility.yul\":16880:16946   */\n      tag_291\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":16873:16946   */\n      swap2\n      pop\n        /* \"#utility.yul\":16955:17048   */\n      tag_500\n        /* \"#utility.yul\":17044:17047   */\n      dup3\n        /* \"#utility.yul\":16955:17048   */\n      tag_292\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":17073:17075   */\n      0x20\n        /* \"#utility.yul\":17068:17071   */\n      dup3\n        /* \"#utility.yul\":17064:17076   */\n      add\n        /* \"#utility.yul\":17057:17076   */\n      swap1\n      pop\n        /* \"#utility.yul\":16717:17082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17088:17507   */\n    tag_150:\n        /* \"#utility.yul\":17254:17258   */\n      0x00\n        /* \"#utility.yul\":17292:17294   */\n      0x20\n        /* \"#utility.yul\":17281:17290   */\n      dup3\n        /* \"#utility.yul\":17277:17295   */\n      add\n        /* \"#utility.yul\":17269:17295   */\n      swap1\n      pop\n        /* \"#utility.yul\":17341:17350   */\n      dup2\n        /* \"#utility.yul\":17335:17339   */\n      dup2\n        /* \"#utility.yul\":17331:17351   */\n      sub\n        /* \"#utility.yul\":17327:17328   */\n      0x00\n        /* \"#utility.yul\":17316:17325   */\n      dup4\n        /* \"#utility.yul\":17312:17329   */\n      add\n        /* \"#utility.yul\":17305:17352   */\n      mstore\n        /* \"#utility.yul\":17369:17500   */\n      tag_502\n        /* \"#utility.yul\":17495:17499   */\n      dup2\n        /* \"#utility.yul\":17369:17500   */\n      tag_293\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":17361:17500   */\n      swap1\n      pop\n        /* \"#utility.yul\":17088:17507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17513:17923   */\n    tag_155:\n        /* \"#utility.yul\":17553:17560   */\n      0x00\n        /* \"#utility.yul\":17576:17596   */\n      tag_504\n        /* \"#utility.yul\":17594:17595   */\n      dup3\n        /* \"#utility.yul\":17576:17596   */\n      tag_265\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":17571:17596   */\n      swap2\n      pop\n        /* \"#utility.yul\":17610:17630   */\n      tag_505\n        /* \"#utility.yul\":17628:17629   */\n      dup4\n        /* \"#utility.yul\":17610:17630   */\n      tag_265\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":17605:17630   */\n      swap3\n      pop\n        /* \"#utility.yul\":17665:17666   */\n      dup3\n        /* \"#utility.yul\":17662:17663   */\n      dup3\n        /* \"#utility.yul\":17658:17667   */\n      mul\n        /* \"#utility.yul\":17687:17717   */\n      tag_506\n        /* \"#utility.yul\":17705:17716   */\n      dup2\n        /* \"#utility.yul\":17687:17717   */\n      tag_265\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":17676:17717   */\n      swap2\n      pop\n        /* \"#utility.yul\":17866:17867   */\n      dup3\n        /* \"#utility.yul\":17857:17864   */\n      dup3\n        /* \"#utility.yul\":17853:17868   */\n      div\n        /* \"#utility.yul\":17850:17851   */\n      dup5\n        /* \"#utility.yul\":17847:17869   */\n      eq\n        /* \"#utility.yul\":17827:17828   */\n      dup4\n        /* \"#utility.yul\":17820:17829   */\n      iszero\n        /* \"#utility.yul\":17800:17883   */\n      or\n        /* \"#utility.yul\":17777:17916   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":17896:17914   */\n      tag_508\n      tag_277\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":17777:17916   */\n    tag_507:\n        /* \"#utility.yul\":17561:17923   */\n      pop\n        /* \"#utility.yul\":17513:17923   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17929:18114   */\n    tag_194:\n        /* \"#utility.yul\":17969:17970   */\n      0x00\n        /* \"#utility.yul\":17986:18006   */\n      tag_510\n        /* \"#utility.yul\":18004:18005   */\n      dup3\n        /* \"#utility.yul\":17986:18006   */\n      tag_265\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":17981:18006   */\n      swap2\n      pop\n        /* \"#utility.yul\":18020:18040   */\n      tag_511\n        /* \"#utility.yul\":18038:18039   */\n      dup4\n        /* \"#utility.yul\":18020:18040   */\n      tag_265\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18015:18040   */\n      swap3\n      pop\n        /* \"#utility.yul\":18059:18060   */\n      dup3\n        /* \"#utility.yul\":18049:18084   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":18064:18082   */\n      tag_513\n      tag_231\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":18049:18084   */\n    tag_512:\n        /* \"#utility.yul\":18106:18107   */\n      dup3\n        /* \"#utility.yul\":18103:18104   */\n      dup3\n        /* \"#utility.yul\":18099:18108   */\n      div\n        /* \"#utility.yul\":18094:18108   */\n      swap1\n      pop\n        /* \"#utility.yul\":17929:18114   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18120:18296   */\n    tag_196:\n        /* \"#utility.yul\":18152:18153   */\n      0x00\n        /* \"#utility.yul\":18169:18189   */\n      tag_515\n        /* \"#utility.yul\":18187:18188   */\n      dup3\n        /* \"#utility.yul\":18169:18189   */\n      tag_265\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18164:18189   */\n      swap2\n      pop\n        /* \"#utility.yul\":18203:18223   */\n      tag_516\n        /* \"#utility.yul\":18221:18222   */\n      dup4\n        /* \"#utility.yul\":18203:18223   */\n      tag_265\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":18198:18223   */\n      swap3\n      pop\n        /* \"#utility.yul\":18242:18243   */\n      dup3\n        /* \"#utility.yul\":18232:18267   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":18247:18265   */\n      tag_518\n      tag_231\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":18232:18267   */\n    tag_517:\n        /* \"#utility.yul\":18288:18289   */\n      dup3\n        /* \"#utility.yul\":18285:18286   */\n      dup3\n        /* \"#utility.yul\":18281:18290   */\n      mod\n        /* \"#utility.yul\":18276:18290   */\n      swap1\n      pop\n        /* \"#utility.yul\":18120:18296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18302:18537   */\n    tag_206:\n        /* \"#utility.yul\":18342:18346   */\n      0x00\n        /* \"#utility.yul\":18362:18382   */\n      tag_520\n        /* \"#utility.yul\":18380:18381   */\n      dup3\n        /* \"#utility.yul\":18362:18382   */\n      tag_244\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":18357:18382   */\n      swap2\n      pop\n        /* \"#utility.yul\":18396:18416   */\n      tag_521\n        /* \"#utility.yul\":18414:18415   */\n      dup4\n        /* \"#utility.yul\":18396:18416   */\n      tag_244\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":18391:18416   */\n      swap3\n      pop\n        /* \"#utility.yul\":18440:18441   */\n      dup3\n        /* \"#utility.yul\":18437:18438   */\n      dup3\n        /* \"#utility.yul\":18433:18442   */\n      sub\n        /* \"#utility.yul\":18425:18442   */\n      swap1\n      pop\n        /* \"#utility.yul\":18464:18506   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18458:18462   */\n      dup2\n        /* \"#utility.yul\":18455:18507   */\n      gt\n        /* \"#utility.yul\":18452:18530   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":18510:18528   */\n      tag_523\n      tag_277\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":18452:18530   */\n    tag_522:\n        /* \"#utility.yul\":18302:18537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18543:18665   */\n    tag_294:\n        /* \"#utility.yul\":18616:18640   */\n      tag_525\n        /* \"#utility.yul\":18634:18639   */\n      dup2\n        /* \"#utility.yul\":18616:18640   */\n      tag_265\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":18609:18614   */\n      dup2\n        /* \"#utility.yul\":18606:18641   */\n      eq\n        /* \"#utility.yul\":18596:18659   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":18655:18656   */\n      0x00\n        /* \"#utility.yul\":18652:18653   */\n      0x00\n        /* \"#utility.yul\":18645:18657   */\n      revert\n        /* \"#utility.yul\":18596:18659   */\n    tag_526:\n        /* \"#utility.yul\":18543:18665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18671:18814   */\n    tag_295:\n        /* \"#utility.yul\":18728:18733   */\n      0x00\n        /* \"#utility.yul\":18759:18765   */\n      dup2\n        /* \"#utility.yul\":18753:18766   */\n      mload\n        /* \"#utility.yul\":18744:18766   */\n      swap1\n      pop\n        /* \"#utility.yul\":18775:18808   */\n      tag_528\n        /* \"#utility.yul\":18802:18807   */\n      dup2\n        /* \"#utility.yul\":18775:18808   */\n      tag_294\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18671:18814   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18820:19171   */\n    tag_218:\n        /* \"#utility.yul\":18890:18896   */\n      0x00\n        /* \"#utility.yul\":18939:18941   */\n      0x20\n        /* \"#utility.yul\":18927:18936   */\n      dup3\n        /* \"#utility.yul\":18918:18925   */\n      dup5\n        /* \"#utility.yul\":18914:18937   */\n      sub\n        /* \"#utility.yul\":18910:18942   */\n      slt\n        /* \"#utility.yul\":18907:19026   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":18945:19024   */\n      tag_531\n      tag_253\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":18907:19026   */\n    tag_530:\n        /* \"#utility.yul\":19065:19066   */\n      0x00\n        /* \"#utility.yul\":19090:19154   */\n      tag_532\n        /* \"#utility.yul\":19146:19153   */\n      dup5\n        /* \"#utility.yul\":19137:19143   */\n      dup3\n        /* \"#utility.yul\":19126:19135   */\n      dup6\n        /* \"#utility.yul\":19122:19144   */\n      add\n        /* \"#utility.yul\":19090:19154   */\n      tag_295\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":19080:19154   */\n      swap2\n      pop\n        /* \"#utility.yul\":19036:19164   */\n      pop\n        /* \"#utility.yul\":18820:19171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19177:19410   */\n    tag_235:\n        /* \"#utility.yul\":19216:19219   */\n      0x00\n        /* \"#utility.yul\":19239:19263   */\n      tag_534\n        /* \"#utility.yul\":19257:19262   */\n      dup3\n        /* \"#utility.yul\":19239:19263   */\n      tag_265\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":19230:19263   */\n      swap2\n      pop\n        /* \"#utility.yul\":19285:19351   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19278:19283   */\n      dup3\n        /* \"#utility.yul\":19275:19352   */\n      sub\n        /* \"#utility.yul\":19272:19375   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":19355:19373   */\n      tag_536\n      tag_277\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":19272:19375   */\n    tag_535:\n        /* \"#utility.yul\":19402:19403   */\n      0x01\n        /* \"#utility.yul\":19395:19400   */\n      dup3\n        /* \"#utility.yul\":19391:19404   */\n      add\n        /* \"#utility.yul\":19384:19404   */\n      swap1\n      pop\n        /* \"#utility.yul\":19177:19410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19416:19583   */\n    tag_296:\n        /* \"#utility.yul\":19556:19575   */\n      0x5052424d6174683a206f766572666c6f77000000000000000000000000000000\n        /* \"#utility.yul\":19552:19553   */\n      0x00\n        /* \"#utility.yul\":19544:19550   */\n      dup3\n        /* \"#utility.yul\":19540:19554   */\n      add\n        /* \"#utility.yul\":19533:19576   */\n      mstore\n        /* \"#utility.yul\":19416:19583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19589:19955   */\n    tag_297:\n        /* \"#utility.yul\":19731:19734   */\n      0x00\n        /* \"#utility.yul\":19752:19819   */\n      tag_539\n        /* \"#utility.yul\":19816:19818   */\n      0x11\n        /* \"#utility.yul\":19811:19814   */\n      dup4\n        /* \"#utility.yul\":19752:19819   */\n      tag_291\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":19745:19819   */\n      swap2\n      pop\n        /* \"#utility.yul\":19828:19921   */\n      tag_540\n        /* \"#utility.yul\":19917:19920   */\n      dup3\n        /* \"#utility.yul\":19828:19921   */\n      tag_296\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":19946:19948   */\n      0x20\n        /* \"#utility.yul\":19941:19944   */\n      dup3\n        /* \"#utility.yul\":19937:19949   */\n      add\n        /* \"#utility.yul\":19930:19949   */\n      swap1\n      pop\n        /* \"#utility.yul\":19589:19955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19961:20380   */\n    tag_243:\n        /* \"#utility.yul\":20127:20131   */\n      0x00\n        /* \"#utility.yul\":20165:20167   */\n      0x20\n        /* \"#utility.yul\":20154:20163   */\n      dup3\n        /* \"#utility.yul\":20150:20168   */\n      add\n        /* \"#utility.yul\":20142:20168   */\n      swap1\n      pop\n        /* \"#utility.yul\":20214:20223   */\n      dup2\n        /* \"#utility.yul\":20208:20212   */\n      dup2\n        /* \"#utility.yul\":20204:20224   */\n      sub\n        /* \"#utility.yul\":20200:20201   */\n      0x00\n        /* \"#utility.yul\":20189:20198   */\n      dup4\n        /* \"#utility.yul\":20185:20202   */\n      add\n        /* \"#utility.yul\":20178:20225   */\n      mstore\n        /* \"#utility.yul\":20242:20373   */\n      tag_542\n        /* \"#utility.yul\":20368:20372   */\n      dup2\n        /* \"#utility.yul\":20242:20373   */\n      tag_297\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":20234:20373   */\n      swap1\n      pop\n        /* \"#utility.yul\":19961:20380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122060e143dbee726d862ee50585d88c46e7efe1dd246a4afdb6a1ba92a45a95d46d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_102": {
									"entryPoint": null,
									"id": 102,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2306:13",
										"nodeType": "YulBlock",
										"src": "0:2306:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "888:79:13",
													"nodeType": "YulBlock",
													"src": "888:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "945:16:13",
																"nodeType": "YulBlock",
																"src": "945:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:13",
																					"nodeType": "YulLiteral",
																					"src": "954:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "957:1:13",
																					"nodeType": "YulLiteral",
																					"src": "957:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "947:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:13"
																			},
																			"nativeSrc": "947:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "947:12:13"
																		},
																		"nativeSrc": "947:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "947:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "911:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "911:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "936:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "936:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "918:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "918:17:13"
																				},
																				"nativeSrc": "918:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "918:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "908:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "908:2:13"
																		},
																		"nativeSrc": "908:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "908:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "901:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:13"
																},
																"nativeSrc": "901:43:13",
																"nodeType": "YulFunctionCall",
																"src": "901:43:13"
															},
															"nativeSrc": "898:63:13",
															"nodeType": "YulIf",
															"src": "898:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "845:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "881:5:13",
														"nodeType": "YulTypedName",
														"src": "881:5:13",
														"type": ""
													}
												],
												"src": "845:122:13"
											},
											{
												"body": {
													"nativeSrc": "1036:80:13",
													"nodeType": "YulBlock",
													"src": "1036:80:13",
													"statements": [
														{
															"nativeSrc": "1046:22:13",
															"nodeType": "YulAssignment",
															"src": "1046:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1061:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1061:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1055:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1055:5:13"
																},
																"nativeSrc": "1055:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1055:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1046:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1046:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1104:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1104:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "1077:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1077:26:13"
																},
																"nativeSrc": "1077:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1077:33:13"
															},
															"nativeSrc": "1077:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1077:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "973:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1014:6:13",
														"nodeType": "YulTypedName",
														"src": "1014:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1022:3:13",
														"nodeType": "YulTypedName",
														"src": "1022:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1030:5:13",
														"nodeType": "YulTypedName",
														"src": "1030:5:13",
														"type": ""
													}
												],
												"src": "973:143:13"
											},
											{
												"body": {
													"nativeSrc": "1165:47:13",
													"nodeType": "YulBlock",
													"src": "1165:47:13",
													"statements": [
														{
															"nativeSrc": "1175:31:13",
															"nodeType": "YulAssignment",
															"src": "1175:31:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1197:1:13",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1200:5:13"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1186:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "1186:10:13"
																},
																"nativeSrc": "1186:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1186:20:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1175:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1175:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "1122:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1147:5:13",
														"nodeType": "YulTypedName",
														"src": "1147:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1157:7:13",
														"nodeType": "YulTypedName",
														"src": "1157:7:13",
														"type": ""
													}
												],
												"src": "1122:90:13"
											},
											{
												"body": {
													"nativeSrc": "1259:77:13",
													"nodeType": "YulBlock",
													"src": "1259:77:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1314:16:13",
																"nodeType": "YulBlock",
																"src": "1314:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1323:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1323:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1326:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1326:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1316:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1316:6:13"
																			},
																			"nativeSrc": "1316:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1316:12:13"
																		},
																		"nativeSrc": "1316:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1316:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1282:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1282:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1305:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1305:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "1289:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "1289:15:13"
																				},
																				"nativeSrc": "1289:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1289:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1279:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1279:2:13"
																		},
																		"nativeSrc": "1279:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1279:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1272:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:13"
																},
																"nativeSrc": "1272:41:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:41:13"
															},
															"nativeSrc": "1269:61:13",
															"nodeType": "YulIf",
															"src": "1269:61:13"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "1218:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1252:5:13",
														"nodeType": "YulTypedName",
														"src": "1252:5:13",
														"type": ""
													}
												],
												"src": "1218:118:13"
											},
											{
												"body": {
													"nativeSrc": "1403:78:13",
													"nodeType": "YulBlock",
													"src": "1403:78:13",
													"statements": [
														{
															"nativeSrc": "1413:22:13",
															"nodeType": "YulAssignment",
															"src": "1413:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1428:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1428:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1422:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1422:5:13"
																},
																"nativeSrc": "1422:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1422:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1413:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1413:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1469:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1469:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "1444:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "1444:24:13"
																},
																"nativeSrc": "1444:31:13",
																"nodeType": "YulFunctionCall",
																"src": "1444:31:13"
															},
															"nativeSrc": "1444:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "1444:31:13"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "1342:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1381:6:13",
														"nodeType": "YulTypedName",
														"src": "1381:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1389:3:13",
														"nodeType": "YulTypedName",
														"src": "1389:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1397:5:13",
														"nodeType": "YulTypedName",
														"src": "1397:5:13",
														"type": ""
													}
												],
												"src": "1342:139:13"
											},
											{
												"body": {
													"nativeSrc": "1613:690:13",
													"nodeType": "YulBlock",
													"src": "1613:690:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1660:83:13",
																"nodeType": "YulBlock",
																"src": "1660:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1662:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1662:77:13"
																			},
																			"nativeSrc": "1662:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1662:79:13"
																		},
																		"nativeSrc": "1662:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1634:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1634:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1643:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1643:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1630:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:13"
																		},
																		"nativeSrc": "1630:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1655:3:13",
																		"nodeType": "YulLiteral",
																		"src": "1655:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1626:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1626:3:13"
																},
																"nativeSrc": "1626:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1626:33:13"
															},
															"nativeSrc": "1623:120:13",
															"nodeType": "YulIf",
															"src": "1623:120:13"
														},
														{
															"nativeSrc": "1753:128:13",
															"nodeType": "YulBlock",
															"src": "1753:128:13",
															"statements": [
																{
																	"nativeSrc": "1768:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1768:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1782:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1772:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1772:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1797:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1797:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1843:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1843:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1854:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1854:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1839:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1839:3:13"
																				},
																				"nativeSrc": "1839:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1839:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1863:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1863:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1807:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1807:31:13"
																		},
																		"nativeSrc": "1807:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1807:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1797:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1797:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1891:129:13",
															"nodeType": "YulBlock",
															"src": "1891:129:13",
															"statements": [
																{
																	"nativeSrc": "1906:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1906:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1920:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1920:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1910:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1910:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1936:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1936:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1982:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1982:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1993:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1993:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1978:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1978:3:13"
																				},
																				"nativeSrc": "1978:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1978:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2002:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2002:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1946:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1946:31:13"
																		},
																		"nativeSrc": "1946:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1946:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1936:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1936:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2030:129:13",
															"nodeType": "YulBlock",
															"src": "2030:129:13",
															"statements": [
																{
																	"nativeSrc": "2045:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2045:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2059:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2049:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2049:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2075:74:13",
																	"nodeType": "YulAssignment",
																	"src": "2075:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2121:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2121:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2132:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2132:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2117:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2117:3:13"
																				},
																				"nativeSrc": "2117:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2117:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2141:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2141:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "2085:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "2085:31:13"
																		},
																		"nativeSrc": "2085:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2075:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2075:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2169:127:13",
															"nodeType": "YulBlock",
															"src": "2169:127:13",
															"statements": [
																{
																	"nativeSrc": "2184:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2184:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2198:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2188:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2188:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2214:72:13",
																	"nodeType": "YulAssignment",
																	"src": "2214:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2258:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2258:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2269:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2269:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2254:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2254:3:13"
																				},
																				"nativeSrc": "2254:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2254:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2278:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2278:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "2224:29:13",
																			"nodeType": "YulIdentifier",
																			"src": "2224:29:13"
																		},
																		"nativeSrc": "2224:62:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2224:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2214:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2214:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory",
												"nativeSrc": "1487:816:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1559:9:13",
														"nodeType": "YulTypedName",
														"src": "1559:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1570:7:13",
														"nodeType": "YulTypedName",
														"src": "1570:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1582:6:13",
														"nodeType": "YulTypedName",
														"src": "1582:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1590:6:13",
														"nodeType": "YulTypedName",
														"src": "1590:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1598:6:13",
														"nodeType": "YulTypedName",
														"src": "1598:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1606:6:13",
														"nodeType": "YulTypedName",
														"src": "1606:6:13",
														"type": ""
													}
												],
												"src": "1487:816:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b506040516123d73803806123d7833981810160405281019061003191906101fd565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260020b8152505f5f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548162ffffff021916908360020b62ffffff16021790555090505050505050610261565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61016c82610143565b9050919050565b61017c81610162565b8114610186575f5ffd5b50565b5f8151905061019781610173565b92915050565b6101a681610143565b81146101b0575f5ffd5b50565b5f815190506101c18161019d565b92915050565b5f8160020b9050919050565b6101dc816101c7565b81146101e6575f5ffd5b50565b5f815190506101f7816101d3565b92915050565b5f5f5f5f608085870312156102155761021461013f565b5b5f61022287828801610189565b945050602061023387828801610189565b9350506040610244878288016101b3565b9250506060610255878288016101e9565b91505092959194509250565b60805160a0516121406102975f395f8181610720015261134f01525f8181610203015281816107f901526112b101526121405ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063514ea4bf11610064578063514ea4bf146101215780635339c29614610151578063d21220a714610181578063e35473351461019f578063f30dba93146101d057610091565b80630dfe1681146100955780631a686502146100b35780633850c7bd146100d15780633c8a7d8d146100f0575b5f5ffd5b61009d610201565b6040516100aa91906115ce565b60405180910390f35b6100bb610225565b6040516100c89190611611565b60405180910390f35b6100d9610246565b6040516100e7929190611654565b60405180910390f35b61010a60048036038101906101059190611762565b610281565b604051610118929190611810565b60405180910390f35b61013b6004803603810190610136919061186a565b6106d4565b6040516101489190611611565b60405180910390f35b61016b600480360381019061016691906118cb565b610709565b60405161017891906118f6565b60405180910390f35b61018961071e565b60405161019691906115ce565b60405180910390f35b6101b960048036038101906101b4919061190f565b610742565b6040516101c7929190611984565b60405180910390f35b6101ea60048036038101906101e591906119ab565b610a26565b6040516101f89291906119f0565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60015f9054906101000a90046fffffffffffffffffffffffffffffffff1681565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460020b905082565b5f5f8560020b8760020b1215806102bd57507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8760020b125b806102f657507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186102ed90611a44565b60020b8660020b135b1561032d576040517f064847d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f856fffffffffffffffffffffffffffffffff1603610378576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61038f88876002610a6d9092919063ffffffff16565b90505f6103a888886002610a6d9092919063ffffffff16565b905081156103c8576103c78960016003610b649092919063ffffffff16565b5b80156103e6576103e58860016003610b649092919063ffffffff16565b5b5f6103ff8b8b8b6004610bcd909392919063ffffffff16565b90506104148882610c1290919063ffffffff16565b5f5f6040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460020b60020b60020b8152505090506104a9815f01516104a38c610c82565b8b611136565b95506104c1815f01516104bb8d610c82565b8b61121a565b94508860015f8282829054906101000a90046fffffffffffffffffffffffffffffffff166104ef9190611a8a565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505f5f5f88111561053a576105376112ae565b91505b5f87111561054d5761054a61134c565b90505b3373ffffffffffffffffffffffffffffffffffffffff1663d348799789898d8d6040518563ffffffff1660e01b815260040161058c9493929190611b27565b5f604051808303815f87803b1580156105a3575f5ffd5b505af11580156105b5573d5f5f3e3d5ffd5b505050505f881180156105d957506105cb6112ae565b88836105d79190611b65565b115b15610610576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f87118015610630575061062261134c565b878261062e9190611b65565b115b15610667576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b60020b8d60020b8f73ffffffffffffffffffffffffffffffffffffffff167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338f8d8d6040516106bb9493929190611b98565b60405180910390a4505050505050965096945050505050565b6004602052805f5260405f205f91509050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff16905081565b6003602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f62014cc090505f6c46bd046408013d67ed5d406b2d90507fffffffffffffffffffffffffffffffffffffffffffffffffffe22b3b9e50c0f49350680246ddf97976680000925081815f5f0160145f5f015f8491906101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508391906101000a81548162ffffff021916908360020b62ffffff16021790555050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb888661083e90611bdb565b6040518363ffffffff1660e01b815260040161085b929190611c21565b6020604051808303815f875af1158015610877573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089b9190611c72565b505f6108a561134c565b90503373ffffffffffffffffffffffffffffffffffffffff1663fa461e3386868a8a6040518563ffffffff1660e01b81526004016108e69493929190611c9d565b5f604051808303815f87803b1580156108fd575f5ffd5b505af115801561090f573d5f5f3e3d5ffd5b5050505061091b61134c565b84826109279190611b65565b101561095f576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca6787875f5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a90046fffffffffffffffffffffffffffffffff165f5f0160149054906101000a900460020b604051610a13959493929190611cdb565b60405180910390a3505050935093915050565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a90046fffffffffffffffffffffffffffffffff16905082565b5f5f845f8560020b60020b81526020019081526020015f2090505f815f0160019054906101000a90046fffffffffffffffffffffffffffffffff1690505f8482610ab79190611a8a565b90505f826fffffffffffffffffffffffffffffffff161415155f826fffffffffffffffffffffffffffffffff16141515141593505f826fffffffffffffffffffffffffffffffff1603610b20576001835f015f6101000a81548160ff0219169083151502179055505b80835f0160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050509392505050565b5f8183610b719190611d59565b60020b14610b7d575f5ffd5b5f5f610b938385610b8e9190611d89565b6113ea565b915091505f8160ff166001901b905080865f8560010b60010b81526020019081526020015f205f8282541892505081905550505050505050565b5f845f858585604051602001610be593929190611e6a565b6040516020818303038152906040528051906020012081526020019081526020015f209050949350505050565b5f825f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690505f8282610c419190611a8a565b905080845f015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050565b5f5f5f8360020b12610c97578260020b610ca5565b8260020b610ca490611bdb565b5b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618610cd190611a44565b62ffffff16811115610d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0f90611f00565b60405180910390fd5b5f5f6001831603610d3a57700100000000000000000000000000000000610d4c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690505f6002831614610d8e5760806ffff97272373d413259a46990580e213a82610d899190611f1e565b901c90505b5f6004831614610dbb5760806ffff2e50f5f656932ef12357cf3c7fdcc82610db69190611f1e565b901c90505b5f6008831614610de85760806fffe5caca7e10e4e61c3624eaa0941cd082610de39190611f1e565b901c90505b5f6010831614610e155760806fffcb9843d60f6159c9db58835c92664482610e109190611f1e565b901c90505b5f6020831614610e425760806fff973b41fa98c081472e6896dfb254c082610e3d9190611f1e565b901c90505b5f6040831614610e6f5760806fff2ea16466c96a3843ec78b326b5286182610e6a9190611f1e565b901c90505b5f6080831614610e9c5760806ffe5dee046a99a2a811c461f1969c305382610e979190611f1e565b901c90505b5f610100831614610eca5760806ffcbe86c7900a88aedcffc83b479aa3a482610ec59190611f1e565b901c90505b5f610200831614610ef85760806ff987a7253ac413176f2b074cf7815e5482610ef39190611f1e565b901c90505b5f610400831614610f265760806ff3392b0822b70005940c7a398e4b70f382610f219190611f1e565b901c90505b5f610800831614610f545760806fe7159475a2c29b7443b29c7fa6e889d982610f4f9190611f1e565b901c90505b5f611000831614610f825760806fd097f3bdfd2022b8845ad8f792aa582582610f7d9190611f1e565b901c90505b5f612000831614610fb05760806fa9f746462d870fdf8a65dc1f90e061e582610fab9190611f1e565b901c90505b5f614000831614610fde5760806f70d869a156d2a1b890bb3df62baf32f782610fd99190611f1e565b901c90505b5f61800083161461100c5760806f31be135f97d08fd981231505542fcfa6826110079190611f1e565b901c90505b5f6201000083161461103b5760806f09aa508b5b7a84e1c677de54f3e99bc9826110369190611f1e565b901c90505b5f620200008316146110695760806e5d6af8dedb81196699c329225ee604826110649190611f1e565b901c90505b5f620400008316146110965760806d2216e584f5fa1ea926041bedfe98826110919190611f1e565b901c90505b5f620800008316146110c15760806b048a170391f7dc42444e8fa2826110bc9190611f1e565b901c90505b5f8460020b13156110fb57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6110f89190611f5f565b90505b5f6401000000008261110d9190611f8f565b1461111957600161111b565b5f5b60ff16602082901c61112d9190611b65565b92505050919050565b5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561117657828480945081955050505b5f8473ffffffffffffffffffffffffffffffffffffffff1611611197575f5ffd5b6112116111f5606060ff16846fffffffffffffffffffffffffffffffff16901b86866111c39190611fbf565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1661140b565b8573ffffffffffffffffffffffffffffffffffffffff16611473565b90509392505050565b5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561125a57828480945081955050505b6112a5826fffffffffffffffffffffffffffffffff16858561127c9190611fbf565b73ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000061140b565b90509392505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161130891906115ce565b602060405180830381865afa158015611323573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113479190612030565b905090565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113a691906115ce565b602060405180830381865afa1580156113c1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113e59190612030565b905090565b5f5f60088360020b901d9150610100836114049190611d59565b9050915091565b5f611417848484611485565b90505f828061142957611428611d2c565b5b848609111561146c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811061145d575f5ffd5b80806114689061205b565b9150505b9392505050565b5f5f8284061182840401905092915050565b5f5f5f5f198587098587029250828110838203039150505f81036114bd578382816114b3576114b2611d2c565b5b0492505050611588565b8084116114ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f6906120ec565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115b88261158f565b9050919050565b6115c8816115ae565b82525050565b5f6020820190506115e15f8301846115bf565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b61160b816115e7565b82525050565b5f6020820190506116245f830184611602565b92915050565b6116338161158f565b82525050565b5f8160020b9050919050565b61164e81611639565b82525050565b5f6040820190506116675f83018561162a565b6116746020830184611645565b9392505050565b5f5ffd5b5f5ffd5b61168c816115ae565b8114611696575f5ffd5b50565b5f813590506116a781611683565b92915050565b6116b681611639565b81146116c0575f5ffd5b50565b5f813590506116d1816116ad565b92915050565b6116e0816115e7565b81146116ea575f5ffd5b50565b5f813590506116fb816116d7565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261172257611721611701565b5b8235905067ffffffffffffffff81111561173f5761173e611705565b5b60208301915083600182028301111561175b5761175a611709565b5b9250929050565b5f5f5f5f5f5f60a0878903121561177c5761177b61167b565b5b5f61178989828a01611699565b965050602061179a89828a016116c3565b95505060406117ab89828a016116c3565b94505060606117bc89828a016116ed565b935050608087013567ffffffffffffffff8111156117dd576117dc61167f565b5b6117e989828a0161170d565b92509250509295509295509295565b5f819050919050565b61180a816117f8565b82525050565b5f6040820190506118235f830185611801565b6118306020830184611801565b9392505050565b5f819050919050565b61184981611837565b8114611853575f5ffd5b50565b5f8135905061186481611840565b92915050565b5f6020828403121561187f5761187e61167b565b5b5f61188c84828501611856565b91505092915050565b5f8160010b9050919050565b6118aa81611895565b81146118b4575f5ffd5b50565b5f813590506118c5816118a1565b92915050565b5f602082840312156118e0576118df61167b565b5b5f6118ed848285016118b7565b91505092915050565b5f6020820190506119095f830184611801565b92915050565b5f5f5f604084860312156119265761192561167b565b5b5f61193386828701611699565b935050602084013567ffffffffffffffff8111156119545761195361167f565b5b6119608682870161170d565b92509250509250925092565b5f819050919050565b61197e8161196c565b82525050565b5f6040820190506119975f830185611975565b6119a46020830184611975565b9392505050565b5f602082840312156119c0576119bf61167b565b5b5f6119cd848285016116c3565b91505092915050565b5f8115159050919050565b6119ea816119d6565b82525050565b5f604082019050611a035f8301856119e1565b611a106020830184611602565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a4e82611639565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008203611a8057611a7f611a17565b5b815f039050919050565b5f611a94826115e7565b9150611a9f836115e7565b925082820190506fffffffffffffffffffffffffffffffff811115611ac757611ac6611a17565b5b92915050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f611b068385611acd565b9350611b13838584611add565b611b1c83611aeb565b840190509392505050565b5f606082019050611b3a5f830187611801565b611b476020830186611801565b8181036040830152611b5a818486611afb565b905095945050505050565b5f611b6f826117f8565b9150611b7a836117f8565b9250828201905080821115611b9257611b91611a17565b5b92915050565b5f608082019050611bab5f8301876115bf565b611bb86020830186611602565b611bc56040830185611801565b611bd26060830184611801565b95945050505050565b5f611be58261196c565b91507f80000000000000000000000000000000000000000000000000000000000000008203611c1757611c16611a17565b5b815f039050919050565b5f604082019050611c345f8301856115bf565b611c416020830184611801565b9392505050565b611c51816119d6565b8114611c5b575f5ffd5b50565b5f81519050611c6c81611c48565b92915050565b5f60208284031215611c8757611c8661167b565b5b5f611c9484828501611c5e565b91505092915050565b5f606082019050611cb05f830187611975565b611cbd6020830186611975565b8181036040830152611cd0818486611afb565b905095945050505050565b5f60a082019050611cee5f830188611975565b611cfb6020830187611975565b611d08604083018661162a565b611d156060830185611602565b611d226080830184611645565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611d6382611639565b9150611d6e83611639565b925082611d7e57611d7d611d2c565b5b828207905092915050565b5f611d9382611639565b9150611d9e83611639565b925082611dae57611dad611d2c565b5b60015f0383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000083141615611de657611de5611a17565b5b828205905092915050565b5f8160601b9050919050565b5f611e0782611df1565b9050919050565b5f611e1882611dfd565b9050919050565b611e30611e2b826115ae565b611e0e565b82525050565b5f8160e81b9050919050565b5f611e4c82611e36565b9050919050565b611e64611e5f82611639565b611e42565b82525050565b5f611e758286611e1f565b601482019150611e858285611e53565b600382019150611e958284611e53565b600382019150819050949350505050565b5f82825260208201905092915050565b7f54000000000000000000000000000000000000000000000000000000000000005f82015250565b5f611eea600183611ea6565b9150611ef582611eb6565b602082019050919050565b5f6020820190508181035f830152611f1781611ede565b9050919050565b5f611f28826117f8565b9150611f33836117f8565b9250828202611f41816117f8565b91508282048414831517611f5857611f57611a17565b5b5092915050565b5f611f69826117f8565b9150611f74836117f8565b925082611f8457611f83611d2c565b5b828204905092915050565b5f611f99826117f8565b9150611fa4836117f8565b925082611fb457611fb3611d2c565b5b828206905092915050565b5f611fc98261158f565b9150611fd48361158f565b9250828203905073ffffffffffffffffffffffffffffffffffffffff81111561200057611fff611a17565b5b92915050565b61200f816117f8565b8114612019575f5ffd5b50565b5f8151905061202a81612006565b92915050565b5f602082840312156120455761204461167b565b5b5f6120528482850161201c565b91505092915050565b5f612065826117f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361209757612096611a17565b5b600182019050919050565b7f5052424d6174683a206f766572666c6f770000000000000000000000000000005f82015250565b5f6120d6601183611ea6565b91506120e1826120a2565b602082019050919050565b5f6020820190508181035f830152612103816120ca565b905091905056fea264697066735822122060e143dbee726d862ee50585d88c46e7efe1dd246a4afdb6a1ba92a45a95d46d64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x23D7 CODESIZE SUB DUP1 PUSH2 0x23D7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1FD JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP PUSH0 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP PUSH2 0x261 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C DUP3 PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x162 JUMP JUMPDEST DUP2 EQ PUSH2 0x186 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x197 DUP2 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x143 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C1 DUP2 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x1C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F7 DUP2 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x215 JUMPI PUSH2 0x214 PUSH2 0x13F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222 DUP8 DUP3 DUP9 ADD PUSH2 0x189 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x233 DUP8 DUP3 DUP9 ADD PUSH2 0x189 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x244 DUP8 DUP3 DUP9 ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x255 DUP8 DUP3 DUP9 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2140 PUSH2 0x297 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x720 ADD MSTORE PUSH2 0x134F ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x203 ADD MSTORE DUP2 DUP2 PUSH2 0x7F9 ADD MSTORE PUSH2 0x12B1 ADD MSTORE PUSH2 0x2140 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x514EA4BF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x514EA4BF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x5339C296 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xE3547335 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF30DBA93 EQ PUSH2 0x1D0 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x3850C7BD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3C8A7D8D EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP3 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP3 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP3 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT ISZERO DUP1 PUSH2 0x2BD JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST DUP1 PUSH2 0x2F6 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x2ED SWAP1 PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH32 0x64847D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1007454800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x38F DUP9 DUP8 PUSH1 0x2 PUSH2 0xA6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3A8 DUP9 DUP9 PUSH1 0x2 PUSH2 0xA6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C7 DUP10 PUSH1 0x1 PUSH1 0x3 PUSH2 0xB64 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E5 DUP9 PUSH1 0x1 PUSH1 0x3 PUSH2 0xB64 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FF DUP12 DUP12 DUP12 PUSH1 0x4 PUSH2 0xBCD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP9 DUP3 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x4A9 DUP2 PUSH0 ADD MLOAD PUSH2 0x4A3 DUP13 PUSH2 0xC82 JUMP JUMPDEST DUP12 PUSH2 0x1136 JUMP JUMPDEST SWAP6 POP PUSH2 0x4C1 DUP2 PUSH0 ADD MLOAD PUSH2 0x4BB DUP14 PUSH2 0xC82 JUMP JUMPDEST DUP12 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP DUP9 PUSH1 0x1 PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 PUSH0 DUP9 GT ISZERO PUSH2 0x53A JUMPI PUSH2 0x537 PUSH2 0x12AE JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP8 GT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54A PUSH2 0x134C JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD3487997 DUP10 DUP10 DUP14 DUP14 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP9 GT DUP1 ISZERO PUSH2 0x5D9 JUMPI POP PUSH2 0x5CB PUSH2 0x12AE JUMP JUMPDEST DUP9 DUP4 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP8 GT DUP1 ISZERO PUSH2 0x630 JUMPI POP PUSH2 0x622 PUSH2 0x134C JUMP JUMPDEST DUP8 DUP3 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE CALLER DUP16 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x6BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH3 0x14CC0 SWAP1 POP PUSH0 PUSH13 0x46BD046408013D67ED5D406B2D SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE22B3B9E50C0F4 SWAP4 POP PUSH9 0x246DDF97976680000 SWAP3 POP DUP2 DUP2 PUSH0 PUSH0 ADD PUSH1 0x14 PUSH0 PUSH0 ADD PUSH0 DUP5 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP9 DUP7 PUSH2 0x83E SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP3 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST POP PUSH0 PUSH2 0x8A5 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFA461E33 DUP7 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x91B PUSH2 0x134C JUMP JUMPDEST DUP5 DUP3 PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST LT ISZERO PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67 DUP8 DUP8 PUSH0 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x40 MLOAD PUSH2 0xA13 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP5 DUP3 PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO EQ ISZERO SWAP4 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB20 JUMPI PUSH1 0x1 DUP4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP4 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xB71 SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND EQ PUSH2 0xB7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH2 0xB93 DUP4 DUP6 PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH2 0x13EA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL SWAP1 POP DUP1 DUP7 PUSH0 DUP6 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD XOR SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0xC97 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0xCA5 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0xCA4 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0xCD1 SWAP1 PUSH2 0x1A44 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0F SWAP1 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x1 DUP4 AND SUB PUSH2 0xD3A JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0xD4C JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 DUP4 AND EQ PUSH2 0xD8E JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 PUSH2 0xD89 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x4 DUP4 AND EQ PUSH2 0xDBB JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x8 DUP4 AND EQ PUSH2 0xDE8 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x10 DUP4 AND EQ PUSH2 0xE15 JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x20 DUP4 AND EQ PUSH2 0xE42 JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 PUSH2 0xE3D SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 DUP4 AND EQ PUSH2 0xE6F JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x80 DUP4 AND EQ PUSH2 0xE9C JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 PUSH2 0xE97 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x100 DUP4 AND EQ PUSH2 0xECA JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 PUSH2 0xEC5 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x200 DUP4 AND EQ PUSH2 0xEF8 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x400 DUP4 AND EQ PUSH2 0xF26 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x800 DUP4 AND EQ PUSH2 0xF54 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0xF82 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0xFB0 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0xFDE JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0x100C JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 PUSH2 0x1007 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0x103B JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 PUSH2 0x1036 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0x1069 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 PUSH2 0x1064 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0x1096 JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 PUSH2 0x1091 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0x10C1 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x10FB JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x10F8 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH5 0x100000000 DUP3 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST EQ PUSH2 0x1119 JUMPI PUSH1 0x1 PUSH2 0x111B JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0x112D SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1176 JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1197 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1211 PUSH2 0x11F5 PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL DUP7 DUP7 PUSH2 0x11C3 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140B JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1473 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x125A JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH2 0x12A5 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1323 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A6 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13C1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 DUP4 PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP2 POP PUSH2 0x100 DUP4 PUSH2 0x1404 SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x1417 DUP5 DUP5 DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP1 PUSH2 0x1429 JUMPI PUSH2 0x1428 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x146C JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT PUSH2 0x145D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1468 SWAP1 PUSH2 0x205B JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP5 MOD GT DUP3 DUP5 DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH0 DUP2 SUB PUSH2 0x14BD JUMPI DUP4 DUP3 DUP2 PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1588 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F6 SWAP1 PUSH2 0x20EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15B8 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C8 DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160B DUP2 PUSH2 0x15E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1624 PUSH0 DUP4 ADD DUP5 PUSH2 0x1602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1633 DUP2 PUSH2 0x158F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164E DUP2 PUSH2 0x1639 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1667 PUSH0 DUP4 ADD DUP6 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x1674 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x168C DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP2 EQ PUSH2 0x1696 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A7 DUP2 PUSH2 0x1683 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B6 DUP2 PUSH2 0x1639 JUMP JUMPDEST DUP2 EQ PUSH2 0x16C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D1 DUP2 PUSH2 0x16AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E0 DUP2 PUSH2 0x15E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x16EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16FB DUP2 PUSH2 0x16D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1722 JUMPI PUSH2 0x1721 PUSH2 0x1701 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x173F JUMPI PUSH2 0x173E PUSH2 0x1705 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x1709 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x177C JUMPI PUSH2 0x177B PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1789 DUP10 DUP3 DUP11 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x179A DUP10 DUP3 DUP11 ADD PUSH2 0x16C3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x17AB DUP10 DUP3 DUP11 ADD PUSH2 0x16C3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x17BC DUP10 DUP3 DUP11 ADD PUSH2 0x16ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17DD JUMPI PUSH2 0x17DC PUSH2 0x167F JUMP JUMPDEST JUMPDEST PUSH2 0x17E9 DUP10 DUP3 DUP11 ADD PUSH2 0x170D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180A DUP2 PUSH2 0x17F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1823 PUSH0 DUP4 ADD DUP6 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x1830 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1849 DUP2 PUSH2 0x1837 JUMP JUMPDEST DUP2 EQ PUSH2 0x1853 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1864 DUP2 PUSH2 0x1840 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187E PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188C DUP5 DUP3 DUP6 ADD PUSH2 0x1856 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AA DUP2 PUSH2 0x1895 JUMP JUMPDEST DUP2 EQ PUSH2 0x18B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18C5 DUP2 PUSH2 0x18A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E0 JUMPI PUSH2 0x18DF PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18ED DUP5 DUP3 DUP6 ADD PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1909 PUSH0 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1926 JUMPI PUSH2 0x1925 PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1933 DUP7 DUP3 DUP8 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1954 JUMPI PUSH2 0x1953 PUSH2 0x167F JUMP JUMPDEST JUMPDEST PUSH2 0x1960 DUP7 DUP3 DUP8 ADD PUSH2 0x170D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197E DUP2 PUSH2 0x196C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1997 PUSH0 DUP4 ADD DUP6 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x19A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1975 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CD DUP5 DUP3 DUP6 ADD PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x19D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A03 PUSH0 DUP4 ADD DUP6 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x1A10 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1602 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4E DUP3 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x1A80 JUMPI PUSH2 0x1A7F PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A94 DUP3 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9F DUP4 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC7 JUMPI PUSH2 0x1AC6 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B06 DUP4 DUP6 PUSH2 0x1ACD JUMP JUMPDEST SWAP4 POP PUSH2 0x1B13 DUP4 DUP6 DUP5 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x1B1C DUP4 PUSH2 0x1AEB JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B3A PUSH0 DUP4 ADD DUP8 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x1B47 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1801 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B5A DUP2 DUP5 DUP7 PUSH2 0x1AFB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6F DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7A DUP4 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B92 JUMPI PUSH2 0x1B91 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BAB PUSH0 DUP4 ADD DUP8 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x1BB8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x1BC5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x1BD2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE5 DUP3 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x1C17 JUMPI PUSH2 0x1C16 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C34 PUSH0 DUP4 ADD DUP6 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x1C41 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C51 DUP2 PUSH2 0x19D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C5B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C6C DUP2 PUSH2 0x1C48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1C86 PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C94 DUP5 DUP3 DUP6 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CB0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x1CBD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1975 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CD0 DUP2 DUP5 DUP7 PUSH2 0x1AFB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1CEE PUSH0 DUP4 ADD DUP9 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x1CFB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x1D08 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x1D15 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x1D22 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D63 DUP3 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6E DUP4 PUSH2 0x1639 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D7E JUMPI PUSH2 0x1D7D PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SMOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D93 DUP3 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9E DUP4 PUSH2 0x1639 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DAE JUMPI PUSH2 0x1DAD PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP4 EQ AND ISZERO PUSH2 0x1DE6 JUMPI PUSH2 0x1DE5 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E07 DUP3 PUSH2 0x1DF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E18 DUP3 PUSH2 0x1DFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E30 PUSH2 0x1E2B DUP3 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x1E0E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E4C DUP3 PUSH2 0x1E36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E64 PUSH2 0x1E5F DUP3 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x1E42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E75 DUP3 DUP7 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1E85 DUP3 DUP6 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x1E95 DUP3 DUP5 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEA PUSH1 0x1 DUP4 PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF5 DUP3 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F17 DUP2 PUSH2 0x1EDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F28 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F33 DUP4 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F41 DUP2 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F69 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F74 DUP4 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F84 JUMPI PUSH2 0x1F83 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F99 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP4 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FB4 JUMPI PUSH2 0x1FB3 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC9 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD4 DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2000 JUMPI PUSH2 0x1FFF PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x200F DUP2 PUSH2 0x17F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2019 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x202A DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2052 DUP5 DUP3 DUP6 ADD PUSH2 0x201C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2065 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2097 JUMPI PUSH2 0x2096 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5052424D6174683A206F766572666C6F77000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20D6 PUSH1 0x11 DUP4 PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E1 DUP3 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2103 DUP2 PUSH2 0x20CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xE1 NUMBER 0xDB RETURNCONTRACT 0x72 PUSH14 0x862EE50585D88C46E7EFE1DD246A BLOBBASEFEE REVERT 0xB6 LOG1 0xBA SWAP3 LOG4 GAS SWAP6 0xD4 PUSH14 0x64736F6C634300081E0033000000 ",
							"sourceMap": "416:4598:0:-:0;;;1487:251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1630:7;1621:16;;;;;;;;;;1657:7;1648:16;;;;;;;;;;1683:47;;;;;;;;1704:12;1683:47;;;;;;1724:4;1683:47;;;;;1675:5;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:251;;;;416:4598;;88:117:13;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:122::-;918:24;936:5;918:24;:::i;:::-;911:5;908:35;898:63;;957:1;954;947:12;898:63;845:122;:::o;973:143::-;1030:5;1061:6;1055:13;1046:22;;1077:33;1104:5;1077:33;:::i;:::-;973:143;;;;:::o;1122:90::-;1157:7;1200:5;1197:1;1186:20;1175:31;;1122:90;;;:::o;1218:118::-;1289:22;1305:5;1289:22;:::i;:::-;1282:5;1279:33;1269:61;;1326:1;1323;1316:12;1269:61;1218:118;:::o;1342:139::-;1397:5;1428:6;1422:13;1413:22;;1444:31;1469:5;1444:31;:::i;:::-;1342:139;;;;:::o;1487:816::-;1582:6;1590;1598;1606;1655:3;1643:9;1634:7;1630:23;1626:33;1623:120;;;1662:79;;:::i;:::-;1623:120;1782:1;1807:64;1863:7;1854:6;1843:9;1839:22;1807:64;:::i;:::-;1797:74;;1753:128;1920:2;1946:64;2002:7;1993:6;1982:9;1978:22;1946:64;:::i;:::-;1936:74;;1891:129;2059:2;2085:64;2141:7;2132:6;2121:9;2117:22;2085:64;:::i;:::-;2075:74;;2030:129;2198:2;2224:62;2278:7;2269:6;2258:9;2254:22;2224:62;:::i;:::-;2214:72;;2169:127;1487:816;;;;;;;:::o;416:4598:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balance0_418": {
									"entryPoint": 4782,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balance1_436": {
									"entryPoint": 4940,
									"id": 436,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calcAmount0Delta_1002": {
									"entryPoint": 4406,
									"id": 1002,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@calcAmount1Delta_1039": {
									"entryPoint": 4634,
									"id": 1039,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@divRoundingUp_1215": {
									"entryPoint": 5235,
									"id": 1215,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@flipTick_1617": {
									"entryPoint": 2916,
									"id": 1617,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getSqrtRatioAtTick_2209": {
									"entryPoint": 3202,
									"id": 2209,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_1439": {
									"entryPoint": 3021,
									"id": 1439,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@liquidity_61": {
									"entryPoint": 549,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_307": {
									"entryPoint": 641,
									"id": 307,
									"parameterSlots": 6,
									"returnSlots": 2
								},
								"@mulDivRoundingUp_1204": {
									"entryPoint": 5131,
									"id": 1204,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mulDiv_1365": {
									"entryPoint": 5253,
									"id": 1365,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@position_1574": {
									"entryPoint": 5098,
									"id": 1574,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@positions_75": {
									"entryPoint": 1748,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@slot0_59": {
									"entryPoint": 582,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_400": {
									"entryPoint": 1858,
									"id": 400,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@tickBitmap_70": {
									"entryPoint": 1801,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ticks_66": {
									"entryPoint": 2598,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token0_49": {
									"entryPoint": 513,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_51": {
									"entryPoint": 1822,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@update_1465": {
									"entryPoint": 3090,
									"id": 1465,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@update_1537": {
									"entryPoint": 2669,
									"id": 1537,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_int16": {
									"entryPoint": 6327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24": {
									"entryPoint": 5827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
									"entryPoint": 6415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr": {
									"entryPoint": 5986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int16": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int24": {
									"entryPoint": 6571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_int24_to_t_int24_fromStack": {
									"entryPoint": 5701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack": {
									"entryPoint": 7763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint128_to_t_uint128_fromStack": {
									"entryPoint": 5634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7786,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7201,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed": {
									"entryPoint": 6640,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed": {
									"entryPoint": 6532,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": 5649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed": {
									"entryPoint": 5716,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint128": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int24": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint160": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int16": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 6508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 5607,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6877,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_int24": {
									"entryPoint": 7746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 7677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_int24": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"negate_t_int24": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_232": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc": {
									"entryPoint": 7862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238": {
									"entryPoint": 8354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int16": {
									"entryPoint": 6305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20383:13",
										"nodeType": "YulBlock",
										"src": "0:20383:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "463:124:13",
													"nodeType": "YulBlock",
													"src": "463:124:13",
													"statements": [
														{
															"nativeSrc": "473:26:13",
															"nodeType": "YulAssignment",
															"src": "473:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:13"
																},
																"nativeSrc": "481:18:13",
																"nodeType": "YulFunctionCall",
																"src": "481:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:13",
																				"nodeType": "YulLiteral",
																				"src": "577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:13"
																		},
																		"nativeSrc": "562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:13"
																},
																"nativeSrc": "509:71:13",
																"nodeType": "YulFunctionCall",
																"src": "509:71:13"
															},
															"nativeSrc": "509:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:13",
														"nodeType": "YulTypedName",
														"src": "435:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:13",
														"nodeType": "YulTypedName",
														"src": "447:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:13",
														"nodeType": "YulTypedName",
														"src": "458:4:13",
														"type": ""
													}
												],
												"src": "365:222:13"
											},
											{
												"body": {
													"nativeSrc": "638:73:13",
													"nodeType": "YulBlock",
													"src": "638:73:13",
													"statements": [
														{
															"nativeSrc": "648:57:13",
															"nodeType": "YulAssignment",
															"src": "648:57:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "663:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "663:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:34:13",
																		"nodeType": "YulLiteral",
																		"src": "670:34:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "659:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:13"
																},
																"nativeSrc": "659:46:13",
																"nodeType": "YulFunctionCall",
																"src": "659:46:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "593:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:13",
														"nodeType": "YulTypedName",
														"src": "620:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:13",
														"nodeType": "YulTypedName",
														"src": "630:7:13",
														"type": ""
													}
												],
												"src": "593:118:13"
											},
											{
												"body": {
													"nativeSrc": "782:53:13",
													"nodeType": "YulBlock",
													"src": "782:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "799:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "799:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "822:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "822:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nativeSrc": "804:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "804:17:13"
																		},
																		"nativeSrc": "804:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "804:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "792:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "792:6:13"
																},
																"nativeSrc": "792:37:13",
																"nodeType": "YulFunctionCall",
																"src": "792:37:13"
															},
															"nativeSrc": "792:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "792:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nativeSrc": "717:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "770:5:13",
														"nodeType": "YulTypedName",
														"src": "770:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "777:3:13",
														"nodeType": "YulTypedName",
														"src": "777:3:13",
														"type": ""
													}
												],
												"src": "717:118:13"
											},
											{
												"body": {
													"nativeSrc": "939:124:13",
													"nodeType": "YulBlock",
													"src": "939:124:13",
													"statements": [
														{
															"nativeSrc": "949:26:13",
															"nodeType": "YulAssignment",
															"src": "949:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "961:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "961:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "972:2:13",
																		"nodeType": "YulLiteral",
																		"src": "972:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "957:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "957:3:13"
																},
																"nativeSrc": "957:18:13",
																"nodeType": "YulFunctionCall",
																"src": "957:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "949:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "949:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1029:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1029:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1042:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1042:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1053:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1053:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1038:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:13"
																		},
																		"nativeSrc": "1038:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1038:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "985:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "985:43:13"
																},
																"nativeSrc": "985:71:13",
																"nodeType": "YulFunctionCall",
																"src": "985:71:13"
															},
															"nativeSrc": "985:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "985:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "841:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "911:9:13",
														"nodeType": "YulTypedName",
														"src": "911:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "923:6:13",
														"nodeType": "YulTypedName",
														"src": "923:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "934:4:13",
														"nodeType": "YulTypedName",
														"src": "934:4:13",
														"type": ""
													}
												],
												"src": "841:222:13"
											},
											{
												"body": {
													"nativeSrc": "1134:53:13",
													"nodeType": "YulBlock",
													"src": "1134:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1151:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1151:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1174:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1174:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "1156:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1156:17:13"
																		},
																		"nativeSrc": "1156:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1156:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:13"
																},
																"nativeSrc": "1144:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1144:37:13"
															},
															"nativeSrc": "1144:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1144:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nativeSrc": "1069:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:13",
														"nodeType": "YulTypedName",
														"src": "1122:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1129:3:13",
														"nodeType": "YulTypedName",
														"src": "1129:3:13",
														"type": ""
													}
												],
												"src": "1069:118:13"
											},
											{
												"body": {
													"nativeSrc": "1236:47:13",
													"nodeType": "YulBlock",
													"src": "1236:47:13",
													"statements": [
														{
															"nativeSrc": "1246:31:13",
															"nodeType": "YulAssignment",
															"src": "1246:31:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1268:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1268:1:13",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1271:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1271:5:13"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1257:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "1257:10:13"
																},
																"nativeSrc": "1257:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1257:20:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1246:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1246:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "1193:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1218:5:13",
														"nodeType": "YulTypedName",
														"src": "1218:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1228:7:13",
														"nodeType": "YulTypedName",
														"src": "1228:7:13",
														"type": ""
													}
												],
												"src": "1193:90:13"
											},
											{
												"body": {
													"nativeSrc": "1350:51:13",
													"nodeType": "YulBlock",
													"src": "1350:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1367:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1388:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1388:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int24",
																			"nativeSrc": "1372:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "1372:15:13"
																		},
																		"nativeSrc": "1372:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1372:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:13"
																},
																"nativeSrc": "1360:35:13",
																"nodeType": "YulFunctionCall",
																"src": "1360:35:13"
															},
															"nativeSrc": "1360:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "1360:35:13"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24_fromStack",
												"nativeSrc": "1289:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1338:5:13",
														"nodeType": "YulTypedName",
														"src": "1338:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1345:3:13",
														"nodeType": "YulTypedName",
														"src": "1345:3:13",
														"type": ""
													}
												],
												"src": "1289:112:13"
											},
											{
												"body": {
													"nativeSrc": "1529:202:13",
													"nodeType": "YulBlock",
													"src": "1529:202:13",
													"statements": [
														{
															"nativeSrc": "1539:26:13",
															"nodeType": "YulAssignment",
															"src": "1539:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1551:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1551:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1562:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1562:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1547:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1547:3:13"
																},
																"nativeSrc": "1547:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1547:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1539:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1539:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1619:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1619:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1632:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1632:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1643:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1643:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1628:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:13"
																		},
																		"nativeSrc": "1628:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "1575:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1575:43:13"
																},
																"nativeSrc": "1575:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1575:71:13"
															},
															"nativeSrc": "1575:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1575:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1696:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1696:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1709:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1709:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1720:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1720:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1705:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1705:3:13"
																		},
																		"nativeSrc": "1705:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1705:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "1656:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "1656:39:13"
																},
																"nativeSrc": "1656:68:13",
																"nodeType": "YulFunctionCall",
																"src": "1656:68:13"
															},
															"nativeSrc": "1656:68:13",
															"nodeType": "YulExpressionStatement",
															"src": "1656:68:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed",
												"nativeSrc": "1407:324:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1493:9:13",
														"nodeType": "YulTypedName",
														"src": "1493:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1505:6:13",
														"nodeType": "YulTypedName",
														"src": "1505:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1513:6:13",
														"nodeType": "YulTypedName",
														"src": "1513:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1524:4:13",
														"nodeType": "YulTypedName",
														"src": "1524:4:13",
														"type": ""
													}
												],
												"src": "1407:324:13"
											},
											{
												"body": {
													"nativeSrc": "1777:35:13",
													"nodeType": "YulBlock",
													"src": "1777:35:13",
													"statements": [
														{
															"nativeSrc": "1787:19:13",
															"nodeType": "YulAssignment",
															"src": "1787:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1797:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1797:5:13"
																},
																"nativeSrc": "1797:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1797:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1787:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1787:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1737:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1770:6:13",
														"nodeType": "YulTypedName",
														"src": "1770:6:13",
														"type": ""
													}
												],
												"src": "1737:75:13"
											},
											{
												"body": {
													"nativeSrc": "1907:28:13",
													"nodeType": "YulBlock",
													"src": "1907:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1924:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1924:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1927:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1927:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1917:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1917:6:13"
																},
																"nativeSrc": "1917:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1917:12:13"
															},
															"nativeSrc": "1917:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1917:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1818:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1818:117:13"
											},
											{
												"body": {
													"nativeSrc": "2030:28:13",
													"nodeType": "YulBlock",
													"src": "2030:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2047:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2047:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2050:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2040:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:13"
																},
																"nativeSrc": "2040:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2040:12:13"
															},
															"nativeSrc": "2040:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "2040:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1941:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1941:117:13"
											},
											{
												"body": {
													"nativeSrc": "2107:79:13",
													"nodeType": "YulBlock",
													"src": "2107:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2164:16:13",
																"nodeType": "YulBlock",
																"src": "2164:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2173:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2173:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2176:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2176:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2166:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2166:6:13"
																			},
																			"nativeSrc": "2166:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2166:12:13"
																		},
																		"nativeSrc": "2166:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2166:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2130:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2130:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2155:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2155:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2137:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2137:17:13"
																				},
																				"nativeSrc": "2137:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2137:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2127:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2127:2:13"
																		},
																		"nativeSrc": "2127:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2127:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:13"
																},
																"nativeSrc": "2120:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2120:43:13"
															},
															"nativeSrc": "2117:63:13",
															"nodeType": "YulIf",
															"src": "2117:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2064:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2100:5:13",
														"nodeType": "YulTypedName",
														"src": "2100:5:13",
														"type": ""
													}
												],
												"src": "2064:122:13"
											},
											{
												"body": {
													"nativeSrc": "2244:87:13",
													"nodeType": "YulBlock",
													"src": "2244:87:13",
													"statements": [
														{
															"nativeSrc": "2254:29:13",
															"nodeType": "YulAssignment",
															"src": "2254:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2276:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2276:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2263:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2263:12:13"
																},
																"nativeSrc": "2263:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2263:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2254:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2254:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2319:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2319:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2292:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2292:26:13"
																},
																"nativeSrc": "2292:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2292:33:13"
															},
															"nativeSrc": "2292:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2292:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2192:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2222:6:13",
														"nodeType": "YulTypedName",
														"src": "2222:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2230:3:13",
														"nodeType": "YulTypedName",
														"src": "2230:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2238:5:13",
														"nodeType": "YulTypedName",
														"src": "2238:5:13",
														"type": ""
													}
												],
												"src": "2192:139:13"
											},
											{
												"body": {
													"nativeSrc": "2378:77:13",
													"nodeType": "YulBlock",
													"src": "2378:77:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2433:16:13",
																"nodeType": "YulBlock",
																"src": "2433:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2442:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2442:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2445:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2445:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2435:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:13"
																			},
																			"nativeSrc": "2435:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2435:12:13"
																		},
																		"nativeSrc": "2435:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2435:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2401:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2401:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2424:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2424:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "2408:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "2408:15:13"
																				},
																				"nativeSrc": "2408:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2408:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2398:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2398:2:13"
																		},
																		"nativeSrc": "2398:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2398:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2391:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:13"
																},
																"nativeSrc": "2391:41:13",
																"nodeType": "YulFunctionCall",
																"src": "2391:41:13"
															},
															"nativeSrc": "2388:61:13",
															"nodeType": "YulIf",
															"src": "2388:61:13"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "2337:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2371:5:13",
														"nodeType": "YulTypedName",
														"src": "2371:5:13",
														"type": ""
													}
												],
												"src": "2337:118:13"
											},
											{
												"body": {
													"nativeSrc": "2511:85:13",
													"nodeType": "YulBlock",
													"src": "2511:85:13",
													"statements": [
														{
															"nativeSrc": "2521:29:13",
															"nodeType": "YulAssignment",
															"src": "2521:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2543:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2543:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2530:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2530:12:13"
																},
																"nativeSrc": "2530:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2530:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2584:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2584:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "2559:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "2559:24:13"
																},
																"nativeSrc": "2559:31:13",
																"nodeType": "YulFunctionCall",
																"src": "2559:31:13"
															},
															"nativeSrc": "2559:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "2559:31:13"
														}
													]
												},
												"name": "abi_decode_t_int24",
												"nativeSrc": "2461:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2489:6:13",
														"nodeType": "YulTypedName",
														"src": "2489:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2497:3:13",
														"nodeType": "YulTypedName",
														"src": "2497:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2505:5:13",
														"nodeType": "YulTypedName",
														"src": "2505:5:13",
														"type": ""
													}
												],
												"src": "2461:135:13"
											},
											{
												"body": {
													"nativeSrc": "2645:79:13",
													"nodeType": "YulBlock",
													"src": "2645:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2702:16:13",
																"nodeType": "YulBlock",
																"src": "2702:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2711:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2711:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2714:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2714:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2704:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2704:6:13"
																			},
																			"nativeSrc": "2704:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2704:12:13"
																		},
																		"nativeSrc": "2704:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2704:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2668:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2668:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2693:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2693:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nativeSrc": "2675:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2675:17:13"
																				},
																				"nativeSrc": "2675:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2675:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2665:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2665:2:13"
																		},
																		"nativeSrc": "2665:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2658:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:13"
																},
																"nativeSrc": "2658:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2658:43:13"
															},
															"nativeSrc": "2655:63:13",
															"nodeType": "YulIf",
															"src": "2655:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nativeSrc": "2602:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2638:5:13",
														"nodeType": "YulTypedName",
														"src": "2638:5:13",
														"type": ""
													}
												],
												"src": "2602:122:13"
											},
											{
												"body": {
													"nativeSrc": "2782:87:13",
													"nodeType": "YulBlock",
													"src": "2782:87:13",
													"statements": [
														{
															"nativeSrc": "2792:29:13",
															"nodeType": "YulAssignment",
															"src": "2792:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2814:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2801:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2801:12:13"
																},
																"nativeSrc": "2801:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2801:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2792:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2792:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2857:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2857:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nativeSrc": "2830:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2830:26:13"
																},
																"nativeSrc": "2830:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2830:33:13"
															},
															"nativeSrc": "2830:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2830:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint128",
												"nativeSrc": "2730:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2760:6:13",
														"nodeType": "YulTypedName",
														"src": "2760:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2768:3:13",
														"nodeType": "YulTypedName",
														"src": "2768:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2776:5:13",
														"nodeType": "YulTypedName",
														"src": "2776:5:13",
														"type": ""
													}
												],
												"src": "2730:139:13"
											},
											{
												"body": {
													"nativeSrc": "2964:28:13",
													"nodeType": "YulBlock",
													"src": "2964:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2981:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2981:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2984:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2984:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2974:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:13"
																},
																"nativeSrc": "2974:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2974:12:13"
															},
															"nativeSrc": "2974:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "2974:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2875:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2875:117:13"
											},
											{
												"body": {
													"nativeSrc": "3087:28:13",
													"nodeType": "YulBlock",
													"src": "3087:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3104:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3104:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3107:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3107:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3097:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3097:6:13"
																},
																"nativeSrc": "3097:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3097:12:13"
															},
															"nativeSrc": "3097:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "3097:12:13"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2998:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2998:117:13"
											},
											{
												"body": {
													"nativeSrc": "3210:28:13",
													"nodeType": "YulBlock",
													"src": "3210:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3227:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3230:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3230:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3220:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:13"
																},
																"nativeSrc": "3220:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3220:12:13"
															},
															"nativeSrc": "3220:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "3220:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "3121:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3121:117:13"
											},
											{
												"body": {
													"nativeSrc": "3331:478:13",
													"nodeType": "YulBlock",
													"src": "3331:478:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3380:83:13",
																"nodeType": "YulBlock",
																"src": "3380:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3382:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3382:77:13"
																			},
																			"nativeSrc": "3382:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3382:79:13"
																		},
																		"nativeSrc": "3382:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3382:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3359:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3359:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3367:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3367:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3355:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3355:3:13"
																				},
																				"nativeSrc": "3355:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3355:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3374:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3374:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3351:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:13"
																		},
																		"nativeSrc": "3351:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3351:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3344:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:13"
																},
																"nativeSrc": "3344:35:13",
																"nodeType": "YulFunctionCall",
																"src": "3344:35:13"
															},
															"nativeSrc": "3341:122:13",
															"nodeType": "YulIf",
															"src": "3341:122:13"
														},
														{
															"nativeSrc": "3472:30:13",
															"nodeType": "YulAssignment",
															"src": "3472:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3495:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3495:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3482:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3482:12:13"
																},
																"nativeSrc": "3482:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3482:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3472:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3472:6:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3545:83:13",
																"nodeType": "YulBlock",
																"src": "3545:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "3547:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3547:77:13"
																			},
																			"nativeSrc": "3547:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:79:13"
																		},
																		"nativeSrc": "3547:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3517:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3517:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3525:18:13",
																		"nodeType": "YulLiteral",
																		"src": "3525:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3514:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3514:2:13"
																},
																"nativeSrc": "3514:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3514:30:13"
															},
															"nativeSrc": "3511:117:13",
															"nodeType": "YulIf",
															"src": "3511:117:13"
														},
														{
															"nativeSrc": "3637:29:13",
															"nodeType": "YulAssignment",
															"src": "3637:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3653:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3661:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3661:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3649:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3649:3:13"
																},
																"nativeSrc": "3649:17:13",
																"nodeType": "YulFunctionCall",
																"src": "3649:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3637:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3637:8:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3720:83:13",
																"nodeType": "YulBlock",
																"src": "3720:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3722:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3722:77:13"
																			},
																			"nativeSrc": "3722:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3722:79:13"
																		},
																		"nativeSrc": "3722:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3722:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3685:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "3685:8:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3699:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3699:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3707:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3707:4:13",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3695:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3695:3:13"
																				},
																				"nativeSrc": "3695:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3695:17:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3681:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3681:3:13"
																		},
																		"nativeSrc": "3681:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:32:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3715:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3715:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3678:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3678:2:13"
																},
																"nativeSrc": "3678:41:13",
																"nodeType": "YulFunctionCall",
																"src": "3678:41:13"
															},
															"nativeSrc": "3675:128:13",
															"nodeType": "YulIf",
															"src": "3675:128:13"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "3257:552:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3298:6:13",
														"nodeType": "YulTypedName",
														"src": "3298:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3306:3:13",
														"nodeType": "YulTypedName",
														"src": "3306:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3314:8:13",
														"nodeType": "YulTypedName",
														"src": "3314:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3324:6:13",
														"nodeType": "YulTypedName",
														"src": "3324:6:13",
														"type": ""
													}
												],
												"src": "3257:552:13"
											},
											{
												"body": {
													"nativeSrc": "3964:952:13",
													"nodeType": "YulBlock",
													"src": "3964:952:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4011:83:13",
																"nodeType": "YulBlock",
																"src": "4011:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4013:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4013:77:13"
																			},
																			"nativeSrc": "4013:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4013:79:13"
																		},
																		"nativeSrc": "4013:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4013:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3985:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3985:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3994:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3994:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3981:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:13"
																		},
																		"nativeSrc": "3981:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3981:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4006:3:13",
																		"nodeType": "YulLiteral",
																		"src": "4006:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3977:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:13"
																},
																"nativeSrc": "3977:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3977:33:13"
															},
															"nativeSrc": "3974:120:13",
															"nodeType": "YulIf",
															"src": "3974:120:13"
														},
														{
															"nativeSrc": "4104:117:13",
															"nodeType": "YulBlock",
															"src": "4104:117:13",
															"statements": [
																{
																	"nativeSrc": "4119:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4119:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4133:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4133:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4123:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4123:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4148:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4148:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4183:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4183:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4194:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4194:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4179:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4179:3:13"
																				},
																				"nativeSrc": "4179:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4179:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4203:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4203:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4158:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4158:20:13"
																		},
																		"nativeSrc": "4158:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4148:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4148:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4231:116:13",
															"nodeType": "YulBlock",
															"src": "4231:116:13",
															"statements": [
																{
																	"nativeSrc": "4246:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4246:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4260:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4260:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4250:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4250:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4276:61:13",
																	"nodeType": "YulAssignment",
																	"src": "4276:61:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4309:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4309:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4320:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4320:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4305:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4305:3:13"
																				},
																				"nativeSrc": "4305:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4305:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4329:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4329:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "4286:18:13",
																			"nodeType": "YulIdentifier",
																			"src": "4286:18:13"
																		},
																		"nativeSrc": "4286:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:51:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4276:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4276:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4357:116:13",
															"nodeType": "YulBlock",
															"src": "4357:116:13",
															"statements": [
																{
																	"nativeSrc": "4372:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4372:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4386:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4376:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4376:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4402:61:13",
																	"nodeType": "YulAssignment",
																	"src": "4402:61:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4435:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4435:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4446:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4446:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4431:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4431:3:13"
																				},
																				"nativeSrc": "4431:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4431:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4455:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4455:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "4412:18:13",
																			"nodeType": "YulIdentifier",
																			"src": "4412:18:13"
																		},
																		"nativeSrc": "4412:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4412:51:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4402:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4402:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4483:118:13",
															"nodeType": "YulBlock",
															"src": "4483:118:13",
															"statements": [
																{
																	"nativeSrc": "4498:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4498:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4512:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4512:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4502:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4502:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4528:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4528:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4563:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4563:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4574:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4574:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4559:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4559:3:13"
																				},
																				"nativeSrc": "4559:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4559:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4583:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4583:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nativeSrc": "4538:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4538:20:13"
																		},
																		"nativeSrc": "4538:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4538:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4528:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4528:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4611:298:13",
															"nodeType": "YulBlock",
															"src": "4611:298:13",
															"statements": [
																{
																	"nativeSrc": "4626:47:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4626:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4657:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4657:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4668:3:13",
																						"nodeType": "YulLiteral",
																						"src": "4668:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4653:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4653:3:13"
																				},
																				"nativeSrc": "4653:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4653:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4640:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "4640:12:13"
																		},
																		"nativeSrc": "4640:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4640:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4630:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4630:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4720:83:13",
																		"nodeType": "YulBlock",
																		"src": "4720:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4722:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4722:77:13"
																					},
																					"nativeSrc": "4722:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4722:79:13"
																				},
																				"nativeSrc": "4722:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4722:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4692:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4692:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4700:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4700:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4689:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4689:2:13"
																		},
																		"nativeSrc": "4689:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4689:30:13"
																	},
																	"nativeSrc": "4686:117:13",
																	"nodeType": "YulIf",
																	"src": "4686:117:13"
																},
																{
																	"nativeSrc": "4817:82:13",
																	"nodeType": "YulAssignment",
																	"src": "4817:82:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4871:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4871:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4882:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4882:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4867:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4867:3:13"
																				},
																				"nativeSrc": "4867:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4867:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4891:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4891:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "4835:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "4835:31:13"
																		},
																		"nativeSrc": "4835:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4835:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4817:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4817:6:13"
																		},
																		{
																			"name": "value5",
																			"nativeSrc": "4825:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4825:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr",
												"nativeSrc": "3815:1101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3894:9:13",
														"nodeType": "YulTypedName",
														"src": "3894:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3905:7:13",
														"nodeType": "YulTypedName",
														"src": "3905:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3917:6:13",
														"nodeType": "YulTypedName",
														"src": "3917:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3925:6:13",
														"nodeType": "YulTypedName",
														"src": "3925:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3933:6:13",
														"nodeType": "YulTypedName",
														"src": "3933:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3941:6:13",
														"nodeType": "YulTypedName",
														"src": "3941:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3949:6:13",
														"nodeType": "YulTypedName",
														"src": "3949:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3957:6:13",
														"nodeType": "YulTypedName",
														"src": "3957:6:13",
														"type": ""
													}
												],
												"src": "3815:1101:13"
											},
											{
												"body": {
													"nativeSrc": "4967:32:13",
													"nodeType": "YulBlock",
													"src": "4967:32:13",
													"statements": [
														{
															"nativeSrc": "4977:16:13",
															"nodeType": "YulAssignment",
															"src": "4977:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "4988:5:13",
																"nodeType": "YulIdentifier",
																"src": "4988:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4977:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4977:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4922:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4949:5:13",
														"nodeType": "YulTypedName",
														"src": "4949:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4959:7:13",
														"nodeType": "YulTypedName",
														"src": "4959:7:13",
														"type": ""
													}
												],
												"src": "4922:77:13"
											},
											{
												"body": {
													"nativeSrc": "5070:53:13",
													"nodeType": "YulBlock",
													"src": "5070:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5087:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5087:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5110:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5110:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5092:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5092:17:13"
																		},
																		"nativeSrc": "5092:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5092:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5080:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5080:6:13"
																},
																"nativeSrc": "5080:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5080:37:13"
															},
															"nativeSrc": "5080:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5080:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5005:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5058:5:13",
														"nodeType": "YulTypedName",
														"src": "5058:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5065:3:13",
														"nodeType": "YulTypedName",
														"src": "5065:3:13",
														"type": ""
													}
												],
												"src": "5005:118:13"
											},
											{
												"body": {
													"nativeSrc": "5255:206:13",
													"nodeType": "YulBlock",
													"src": "5255:206:13",
													"statements": [
														{
															"nativeSrc": "5265:26:13",
															"nodeType": "YulAssignment",
															"src": "5265:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5277:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5288:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5288:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5273:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:13"
																},
																"nativeSrc": "5273:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5273:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5265:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5265:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5345:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5345:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5358:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5358:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5369:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5369:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5354:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:13"
																		},
																		"nativeSrc": "5354:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5354:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5301:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5301:43:13"
																},
																"nativeSrc": "5301:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5301:71:13"
															},
															"nativeSrc": "5301:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5301:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5426:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5426:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5439:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5450:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5450:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5435:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:13"
																		},
																		"nativeSrc": "5435:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5435:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5382:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5382:43:13"
																},
																"nativeSrc": "5382:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5382:72:13"
															},
															"nativeSrc": "5382:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5382:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5129:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5219:9:13",
														"nodeType": "YulTypedName",
														"src": "5219:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5231:6:13",
														"nodeType": "YulTypedName",
														"src": "5231:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5239:6:13",
														"nodeType": "YulTypedName",
														"src": "5239:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5250:4:13",
														"nodeType": "YulTypedName",
														"src": "5250:4:13",
														"type": ""
													}
												],
												"src": "5129:332:13"
											},
											{
												"body": {
													"nativeSrc": "5512:32:13",
													"nodeType": "YulBlock",
													"src": "5512:32:13",
													"statements": [
														{
															"nativeSrc": "5522:16:13",
															"nodeType": "YulAssignment",
															"src": "5522:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5533:5:13",
																"nodeType": "YulIdentifier",
																"src": "5533:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5522:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5522:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5467:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5494:5:13",
														"nodeType": "YulTypedName",
														"src": "5494:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5504:7:13",
														"nodeType": "YulTypedName",
														"src": "5504:7:13",
														"type": ""
													}
												],
												"src": "5467:77:13"
											},
											{
												"body": {
													"nativeSrc": "5593:79:13",
													"nodeType": "YulBlock",
													"src": "5593:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5650:16:13",
																"nodeType": "YulBlock",
																"src": "5650:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5659:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5659:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5662:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5662:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5652:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5652:6:13"
																			},
																			"nativeSrc": "5652:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5652:12:13"
																		},
																		"nativeSrc": "5652:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5652:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5616:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5616:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5641:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5641:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5623:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5623:17:13"
																				},
																				"nativeSrc": "5623:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5623:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5613:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5613:2:13"
																		},
																		"nativeSrc": "5613:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5613:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5606:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:13"
																},
																"nativeSrc": "5606:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5606:43:13"
															},
															"nativeSrc": "5603:63:13",
															"nodeType": "YulIf",
															"src": "5603:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5550:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5586:5:13",
														"nodeType": "YulTypedName",
														"src": "5586:5:13",
														"type": ""
													}
												],
												"src": "5550:122:13"
											},
											{
												"body": {
													"nativeSrc": "5730:87:13",
													"nodeType": "YulBlock",
													"src": "5730:87:13",
													"statements": [
														{
															"nativeSrc": "5740:29:13",
															"nodeType": "YulAssignment",
															"src": "5740:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5762:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5749:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5749:12:13"
																},
																"nativeSrc": "5749:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5749:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5740:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5740:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5805:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5805:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5778:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5778:26:13"
																},
																"nativeSrc": "5778:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5778:33:13"
															},
															"nativeSrc": "5778:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5778:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5678:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5708:6:13",
														"nodeType": "YulTypedName",
														"src": "5708:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5716:3:13",
														"nodeType": "YulTypedName",
														"src": "5716:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5724:5:13",
														"nodeType": "YulTypedName",
														"src": "5724:5:13",
														"type": ""
													}
												],
												"src": "5678:139:13"
											},
											{
												"body": {
													"nativeSrc": "5889:263:13",
													"nodeType": "YulBlock",
													"src": "5889:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5935:83:13",
																"nodeType": "YulBlock",
																"src": "5935:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5937:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5937:77:13"
																			},
																			"nativeSrc": "5937:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5937:79:13"
																		},
																		"nativeSrc": "5937:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5937:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5910:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5910:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5919:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5919:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5906:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:13"
																		},
																		"nativeSrc": "5906:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5906:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5931:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5902:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5902:3:13"
																},
																"nativeSrc": "5902:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5902:32:13"
															},
															"nativeSrc": "5899:119:13",
															"nodeType": "YulIf",
															"src": "5899:119:13"
														},
														{
															"nativeSrc": "6028:117:13",
															"nodeType": "YulBlock",
															"src": "6028:117:13",
															"statements": [
																{
																	"nativeSrc": "6043:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6043:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6057:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6057:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6047:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6047:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6072:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6072:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6107:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6107:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6118:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6118:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6103:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6103:3:13"
																				},
																				"nativeSrc": "6103:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6103:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6127:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6127:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6082:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6082:20:13"
																		},
																		"nativeSrc": "6082:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6072:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6072:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5823:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5859:9:13",
														"nodeType": "YulTypedName",
														"src": "5859:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5870:7:13",
														"nodeType": "YulTypedName",
														"src": "5870:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5882:6:13",
														"nodeType": "YulTypedName",
														"src": "5882:6:13",
														"type": ""
													}
												],
												"src": "5823:329:13"
											},
											{
												"body": {
													"nativeSrc": "6201:47:13",
													"nodeType": "YulBlock",
													"src": "6201:47:13",
													"statements": [
														{
															"nativeSrc": "6211:31:13",
															"nodeType": "YulAssignment",
															"src": "6211:31:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6233:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6233:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6236:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6236:5:13"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "6222:10:13",
																	"nodeType": "YulIdentifier",
																	"src": "6222:10:13"
																},
																"nativeSrc": "6222:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6222:20:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6211:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6211:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int16",
												"nativeSrc": "6158:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6183:5:13",
														"nodeType": "YulTypedName",
														"src": "6183:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6193:7:13",
														"nodeType": "YulTypedName",
														"src": "6193:7:13",
														"type": ""
													}
												],
												"src": "6158:90:13"
											},
											{
												"body": {
													"nativeSrc": "6295:77:13",
													"nodeType": "YulBlock",
													"src": "6295:77:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6350:16:13",
																"nodeType": "YulBlock",
																"src": "6350:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6359:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6359:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6362:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6362:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6352:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6352:6:13"
																			},
																			"nativeSrc": "6352:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6352:12:13"
																		},
																		"nativeSrc": "6352:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6352:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6318:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6318:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6341:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6341:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int16",
																					"nativeSrc": "6325:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "6325:15:13"
																				},
																				"nativeSrc": "6325:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6325:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6315:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6315:2:13"
																		},
																		"nativeSrc": "6315:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6308:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6308:6:13"
																},
																"nativeSrc": "6308:41:13",
																"nodeType": "YulFunctionCall",
																"src": "6308:41:13"
															},
															"nativeSrc": "6305:61:13",
															"nodeType": "YulIf",
															"src": "6305:61:13"
														}
													]
												},
												"name": "validator_revert_t_int16",
												"nativeSrc": "6254:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6288:5:13",
														"nodeType": "YulTypedName",
														"src": "6288:5:13",
														"type": ""
													}
												],
												"src": "6254:118:13"
											},
											{
												"body": {
													"nativeSrc": "6428:85:13",
													"nodeType": "YulBlock",
													"src": "6428:85:13",
													"statements": [
														{
															"nativeSrc": "6438:29:13",
															"nodeType": "YulAssignment",
															"src": "6438:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6460:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6460:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6447:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6447:12:13"
																},
																"nativeSrc": "6447:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6447:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6438:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6438:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6501:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6501:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int16",
																	"nativeSrc": "6476:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "6476:24:13"
																},
																"nativeSrc": "6476:31:13",
																"nodeType": "YulFunctionCall",
																"src": "6476:31:13"
															},
															"nativeSrc": "6476:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "6476:31:13"
														}
													]
												},
												"name": "abi_decode_t_int16",
												"nativeSrc": "6378:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6406:6:13",
														"nodeType": "YulTypedName",
														"src": "6406:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6414:3:13",
														"nodeType": "YulTypedName",
														"src": "6414:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6422:5:13",
														"nodeType": "YulTypedName",
														"src": "6422:5:13",
														"type": ""
													}
												],
												"src": "6378:135:13"
											},
											{
												"body": {
													"nativeSrc": "6583:261:13",
													"nodeType": "YulBlock",
													"src": "6583:261:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6629:83:13",
																"nodeType": "YulBlock",
																"src": "6629:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6631:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6631:77:13"
																			},
																			"nativeSrc": "6631:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6631:79:13"
																		},
																		"nativeSrc": "6631:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6604:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6604:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6613:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6613:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6600:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:13"
																		},
																		"nativeSrc": "6600:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6625:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6596:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:13"
																},
																"nativeSrc": "6596:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6596:32:13"
															},
															"nativeSrc": "6593:119:13",
															"nodeType": "YulIf",
															"src": "6593:119:13"
														},
														{
															"nativeSrc": "6722:115:13",
															"nodeType": "YulBlock",
															"src": "6722:115:13",
															"statements": [
																{
																	"nativeSrc": "6737:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6737:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6751:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6751:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6741:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6741:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6766:61:13",
																	"nodeType": "YulAssignment",
																	"src": "6766:61:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6799:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6799:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6810:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6810:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6795:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6795:3:13"
																				},
																				"nativeSrc": "6795:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6795:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6819:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6819:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int16",
																			"nativeSrc": "6776:18:13",
																			"nodeType": "YulIdentifier",
																			"src": "6776:18:13"
																		},
																		"nativeSrc": "6776:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6776:51:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6766:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6766:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int16",
												"nativeSrc": "6519:325:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6553:9:13",
														"nodeType": "YulTypedName",
														"src": "6553:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6564:7:13",
														"nodeType": "YulTypedName",
														"src": "6564:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6576:6:13",
														"nodeType": "YulTypedName",
														"src": "6576:6:13",
														"type": ""
													}
												],
												"src": "6519:325:13"
											},
											{
												"body": {
													"nativeSrc": "6948:124:13",
													"nodeType": "YulBlock",
													"src": "6948:124:13",
													"statements": [
														{
															"nativeSrc": "6958:26:13",
															"nodeType": "YulAssignment",
															"src": "6958:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6970:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6970:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6981:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6981:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6966:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6966:3:13"
																},
																"nativeSrc": "6966:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6966:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6958:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6958:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7038:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7038:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7051:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7051:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7062:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7062:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7047:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:13"
																		},
																		"nativeSrc": "7047:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7047:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6994:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6994:43:13"
																},
																"nativeSrc": "6994:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6994:71:13"
															},
															"nativeSrc": "6994:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6994:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6850:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6920:9:13",
														"nodeType": "YulTypedName",
														"src": "6920:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6932:6:13",
														"nodeType": "YulTypedName",
														"src": "6932:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6943:4:13",
														"nodeType": "YulTypedName",
														"src": "6943:4:13",
														"type": ""
													}
												],
												"src": "6850:222:13"
											},
											{
												"body": {
													"nativeSrc": "7180:570:13",
													"nodeType": "YulBlock",
													"src": "7180:570:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7226:83:13",
																"nodeType": "YulBlock",
																"src": "7226:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7228:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7228:77:13"
																			},
																			"nativeSrc": "7228:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7228:79:13"
																		},
																		"nativeSrc": "7228:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7228:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7201:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7201:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7210:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7210:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7197:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:13"
																		},
																		"nativeSrc": "7197:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7197:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7222:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7222:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7193:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:13"
																},
																"nativeSrc": "7193:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7193:32:13"
															},
															"nativeSrc": "7190:119:13",
															"nodeType": "YulIf",
															"src": "7190:119:13"
														},
														{
															"nativeSrc": "7319:117:13",
															"nodeType": "YulBlock",
															"src": "7319:117:13",
															"statements": [
																{
																	"nativeSrc": "7334:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7334:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7348:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7348:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7338:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7338:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7363:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7363:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7398:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7398:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7409:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7409:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7394:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7394:3:13"
																				},
																				"nativeSrc": "7394:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7394:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7418:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7418:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7373:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7373:20:13"
																		},
																		"nativeSrc": "7373:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7373:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7363:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7363:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7446:297:13",
															"nodeType": "YulBlock",
															"src": "7446:297:13",
															"statements": [
																{
																	"nativeSrc": "7461:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7461:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7492:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7492:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7503:2:13",
																						"nodeType": "YulLiteral",
																						"src": "7503:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7488:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7488:3:13"
																				},
																				"nativeSrc": "7488:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7488:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7475:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "7475:12:13"
																		},
																		"nativeSrc": "7475:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7475:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7465:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7465:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7554:83:13",
																		"nodeType": "YulBlock",
																		"src": "7554:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7556:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "7556:77:13"
																					},
																					"nativeSrc": "7556:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7556:79:13"
																				},
																				"nativeSrc": "7556:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "7556:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7526:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7526:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7534:18:13",
																				"nodeType": "YulLiteral",
																				"src": "7534:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7523:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7523:2:13"
																		},
																		"nativeSrc": "7523:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7523:30:13"
																	},
																	"nativeSrc": "7520:117:13",
																	"nodeType": "YulIf",
																	"src": "7520:117:13"
																},
																{
																	"nativeSrc": "7651:82:13",
																	"nodeType": "YulAssignment",
																	"src": "7651:82:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7705:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7705:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7716:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7716:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7701:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7701:3:13"
																				},
																				"nativeSrc": "7701:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7701:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7725:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7725:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "7669:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "7669:31:13"
																		},
																		"nativeSrc": "7669:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7651:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7651:6:13"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "7659:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7659:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
												"nativeSrc": "7078:672:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7134:9:13",
														"nodeType": "YulTypedName",
														"src": "7134:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7145:7:13",
														"nodeType": "YulTypedName",
														"src": "7145:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7157:6:13",
														"nodeType": "YulTypedName",
														"src": "7157:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7165:6:13",
														"nodeType": "YulTypedName",
														"src": "7165:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7173:6:13",
														"nodeType": "YulTypedName",
														"src": "7173:6:13",
														"type": ""
													}
												],
												"src": "7078:672:13"
											},
											{
												"body": {
													"nativeSrc": "7800:32:13",
													"nodeType": "YulBlock",
													"src": "7800:32:13",
													"statements": [
														{
															"nativeSrc": "7810:16:13",
															"nodeType": "YulAssignment",
															"src": "7810:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "7821:5:13",
																"nodeType": "YulIdentifier",
																"src": "7821:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7810:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "7810:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "7756:76:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7782:5:13",
														"nodeType": "YulTypedName",
														"src": "7782:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7792:7:13",
														"nodeType": "YulTypedName",
														"src": "7792:7:13",
														"type": ""
													}
												],
												"src": "7756:76:13"
											},
											{
												"body": {
													"nativeSrc": "7901:52:13",
													"nodeType": "YulBlock",
													"src": "7901:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7918:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7918:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7940:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7940:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "7923:16:13",
																			"nodeType": "YulIdentifier",
																			"src": "7923:16:13"
																		},
																		"nativeSrc": "7923:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7923:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7911:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:13"
																},
																"nativeSrc": "7911:36:13",
																"nodeType": "YulFunctionCall",
																"src": "7911:36:13"
															},
															"nativeSrc": "7911:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "7911:36:13"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "7838:115:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7889:5:13",
														"nodeType": "YulTypedName",
														"src": "7889:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7896:3:13",
														"nodeType": "YulTypedName",
														"src": "7896:3:13",
														"type": ""
													}
												],
												"src": "7838:115:13"
											},
											{
												"body": {
													"nativeSrc": "8081:202:13",
													"nodeType": "YulBlock",
													"src": "8081:202:13",
													"statements": [
														{
															"nativeSrc": "8091:26:13",
															"nodeType": "YulAssignment",
															"src": "8091:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8103:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8103:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8114:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8114:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8099:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8099:3:13"
																},
																"nativeSrc": "8099:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8099:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8091:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8091:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8169:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8169:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8182:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8182:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8193:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8193:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8178:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8178:3:13"
																		},
																		"nativeSrc": "8178:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8178:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "8127:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "8127:41:13"
																},
																"nativeSrc": "8127:69:13",
																"nodeType": "YulFunctionCall",
																"src": "8127:69:13"
															},
															"nativeSrc": "8127:69:13",
															"nodeType": "YulExpressionStatement",
															"src": "8127:69:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8248:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8261:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8261:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8272:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8272:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8257:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8257:3:13"
																		},
																		"nativeSrc": "8257:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8257:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "8206:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "8206:41:13"
																},
																"nativeSrc": "8206:70:13",
																"nodeType": "YulFunctionCall",
																"src": "8206:70:13"
															},
															"nativeSrc": "8206:70:13",
															"nodeType": "YulExpressionStatement",
															"src": "8206:70:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed",
												"nativeSrc": "7959:324:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8045:9:13",
														"nodeType": "YulTypedName",
														"src": "8045:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8057:6:13",
														"nodeType": "YulTypedName",
														"src": "8057:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8065:6:13",
														"nodeType": "YulTypedName",
														"src": "8065:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8076:4:13",
														"nodeType": "YulTypedName",
														"src": "8076:4:13",
														"type": ""
													}
												],
												"src": "7959:324:13"
											},
											{
												"body": {
													"nativeSrc": "8353:261:13",
													"nodeType": "YulBlock",
													"src": "8353:261:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8399:83:13",
																"nodeType": "YulBlock",
																"src": "8399:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8401:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8401:77:13"
																			},
																			"nativeSrc": "8401:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8401:79:13"
																		},
																		"nativeSrc": "8401:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8401:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8374:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8374:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8383:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8383:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8370:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8370:3:13"
																		},
																		"nativeSrc": "8370:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8370:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8395:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8366:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8366:3:13"
																},
																"nativeSrc": "8366:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8366:32:13"
															},
															"nativeSrc": "8363:119:13",
															"nodeType": "YulIf",
															"src": "8363:119:13"
														},
														{
															"nativeSrc": "8492:115:13",
															"nodeType": "YulBlock",
															"src": "8492:115:13",
															"statements": [
																{
																	"nativeSrc": "8507:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8507:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8521:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8521:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8511:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8511:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8536:61:13",
																	"nodeType": "YulAssignment",
																	"src": "8536:61:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8569:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8569:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8580:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8580:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8565:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8565:3:13"
																				},
																				"nativeSrc": "8565:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8565:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8589:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8589:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "8546:18:13",
																			"nodeType": "YulIdentifier",
																			"src": "8546:18:13"
																		},
																		"nativeSrc": "8546:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8546:51:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8536:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8536:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int24",
												"nativeSrc": "8289:325:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8323:9:13",
														"nodeType": "YulTypedName",
														"src": "8323:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8334:7:13",
														"nodeType": "YulTypedName",
														"src": "8334:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8346:6:13",
														"nodeType": "YulTypedName",
														"src": "8346:6:13",
														"type": ""
													}
												],
												"src": "8289:325:13"
											},
											{
												"body": {
													"nativeSrc": "8662:48:13",
													"nodeType": "YulBlock",
													"src": "8662:48:13",
													"statements": [
														{
															"nativeSrc": "8672:32:13",
															"nodeType": "YulAssignment",
															"src": "8672:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8697:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8697:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8690:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8690:6:13"
																		},
																		"nativeSrc": "8690:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8690:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8683:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8683:6:13"
																},
																"nativeSrc": "8683:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8683:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8672:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8672:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8620:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8644:5:13",
														"nodeType": "YulTypedName",
														"src": "8644:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8654:7:13",
														"nodeType": "YulTypedName",
														"src": "8654:7:13",
														"type": ""
													}
												],
												"src": "8620:90:13"
											},
											{
												"body": {
													"nativeSrc": "8775:50:13",
													"nodeType": "YulBlock",
													"src": "8775:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8792:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8792:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8812:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8812:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "8797:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "8797:14:13"
																		},
																		"nativeSrc": "8797:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8797:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8785:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8785:6:13"
																},
																"nativeSrc": "8785:34:13",
																"nodeType": "YulFunctionCall",
																"src": "8785:34:13"
															},
															"nativeSrc": "8785:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "8785:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "8716:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8763:5:13",
														"nodeType": "YulTypedName",
														"src": "8763:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8770:3:13",
														"nodeType": "YulTypedName",
														"src": "8770:3:13",
														"type": ""
													}
												],
												"src": "8716:109:13"
											},
											{
												"body": {
													"nativeSrc": "8951:200:13",
													"nodeType": "YulBlock",
													"src": "8951:200:13",
													"statements": [
														{
															"nativeSrc": "8961:26:13",
															"nodeType": "YulAssignment",
															"src": "8961:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8973:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8973:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8984:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8984:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8969:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:13"
																},
																"nativeSrc": "8969:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8969:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8961:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8961:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9035:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9035:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9048:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9048:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9059:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9059:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9044:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9044:3:13"
																		},
																		"nativeSrc": "9044:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9044:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8997:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "8997:37:13"
																},
																"nativeSrc": "8997:65:13",
																"nodeType": "YulFunctionCall",
																"src": "8997:65:13"
															},
															"nativeSrc": "8997:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "8997:65:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9116:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9116:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9129:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9129:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9140:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9140:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9125:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9125:3:13"
																		},
																		"nativeSrc": "9125:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9125:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "9072:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9072:43:13"
																},
																"nativeSrc": "9072:72:13",
																"nodeType": "YulFunctionCall",
																"src": "9072:72:13"
															},
															"nativeSrc": "9072:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "9072:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed",
												"nativeSrc": "8831:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8915:9:13",
														"nodeType": "YulTypedName",
														"src": "8915:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8927:6:13",
														"nodeType": "YulTypedName",
														"src": "8927:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8935:6:13",
														"nodeType": "YulTypedName",
														"src": "8935:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8946:4:13",
														"nodeType": "YulTypedName",
														"src": "8946:4:13",
														"type": ""
													}
												],
												"src": "8831:320:13"
											},
											{
												"body": {
													"nativeSrc": "9185:152:13",
													"nodeType": "YulBlock",
													"src": "9185:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9202:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9202:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9205:77:13",
																		"nodeType": "YulLiteral",
																		"src": "9205:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9195:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:13"
																},
																"nativeSrc": "9195:88:13",
																"nodeType": "YulFunctionCall",
																"src": "9195:88:13"
															},
															"nativeSrc": "9195:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "9195:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9299:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9299:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9302:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9302:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9292:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9292:6:13"
																},
																"nativeSrc": "9292:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9292:15:13"
															},
															"nativeSrc": "9292:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9292:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9323:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9323:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9326:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9326:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9316:6:13"
																},
																"nativeSrc": "9316:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9316:15:13"
															},
															"nativeSrc": "9316:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9316:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9157:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9157:180:13"
											},
											{
												"body": {
													"nativeSrc": "9381:188:13",
													"nodeType": "YulBlock",
													"src": "9381:188:13",
													"statements": [
														{
															"nativeSrc": "9391:31:13",
															"nodeType": "YulAssignment",
															"src": "9391:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9416:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9416:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "9400:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "9400:15:13"
																},
																"nativeSrc": "9400:22:13",
																"nodeType": "YulFunctionCall",
																"src": "9400:22:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9391:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9391:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9512:22:13",
																"nodeType": "YulBlock",
																"src": "9512:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9514:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9514:16:13"
																			},
																			"nativeSrc": "9514:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9514:18:13"
																		},
																		"nativeSrc": "9514:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9514:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9437:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9437:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9444:66:13",
																		"nodeType": "YulLiteral",
																		"src": "9444:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9434:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9434:2:13"
																},
																"nativeSrc": "9434:77:13",
																"nodeType": "YulFunctionCall",
																"src": "9434:77:13"
															},
															"nativeSrc": "9431:103:13",
															"nodeType": "YulIf",
															"src": "9431:103:13"
														},
														{
															"nativeSrc": "9543:20:13",
															"nodeType": "YulAssignment",
															"src": "9543:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9554:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9554:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9557:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9557:5:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9550:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9550:3:13"
																},
																"nativeSrc": "9550:13:13",
																"nodeType": "YulFunctionCall",
																"src": "9550:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9543:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9543:3:13"
																}
															]
														}
													]
												},
												"name": "negate_t_int24",
												"nativeSrc": "9343:226:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9367:5:13",
														"nodeType": "YulTypedName",
														"src": "9367:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9377:3:13",
														"nodeType": "YulTypedName",
														"src": "9377:3:13",
														"type": ""
													}
												],
												"src": "9343:226:13"
											},
											{
												"body": {
													"nativeSrc": "9619:180:13",
													"nodeType": "YulBlock",
													"src": "9619:180:13",
													"statements": [
														{
															"nativeSrc": "9629:25:13",
															"nodeType": "YulAssignment",
															"src": "9629:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9652:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9652:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nativeSrc": "9634:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9634:17:13"
																},
																"nativeSrc": "9634:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9634:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9629:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9629:1:13"
																}
															]
														},
														{
															"nativeSrc": "9663:25:13",
															"nodeType": "YulAssignment",
															"src": "9663:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9686:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9686:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nativeSrc": "9668:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9668:17:13"
																},
																"nativeSrc": "9668:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9668:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9663:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9663:1:13"
																}
															]
														},
														{
															"nativeSrc": "9697:16:13",
															"nodeType": "YulAssignment",
															"src": "9697:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9708:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9708:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9711:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9711:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9704:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:13"
																},
																"nativeSrc": "9704:9:13",
																"nodeType": "YulFunctionCall",
																"src": "9704:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9697:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9697:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9770:22:13",
																"nodeType": "YulBlock",
																"src": "9770:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9772:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9772:16:13"
																			},
																			"nativeSrc": "9772:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9772:18:13"
																		},
																		"nativeSrc": "9772:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9772:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "9729:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9729:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9734:34:13",
																		"nodeType": "YulLiteral",
																		"src": "9734:34:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9726:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9726:2:13"
																},
																"nativeSrc": "9726:43:13",
																"nodeType": "YulFunctionCall",
																"src": "9726:43:13"
															},
															"nativeSrc": "9723:69:13",
															"nodeType": "YulIf",
															"src": "9723:69:13"
														}
													]
												},
												"name": "checked_add_t_uint128",
												"nativeSrc": "9575:224:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9606:1:13",
														"nodeType": "YulTypedName",
														"src": "9606:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9609:1:13",
														"nodeType": "YulTypedName",
														"src": "9609:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9615:3:13",
														"nodeType": "YulTypedName",
														"src": "9615:3:13",
														"type": ""
													}
												],
												"src": "9575:224:13"
											},
											{
												"body": {
													"nativeSrc": "9900:73:13",
													"nodeType": "YulBlock",
													"src": "9900:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9917:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9917:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9922:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9922:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9910:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9910:6:13"
																},
																"nativeSrc": "9910:19:13",
																"nodeType": "YulFunctionCall",
																"src": "9910:19:13"
															},
															"nativeSrc": "9910:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "9910:19:13"
														},
														{
															"nativeSrc": "9938:29:13",
															"nodeType": "YulAssignment",
															"src": "9938:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9957:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9957:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9962:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9962:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9953:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9953:3:13"
																},
																"nativeSrc": "9953:14:13",
																"nodeType": "YulFunctionCall",
																"src": "9953:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9938:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "9938:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9805:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9872:3:13",
														"nodeType": "YulTypedName",
														"src": "9872:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9877:6:13",
														"nodeType": "YulTypedName",
														"src": "9877:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9888:11:13",
														"nodeType": "YulTypedName",
														"src": "9888:11:13",
														"type": ""
													}
												],
												"src": "9805:168:13"
											},
											{
												"body": {
													"nativeSrc": "10043:84:13",
													"nodeType": "YulBlock",
													"src": "10043:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10067:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10067:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10072:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10072:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10077:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10077:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10054:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "10054:12:13"
																},
																"nativeSrc": "10054:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10054:30:13"
															},
															"nativeSrc": "10054:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "10054:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10104:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10104:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10109:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10109:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10100:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10100:3:13"
																		},
																		"nativeSrc": "10100:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10100:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10118:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10118:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10093:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:13"
																},
																"nativeSrc": "10093:27:13",
																"nodeType": "YulFunctionCall",
																"src": "10093:27:13"
															},
															"nativeSrc": "10093:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "10093:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9979:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10025:3:13",
														"nodeType": "YulTypedName",
														"src": "10025:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10030:3:13",
														"nodeType": "YulTypedName",
														"src": "10030:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10035:6:13",
														"nodeType": "YulTypedName",
														"src": "10035:6:13",
														"type": ""
													}
												],
												"src": "9979:148:13"
											},
											{
												"body": {
													"nativeSrc": "10181:54:13",
													"nodeType": "YulBlock",
													"src": "10181:54:13",
													"statements": [
														{
															"nativeSrc": "10191:38:13",
															"nodeType": "YulAssignment",
															"src": "10191:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10209:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10209:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10216:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10216:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10205:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10205:3:13"
																		},
																		"nativeSrc": "10205:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10205:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10225:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10225:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10221:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10221:3:13"
																		},
																		"nativeSrc": "10221:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10221:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10201:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10201:3:13"
																},
																"nativeSrc": "10201:28:13",
																"nodeType": "YulFunctionCall",
																"src": "10201:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10191:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10191:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "10133:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10164:5:13",
														"nodeType": "YulTypedName",
														"src": "10164:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10174:6:13",
														"nodeType": "YulTypedName",
														"src": "10174:6:13",
														"type": ""
													}
												],
												"src": "10133:102:13"
											},
											{
												"body": {
													"nativeSrc": "10363:214:13",
													"nodeType": "YulBlock",
													"src": "10363:214:13",
													"statements": [
														{
															"nativeSrc": "10373:77:13",
															"nodeType": "YulAssignment",
															"src": "10373:77:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10438:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10438:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10443:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10443:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10380:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "10380:57:13"
																},
																"nativeSrc": "10380:70:13",
																"nodeType": "YulFunctionCall",
																"src": "10380:70:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10373:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10373:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "10497:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10497:5:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10504:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10504:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10509:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10509:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10460:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "10460:36:13"
																},
																"nativeSrc": "10460:56:13",
																"nodeType": "YulFunctionCall",
																"src": "10460:56:13"
															},
															"nativeSrc": "10460:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "10460:56:13"
														},
														{
															"nativeSrc": "10525:46:13",
															"nodeType": "YulAssignment",
															"src": "10525:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10536:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10536:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10563:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10563:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10541:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "10541:21:13"
																		},
																		"nativeSrc": "10541:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10541:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10532:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10532:3:13"
																},
																"nativeSrc": "10532:39:13",
																"nodeType": "YulFunctionCall",
																"src": "10532:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10525:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10525:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "10263:314:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "10336:5:13",
														"nodeType": "YulTypedName",
														"src": "10336:5:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10343:6:13",
														"nodeType": "YulTypedName",
														"src": "10343:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10351:3:13",
														"nodeType": "YulTypedName",
														"src": "10351:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10359:3:13",
														"nodeType": "YulTypedName",
														"src": "10359:3:13",
														"type": ""
													}
												],
												"src": "10263:314:13"
											},
											{
												"body": {
													"nativeSrc": "10765:367:13",
													"nodeType": "YulBlock",
													"src": "10765:367:13",
													"statements": [
														{
															"nativeSrc": "10775:26:13",
															"nodeType": "YulAssignment",
															"src": "10775:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10787:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10787:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10798:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10798:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10783:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10783:3:13"
																},
																"nativeSrc": "10783:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10783:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10775:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10775:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10855:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10855:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10868:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10868:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10879:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10879:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10864:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10864:3:13"
																		},
																		"nativeSrc": "10864:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10864:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10811:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10811:43:13"
																},
																"nativeSrc": "10811:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10811:71:13"
															},
															"nativeSrc": "10811:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10811:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10936:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10936:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10949:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10949:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10960:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10960:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10945:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10945:3:13"
																		},
																		"nativeSrc": "10945:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10945:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10892:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10892:43:13"
																},
																"nativeSrc": "10892:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10892:72:13"
															},
															"nativeSrc": "10892:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10892:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10985:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10985:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10996:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10996:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10981:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10981:3:13"
																		},
																		"nativeSrc": "10981:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10981:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11005:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11005:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11011:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11011:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11001:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11001:3:13"
																		},
																		"nativeSrc": "11001:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11001:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10974:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10974:6:13"
																},
																"nativeSrc": "10974:48:13",
																"nodeType": "YulFunctionCall",
																"src": "10974:48:13"
															},
															"nativeSrc": "10974:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "10974:48:13"
														},
														{
															"nativeSrc": "11031:94:13",
															"nodeType": "YulAssignment",
															"src": "11031:94:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11103:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11103:6:13"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11111:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11111:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11120:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11120:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "11039:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "11039:63:13"
																},
																"nativeSrc": "11039:86:13",
																"nodeType": "YulFunctionCall",
																"src": "11039:86:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11031:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11031:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10583:549:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10713:9:13",
														"nodeType": "YulTypedName",
														"src": "10713:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10725:6:13",
														"nodeType": "YulTypedName",
														"src": "10725:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10733:6:13",
														"nodeType": "YulTypedName",
														"src": "10733:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10741:6:13",
														"nodeType": "YulTypedName",
														"src": "10741:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10749:6:13",
														"nodeType": "YulTypedName",
														"src": "10749:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10760:4:13",
														"nodeType": "YulTypedName",
														"src": "10760:4:13",
														"type": ""
													}
												],
												"src": "10583:549:13"
											},
											{
												"body": {
													"nativeSrc": "11182:147:13",
													"nodeType": "YulBlock",
													"src": "11182:147:13",
													"statements": [
														{
															"nativeSrc": "11192:25:13",
															"nodeType": "YulAssignment",
															"src": "11192:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11215:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11215:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11197:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11197:17:13"
																},
																"nativeSrc": "11197:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11197:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11192:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11192:1:13"
																}
															]
														},
														{
															"nativeSrc": "11226:25:13",
															"nodeType": "YulAssignment",
															"src": "11226:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11249:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11249:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11231:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11231:17:13"
																},
																"nativeSrc": "11231:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11231:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11226:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11226:1:13"
																}
															]
														},
														{
															"nativeSrc": "11260:16:13",
															"nodeType": "YulAssignment",
															"src": "11260:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11271:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11271:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11274:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11274:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11267:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11267:3:13"
																},
																"nativeSrc": "11267:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11267:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11260:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11260:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11300:22:13",
																"nodeType": "YulBlock",
																"src": "11300:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11302:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11302:16:13"
																			},
																			"nativeSrc": "11302:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11302:18:13"
																		},
																		"nativeSrc": "11302:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11302:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11292:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11292:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11295:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11295:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11289:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11289:2:13"
																},
																"nativeSrc": "11289:10:13",
																"nodeType": "YulFunctionCall",
																"src": "11289:10:13"
															},
															"nativeSrc": "11286:36:13",
															"nodeType": "YulIf",
															"src": "11286:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11138:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11169:1:13",
														"nodeType": "YulTypedName",
														"src": "11169:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11172:1:13",
														"nodeType": "YulTypedName",
														"src": "11172:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11178:3:13",
														"nodeType": "YulTypedName",
														"src": "11178:3:13",
														"type": ""
													}
												],
												"src": "11138:191:13"
											},
											{
												"body": {
													"nativeSrc": "11517:371:13",
													"nodeType": "YulBlock",
													"src": "11517:371:13",
													"statements": [
														{
															"nativeSrc": "11527:27:13",
															"nodeType": "YulAssignment",
															"src": "11527:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11539:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11539:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11550:3:13",
																		"nodeType": "YulLiteral",
																		"src": "11550:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11535:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:13"
																},
																"nativeSrc": "11535:19:13",
																"nodeType": "YulFunctionCall",
																"src": "11535:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11527:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11527:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11608:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11608:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11621:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11621:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11632:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11632:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11617:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11617:3:13"
																		},
																		"nativeSrc": "11617:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11617:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11564:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11564:43:13"
																},
																"nativeSrc": "11564:71:13",
																"nodeType": "YulFunctionCall",
																"src": "11564:71:13"
															},
															"nativeSrc": "11564:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "11564:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11689:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11689:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11702:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11702:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11713:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11713:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11698:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11698:3:13"
																		},
																		"nativeSrc": "11698:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11698:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "11645:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11645:43:13"
																},
																"nativeSrc": "11645:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11645:72:13"
															},
															"nativeSrc": "11645:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11645:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11771:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11771:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11784:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11784:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11795:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11795:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11780:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11780:3:13"
																		},
																		"nativeSrc": "11780:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11780:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11727:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11727:43:13"
																},
																"nativeSrc": "11727:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11727:72:13"
															},
															"nativeSrc": "11727:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11727:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11853:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11853:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11866:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11866:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11877:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11877:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11862:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11862:3:13"
																		},
																		"nativeSrc": "11862:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11862:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11809:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "11809:43:13"
																},
																"nativeSrc": "11809:72:13",
																"nodeType": "YulFunctionCall",
																"src": "11809:72:13"
															},
															"nativeSrc": "11809:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "11809:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11335:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11465:9:13",
														"nodeType": "YulTypedName",
														"src": "11465:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11477:6:13",
														"nodeType": "YulTypedName",
														"src": "11477:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11485:6:13",
														"nodeType": "YulTypedName",
														"src": "11485:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11493:6:13",
														"nodeType": "YulTypedName",
														"src": "11493:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11501:6:13",
														"nodeType": "YulTypedName",
														"src": "11501:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11512:4:13",
														"nodeType": "YulTypedName",
														"src": "11512:4:13",
														"type": ""
													}
												],
												"src": "11335:553:13"
											},
											{
												"body": {
													"nativeSrc": "11933:189:13",
													"nodeType": "YulBlock",
													"src": "11933:189:13",
													"statements": [
														{
															"nativeSrc": "11943:32:13",
															"nodeType": "YulAssignment",
															"src": "11943:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11969:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11969:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "11952:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "11952:16:13"
																},
																"nativeSrc": "11952:23:13",
																"nodeType": "YulFunctionCall",
																"src": "11952:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11943:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11943:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12065:22:13",
																"nodeType": "YulBlock",
																"src": "12065:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12067:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12067:16:13"
																			},
																			"nativeSrc": "12067:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12067:18:13"
																		},
																		"nativeSrc": "12067:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12067:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11990:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11990:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11997:66:13",
																		"nodeType": "YulLiteral",
																		"src": "11997:66:13",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11987:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11987:2:13"
																},
																"nativeSrc": "11987:77:13",
																"nodeType": "YulFunctionCall",
																"src": "11987:77:13"
															},
															"nativeSrc": "11984:103:13",
															"nodeType": "YulIf",
															"src": "11984:103:13"
														},
														{
															"nativeSrc": "12096:20:13",
															"nodeType": "YulAssignment",
															"src": "12096:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12107:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12107:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12110:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12110:5:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12103:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12103:3:13"
																},
																"nativeSrc": "12103:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12103:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12096:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12096:3:13"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "11894:228:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11919:5:13",
														"nodeType": "YulTypedName",
														"src": "11919:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11929:3:13",
														"nodeType": "YulTypedName",
														"src": "11929:3:13",
														"type": ""
													}
												],
												"src": "11894:228:13"
											},
											{
												"body": {
													"nativeSrc": "12254:206:13",
													"nodeType": "YulBlock",
													"src": "12254:206:13",
													"statements": [
														{
															"nativeSrc": "12264:26:13",
															"nodeType": "YulAssignment",
															"src": "12264:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12276:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12276:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12287:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12287:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12272:3:13"
																},
																"nativeSrc": "12272:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12272:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12264:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12264:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12344:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12344:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12357:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12357:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12368:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12368:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12353:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12353:3:13"
																		},
																		"nativeSrc": "12353:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12353:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12300:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12300:43:13"
																},
																"nativeSrc": "12300:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12300:71:13"
															},
															"nativeSrc": "12300:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12300:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12425:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12425:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12438:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12438:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12449:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12449:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12434:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12434:3:13"
																		},
																		"nativeSrc": "12434:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12434:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12381:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12381:43:13"
																},
																"nativeSrc": "12381:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12381:72:13"
															},
															"nativeSrc": "12381:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12381:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12128:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12218:9:13",
														"nodeType": "YulTypedName",
														"src": "12218:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12230:6:13",
														"nodeType": "YulTypedName",
														"src": "12230:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12238:6:13",
														"nodeType": "YulTypedName",
														"src": "12238:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12249:4:13",
														"nodeType": "YulTypedName",
														"src": "12249:4:13",
														"type": ""
													}
												],
												"src": "12128:332:13"
											},
											{
												"body": {
													"nativeSrc": "12506:76:13",
													"nodeType": "YulBlock",
													"src": "12506:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12560:16:13",
																"nodeType": "YulBlock",
																"src": "12560:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12569:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12569:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12572:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12572:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12562:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12562:6:13"
																			},
																			"nativeSrc": "12562:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12562:12:13"
																		},
																		"nativeSrc": "12562:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12562:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12529:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12529:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12551:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "12551:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12536:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "12536:14:13"
																				},
																				"nativeSrc": "12536:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12536:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12526:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12526:2:13"
																		},
																		"nativeSrc": "12526:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12526:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12519:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12519:6:13"
																},
																"nativeSrc": "12519:40:13",
																"nodeType": "YulFunctionCall",
																"src": "12519:40:13"
															},
															"nativeSrc": "12516:60:13",
															"nodeType": "YulIf",
															"src": "12516:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12466:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12499:5:13",
														"nodeType": "YulTypedName",
														"src": "12499:5:13",
														"type": ""
													}
												],
												"src": "12466:116:13"
											},
											{
												"body": {
													"nativeSrc": "12648:77:13",
													"nodeType": "YulBlock",
													"src": "12648:77:13",
													"statements": [
														{
															"nativeSrc": "12658:22:13",
															"nodeType": "YulAssignment",
															"src": "12658:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12673:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12673:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12667:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12667:5:13"
																},
																"nativeSrc": "12667:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12667:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12658:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12658:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12713:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12713:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12689:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "12689:23:13"
																},
																"nativeSrc": "12689:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12689:30:13"
															},
															"nativeSrc": "12689:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "12689:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12588:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12626:6:13",
														"nodeType": "YulTypedName",
														"src": "12626:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12634:3:13",
														"nodeType": "YulTypedName",
														"src": "12634:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12642:5:13",
														"nodeType": "YulTypedName",
														"src": "12642:5:13",
														"type": ""
													}
												],
												"src": "12588:137:13"
											},
											{
												"body": {
													"nativeSrc": "12805:271:13",
													"nodeType": "YulBlock",
													"src": "12805:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12851:83:13",
																"nodeType": "YulBlock",
																"src": "12851:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12853:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12853:77:13"
																			},
																			"nativeSrc": "12853:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12853:79:13"
																		},
																		"nativeSrc": "12853:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12853:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12826:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12826:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12835:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12835:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12822:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12822:3:13"
																		},
																		"nativeSrc": "12822:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12822:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12847:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12847:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12818:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12818:3:13"
																},
																"nativeSrc": "12818:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12818:32:13"
															},
															"nativeSrc": "12815:119:13",
															"nodeType": "YulIf",
															"src": "12815:119:13"
														},
														{
															"nativeSrc": "12944:125:13",
															"nodeType": "YulBlock",
															"src": "12944:125:13",
															"statements": [
																{
																	"nativeSrc": "12959:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12959:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12973:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12973:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12963:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12963:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12988:71:13",
																	"nodeType": "YulAssignment",
																	"src": "12988:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13031:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13031:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13042:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13042:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13027:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13027:3:13"
																				},
																				"nativeSrc": "13027:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13027:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13051:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13051:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12998:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "12998:28:13"
																		},
																		"nativeSrc": "12998:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12998:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12988:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12988:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12731:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12775:9:13",
														"nodeType": "YulTypedName",
														"src": "12775:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12786:7:13",
														"nodeType": "YulTypedName",
														"src": "12786:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12798:6:13",
														"nodeType": "YulTypedName",
														"src": "12798:6:13",
														"type": ""
													}
												],
												"src": "12731:345:13"
											},
											{
												"body": {
													"nativeSrc": "13260:363:13",
													"nodeType": "YulBlock",
													"src": "13260:363:13",
													"statements": [
														{
															"nativeSrc": "13270:26:13",
															"nodeType": "YulAssignment",
															"src": "13270:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13282:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13282:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13293:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13293:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13278:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13278:3:13"
																},
																"nativeSrc": "13278:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13278:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13270:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13270:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13348:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13348:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13361:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13361:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13372:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13372:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13357:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13357:3:13"
																		},
																		"nativeSrc": "13357:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13357:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "13306:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "13306:41:13"
																},
																"nativeSrc": "13306:69:13",
																"nodeType": "YulFunctionCall",
																"src": "13306:69:13"
															},
															"nativeSrc": "13306:69:13",
															"nodeType": "YulExpressionStatement",
															"src": "13306:69:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13427:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13427:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13440:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13440:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13451:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13451:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13436:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13436:3:13"
																		},
																		"nativeSrc": "13436:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13436:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "13385:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "13385:41:13"
																},
																"nativeSrc": "13385:70:13",
																"nodeType": "YulFunctionCall",
																"src": "13385:70:13"
															},
															"nativeSrc": "13385:70:13",
															"nodeType": "YulExpressionStatement",
															"src": "13385:70:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13476:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13476:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13487:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13487:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13472:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13472:3:13"
																		},
																		"nativeSrc": "13472:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13472:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13496:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13496:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13502:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13502:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13492:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13492:3:13"
																		},
																		"nativeSrc": "13492:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13492:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13465:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13465:6:13"
																},
																"nativeSrc": "13465:48:13",
																"nodeType": "YulFunctionCall",
																"src": "13465:48:13"
															},
															"nativeSrc": "13465:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "13465:48:13"
														},
														{
															"nativeSrc": "13522:94:13",
															"nodeType": "YulAssignment",
															"src": "13522:94:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13594:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13594:6:13"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "13602:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13602:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13611:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13611:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13530:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "13530:63:13"
																},
																"nativeSrc": "13530:86:13",
																"nodeType": "YulFunctionCall",
																"src": "13530:86:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13522:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13522:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "13082:541:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13208:9:13",
														"nodeType": "YulTypedName",
														"src": "13208:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13220:6:13",
														"nodeType": "YulTypedName",
														"src": "13220:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13228:6:13",
														"nodeType": "YulTypedName",
														"src": "13228:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13236:6:13",
														"nodeType": "YulTypedName",
														"src": "13236:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13244:6:13",
														"nodeType": "YulTypedName",
														"src": "13244:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13255:4:13",
														"nodeType": "YulTypedName",
														"src": "13255:4:13",
														"type": ""
													}
												],
												"src": "13082:541:13"
											},
											{
												"body": {
													"nativeSrc": "13831:446:13",
													"nodeType": "YulBlock",
													"src": "13831:446:13",
													"statements": [
														{
															"nativeSrc": "13841:27:13",
															"nodeType": "YulAssignment",
															"src": "13841:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13853:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13853:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13864:3:13",
																		"nodeType": "YulLiteral",
																		"src": "13864:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13849:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13849:3:13"
																},
																"nativeSrc": "13849:19:13",
																"nodeType": "YulFunctionCall",
																"src": "13849:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13841:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13841:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13920:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13920:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13933:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13933:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13944:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13944:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13929:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13929:3:13"
																		},
																		"nativeSrc": "13929:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13929:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "13878:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "13878:41:13"
																},
																"nativeSrc": "13878:69:13",
																"nodeType": "YulFunctionCall",
																"src": "13878:69:13"
															},
															"nativeSrc": "13878:69:13",
															"nodeType": "YulExpressionStatement",
															"src": "13878:69:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13999:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13999:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14012:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14012:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14023:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14023:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14008:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14008:3:13"
																		},
																		"nativeSrc": "14008:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14008:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "13957:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "13957:41:13"
																},
																"nativeSrc": "13957:70:13",
																"nodeType": "YulFunctionCall",
																"src": "13957:70:13"
															},
															"nativeSrc": "13957:70:13",
															"nodeType": "YulExpressionStatement",
															"src": "13957:70:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14081:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14081:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14094:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14094:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14105:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14105:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14090:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14090:3:13"
																		},
																		"nativeSrc": "14090:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14090:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "14037:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14037:43:13"
																},
																"nativeSrc": "14037:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14037:72:13"
															},
															"nativeSrc": "14037:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14037:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14163:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14163:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14176:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14176:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14187:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14187:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14172:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14172:3:13"
																		},
																		"nativeSrc": "14172:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14172:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "14119:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14119:43:13"
																},
																"nativeSrc": "14119:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14119:72:13"
															},
															"nativeSrc": "14119:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14119:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14241:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14241:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14254:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14254:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14265:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14265:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14250:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14250:3:13"
																		},
																		"nativeSrc": "14250:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14250:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "14201:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "14201:39:13"
																},
																"nativeSrc": "14201:69:13",
																"nodeType": "YulFunctionCall",
																"src": "14201:69:13"
															},
															"nativeSrc": "14201:69:13",
															"nodeType": "YulExpressionStatement",
															"src": "14201:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed",
												"nativeSrc": "13629:648:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13771:9:13",
														"nodeType": "YulTypedName",
														"src": "13771:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13783:6:13",
														"nodeType": "YulTypedName",
														"src": "13783:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13791:6:13",
														"nodeType": "YulTypedName",
														"src": "13791:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13799:6:13",
														"nodeType": "YulTypedName",
														"src": "13799:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13807:6:13",
														"nodeType": "YulTypedName",
														"src": "13807:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13815:6:13",
														"nodeType": "YulTypedName",
														"src": "13815:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13826:4:13",
														"nodeType": "YulTypedName",
														"src": "13826:4:13",
														"type": ""
													}
												],
												"src": "13629:648:13"
											},
											{
												"body": {
													"nativeSrc": "14311:152:13",
													"nodeType": "YulBlock",
													"src": "14311:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14328:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14328:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14331:77:13",
																		"nodeType": "YulLiteral",
																		"src": "14331:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14321:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14321:6:13"
																},
																"nativeSrc": "14321:88:13",
																"nodeType": "YulFunctionCall",
																"src": "14321:88:13"
															},
															"nativeSrc": "14321:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "14321:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14425:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14425:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14428:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14428:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14418:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14418:6:13"
																},
																"nativeSrc": "14418:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14418:15:13"
															},
															"nativeSrc": "14418:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14418:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14449:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14449:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14452:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14452:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14442:6:13"
																},
																"nativeSrc": "14442:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14442:15:13"
															},
															"nativeSrc": "14442:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "14442:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14283:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14283:180:13"
											},
											{
												"body": {
													"nativeSrc": "14501:139:13",
													"nodeType": "YulBlock",
													"src": "14501:139:13",
													"statements": [
														{
															"nativeSrc": "14511:23:13",
															"nodeType": "YulAssignment",
															"src": "14511:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14532:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14532:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "14516:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "14516:15:13"
																},
																"nativeSrc": "14516:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14516:18:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14511:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14511:1:13"
																}
															]
														},
														{
															"nativeSrc": "14543:23:13",
															"nodeType": "YulAssignment",
															"src": "14543:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14564:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14564:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "14548:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "14548:15:13"
																},
																"nativeSrc": "14548:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14548:18:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14543:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14543:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14588:22:13",
																"nodeType": "YulBlock",
																"src": "14588:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14590:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14590:16:13"
																			},
																			"nativeSrc": "14590:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14590:18:13"
																		},
																		"nativeSrc": "14590:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14590:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14585:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14585:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14578:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14578:6:13"
																},
																"nativeSrc": "14578:9:13",
																"nodeType": "YulFunctionCall",
																"src": "14578:9:13"
															},
															"nativeSrc": "14575:35:13",
															"nodeType": "YulIf",
															"src": "14575:35:13"
														},
														{
															"nativeSrc": "14619:15:13",
															"nodeType": "YulAssignment",
															"src": "14619:15:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14629:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14629:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14632:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14632:1:13"
																	}
																],
																"functionName": {
																	"name": "smod",
																	"nativeSrc": "14624:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14624:4:13"
																},
																"nativeSrc": "14624:10:13",
																"nodeType": "YulFunctionCall",
																"src": "14624:10:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14619:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14619:1:13"
																}
															]
														}
													]
												},
												"name": "mod_t_int24",
												"nativeSrc": "14469:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14490:1:13",
														"nodeType": "YulTypedName",
														"src": "14490:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14493:1:13",
														"nodeType": "YulTypedName",
														"src": "14493:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14499:1:13",
														"nodeType": "YulTypedName",
														"src": "14499:1:13",
														"type": ""
													}
												],
												"src": "14469:171:13"
											},
											{
												"body": {
													"nativeSrc": "14686:342:13",
													"nodeType": "YulBlock",
													"src": "14686:342:13",
													"statements": [
														{
															"nativeSrc": "14696:23:13",
															"nodeType": "YulAssignment",
															"src": "14696:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14717:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14717:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "14701:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "14701:15:13"
																},
																"nativeSrc": "14701:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14701:18:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14696:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14696:1:13"
																}
															]
														},
														{
															"nativeSrc": "14728:23:13",
															"nodeType": "YulAssignment",
															"src": "14728:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14749:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14749:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "14733:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "14733:15:13"
																},
																"nativeSrc": "14733:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14733:18:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14728:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14728:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14773:22:13",
																"nodeType": "YulBlock",
																"src": "14773:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14775:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14775:16:13"
																			},
																			"nativeSrc": "14775:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14775:18:13"
																		},
																		"nativeSrc": "14775:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14775:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14770:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14770:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14763:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14763:6:13"
																},
																"nativeSrc": "14763:9:13",
																"nodeType": "YulFunctionCall",
																"src": "14763:9:13"
															},
															"nativeSrc": "14760:35:13",
															"nodeType": "YulIf",
															"src": "14760:35:13"
														},
														{
															"body": {
																"nativeSrc": "14975:22:13",
																"nodeType": "YulBlock",
																"src": "14975:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14977:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14977:16:13"
																			},
																			"nativeSrc": "14977:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14977:18:13"
																		},
																		"nativeSrc": "14977:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14977:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "14864:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "14864:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14867:66:13",
																				"nodeType": "YulLiteral",
																				"src": "14867:66:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14861:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "14861:2:13"
																		},
																		"nativeSrc": "14861:73:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14861:73:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "14951:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "14951:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14958:1:13",
																						"nodeType": "YulLiteral",
																						"src": "14958:1:13",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14961:1:13",
																						"nodeType": "YulLiteral",
																						"src": "14961:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14954:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14954:3:13"
																				},
																				"nativeSrc": "14954:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14954:9:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14948:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "14948:2:13"
																		},
																		"nativeSrc": "14948:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14948:16:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14844:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14844:3:13"
																},
																"nativeSrc": "14844:130:13",
																"nodeType": "YulFunctionCall",
																"src": "14844:130:13"
															},
															"nativeSrc": "14841:156:13",
															"nodeType": "YulIf",
															"src": "14841:156:13"
														},
														{
															"nativeSrc": "15007:15:13",
															"nodeType": "YulAssignment",
															"src": "15007:15:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15017:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15017:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15020:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15020:1:13"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "15012:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15012:4:13"
																},
																"nativeSrc": "15012:10:13",
																"nodeType": "YulFunctionCall",
																"src": "15012:10:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15007:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15007:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int24",
												"nativeSrc": "14646:382:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14675:1:13",
														"nodeType": "YulTypedName",
														"src": "14675:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14678:1:13",
														"nodeType": "YulTypedName",
														"src": "14678:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14684:1:13",
														"nodeType": "YulTypedName",
														"src": "14684:1:13",
														"type": ""
													}
												],
												"src": "14646:382:13"
											},
											{
												"body": {
													"nativeSrc": "15076:52:13",
													"nodeType": "YulBlock",
													"src": "15076:52:13",
													"statements": [
														{
															"nativeSrc": "15086:35:13",
															"nodeType": "YulAssignment",
															"src": "15086:35:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15111:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:13",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15115:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15115:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15107:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15107:3:13"
																},
																"nativeSrc": "15107:14:13",
																"nodeType": "YulFunctionCall",
																"src": "15107:14:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15086:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "15086:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "15034:94:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15057:5:13",
														"nodeType": "YulTypedName",
														"src": "15057:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15067:8:13",
														"nodeType": "YulTypedName",
														"src": "15067:8:13",
														"type": ""
													}
												],
												"src": "15034:94:13"
											},
											{
												"body": {
													"nativeSrc": "15181:47:13",
													"nodeType": "YulBlock",
													"src": "15181:47:13",
													"statements": [
														{
															"nativeSrc": "15191:31:13",
															"nodeType": "YulAssignment",
															"src": "15191:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15216:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15216:5:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "15202:13:13",
																	"nodeType": "YulIdentifier",
																	"src": "15202:13:13"
																},
																"nativeSrc": "15202:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15202:20:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15191:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "15191:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "15134:94:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15163:5:13",
														"nodeType": "YulTypedName",
														"src": "15163:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15173:7:13",
														"nodeType": "YulTypedName",
														"src": "15173:7:13",
														"type": ""
													}
												],
												"src": "15134:94:13"
											},
											{
												"body": {
													"nativeSrc": "15281:53:13",
													"nodeType": "YulBlock",
													"src": "15281:53:13",
													"statements": [
														{
															"nativeSrc": "15291:37:13",
															"nodeType": "YulAssignment",
															"src": "15291:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15322:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15322:5:13"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "15302:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "15302:19:13"
																},
																"nativeSrc": "15302:26:13",
																"nodeType": "YulFunctionCall",
																"src": "15302:26:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15291:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "15291:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "15234:100:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15263:5:13",
														"nodeType": "YulTypedName",
														"src": "15263:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15273:7:13",
														"nodeType": "YulTypedName",
														"src": "15273:7:13",
														"type": ""
													}
												],
												"src": "15234:100:13"
											},
											{
												"body": {
													"nativeSrc": "15423:74:13",
													"nodeType": "YulBlock",
													"src": "15423:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15440:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15440:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15483:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "15483:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "15465:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "15465:17:13"
																				},
																				"nativeSrc": "15465:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15465:24:13"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "15445:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "15445:19:13"
																		},
																		"nativeSrc": "15445:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15445:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15433:6:13"
																},
																"nativeSrc": "15433:58:13",
																"nodeType": "YulFunctionCall",
																"src": "15433:58:13"
															},
															"nativeSrc": "15433:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "15433:58:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "15340:157:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15411:5:13",
														"nodeType": "YulTypedName",
														"src": "15411:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15418:3:13",
														"nodeType": "YulTypedName",
														"src": "15418:3:13",
														"type": ""
													}
												],
												"src": "15340:157:13"
											},
											{
												"body": {
													"nativeSrc": "15546:53:13",
													"nodeType": "YulBlock",
													"src": "15546:53:13",
													"statements": [
														{
															"nativeSrc": "15556:36:13",
															"nodeType": "YulAssignment",
															"src": "15556:36:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15581:3:13",
																		"nodeType": "YulLiteral",
																		"src": "15581:3:13",
																		"type": "",
																		"value": "232"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15586:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15586:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15577:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15577:3:13"
																},
																"nativeSrc": "15577:15:13",
																"nodeType": "YulFunctionCall",
																"src": "15577:15:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15556:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "15556:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_232",
												"nativeSrc": "15503:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15527:5:13",
														"nodeType": "YulTypedName",
														"src": "15527:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15537:8:13",
														"nodeType": "YulTypedName",
														"src": "15537:8:13",
														"type": ""
													}
												],
												"src": "15503:96:13"
											},
											{
												"body": {
													"nativeSrc": "15650:48:13",
													"nodeType": "YulBlock",
													"src": "15650:48:13",
													"statements": [
														{
															"nativeSrc": "15660:32:13",
															"nodeType": "YulAssignment",
															"src": "15660:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15686:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15686:5:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_232",
																	"nativeSrc": "15671:14:13",
																	"nodeType": "YulIdentifier",
																	"src": "15671:14:13"
																},
																"nativeSrc": "15671:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15671:21:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15660:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "15660:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_int24",
												"nativeSrc": "15605:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15632:5:13",
														"nodeType": "YulTypedName",
														"src": "15632:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15642:7:13",
														"nodeType": "YulTypedName",
														"src": "15642:7:13",
														"type": ""
													}
												],
												"src": "15605:93:13"
											},
											{
												"body": {
													"nativeSrc": "15783:70:13",
													"nodeType": "YulBlock",
													"src": "15783:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15800:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15800:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15839:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "15839:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "15823:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "15823:15:13"
																				},
																				"nativeSrc": "15823:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15823:22:13"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_int24",
																			"nativeSrc": "15805:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "15805:17:13"
																		},
																		"nativeSrc": "15805:41:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15805:41:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15793:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15793:6:13"
																},
																"nativeSrc": "15793:54:13",
																"nodeType": "YulFunctionCall",
																"src": "15793:54:13"
															},
															"nativeSrc": "15793:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "15793:54:13"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
												"nativeSrc": "15704:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15771:5:13",
														"nodeType": "YulTypedName",
														"src": "15771:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15778:3:13",
														"nodeType": "YulTypedName",
														"src": "15778:3:13",
														"type": ""
													}
												],
												"src": "15704:149:13"
											},
											{
												"body": {
													"nativeSrc": "16023:356:13",
													"nodeType": "YulBlock",
													"src": "16023:356:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16096:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16096:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16105:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16105:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "16034:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "16034:61:13"
																},
																"nativeSrc": "16034:75:13",
																"nodeType": "YulFunctionCall",
																"src": "16034:75:13"
															},
															"nativeSrc": "16034:75:13",
															"nodeType": "YulExpressionStatement",
															"src": "16034:75:13"
														},
														{
															"nativeSrc": "16118:19:13",
															"nodeType": "YulAssignment",
															"src": "16118:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16129:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16129:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16134:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16134:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16125:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16125:3:13"
																},
																"nativeSrc": "16125:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16125:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16118:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16205:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16205:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16214:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16214:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
																	"nativeSrc": "16147:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "16147:57:13"
																},
																"nativeSrc": "16147:71:13",
																"nodeType": "YulFunctionCall",
																"src": "16147:71:13"
															},
															"nativeSrc": "16147:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "16147:71:13"
														},
														{
															"nativeSrc": "16227:18:13",
															"nodeType": "YulAssignment",
															"src": "16227:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16238:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16238:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16243:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16243:1:13",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16234:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16234:3:13"
																},
																"nativeSrc": "16234:11:13",
																"nodeType": "YulFunctionCall",
																"src": "16234:11:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16227:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16227:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16313:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16313:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16322:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16322:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
																	"nativeSrc": "16255:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "16255:57:13"
																},
																"nativeSrc": "16255:71:13",
																"nodeType": "YulFunctionCall",
																"src": "16255:71:13"
															},
															"nativeSrc": "16255:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "16255:71:13"
														},
														{
															"nativeSrc": "16335:18:13",
															"nodeType": "YulAssignment",
															"src": "16335:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16346:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16346:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16351:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16351:1:13",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16342:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16342:3:13"
																},
																"nativeSrc": "16342:11:13",
																"nodeType": "YulFunctionCall",
																"src": "16342:11:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16335:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16335:3:13"
																}
															]
														},
														{
															"nativeSrc": "16363:10:13",
															"nodeType": "YulAssignment",
															"src": "16363:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "16370:3:13",
																"nodeType": "YulIdentifier",
																"src": "16370:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16363:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16363:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15859:520:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15986:3:13",
														"nodeType": "YulTypedName",
														"src": "15986:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15992:6:13",
														"nodeType": "YulTypedName",
														"src": "15992:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16000:6:13",
														"nodeType": "YulTypedName",
														"src": "16000:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16008:6:13",
														"nodeType": "YulTypedName",
														"src": "16008:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16019:3:13",
														"nodeType": "YulTypedName",
														"src": "16019:3:13",
														"type": ""
													}
												],
												"src": "15859:520:13"
											},
											{
												"body": {
													"nativeSrc": "16481:73:13",
													"nodeType": "YulBlock",
													"src": "16481:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16498:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16498:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16503:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16503:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16491:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16491:6:13"
																},
																"nativeSrc": "16491:19:13",
																"nodeType": "YulFunctionCall",
																"src": "16491:19:13"
															},
															"nativeSrc": "16491:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "16491:19:13"
														},
														{
															"nativeSrc": "16519:29:13",
															"nodeType": "YulAssignment",
															"src": "16519:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16538:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16538:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16543:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16543:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16534:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16534:3:13"
																},
																"nativeSrc": "16534:14:13",
																"nodeType": "YulFunctionCall",
																"src": "16534:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16519:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "16519:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "16385:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16453:3:13",
														"nodeType": "YulTypedName",
														"src": "16453:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16458:6:13",
														"nodeType": "YulTypedName",
														"src": "16458:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16469:11:13",
														"nodeType": "YulTypedName",
														"src": "16469:11:13",
														"type": ""
													}
												],
												"src": "16385:169:13"
											},
											{
												"body": {
													"nativeSrc": "16666:45:13",
													"nodeType": "YulBlock",
													"src": "16666:45:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16688:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16688:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16696:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16696:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16684:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16684:3:13"
																		},
																		"nativeSrc": "16684:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16684:14:13"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nativeSrc": "16700:3:13",
																		"nodeType": "YulLiteral",
																		"src": "16700:3:13",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16677:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16677:6:13"
																},
																"nativeSrc": "16677:27:13",
																"nodeType": "YulFunctionCall",
																"src": "16677:27:13"
															},
															"nativeSrc": "16677:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "16677:27:13"
														}
													]
												},
												"name": "store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
												"nativeSrc": "16560:151:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16658:6:13",
														"nodeType": "YulTypedName",
														"src": "16658:6:13",
														"type": ""
													}
												],
												"src": "16560:151:13"
											},
											{
												"body": {
													"nativeSrc": "16863:219:13",
													"nodeType": "YulBlock",
													"src": "16863:219:13",
													"statements": [
														{
															"nativeSrc": "16873:73:13",
															"nodeType": "YulAssignment",
															"src": "16873:73:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16939:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16939:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16944:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16944:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16880:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16880:58:13"
																},
																"nativeSrc": "16880:66:13",
																"nodeType": "YulFunctionCall",
																"src": "16880:66:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16873:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16873:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17044:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17044:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																	"nativeSrc": "16955:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16955:88:13"
																},
																"nativeSrc": "16955:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16955:93:13"
															},
															"nativeSrc": "16955:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16955:93:13"
														},
														{
															"nativeSrc": "17057:19:13",
															"nodeType": "YulAssignment",
															"src": "17057:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17068:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17068:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17073:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17073:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17064:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17064:3:13"
																},
																"nativeSrc": "17064:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17064:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17057:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17057:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16717:365:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16851:3:13",
														"nodeType": "YulTypedName",
														"src": "16851:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16859:3:13",
														"nodeType": "YulTypedName",
														"src": "16859:3:13",
														"type": ""
													}
												],
												"src": "16717:365:13"
											},
											{
												"body": {
													"nativeSrc": "17259:248:13",
													"nodeType": "YulBlock",
													"src": "17259:248:13",
													"statements": [
														{
															"nativeSrc": "17269:26:13",
															"nodeType": "YulAssignment",
															"src": "17269:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17281:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17281:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17292:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17292:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17277:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17277:3:13"
																},
																"nativeSrc": "17277:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17277:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17269:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17269:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17316:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17316:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17327:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17327:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17312:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17312:3:13"
																		},
																		"nativeSrc": "17312:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17312:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17335:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17335:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17341:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17341:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17331:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17331:3:13"
																		},
																		"nativeSrc": "17331:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17331:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17305:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17305:6:13"
																},
																"nativeSrc": "17305:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17305:47:13"
															},
															"nativeSrc": "17305:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17305:47:13"
														},
														{
															"nativeSrc": "17361:139:13",
															"nodeType": "YulAssignment",
															"src": "17361:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17495:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17495:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17369:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17369:124:13"
																},
																"nativeSrc": "17369:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17369:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17361:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17361:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17088:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17239:9:13",
														"nodeType": "YulTypedName",
														"src": "17239:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17254:4:13",
														"nodeType": "YulTypedName",
														"src": "17254:4:13",
														"type": ""
													}
												],
												"src": "17088:419:13"
											},
											{
												"body": {
													"nativeSrc": "17561:362:13",
													"nodeType": "YulBlock",
													"src": "17561:362:13",
													"statements": [
														{
															"nativeSrc": "17571:25:13",
															"nodeType": "YulAssignment",
															"src": "17571:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17594:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17594:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17576:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17576:17:13"
																},
																"nativeSrc": "17576:20:13",
																"nodeType": "YulFunctionCall",
																"src": "17576:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17571:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "17571:1:13"
																}
															]
														},
														{
															"nativeSrc": "17605:25:13",
															"nodeType": "YulAssignment",
															"src": "17605:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17628:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17628:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17610:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17610:17:13"
																},
																"nativeSrc": "17610:20:13",
																"nodeType": "YulFunctionCall",
																"src": "17610:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17605:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "17605:1:13"
																}
															]
														},
														{
															"nativeSrc": "17639:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "17639:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17662:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17662:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17665:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17665:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17658:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17658:3:13"
																},
																"nativeSrc": "17658:9:13",
																"nodeType": "YulFunctionCall",
																"src": "17658:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "17643:11:13",
																	"nodeType": "YulTypedName",
																	"src": "17643:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17676:41:13",
															"nodeType": "YulAssignment",
															"src": "17676:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17705:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "17705:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17687:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17687:17:13"
																},
																"nativeSrc": "17687:30:13",
																"nodeType": "YulFunctionCall",
																"src": "17687:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17676:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "17676:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17894:22:13",
																"nodeType": "YulBlock",
																"src": "17894:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17896:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "17896:16:13"
																			},
																			"nativeSrc": "17896:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17896:18:13"
																		},
																		"nativeSrc": "17896:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17896:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "17827:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "17827:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17820:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17820:6:13"
																				},
																				"nativeSrc": "17820:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17820:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "17850:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "17850:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "17857:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "17857:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "17866:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "17866:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "17853:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "17853:3:13"
																						},
																						"nativeSrc": "17853:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "17853:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "17847:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "17847:2:13"
																				},
																				"nativeSrc": "17847:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17847:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17800:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "17800:2:13"
																		},
																		"nativeSrc": "17800:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17800:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17780:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17780:6:13"
																},
																"nativeSrc": "17780:113:13",
																"nodeType": "YulFunctionCall",
																"src": "17780:113:13"
															},
															"nativeSrc": "17777:139:13",
															"nodeType": "YulIf",
															"src": "17777:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "17513:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17544:1:13",
														"nodeType": "YulTypedName",
														"src": "17544:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17547:1:13",
														"nodeType": "YulTypedName",
														"src": "17547:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "17553:7:13",
														"nodeType": "YulTypedName",
														"src": "17553:7:13",
														"type": ""
													}
												],
												"src": "17513:410:13"
											},
											{
												"body": {
													"nativeSrc": "17971:143:13",
													"nodeType": "YulBlock",
													"src": "17971:143:13",
													"statements": [
														{
															"nativeSrc": "17981:25:13",
															"nodeType": "YulAssignment",
															"src": "17981:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18004:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18004:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17986:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17986:17:13"
																},
																"nativeSrc": "17986:20:13",
																"nodeType": "YulFunctionCall",
																"src": "17986:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17981:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "17981:1:13"
																}
															]
														},
														{
															"nativeSrc": "18015:25:13",
															"nodeType": "YulAssignment",
															"src": "18015:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18038:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18038:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18020:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18020:17:13"
																},
																"nativeSrc": "18020:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18020:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18015:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18015:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18062:22:13",
																"nodeType": "YulBlock",
																"src": "18062:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18064:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18064:16:13"
																			},
																			"nativeSrc": "18064:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18064:18:13"
																		},
																		"nativeSrc": "18064:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18064:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18059:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18059:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18052:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18052:6:13"
																},
																"nativeSrc": "18052:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18052:9:13"
															},
															"nativeSrc": "18049:35:13",
															"nodeType": "YulIf",
															"src": "18049:35:13"
														},
														{
															"nativeSrc": "18094:14:13",
															"nodeType": "YulAssignment",
															"src": "18094:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18103:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18103:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18106:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18106:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18099:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18099:3:13"
																},
																"nativeSrc": "18099:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18099:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18094:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18094:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17929:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17960:1:13",
														"nodeType": "YulTypedName",
														"src": "17960:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17963:1:13",
														"nodeType": "YulTypedName",
														"src": "17963:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17969:1:13",
														"nodeType": "YulTypedName",
														"src": "17969:1:13",
														"type": ""
													}
												],
												"src": "17929:185:13"
											},
											{
												"body": {
													"nativeSrc": "18154:142:13",
													"nodeType": "YulBlock",
													"src": "18154:142:13",
													"statements": [
														{
															"nativeSrc": "18164:25:13",
															"nodeType": "YulAssignment",
															"src": "18164:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18187:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18187:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18169:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18169:17:13"
																},
																"nativeSrc": "18169:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18169:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18164:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18164:1:13"
																}
															]
														},
														{
															"nativeSrc": "18198:25:13",
															"nodeType": "YulAssignment",
															"src": "18198:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18221:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18221:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18203:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18203:17:13"
																},
																"nativeSrc": "18203:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18203:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18198:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18198:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18245:22:13",
																"nodeType": "YulBlock",
																"src": "18245:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18247:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18247:16:13"
																			},
																			"nativeSrc": "18247:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18247:18:13"
																		},
																		"nativeSrc": "18247:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18247:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18242:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18242:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18235:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18235:6:13"
																},
																"nativeSrc": "18235:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18235:9:13"
															},
															"nativeSrc": "18232:35:13",
															"nodeType": "YulIf",
															"src": "18232:35:13"
														},
														{
															"nativeSrc": "18276:14:13",
															"nodeType": "YulAssignment",
															"src": "18276:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18285:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18285:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18288:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18288:1:13"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "18281:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18281:3:13"
																},
																"nativeSrc": "18281:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18281:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18276:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18276:1:13"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "18120:176:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18143:1:13",
														"nodeType": "YulTypedName",
														"src": "18143:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18146:1:13",
														"nodeType": "YulTypedName",
														"src": "18146:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18152:1:13",
														"nodeType": "YulTypedName",
														"src": "18152:1:13",
														"type": ""
													}
												],
												"src": "18120:176:13"
											},
											{
												"body": {
													"nativeSrc": "18347:190:13",
													"nodeType": "YulBlock",
													"src": "18347:190:13",
													"statements": [
														{
															"nativeSrc": "18357:25:13",
															"nodeType": "YulAssignment",
															"src": "18357:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18380:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18380:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "18362:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18362:17:13"
																},
																"nativeSrc": "18362:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18362:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18357:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18357:1:13"
																}
															]
														},
														{
															"nativeSrc": "18391:25:13",
															"nodeType": "YulAssignment",
															"src": "18391:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18414:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18414:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "18396:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18396:17:13"
																},
																"nativeSrc": "18396:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18396:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18391:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18391:1:13"
																}
															]
														},
														{
															"nativeSrc": "18425:17:13",
															"nodeType": "YulAssignment",
															"src": "18425:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18437:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18437:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18440:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18440:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18433:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18433:3:13"
																},
																"nativeSrc": "18433:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18433:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18425:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18425:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18508:22:13",
																"nodeType": "YulBlock",
																"src": "18508:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18510:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18510:16:13"
																			},
																			"nativeSrc": "18510:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18510:18:13"
																		},
																		"nativeSrc": "18510:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18510:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18458:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18458:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18464:42:13",
																		"nodeType": "YulLiteral",
																		"src": "18464:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18455:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18455:2:13"
																},
																"nativeSrc": "18455:52:13",
																"nodeType": "YulFunctionCall",
																"src": "18455:52:13"
															},
															"nativeSrc": "18452:78:13",
															"nodeType": "YulIf",
															"src": "18452:78:13"
														}
													]
												},
												"name": "checked_sub_t_uint160",
												"nativeSrc": "18302:235:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18333:1:13",
														"nodeType": "YulTypedName",
														"src": "18333:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18336:1:13",
														"nodeType": "YulTypedName",
														"src": "18336:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18342:4:13",
														"nodeType": "YulTypedName",
														"src": "18342:4:13",
														"type": ""
													}
												],
												"src": "18302:235:13"
											},
											{
												"body": {
													"nativeSrc": "18586:79:13",
													"nodeType": "YulBlock",
													"src": "18586:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "18643:16:13",
																"nodeType": "YulBlock",
																"src": "18643:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18652:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18652:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18655:1:13",
																					"nodeType": "YulLiteral",
																					"src": "18655:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "18645:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18645:6:13"
																			},
																			"nativeSrc": "18645:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18645:12:13"
																		},
																		"nativeSrc": "18645:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18645:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18609:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "18609:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18634:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "18634:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "18616:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "18616:17:13"
																				},
																				"nativeSrc": "18616:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18616:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "18606:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "18606:2:13"
																		},
																		"nativeSrc": "18606:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18606:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18599:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18599:6:13"
																},
																"nativeSrc": "18599:43:13",
																"nodeType": "YulFunctionCall",
																"src": "18599:43:13"
															},
															"nativeSrc": "18596:63:13",
															"nodeType": "YulIf",
															"src": "18596:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "18543:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18579:5:13",
														"nodeType": "YulTypedName",
														"src": "18579:5:13",
														"type": ""
													}
												],
												"src": "18543:122:13"
											},
											{
												"body": {
													"nativeSrc": "18734:80:13",
													"nodeType": "YulBlock",
													"src": "18734:80:13",
													"statements": [
														{
															"nativeSrc": "18744:22:13",
															"nodeType": "YulAssignment",
															"src": "18744:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "18759:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18759:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18753:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18753:5:13"
																},
																"nativeSrc": "18753:13:13",
																"nodeType": "YulFunctionCall",
																"src": "18753:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18744:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18744:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18802:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18802:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "18775:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "18775:26:13"
																},
																"nativeSrc": "18775:33:13",
																"nodeType": "YulFunctionCall",
																"src": "18775:33:13"
															},
															"nativeSrc": "18775:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "18775:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "18671:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "18712:6:13",
														"nodeType": "YulTypedName",
														"src": "18712:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18720:3:13",
														"nodeType": "YulTypedName",
														"src": "18720:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "18728:5:13",
														"nodeType": "YulTypedName",
														"src": "18728:5:13",
														"type": ""
													}
												],
												"src": "18671:143:13"
											},
											{
												"body": {
													"nativeSrc": "18897:274:13",
													"nodeType": "YulBlock",
													"src": "18897:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "18943:83:13",
																"nodeType": "YulBlock",
																"src": "18943:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18945:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "18945:77:13"
																			},
																			"nativeSrc": "18945:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18945:79:13"
																		},
																		"nativeSrc": "18945:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18945:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18918:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "18918:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18927:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18927:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18914:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18914:3:13"
																		},
																		"nativeSrc": "18914:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18914:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18939:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18939:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18910:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18910:3:13"
																},
																"nativeSrc": "18910:32:13",
																"nodeType": "YulFunctionCall",
																"src": "18910:32:13"
															},
															"nativeSrc": "18907:119:13",
															"nodeType": "YulIf",
															"src": "18907:119:13"
														},
														{
															"nativeSrc": "19036:128:13",
															"nodeType": "YulBlock",
															"src": "19036:128:13",
															"statements": [
																{
																	"nativeSrc": "19051:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19051:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19065:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19065:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19055:6:13",
																			"nodeType": "YulTypedName",
																			"src": "19055:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19080:74:13",
																	"nodeType": "YulAssignment",
																	"src": "19080:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19126:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "19126:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19137:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "19137:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19122:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "19122:3:13"
																				},
																				"nativeSrc": "19122:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "19122:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19146:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "19146:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19090:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "19090:31:13"
																		},
																		"nativeSrc": "19090:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19090:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19080:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "19080:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "18820:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18867:9:13",
														"nodeType": "YulTypedName",
														"src": "18867:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18878:7:13",
														"nodeType": "YulTypedName",
														"src": "18878:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18890:6:13",
														"nodeType": "YulTypedName",
														"src": "18890:6:13",
														"type": ""
													}
												],
												"src": "18820:351:13"
											},
											{
												"body": {
													"nativeSrc": "19220:190:13",
													"nodeType": "YulBlock",
													"src": "19220:190:13",
													"statements": [
														{
															"nativeSrc": "19230:33:13",
															"nodeType": "YulAssignment",
															"src": "19230:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19257:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19257:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19239:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "19239:17:13"
																},
																"nativeSrc": "19239:24:13",
																"nodeType": "YulFunctionCall",
																"src": "19239:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19230:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "19230:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19353:22:13",
																"nodeType": "YulBlock",
																"src": "19353:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19355:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "19355:16:13"
																			},
																			"nativeSrc": "19355:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19355:18:13"
																		},
																		"nativeSrc": "19355:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19355:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19278:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19278:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19285:66:13",
																		"nodeType": "YulLiteral",
																		"src": "19285:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19275:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19275:2:13"
																},
																"nativeSrc": "19275:77:13",
																"nodeType": "YulFunctionCall",
																"src": "19275:77:13"
															},
															"nativeSrc": "19272:103:13",
															"nodeType": "YulIf",
															"src": "19272:103:13"
														},
														{
															"nativeSrc": "19384:20:13",
															"nodeType": "YulAssignment",
															"src": "19384:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19395:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19395:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19402:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19402:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19391:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19391:3:13"
																},
																"nativeSrc": "19391:13:13",
																"nodeType": "YulFunctionCall",
																"src": "19391:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19384:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19384:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "19177:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19206:5:13",
														"nodeType": "YulTypedName",
														"src": "19206:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19216:3:13",
														"nodeType": "YulTypedName",
														"src": "19216:3:13",
														"type": ""
													}
												],
												"src": "19177:233:13"
											},
											{
												"body": {
													"nativeSrc": "19522:61:13",
													"nodeType": "YulBlock",
													"src": "19522:61:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19544:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19544:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19552:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19552:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19540:3:13"
																		},
																		"nativeSrc": "19540:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19540:14:13"
																	},
																	{
																		"hexValue": "5052424d6174683a206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "19556:19:13",
																		"nodeType": "YulLiteral",
																		"src": "19556:19:13",
																		"type": "",
																		"value": "PRBMath: overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19533:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19533:6:13"
																},
																"nativeSrc": "19533:43:13",
																"nodeType": "YulFunctionCall",
																"src": "19533:43:13"
															},
															"nativeSrc": "19533:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "19533:43:13"
														}
													]
												},
												"name": "store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238",
												"nativeSrc": "19416:167:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19514:6:13",
														"nodeType": "YulTypedName",
														"src": "19514:6:13",
														"type": ""
													}
												],
												"src": "19416:167:13"
											},
											{
												"body": {
													"nativeSrc": "19735:220:13",
													"nodeType": "YulBlock",
													"src": "19735:220:13",
													"statements": [
														{
															"nativeSrc": "19745:74:13",
															"nodeType": "YulAssignment",
															"src": "19745:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19811:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19811:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19816:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19816:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19752:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19752:58:13"
																},
																"nativeSrc": "19752:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19752:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19745:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19745:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19917:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19917:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238",
																	"nativeSrc": "19828:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "19828:88:13"
																},
																"nativeSrc": "19828:93:13",
																"nodeType": "YulFunctionCall",
																"src": "19828:93:13"
															},
															"nativeSrc": "19828:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "19828:93:13"
														},
														{
															"nativeSrc": "19930:19:13",
															"nodeType": "YulAssignment",
															"src": "19930:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19941:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19941:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19946:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19946:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19937:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19937:3:13"
																},
																"nativeSrc": "19937:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19937:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19930:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19930:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19589:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19723:3:13",
														"nodeType": "YulTypedName",
														"src": "19723:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19731:3:13",
														"nodeType": "YulTypedName",
														"src": "19731:3:13",
														"type": ""
													}
												],
												"src": "19589:366:13"
											},
											{
												"body": {
													"nativeSrc": "20132:248:13",
													"nodeType": "YulBlock",
													"src": "20132:248:13",
													"statements": [
														{
															"nativeSrc": "20142:26:13",
															"nodeType": "YulAssignment",
															"src": "20142:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20154:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20154:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20165:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20165:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20150:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20150:3:13"
																},
																"nativeSrc": "20150:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20150:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20142:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20142:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20189:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20189:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20200:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20200:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20185:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20185:3:13"
																		},
																		"nativeSrc": "20185:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20185:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20208:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20208:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20214:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20214:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20204:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20204:3:13"
																		},
																		"nativeSrc": "20204:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20204:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20178:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20178:6:13"
																},
																"nativeSrc": "20178:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20178:47:13"
															},
															"nativeSrc": "20178:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20178:47:13"
														},
														{
															"nativeSrc": "20234:139:13",
															"nodeType": "YulAssignment",
															"src": "20234:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20368:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20368:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20242:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20242:124:13"
																},
																"nativeSrc": "20242:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20242:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20234:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20234:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19961:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20112:9:13",
														"nodeType": "YulTypedName",
														"src": "20112:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20127:4:13",
														"nodeType": "YulTypedName",
														"src": "20127:4:13",
														"type": ""
													}
												],
												"src": "19961:419:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function abi_encode_t_int24_to_t_int24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    function abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int16(value) -> cleaned {\n        cleaned := signextend(1, value)\n    }\n\n    function validator_revert_t_int16(value) {\n        if iszero(eq(value, cleanup_t_int16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int16(value)\n    }\n\n    function abi_decode_tuple_t_int16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_int24(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function negate_t_int24(value) -> ret {\n        value := cleanup_t_int24(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function checked_add_t_uint128(x, y) -> sum {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_int24(x, y) -> r {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        if iszero(y) { panic_error_0x12() }\n        r := smod(x, y)\n    }\n\n    function checked_div_t_int24(x, y) -> r {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function shift_left_232(value) -> newValue {\n        newValue :=\n\n        shl(232, value)\n\n    }\n\n    function leftAlign_t_int24(value) -> aligned {\n        aligned := shift_left_232(value)\n    }\n\n    function abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_int24(cleanup_t_int24(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 3)\n\n        abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 3)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 1)\n        store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_sub_t_uint160(x, y) -> diff {\n        x := cleanup_t_uint160(x)\n        y := cleanup_t_uint160(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238(memPtr) {\n\n        mstore(add(memPtr, 0), \"PRBMath: overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"49": [
									{
										"length": 32,
										"start": 515
									},
									{
										"length": 32,
										"start": 2041
									},
									{
										"length": 32,
										"start": 4785
									}
								],
								"51": [
									{
										"length": 32,
										"start": 1824
									},
									{
										"length": 32,
										"start": 4943
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063514ea4bf11610064578063514ea4bf146101215780635339c29614610151578063d21220a714610181578063e35473351461019f578063f30dba93146101d057610091565b80630dfe1681146100955780631a686502146100b35780633850c7bd146100d15780633c8a7d8d146100f0575b5f5ffd5b61009d610201565b6040516100aa91906115ce565b60405180910390f35b6100bb610225565b6040516100c89190611611565b60405180910390f35b6100d9610246565b6040516100e7929190611654565b60405180910390f35b61010a60048036038101906101059190611762565b610281565b604051610118929190611810565b60405180910390f35b61013b6004803603810190610136919061186a565b6106d4565b6040516101489190611611565b60405180910390f35b61016b600480360381019061016691906118cb565b610709565b60405161017891906118f6565b60405180910390f35b61018961071e565b60405161019691906115ce565b60405180910390f35b6101b960048036038101906101b4919061190f565b610742565b6040516101c7929190611984565b60405180910390f35b6101ea60048036038101906101e591906119ab565b610a26565b6040516101f89291906119f0565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60015f9054906101000a90046fffffffffffffffffffffffffffffffff1681565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460020b905082565b5f5f8560020b8760020b1215806102bd57507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8760020b125b806102f657507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186102ed90611a44565b60020b8660020b135b1561032d576040517f064847d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f856fffffffffffffffffffffffffffffffff1603610378576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61038f88876002610a6d9092919063ffffffff16565b90505f6103a888886002610a6d9092919063ffffffff16565b905081156103c8576103c78960016003610b649092919063ffffffff16565b5b80156103e6576103e58860016003610b649092919063ffffffff16565b5b5f6103ff8b8b8b6004610bcd909392919063ffffffff16565b90506104148882610c1290919063ffffffff16565b5f5f6040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460020b60020b60020b8152505090506104a9815f01516104a38c610c82565b8b611136565b95506104c1815f01516104bb8d610c82565b8b61121a565b94508860015f8282829054906101000a90046fffffffffffffffffffffffffffffffff166104ef9190611a8a565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505f5f5f88111561053a576105376112ae565b91505b5f87111561054d5761054a61134c565b90505b3373ffffffffffffffffffffffffffffffffffffffff1663d348799789898d8d6040518563ffffffff1660e01b815260040161058c9493929190611b27565b5f604051808303815f87803b1580156105a3575f5ffd5b505af11580156105b5573d5f5f3e3d5ffd5b505050505f881180156105d957506105cb6112ae565b88836105d79190611b65565b115b15610610576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f87118015610630575061062261134c565b878261062e9190611b65565b115b15610667576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b60020b8d60020b8f73ffffffffffffffffffffffffffffffffffffffff167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338f8d8d6040516106bb9493929190611b98565b60405180910390a4505050505050965096945050505050565b6004602052805f5260405f205f91509050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff16905081565b6003602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f62014cc090505f6c46bd046408013d67ed5d406b2d90507fffffffffffffffffffffffffffffffffffffffffffffffffffe22b3b9e50c0f49350680246ddf97976680000925081815f5f0160145f5f015f8491906101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508391906101000a81548162ffffff021916908360020b62ffffff16021790555050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb888661083e90611bdb565b6040518363ffffffff1660e01b815260040161085b929190611c21565b6020604051808303815f875af1158015610877573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061089b9190611c72565b505f6108a561134c565b90503373ffffffffffffffffffffffffffffffffffffffff1663fa461e3386868a8a6040518563ffffffff1660e01b81526004016108e69493929190611c9d565b5f604051808303815f87803b1580156108fd575f5ffd5b505af115801561090f573d5f5f3e3d5ffd5b5050505061091b61134c565b84826109279190611b65565b101561095f576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca6787875f5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a90046fffffffffffffffffffffffffffffffff165f5f0160149054906101000a900460020b604051610a13959493929190611cdb565b60405180910390a3505050935093915050565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a90046fffffffffffffffffffffffffffffffff16905082565b5f5f845f8560020b60020b81526020019081526020015f2090505f815f0160019054906101000a90046fffffffffffffffffffffffffffffffff1690505f8482610ab79190611a8a565b90505f826fffffffffffffffffffffffffffffffff161415155f826fffffffffffffffffffffffffffffffff16141515141593505f826fffffffffffffffffffffffffffffffff1603610b20576001835f015f6101000a81548160ff0219169083151502179055505b80835f0160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050509392505050565b5f8183610b719190611d59565b60020b14610b7d575f5ffd5b5f5f610b938385610b8e9190611d89565b6113ea565b915091505f8160ff166001901b905080865f8560010b60010b81526020019081526020015f205f8282541892505081905550505050505050565b5f845f858585604051602001610be593929190611e6a565b6040516020818303038152906040528051906020012081526020019081526020015f209050949350505050565b5f825f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690505f8282610c419190611a8a565b905080845f015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050565b5f5f5f8360020b12610c97578260020b610ca5565b8260020b610ca490611bdb565b5b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618610cd190611a44565b62ffffff16811115610d18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0f90611f00565b60405180910390fd5b5f5f6001831603610d3a57700100000000000000000000000000000000610d4c565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690505f6002831614610d8e5760806ffff97272373d413259a46990580e213a82610d899190611f1e565b901c90505b5f6004831614610dbb5760806ffff2e50f5f656932ef12357cf3c7fdcc82610db69190611f1e565b901c90505b5f6008831614610de85760806fffe5caca7e10e4e61c3624eaa0941cd082610de39190611f1e565b901c90505b5f6010831614610e155760806fffcb9843d60f6159c9db58835c92664482610e109190611f1e565b901c90505b5f6020831614610e425760806fff973b41fa98c081472e6896dfb254c082610e3d9190611f1e565b901c90505b5f6040831614610e6f5760806fff2ea16466c96a3843ec78b326b5286182610e6a9190611f1e565b901c90505b5f6080831614610e9c5760806ffe5dee046a99a2a811c461f1969c305382610e979190611f1e565b901c90505b5f610100831614610eca5760806ffcbe86c7900a88aedcffc83b479aa3a482610ec59190611f1e565b901c90505b5f610200831614610ef85760806ff987a7253ac413176f2b074cf7815e5482610ef39190611f1e565b901c90505b5f610400831614610f265760806ff3392b0822b70005940c7a398e4b70f382610f219190611f1e565b901c90505b5f610800831614610f545760806fe7159475a2c29b7443b29c7fa6e889d982610f4f9190611f1e565b901c90505b5f611000831614610f825760806fd097f3bdfd2022b8845ad8f792aa582582610f7d9190611f1e565b901c90505b5f612000831614610fb05760806fa9f746462d870fdf8a65dc1f90e061e582610fab9190611f1e565b901c90505b5f614000831614610fde5760806f70d869a156d2a1b890bb3df62baf32f782610fd99190611f1e565b901c90505b5f61800083161461100c5760806f31be135f97d08fd981231505542fcfa6826110079190611f1e565b901c90505b5f6201000083161461103b5760806f09aa508b5b7a84e1c677de54f3e99bc9826110369190611f1e565b901c90505b5f620200008316146110695760806e5d6af8dedb81196699c329225ee604826110649190611f1e565b901c90505b5f620400008316146110965760806d2216e584f5fa1ea926041bedfe98826110919190611f1e565b901c90505b5f620800008316146110c15760806b048a170391f7dc42444e8fa2826110bc9190611f1e565b901c90505b5f8460020b13156110fb57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6110f89190611f5f565b90505b5f6401000000008261110d9190611f8f565b1461111957600161111b565b5f5b60ff16602082901c61112d9190611b65565b92505050919050565b5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561117657828480945081955050505b5f8473ffffffffffffffffffffffffffffffffffffffff1611611197575f5ffd5b6112116111f5606060ff16846fffffffffffffffffffffffffffffffff16901b86866111c39190611fbf565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1661140b565b8573ffffffffffffffffffffffffffffffffffffffff16611473565b90509392505050565b5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16111561125a57828480945081955050505b6112a5826fffffffffffffffffffffffffffffffff16858561127c9190611fbf565b73ffffffffffffffffffffffffffffffffffffffff166c0100000000000000000000000061140b565b90509392505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161130891906115ce565b602060405180830381865afa158015611323573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113479190612030565b905090565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113a691906115ce565b602060405180830381865afa1580156113c1573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113e59190612030565b905090565b5f5f60088360020b901d9150610100836114049190611d59565b9050915091565b5f611417848484611485565b90505f828061142957611428611d2c565b5b848609111561146c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811061145d575f5ffd5b80806114689061205b565b9150505b9392505050565b5f5f8284061182840401905092915050565b5f5f5f5f198587098587029250828110838203039150505f81036114bd578382816114b3576114b2611d2c565b5b0492505050611588565b8084116114ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f6906120ec565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115b88261158f565b9050919050565b6115c8816115ae565b82525050565b5f6020820190506115e15f8301846115bf565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b61160b816115e7565b82525050565b5f6020820190506116245f830184611602565b92915050565b6116338161158f565b82525050565b5f8160020b9050919050565b61164e81611639565b82525050565b5f6040820190506116675f83018561162a565b6116746020830184611645565b9392505050565b5f5ffd5b5f5ffd5b61168c816115ae565b8114611696575f5ffd5b50565b5f813590506116a781611683565b92915050565b6116b681611639565b81146116c0575f5ffd5b50565b5f813590506116d1816116ad565b92915050565b6116e0816115e7565b81146116ea575f5ffd5b50565b5f813590506116fb816116d7565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261172257611721611701565b5b8235905067ffffffffffffffff81111561173f5761173e611705565b5b60208301915083600182028301111561175b5761175a611709565b5b9250929050565b5f5f5f5f5f5f60a0878903121561177c5761177b61167b565b5b5f61178989828a01611699565b965050602061179a89828a016116c3565b95505060406117ab89828a016116c3565b94505060606117bc89828a016116ed565b935050608087013567ffffffffffffffff8111156117dd576117dc61167f565b5b6117e989828a0161170d565b92509250509295509295509295565b5f819050919050565b61180a816117f8565b82525050565b5f6040820190506118235f830185611801565b6118306020830184611801565b9392505050565b5f819050919050565b61184981611837565b8114611853575f5ffd5b50565b5f8135905061186481611840565b92915050565b5f6020828403121561187f5761187e61167b565b5b5f61188c84828501611856565b91505092915050565b5f8160010b9050919050565b6118aa81611895565b81146118b4575f5ffd5b50565b5f813590506118c5816118a1565b92915050565b5f602082840312156118e0576118df61167b565b5b5f6118ed848285016118b7565b91505092915050565b5f6020820190506119095f830184611801565b92915050565b5f5f5f604084860312156119265761192561167b565b5b5f61193386828701611699565b935050602084013567ffffffffffffffff8111156119545761195361167f565b5b6119608682870161170d565b92509250509250925092565b5f819050919050565b61197e8161196c565b82525050565b5f6040820190506119975f830185611975565b6119a46020830184611975565b9392505050565b5f602082840312156119c0576119bf61167b565b5b5f6119cd848285016116c3565b91505092915050565b5f8115159050919050565b6119ea816119d6565b82525050565b5f604082019050611a035f8301856119e1565b611a106020830184611602565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a4e82611639565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008203611a8057611a7f611a17565b5b815f039050919050565b5f611a94826115e7565b9150611a9f836115e7565b925082820190506fffffffffffffffffffffffffffffffff811115611ac757611ac6611a17565b5b92915050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f611b068385611acd565b9350611b13838584611add565b611b1c83611aeb565b840190509392505050565b5f606082019050611b3a5f830187611801565b611b476020830186611801565b8181036040830152611b5a818486611afb565b905095945050505050565b5f611b6f826117f8565b9150611b7a836117f8565b9250828201905080821115611b9257611b91611a17565b5b92915050565b5f608082019050611bab5f8301876115bf565b611bb86020830186611602565b611bc56040830185611801565b611bd26060830184611801565b95945050505050565b5f611be58261196c565b91507f80000000000000000000000000000000000000000000000000000000000000008203611c1757611c16611a17565b5b815f039050919050565b5f604082019050611c345f8301856115bf565b611c416020830184611801565b9392505050565b611c51816119d6565b8114611c5b575f5ffd5b50565b5f81519050611c6c81611c48565b92915050565b5f60208284031215611c8757611c8661167b565b5b5f611c9484828501611c5e565b91505092915050565b5f606082019050611cb05f830187611975565b611cbd6020830186611975565b8181036040830152611cd0818486611afb565b905095945050505050565b5f60a082019050611cee5f830188611975565b611cfb6020830187611975565b611d08604083018661162a565b611d156060830185611602565b611d226080830184611645565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611d6382611639565b9150611d6e83611639565b925082611d7e57611d7d611d2c565b5b828207905092915050565b5f611d9382611639565b9150611d9e83611639565b925082611dae57611dad611d2c565b5b60015f0383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000083141615611de657611de5611a17565b5b828205905092915050565b5f8160601b9050919050565b5f611e0782611df1565b9050919050565b5f611e1882611dfd565b9050919050565b611e30611e2b826115ae565b611e0e565b82525050565b5f8160e81b9050919050565b5f611e4c82611e36565b9050919050565b611e64611e5f82611639565b611e42565b82525050565b5f611e758286611e1f565b601482019150611e858285611e53565b600382019150611e958284611e53565b600382019150819050949350505050565b5f82825260208201905092915050565b7f54000000000000000000000000000000000000000000000000000000000000005f82015250565b5f611eea600183611ea6565b9150611ef582611eb6565b602082019050919050565b5f6020820190508181035f830152611f1781611ede565b9050919050565b5f611f28826117f8565b9150611f33836117f8565b9250828202611f41816117f8565b91508282048414831517611f5857611f57611a17565b5b5092915050565b5f611f69826117f8565b9150611f74836117f8565b925082611f8457611f83611d2c565b5b828204905092915050565b5f611f99826117f8565b9150611fa4836117f8565b925082611fb457611fb3611d2c565b5b828206905092915050565b5f611fc98261158f565b9150611fd48361158f565b9250828203905073ffffffffffffffffffffffffffffffffffffffff81111561200057611fff611a17565b5b92915050565b61200f816117f8565b8114612019575f5ffd5b50565b5f8151905061202a81612006565b92915050565b5f602082840312156120455761204461167b565b5b5f6120528482850161201c565b91505092915050565b5f612065826117f8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361209757612096611a17565b5b600182019050919050565b7f5052424d6174683a206f766572666c6f770000000000000000000000000000005f82015250565b5f6120d6601183611ea6565b91506120e1826120a2565b602082019050919050565b5f6020820190508181035f830152612103816120ca565b905091905056fea264697066735822122060e143dbee726d862ee50585d88c46e7efe1dd246a4afdb6a1ba92a45a95d46d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x514EA4BF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x514EA4BF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x5339C296 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xE3547335 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF30DBA93 EQ PUSH2 0x1D0 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x3850C7BD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3C8A7D8D EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP3 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x1762 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP3 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x186A JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x18CB JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x18F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x71E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x190F JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1984 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x19AB JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP3 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT ISZERO DUP1 PUSH2 0x2BD JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST DUP1 PUSH2 0x2F6 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x2ED SWAP1 PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH32 0x64847D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1007454800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x38F DUP9 DUP8 PUSH1 0x2 PUSH2 0xA6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3A8 DUP9 DUP9 PUSH1 0x2 PUSH2 0xA6D SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C7 DUP10 PUSH1 0x1 PUSH1 0x3 PUSH2 0xB64 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E5 DUP9 PUSH1 0x1 PUSH1 0x3 PUSH2 0xB64 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FF DUP12 DUP12 DUP12 PUSH1 0x4 PUSH2 0xBCD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP9 DUP3 PUSH2 0xC12 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x4A9 DUP2 PUSH0 ADD MLOAD PUSH2 0x4A3 DUP13 PUSH2 0xC82 JUMP JUMPDEST DUP12 PUSH2 0x1136 JUMP JUMPDEST SWAP6 POP PUSH2 0x4C1 DUP2 PUSH0 ADD MLOAD PUSH2 0x4BB DUP14 PUSH2 0xC82 JUMP JUMPDEST DUP12 PUSH2 0x121A JUMP JUMPDEST SWAP5 POP DUP9 PUSH1 0x1 PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4EF SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 PUSH0 DUP9 GT ISZERO PUSH2 0x53A JUMPI PUSH2 0x537 PUSH2 0x12AE JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP8 GT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54A PUSH2 0x134C JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD3487997 DUP10 DUP10 DUP14 DUP14 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B27 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP9 GT DUP1 ISZERO PUSH2 0x5D9 JUMPI POP PUSH2 0x5CB PUSH2 0x12AE JUMP JUMPDEST DUP9 DUP4 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP8 GT DUP1 ISZERO PUSH2 0x630 JUMPI POP PUSH2 0x622 PUSH2 0x134C JUMP JUMPDEST DUP8 DUP3 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE CALLER DUP16 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x6BB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH3 0x14CC0 SWAP1 POP PUSH0 PUSH13 0x46BD046408013D67ED5D406B2D SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE22B3B9E50C0F4 SWAP4 POP PUSH9 0x246DDF97976680000 SWAP3 POP DUP2 DUP2 PUSH0 PUSH0 ADD PUSH1 0x14 PUSH0 PUSH0 ADD PUSH0 DUP5 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP9 DUP7 PUSH2 0x83E SWAP1 PUSH2 0x1BDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP3 SWAP2 SWAP1 PUSH2 0x1C21 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST POP PUSH0 PUSH2 0x8A5 PUSH2 0x134C JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFA461E33 DUP7 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x91B PUSH2 0x134C JUMP JUMPDEST DUP5 DUP3 PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST LT ISZERO PUSH2 0x95F JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67 DUP8 DUP8 PUSH0 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x40 MLOAD PUSH2 0xA13 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP5 DUP3 PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO EQ ISZERO SWAP4 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB20 JUMPI PUSH1 0x1 DUP4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP4 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xB71 SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND EQ PUSH2 0xB7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH2 0xB93 DUP4 DUP6 PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x1D89 JUMP JUMPDEST PUSH2 0x13EA JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL SWAP1 POP DUP1 DUP7 PUSH0 DUP6 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD XOR SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xBE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0xC41 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0xC97 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0xCA5 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0xCA4 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0xCD1 SWAP1 PUSH2 0x1A44 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0xD18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0F SWAP1 PUSH2 0x1F00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x1 DUP4 AND SUB PUSH2 0xD3A JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0xD4C JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 DUP4 AND EQ PUSH2 0xD8E JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 PUSH2 0xD89 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x4 DUP4 AND EQ PUSH2 0xDBB JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 PUSH2 0xDB6 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x8 DUP4 AND EQ PUSH2 0xDE8 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 PUSH2 0xDE3 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x10 DUP4 AND EQ PUSH2 0xE15 JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x20 DUP4 AND EQ PUSH2 0xE42 JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 PUSH2 0xE3D SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 DUP4 AND EQ PUSH2 0xE6F JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 PUSH2 0xE6A SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x80 DUP4 AND EQ PUSH2 0xE9C JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 PUSH2 0xE97 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x100 DUP4 AND EQ PUSH2 0xECA JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 PUSH2 0xEC5 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x200 DUP4 AND EQ PUSH2 0xEF8 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x400 DUP4 AND EQ PUSH2 0xF26 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 PUSH2 0xF21 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x800 DUP4 AND EQ PUSH2 0xF54 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 PUSH2 0xF4F SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0xF82 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0xFB0 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0xFDE JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0x100C JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 PUSH2 0x1007 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0x103B JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 PUSH2 0x1036 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0x1069 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 PUSH2 0x1064 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0x1096 JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 PUSH2 0x1091 SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0x10C1 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 PUSH2 0x10BC SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x10FB JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x10F8 SWAP2 SWAP1 PUSH2 0x1F5F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH5 0x100000000 DUP3 PUSH2 0x110D SWAP2 SWAP1 PUSH2 0x1F8F JUMP JUMPDEST EQ PUSH2 0x1119 JUMPI PUSH1 0x1 PUSH2 0x111B JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0x112D SWAP2 SWAP1 PUSH2 0x1B65 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1176 JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1197 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1211 PUSH2 0x11F5 PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL DUP7 DUP7 PUSH2 0x11C3 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x140B JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1473 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x125A JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH2 0x12A5 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH2 0x127C SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH2 0x140B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1308 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1323 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1347 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13A6 SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13C1 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13E5 SWAP2 SWAP1 PUSH2 0x2030 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 DUP4 PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP2 POP PUSH2 0x100 DUP4 PUSH2 0x1404 SWAP2 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x1417 DUP5 DUP5 DUP5 PUSH2 0x1485 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP1 PUSH2 0x1429 JUMPI PUSH2 0x1428 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x146C JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT PUSH2 0x145D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1468 SWAP1 PUSH2 0x205B JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP5 MOD GT DUP3 DUP5 DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH0 DUP2 SUB PUSH2 0x14BD JUMPI DUP4 DUP3 DUP2 PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1588 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F6 SWAP1 PUSH2 0x20EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15B8 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C8 DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x160B DUP2 PUSH2 0x15E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1624 PUSH0 DUP4 ADD DUP5 PUSH2 0x1602 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1633 DUP2 PUSH2 0x158F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x164E DUP2 PUSH2 0x1639 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1667 PUSH0 DUP4 ADD DUP6 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x1674 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x168C DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP2 EQ PUSH2 0x1696 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A7 DUP2 PUSH2 0x1683 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B6 DUP2 PUSH2 0x1639 JUMP JUMPDEST DUP2 EQ PUSH2 0x16C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D1 DUP2 PUSH2 0x16AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E0 DUP2 PUSH2 0x15E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x16EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16FB DUP2 PUSH2 0x16D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1722 JUMPI PUSH2 0x1721 PUSH2 0x1701 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x173F JUMPI PUSH2 0x173E PUSH2 0x1705 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x175A PUSH2 0x1709 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x177C JUMPI PUSH2 0x177B PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1789 DUP10 DUP3 DUP11 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x179A DUP10 DUP3 DUP11 ADD PUSH2 0x16C3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x17AB DUP10 DUP3 DUP11 ADD PUSH2 0x16C3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x17BC DUP10 DUP3 DUP11 ADD PUSH2 0x16ED JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17DD JUMPI PUSH2 0x17DC PUSH2 0x167F JUMP JUMPDEST JUMPDEST PUSH2 0x17E9 DUP10 DUP3 DUP11 ADD PUSH2 0x170D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180A DUP2 PUSH2 0x17F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1823 PUSH0 DUP4 ADD DUP6 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x1830 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1849 DUP2 PUSH2 0x1837 JUMP JUMPDEST DUP2 EQ PUSH2 0x1853 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1864 DUP2 PUSH2 0x1840 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH2 0x187E PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188C DUP5 DUP3 DUP6 ADD PUSH2 0x1856 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AA DUP2 PUSH2 0x1895 JUMP JUMPDEST DUP2 EQ PUSH2 0x18B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18C5 DUP2 PUSH2 0x18A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18E0 JUMPI PUSH2 0x18DF PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18ED DUP5 DUP3 DUP6 ADD PUSH2 0x18B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1909 PUSH0 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1926 JUMPI PUSH2 0x1925 PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1933 DUP7 DUP3 DUP8 ADD PUSH2 0x1699 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1954 JUMPI PUSH2 0x1953 PUSH2 0x167F JUMP JUMPDEST JUMPDEST PUSH2 0x1960 DUP7 DUP3 DUP8 ADD PUSH2 0x170D JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197E DUP2 PUSH2 0x196C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1997 PUSH0 DUP4 ADD DUP6 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x19A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1975 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C0 JUMPI PUSH2 0x19BF PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19CD DUP5 DUP3 DUP6 ADD PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x19D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A03 PUSH0 DUP4 ADD DUP6 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x1A10 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1602 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A4E DUP3 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x1A80 JUMPI PUSH2 0x1A7F PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A94 DUP3 PUSH2 0x15E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9F DUP4 PUSH2 0x15E7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AC7 JUMPI PUSH2 0x1AC6 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B06 DUP4 DUP6 PUSH2 0x1ACD JUMP JUMPDEST SWAP4 POP PUSH2 0x1B13 DUP4 DUP6 DUP5 PUSH2 0x1ADD JUMP JUMPDEST PUSH2 0x1B1C DUP4 PUSH2 0x1AEB JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B3A PUSH0 DUP4 ADD DUP8 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x1B47 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1801 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B5A DUP2 DUP5 DUP7 PUSH2 0x1AFB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B6F DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7A DUP4 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B92 JUMPI PUSH2 0x1B91 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1BAB PUSH0 DUP4 ADD DUP8 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x1BB8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x1BC5 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x1BD2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BE5 DUP3 PUSH2 0x196C JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x1C17 JUMPI PUSH2 0x1C16 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C34 PUSH0 DUP4 ADD DUP6 PUSH2 0x15BF JUMP JUMPDEST PUSH2 0x1C41 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1801 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C51 DUP2 PUSH2 0x19D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C5B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C6C DUP2 PUSH2 0x1C48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1C86 PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C94 DUP5 DUP3 DUP6 ADD PUSH2 0x1C5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CB0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x1CBD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1975 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CD0 DUP2 DUP5 DUP7 PUSH2 0x1AFB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1CEE PUSH0 DUP4 ADD DUP9 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x1CFB PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1975 JUMP JUMPDEST PUSH2 0x1D08 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x1D15 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x1D22 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1645 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D63 DUP3 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D6E DUP4 PUSH2 0x1639 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D7E JUMPI PUSH2 0x1D7D PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SMOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D93 DUP3 PUSH2 0x1639 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D9E DUP4 PUSH2 0x1639 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DAE JUMPI PUSH2 0x1DAD PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP4 EQ AND ISZERO PUSH2 0x1DE6 JUMPI PUSH2 0x1DE5 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E07 DUP3 PUSH2 0x1DF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E18 DUP3 PUSH2 0x1DFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E30 PUSH2 0x1E2B DUP3 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x1E0E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E4C DUP3 PUSH2 0x1E36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E64 PUSH2 0x1E5F DUP3 PUSH2 0x1639 JUMP JUMPDEST PUSH2 0x1E42 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E75 DUP3 DUP7 PUSH2 0x1E1F JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x1E85 DUP3 DUP6 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x1E95 DUP3 DUP5 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EEA PUSH1 0x1 DUP4 PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EF5 DUP3 PUSH2 0x1EB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F17 DUP2 PUSH2 0x1EDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F28 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F33 DUP4 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1F41 DUP2 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1F58 JUMPI PUSH2 0x1F57 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F69 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F74 DUP4 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F84 JUMPI PUSH2 0x1F83 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F99 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FA4 DUP4 PUSH2 0x17F8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1FB4 JUMPI PUSH2 0x1FB3 PUSH2 0x1D2C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FC9 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD4 DUP4 PUSH2 0x158F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2000 JUMPI PUSH2 0x1FFF PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x200F DUP2 PUSH2 0x17F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2019 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x202A DUP2 PUSH2 0x2006 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2045 JUMPI PUSH2 0x2044 PUSH2 0x167B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2052 DUP5 DUP3 DUP6 ADD PUSH2 0x201C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2065 DUP3 PUSH2 0x17F8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2097 JUMPI PUSH2 0x2096 PUSH2 0x1A17 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5052424D6174683A206F766572666C6F77000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20D6 PUSH1 0x11 DUP4 PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E1 DUP3 PUSH2 0x20A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2103 DUP2 PUSH2 0x20CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xE1 NUMBER 0xDB RETURNCONTRACT 0x72 PUSH14 0x862EE50585D88C46E7EFE1DD246A BLOBBASEFEE REVERT 0xB6 LOG1 0xBA SWAP3 LOG4 GAS SWAP6 0xD4 PUSH14 0x64736F6C634300081E0033000000 ",
							"sourceMap": "416:4598:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;913:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1215:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1157:18;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1760:1954;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1408:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1337:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;951:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3746:949;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1269:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;913:31;;;:::o;1215:24::-;;;;;;;;;;;;;:::o;1157:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1760:1954::-;1945:15;1962;2021:9;2008:22;;:9;:22;;;;:59;;;;714:7;2047:20;;:9;:20;;;2008:59;:96;;;;714:7;763:9;;;:::i;:::-;2084:20;;:9;:20;;;2008:96;1990:151;;;2123:18;;;;;;;;;;;;;;1990:151;2166:1;2156:6;:11;;;2152:39;;2176:15;;;;;;;;;;;;;;2152:39;2204:17;2224:31;2237:9;2248:6;2224:5;:12;;:31;;;;;:::i;:::-;2204:51;;2266:17;2286:31;2299:9;2310:6;2286:5;:12;;:31;;;;;:::i;:::-;2266:51;;2331:12;2328:77;;;2360:33;2380:9;2391:1;2360:10;:19;;:33;;;;;:::i;:::-;2328:77;2418:12;2415:77;;;2447:33;2467:9;2478:1;2447:10;:19;;:33;;;;;:::i;:::-;2415:77;2504:30;2537:92;2565:5;2585:9;2609;2537;:13;;:92;;;;;;:::i;:::-;2504:125;;2640:23;2656:6;2640:8;:15;;:23;;;;:::i;:::-;2676:19;2698:5;2676:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:140;2762:6;:19;;;2796:38;2824:9;2796:27;:38::i;:::-;2849:6;2726:21;:140::i;:::-;2716:150;;2889:140;2925:6;:19;;;2959:38;2987:9;2959:27;:38::i;:::-;3012:6;2889:21;:140::i;:::-;2879:150;;3063:6;3042:9;;:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3083:22;3116;3163:1;3153:7;:11;3149:44;;;3183:10;:8;:10::i;:::-;3166:27;;3149:44;3218:1;3208:7;:11;3204:44;;;3238:10;:8;:10::i;:::-;3221:27;;3204:44;3282:10;3259:56;;;3330:7;3352;3374:4;;3259:130;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3414:1;3404:7;:11;:52;;;;;3446:10;:8;:10::i;:::-;3436:7;3419:14;:24;;;;:::i;:::-;:37;3404:52;3400:103;;;3478:25;;;;;;;;;;;;;;3400:103;3528:1;3518:7;:11;:52;;;;;3560:10;:8;:10::i;:::-;3550:7;3533:14;:24;;;;:::i;:::-;:37;3518:52;3514:103;;;3592:25;;;;;;;;;;;;;;3514:103;3670:9;3635:71;;3659:9;3635:71;;3652:5;3635:71;;;3640:10;3681:6;3689:7;3698;3635:71;;;;;;;;;:::i;:::-;;;;;;;;1979:1735;;;;;;1760:1954;;;;;;;;;:::o;1408:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1337:43::-;;;;;;;;;;;;;;;;;:::o;951:31::-;;;:::o;3746:949::-;3834:14;3850;3882;3899:5;3882:22;;3915:17;3935:31;3915:51;;3987:27;3977:37;;4035:8;4025:18;;4090:8;4100:9;4055:5;:10;;;4067:5;:18;;;4054:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4138:6;4131:23;;;4155:9;4175:7;4174:8;;;:::i;:::-;4131:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4195:22;4220:10;:8;:10::i;:::-;4195:35;;4264:10;4241:56;;;4312:7;4334;4356:4;;4241:130;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4422:10;:8;:10::i;:::-;4411:7;4386:14;:33;;;;:::i;:::-;:46;4382:97;;;4454:25;;;;;;;;;;;;;;4382:97;4541:9;4497:190;;4516:10;4497:190;;;4565:7;4587;4609:5;:18;;;;;;;;;;;;4642:9;;;;;;;;;;;4666:5;:10;;;;;;;;;;;;4497:190;;;;;;;;;;:::i;:::-;;;;;;;;3871:824;;;3746:949;;;;;;:::o;1269:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;160:535:10:-;302:12;326:26;355:4;:10;360:4;355:10;;;;;;;;;;;;;;;326:39;;375:23;401:8;:18;;;;;;;;;;;;375:44;;429:22;472:14;454:15;:32;;;;:::i;:::-;429:57;;552:1;533:15;:20;;;507:47;;526:1;508:14;:19;;;507:47;;;;497:57;;588:1;569:15;:20;;;565:78;;628:4;605:8;:20;;;:27;;;;;;;;;;;;;;;;;;565:78;674:14;653:8;:18;;;:35;;;;;;;;;;;;;;;;;;316:379;;;160:535;;;;;:::o;1110:348:11:-;1278:1;1263:11;1256:4;:18;;;;:::i;:::-;:23;;;1248:32;;;;;;1325:13;1340:12;1356:28;1372:11;1365:4;:18;;;;:::i;:::-;1356:8;:28::i;:::-;1324:60;;;;1394:12;1414:6;1409:11;;:1;:11;;1394:26;;1447:4;1430;:13;1435:7;1430:13;;;;;;;;;;;;;;;;:21;;;;;;;;;;;1238:220;;;1110:348;;;:::o;138:306:9:-;300:30;353:4;:84;398:5;405:9;416;381:45;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;371:56;;;;;;353:84;;;;;;;;;;;342:95;;138:306;;;;;;:::o;450:234::-;528:23;554:4;:14;;;;;;;;;;;;528:40;;578:22;621:14;603:15;:32;;;;:::i;:::-;578:57;;663:14;646:4;:14;;;:31;;;;;;;;;;;;;;;;;;518:166;;450:234;;:::o;1355:2588:12:-;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;;:::i;:::-;1468:57;1450:75;;477:7;637:9;;;:::i;:::-;1554:25;;1543:7;:36;;1535:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1596:13;1629:1;1622:3;1612:7;:13;:18;:93;;1670:35;1612:93;;;1633:34;1612:93;1596:109;;;;1736:1;1729:3;1719:7;:13;:18;1715:83;;1795:3;1756:34;1748:5;:42;;;;:::i;:::-;1747:51;;1739:59;;1715:83;1829:1;1822:3;1812:7;:13;:18;1808:83;;1888:3;1849:34;1841:5;:42;;;;:::i;:::-;1840:51;;1832:59;;1808:83;1922:1;1915:3;1905:7;:13;:18;1901:83;;1981:3;1942:34;1934:5;:42;;;;:::i;:::-;1933:51;;1925:59;;1901:83;2016:1;2008:4;1998:7;:14;:19;1994:84;;2075:3;2036:34;2028:5;:42;;;;:::i;:::-;2027:51;;2019:59;;1994:84;2110:1;2102:4;2092:7;:14;:19;2088:84;;2169:3;2130:34;2122:5;:42;;;;:::i;:::-;2121:51;;2113:59;;2088:84;2204:1;2196:4;2186:7;:14;:19;2182:84;;2263:3;2224:34;2216:5;:42;;;;:::i;:::-;2215:51;;2207:59;;2182:84;2298:1;2290:4;2280:7;:14;:19;2276:84;;2357:3;2318:34;2310:5;:42;;;;:::i;:::-;2309:51;;2301:59;;2276:84;2393:1;2384:5;2374:7;:15;:20;2370:85;;2452:3;2413:34;2405:5;:42;;;;:::i;:::-;2404:51;;2396:59;;2370:85;2488:1;2479:5;2469:7;:15;:20;2465:85;;2547:3;2508:34;2500:5;:42;;;;:::i;:::-;2499:51;;2491:59;;2465:85;2583:1;2574:5;2564:7;:15;:20;2560:85;;2642:3;2603:34;2595:5;:42;;;;:::i;:::-;2594:51;;2586:59;;2560:85;2678:1;2669:5;2659:7;:15;:20;2655:85;;2737:3;2698:34;2690:5;:42;;;;:::i;:::-;2689:51;;2681:59;;2655:85;2774:1;2764:6;2754:7;:16;:21;2750:86;;2833:3;2794:34;2786:5;:42;;;;:::i;:::-;2785:51;;2777:59;;2750:86;2870:1;2860:6;2850:7;:16;:21;2846:86;;2929:3;2890:34;2882:5;:42;;;;:::i;:::-;2881:51;;2873:59;;2846:86;2966:1;2956:6;2946:7;:16;:21;2942:86;;3025:3;2986:34;2978:5;:42;;;;:::i;:::-;2977:51;;2969:59;;2942:86;3062:1;3052:6;3042:7;:16;:21;3038:86;;3121:3;3082:34;3074:5;:42;;;;:::i;:::-;3073:51;;3065:59;;3038:86;3159:1;3148:7;3138;:17;:22;3134:86;;3217:3;3179:33;3171:5;:41;;;;:::i;:::-;3170:50;;3162:58;;3134:86;3255:1;3244:7;3234;:17;:22;3230:85;;3312:3;3275:32;3267:5;:40;;;;:::i;:::-;3266:49;;3258:57;;3230:85;3350:1;3339:7;3329;:17;:22;3325:83;;3405:3;3370:30;3362:5;:38;;;;:::i;:::-;3361:47;;3353:55;;3325:83;3443:1;3432:7;3422;:17;:22;3418:78;;3493:3;3463:25;3455:5;:33;;;;:::i;:::-;3454:42;;3446:50;;3418:78;3518:1;3511:4;:8;;;3507:47;;;3549:5;3529:17;:25;;;;:::i;:::-;3521:33;;3507:47;3925:1;3913:7;3904:5;:17;;;;:::i;:::-;:22;:30;;3933:1;3904:30;;;3929:1;3904:30;3887:48;;3897:2;3888:5;:11;;3887:48;;;;:::i;:::-;3864:72;;1440:2503;;1355:2588;;;:::o;245:585:7:-;389:15;436:13;420:29;;:13;:29;;;416:110;;;497:13;512;463:63;;;;;;;;416:110;561:1;545:13;:17;;;537:26;;;;;;584:239;611:175;135:2:6;646:45:7;;654:9;646:18;;:45;;727:13;711;:29;;;;:::i;:::-;611:175;;759:13;611:175;;:16;:175::i;:::-;800:13;584:239;;:13;:239::i;:::-;574:249;;245:585;;;;;:::o;945:433::-;1089:15;1136:13;1120:29;;:13;:29;;;1116:110;;;1197:13;1212;1163:63;;;;;;;;1116:110;1247:124;1277:9;1247:124;;1317:13;1301;:29;;;;:::i;:::-;1247:124;;175:5:6;1247:16:7;:124::i;:::-;1237:134;;945:433;;;;;:::o;4724:128:0:-;4767:15;4812:6;4805:24;;;4838:4;4805:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4795:49;;4724:128;:::o;4881:::-;4924:15;4969:6;4962:24;;;4995:4;4962:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4952:49;;4881:128;:::o;686:168:11:-;738:13;753:12;801:1;793:4;:9;;;;777:26;;842:3;835:4;:10;;;;:::i;:::-;813:34;;686:168;;;:::o;3124:323:7:-;3246:14;3281:33;3296:1;3299;3302:11;3281:14;:33::i;:::-;3272:42;;3356:1;3341:11;3328:25;;;;;:::i;:::-;;3338:1;3335;3328:25;:29;3324:117;;;3390:17;3381:6;:26;3373:35;;;;;;3422:8;;;;;:::i;:::-;;;;3324:117;3124:323;;;;;:::o;3453:303::-;3563:14;3724:1;3710:11;3699:9;3695:27;3692:34;3662:11;3651:9;3647:27;3626:114;3616:124;;3453:303;;;;:::o;1169:2385:8:-;1285:14;1392:13;1465;1594:1;1590:6;1587:1;1584;1577:20;1631:1;1628;1624:9;1615:18;;1687:5;1683:2;1680:13;1672:5;1668:2;1664:14;1660:34;1651:43;;1548:161;1801:1;1792:5;:10;1788:77;;1838:11;1830:5;:19;;;;;:::i;:::-;;;1823:26;;;;;;1788:77;1960:5;1946:11;:19;1938:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2249:17;2335:11;2332:1;2329;2322:25;2309:38;;2399:5;2388:9;2385:20;2378:5;2374:32;2365:41;;2444:9;2437:5;2433:21;2424:30;;2582:15;2630:1;2616:11;2615:12;:16;2600:11;:32;2582:50;;2707:7;2694:11;2690:25;2675:40;;2753:7;2746:5;2742:19;2733:28;;2825:1;2815:7;2805;2802:1;2798:15;2794:29;2790:37;2779:48;;2927:7;2919:5;:15;2910:24;;;;3000:15;3038:1;3023:11;3019:1;:15;3018:21;3000:39;;3083:7;3069:11;:21;3065:1;:25;3054:36;;;;3153:7;3139:11;:21;3135:1;:25;3124:36;;;;3224:7;3210:11;:21;3206:1;:25;3195:36;;;;3295:7;3281:11;:21;3277:1;:25;3266:36;;;;3366:7;3352:11;:21;3348:1;:25;3337:36;;;;3438:7;3424:11;:21;3420:1;:25;3409:36;;;;3500:7;3492:5;:15;3483:24;;3522:13;;;;;1169:2385;;;;;;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:118::-;630:7;670:34;663:5;659:46;648:57;;593:118;;;:::o;717:::-;804:24;822:5;804:24;:::i;:::-;799:3;792:37;717:118;;:::o;841:222::-;934:4;972:2;961:9;957:18;949:26;;985:71;1053:1;1042:9;1038:17;1029:6;985:71;:::i;:::-;841:222;;;;:::o;1069:118::-;1156:24;1174:5;1156:24;:::i;:::-;1151:3;1144:37;1069:118;;:::o;1193:90::-;1228:7;1271:5;1268:1;1257:20;1246:31;;1193:90;;;:::o;1289:112::-;1372:22;1388:5;1372:22;:::i;:::-;1367:3;1360:35;1289:112;;:::o;1407:324::-;1524:4;1562:2;1551:9;1547:18;1539:26;;1575:71;1643:1;1632:9;1628:17;1619:6;1575:71;:::i;:::-;1656:68;1720:2;1709:9;1705:18;1696:6;1656:68;:::i;:::-;1407:324;;;;;:::o;1818:117::-;1927:1;1924;1917:12;1941:117;2050:1;2047;2040:12;2064:122;2137:24;2155:5;2137:24;:::i;:::-;2130:5;2127:35;2117:63;;2176:1;2173;2166:12;2117:63;2064:122;:::o;2192:139::-;2238:5;2276:6;2263:20;2254:29;;2292:33;2319:5;2292:33;:::i;:::-;2192:139;;;;:::o;2337:118::-;2408:22;2424:5;2408:22;:::i;:::-;2401:5;2398:33;2388:61;;2445:1;2442;2435:12;2388:61;2337:118;:::o;2461:135::-;2505:5;2543:6;2530:20;2521:29;;2559:31;2584:5;2559:31;:::i;:::-;2461:135;;;;:::o;2602:122::-;2675:24;2693:5;2675:24;:::i;:::-;2668:5;2665:35;2655:63;;2714:1;2711;2704:12;2655:63;2602:122;:::o;2730:139::-;2776:5;2814:6;2801:20;2792:29;;2830:33;2857:5;2830:33;:::i;:::-;2730:139;;;;:::o;2875:117::-;2984:1;2981;2974:12;2998:117;3107:1;3104;3097:12;3121:117;3230:1;3227;3220:12;3257:552;3314:8;3324:6;3374:3;3367:4;3359:6;3355:17;3351:27;3341:122;;3382:79;;:::i;:::-;3341:122;3495:6;3482:20;3472:30;;3525:18;3517:6;3514:30;3511:117;;;3547:79;;:::i;:::-;3511:117;3661:4;3653:6;3649:17;3637:29;;3715:3;3707:4;3699:6;3695:17;3685:8;3681:32;3678:41;3675:128;;;3722:79;;:::i;:::-;3675:128;3257:552;;;;;:::o;3815:1101::-;3917:6;3925;3933;3941;3949;3957;4006:3;3994:9;3985:7;3981:23;3977:33;3974:120;;;4013:79;;:::i;:::-;3974:120;4133:1;4158:53;4203:7;4194:6;4183:9;4179:22;4158:53;:::i;:::-;4148:63;;4104:117;4260:2;4286:51;4329:7;4320:6;4309:9;4305:22;4286:51;:::i;:::-;4276:61;;4231:116;4386:2;4412:51;4455:7;4446:6;4435:9;4431:22;4412:51;:::i;:::-;4402:61;;4357:116;4512:2;4538:53;4583:7;4574:6;4563:9;4559:22;4538:53;:::i;:::-;4528:63;;4483:118;4668:3;4657:9;4653:19;4640:33;4700:18;4692:6;4689:30;4686:117;;;4722:79;;:::i;:::-;4686:117;4835:64;4891:7;4882:6;4871:9;4867:22;4835:64;:::i;:::-;4817:82;;;;4611:298;3815:1101;;;;;;;;:::o;4922:77::-;4959:7;4988:5;4977:16;;4922:77;;;:::o;5005:118::-;5092:24;5110:5;5092:24;:::i;:::-;5087:3;5080:37;5005:118;;:::o;5129:332::-;5250:4;5288:2;5277:9;5273:18;5265:26;;5301:71;5369:1;5358:9;5354:17;5345:6;5301:71;:::i;:::-;5382:72;5450:2;5439:9;5435:18;5426:6;5382:72;:::i;:::-;5129:332;;;;;:::o;5467:77::-;5504:7;5533:5;5522:16;;5467:77;;;:::o;5550:122::-;5623:24;5641:5;5623:24;:::i;:::-;5616:5;5613:35;5603:63;;5662:1;5659;5652:12;5603:63;5550:122;:::o;5678:139::-;5724:5;5762:6;5749:20;5740:29;;5778:33;5805:5;5778:33;:::i;:::-;5678:139;;;;:::o;5823:329::-;5882:6;5931:2;5919:9;5910:7;5906:23;5902:32;5899:119;;;5937:79;;:::i;:::-;5899:119;6057:1;6082:53;6127:7;6118:6;6107:9;6103:22;6082:53;:::i;:::-;6072:63;;6028:117;5823:329;;;;:::o;6158:90::-;6193:7;6236:5;6233:1;6222:20;6211:31;;6158:90;;;:::o;6254:118::-;6325:22;6341:5;6325:22;:::i;:::-;6318:5;6315:33;6305:61;;6362:1;6359;6352:12;6305:61;6254:118;:::o;6378:135::-;6422:5;6460:6;6447:20;6438:29;;6476:31;6501:5;6476:31;:::i;:::-;6378:135;;;;:::o;6519:325::-;6576:6;6625:2;6613:9;6604:7;6600:23;6596:32;6593:119;;;6631:79;;:::i;:::-;6593:119;6751:1;6776:51;6819:7;6810:6;6799:9;6795:22;6776:51;:::i;:::-;6766:61;;6722:115;6519:325;;;;:::o;6850:222::-;6943:4;6981:2;6970:9;6966:18;6958:26;;6994:71;7062:1;7051:9;7047:17;7038:6;6994:71;:::i;:::-;6850:222;;;;:::o;7078:672::-;7157:6;7165;7173;7222:2;7210:9;7201:7;7197:23;7193:32;7190:119;;;7228:79;;:::i;:::-;7190:119;7348:1;7373:53;7418:7;7409:6;7398:9;7394:22;7373:53;:::i;:::-;7363:63;;7319:117;7503:2;7492:9;7488:18;7475:32;7534:18;7526:6;7523:30;7520:117;;;7556:79;;:::i;:::-;7520:117;7669:64;7725:7;7716:6;7705:9;7701:22;7669:64;:::i;:::-;7651:82;;;;7446:297;7078:672;;;;;:::o;7756:76::-;7792:7;7821:5;7810:16;;7756:76;;;:::o;7838:115::-;7923:23;7940:5;7923:23;:::i;:::-;7918:3;7911:36;7838:115;;:::o;7959:324::-;8076:4;8114:2;8103:9;8099:18;8091:26;;8127:69;8193:1;8182:9;8178:17;8169:6;8127:69;:::i;:::-;8206:70;8272:2;8261:9;8257:18;8248:6;8206:70;:::i;:::-;7959:324;;;;;:::o;8289:325::-;8346:6;8395:2;8383:9;8374:7;8370:23;8366:32;8363:119;;;8401:79;;:::i;:::-;8363:119;8521:1;8546:51;8589:7;8580:6;8569:9;8565:22;8546:51;:::i;:::-;8536:61;;8492:115;8289:325;;;;:::o;8620:90::-;8654:7;8697:5;8690:13;8683:21;8672:32;;8620:90;;;:::o;8716:109::-;8797:21;8812:5;8797:21;:::i;:::-;8792:3;8785:34;8716:109;;:::o;8831:320::-;8946:4;8984:2;8973:9;8969:18;8961:26;;8997:65;9059:1;9048:9;9044:17;9035:6;8997:65;:::i;:::-;9072:72;9140:2;9129:9;9125:18;9116:6;9072:72;:::i;:::-;8831:320;;;;;:::o;9157:180::-;9205:77;9202:1;9195:88;9302:4;9299:1;9292:15;9326:4;9323:1;9316:15;9343:226;9377:3;9400:22;9416:5;9400:22;:::i;:::-;9391:31;;9444:66;9437:5;9434:77;9431:103;;9514:18;;:::i;:::-;9431:103;9557:5;9554:1;9550:13;9543:20;;9343:226;;;:::o;9575:224::-;9615:3;9634:20;9652:1;9634:20;:::i;:::-;9629:25;;9668:20;9686:1;9668:20;:::i;:::-;9663:25;;9711:1;9708;9704:9;9697:16;;9734:34;9729:3;9726:43;9723:69;;;9772:18;;:::i;:::-;9723:69;9575:224;;;;:::o;9805:168::-;9888:11;9922:6;9917:3;9910:19;9962:4;9957:3;9953:14;9938:29;;9805:168;;;;:::o;9979:148::-;10077:6;10072:3;10067;10054:30;10118:1;10109:6;10104:3;10100:16;10093:27;9979:148;;;:::o;10133:102::-;10174:6;10225:2;10221:7;10216:2;10209:5;10205:14;10201:28;10191:38;;10133:102;;;:::o;10263:314::-;10359:3;10380:70;10443:6;10438:3;10380:70;:::i;:::-;10373:77;;10460:56;10509:6;10504:3;10497:5;10460:56;:::i;:::-;10541:29;10563:6;10541:29;:::i;:::-;10536:3;10532:39;10525:46;;10263:314;;;;;:::o;10583:549::-;10760:4;10798:2;10787:9;10783:18;10775:26;;10811:71;10879:1;10868:9;10864:17;10855:6;10811:71;:::i;:::-;10892:72;10960:2;10949:9;10945:18;10936:6;10892:72;:::i;:::-;11011:9;11005:4;11001:20;10996:2;10985:9;10981:18;10974:48;11039:86;11120:4;11111:6;11103;11039:86;:::i;:::-;11031:94;;10583:549;;;;;;;:::o;11138:191::-;11178:3;11197:20;11215:1;11197:20;:::i;:::-;11192:25;;11231:20;11249:1;11231:20;:::i;:::-;11226:25;;11274:1;11271;11267:9;11260:16;;11295:3;11292:1;11289:10;11286:36;;;11302:18;;:::i;:::-;11286:36;11138:191;;;;:::o;11335:553::-;11512:4;11550:3;11539:9;11535:19;11527:27;;11564:71;11632:1;11621:9;11617:17;11608:6;11564:71;:::i;:::-;11645:72;11713:2;11702:9;11698:18;11689:6;11645:72;:::i;:::-;11727;11795:2;11784:9;11780:18;11771:6;11727:72;:::i;:::-;11809;11877:2;11866:9;11862:18;11853:6;11809:72;:::i;:::-;11335:553;;;;;;;:::o;11894:228::-;11929:3;11952:23;11969:5;11952:23;:::i;:::-;11943:32;;11997:66;11990:5;11987:77;11984:103;;12067:18;;:::i;:::-;11984:103;12110:5;12107:1;12103:13;12096:20;;11894:228;;;:::o;12128:332::-;12249:4;12287:2;12276:9;12272:18;12264:26;;12300:71;12368:1;12357:9;12353:17;12344:6;12300:71;:::i;:::-;12381:72;12449:2;12438:9;12434:18;12425:6;12381:72;:::i;:::-;12128:332;;;;;:::o;12466:116::-;12536:21;12551:5;12536:21;:::i;:::-;12529:5;12526:32;12516:60;;12572:1;12569;12562:12;12516:60;12466:116;:::o;12588:137::-;12642:5;12673:6;12667:13;12658:22;;12689:30;12713:5;12689:30;:::i;:::-;12588:137;;;;:::o;12731:345::-;12798:6;12847:2;12835:9;12826:7;12822:23;12818:32;12815:119;;;12853:79;;:::i;:::-;12815:119;12973:1;12998:61;13051:7;13042:6;13031:9;13027:22;12998:61;:::i;:::-;12988:71;;12944:125;12731:345;;;;:::o;13082:541::-;13255:4;13293:2;13282:9;13278:18;13270:26;;13306:69;13372:1;13361:9;13357:17;13348:6;13306:69;:::i;:::-;13385:70;13451:2;13440:9;13436:18;13427:6;13385:70;:::i;:::-;13502:9;13496:4;13492:20;13487:2;13476:9;13472:18;13465:48;13530:86;13611:4;13602:6;13594;13530:86;:::i;:::-;13522:94;;13082:541;;;;;;;:::o;13629:648::-;13826:4;13864:3;13853:9;13849:19;13841:27;;13878:69;13944:1;13933:9;13929:17;13920:6;13878:69;:::i;:::-;13957:70;14023:2;14012:9;14008:18;13999:6;13957:70;:::i;:::-;14037:72;14105:2;14094:9;14090:18;14081:6;14037:72;:::i;:::-;14119;14187:2;14176:9;14172:18;14163:6;14119:72;:::i;:::-;14201:69;14265:3;14254:9;14250:19;14241:6;14201:69;:::i;:::-;13629:648;;;;;;;;:::o;14283:180::-;14331:77;14328:1;14321:88;14428:4;14425:1;14418:15;14452:4;14449:1;14442:15;14469:171;14499:1;14516:18;14532:1;14516:18;:::i;:::-;14511:23;;14548:18;14564:1;14548:18;:::i;:::-;14543:23;;14585:1;14575:35;;14590:18;;:::i;:::-;14575:35;14632:1;14629;14624:10;14619:15;;14469:171;;;;:::o;14646:382::-;14684:1;14701:18;14717:1;14701:18;:::i;:::-;14696:23;;14733:18;14749:1;14733:18;:::i;:::-;14728:23;;14770:1;14760:35;;14775:18;;:::i;:::-;14760:35;14961:1;14958;14954:9;14951:1;14948:16;14867:66;14864:1;14861:73;14844:130;14841:156;;;14977:18;;:::i;:::-;14841:156;15020:1;15017;15012:10;15007:15;;14646:382;;;;:::o;15034:94::-;15067:8;15115:5;15111:2;15107:14;15086:35;;15034:94;;;:::o;15134:::-;15173:7;15202:20;15216:5;15202:20;:::i;:::-;15191:31;;15134:94;;;:::o;15234:100::-;15273:7;15302:26;15322:5;15302:26;:::i;:::-;15291:37;;15234:100;;;:::o;15340:157::-;15445:45;15465:24;15483:5;15465:24;:::i;:::-;15445:45;:::i;:::-;15440:3;15433:58;15340:157;;:::o;15503:96::-;15537:8;15586:5;15581:3;15577:15;15556:36;;15503:96;;;:::o;15605:93::-;15642:7;15671:21;15686:5;15671:21;:::i;:::-;15660:32;;15605:93;;;:::o;15704:149::-;15805:41;15823:22;15839:5;15823:22;:::i;:::-;15805:41;:::i;:::-;15800:3;15793:54;15704:149;;:::o;15859:520::-;16019:3;16034:75;16105:3;16096:6;16034:75;:::i;:::-;16134:2;16129:3;16125:12;16118:19;;16147:71;16214:3;16205:6;16147:71;:::i;:::-;16243:1;16238:3;16234:11;16227:18;;16255:71;16322:3;16313:6;16255:71;:::i;:::-;16351:1;16346:3;16342:11;16335:18;;16370:3;16363:10;;15859:520;;;;;;:::o;16385:169::-;16469:11;16503:6;16498:3;16491:19;16543:4;16538:3;16534:14;16519:29;;16385:169;;;;:::o;16560:151::-;16700:3;16696:1;16688:6;16684:14;16677:27;16560:151;:::o;16717:365::-;16859:3;16880:66;16944:1;16939:3;16880:66;:::i;:::-;16873:73;;16955:93;17044:3;16955:93;:::i;:::-;17073:2;17068:3;17064:12;17057:19;;16717:365;;;:::o;17088:419::-;17254:4;17292:2;17281:9;17277:18;17269:26;;17341:9;17335:4;17331:20;17327:1;17316:9;17312:17;17305:47;17369:131;17495:4;17369:131;:::i;:::-;17361:139;;17088:419;;;:::o;17513:410::-;17553:7;17576:20;17594:1;17576:20;:::i;:::-;17571:25;;17610:20;17628:1;17610:20;:::i;:::-;17605:25;;17665:1;17662;17658:9;17687:30;17705:11;17687:30;:::i;:::-;17676:41;;17866:1;17857:7;17853:15;17850:1;17847:22;17827:1;17820:9;17800:83;17777:139;;17896:18;;:::i;:::-;17777:139;17561:362;17513:410;;;;:::o;17929:185::-;17969:1;17986:20;18004:1;17986:20;:::i;:::-;17981:25;;18020:20;18038:1;18020:20;:::i;:::-;18015:25;;18059:1;18049:35;;18064:18;;:::i;:::-;18049:35;18106:1;18103;18099:9;18094:14;;17929:185;;;;:::o;18120:176::-;18152:1;18169:20;18187:1;18169:20;:::i;:::-;18164:25;;18203:20;18221:1;18203:20;:::i;:::-;18198:25;;18242:1;18232:35;;18247:18;;:::i;:::-;18232:35;18288:1;18285;18281:9;18276:14;;18120:176;;;;:::o;18302:235::-;18342:4;18362:20;18380:1;18362:20;:::i;:::-;18357:25;;18396:20;18414:1;18396:20;:::i;:::-;18391:25;;18440:1;18437;18433:9;18425:17;;18464:42;18458:4;18455:52;18452:78;;;18510:18;;:::i;:::-;18452:78;18302:235;;;;:::o;18543:122::-;18616:24;18634:5;18616:24;:::i;:::-;18609:5;18606:35;18596:63;;18655:1;18652;18645:12;18596:63;18543:122;:::o;18671:143::-;18728:5;18759:6;18753:13;18744:22;;18775:33;18802:5;18775:33;:::i;:::-;18671:143;;;;:::o;18820:351::-;18890:6;18939:2;18927:9;18918:7;18914:23;18910:32;18907:119;;;18945:79;;:::i;:::-;18907:119;19065:1;19090:64;19146:7;19137:6;19126:9;19122:22;19090:64;:::i;:::-;19080:74;;19036:128;18820:351;;;;:::o;19177:233::-;19216:3;19239:24;19257:5;19239:24;:::i;:::-;19230:33;;19285:66;19278:5;19275:77;19272:103;;19355:18;;:::i;:::-;19272:103;19402:1;19395:5;19391:13;19384:20;;19177:233;;;:::o;19416:167::-;19556:19;19552:1;19544:6;19540:14;19533:43;19416:167;:::o;19589:366::-;19731:3;19752:67;19816:2;19811:3;19752:67;:::i;:::-;19745:74;;19828:93;19917:3;19828:93;:::i;:::-;19946:2;19941:3;19937:12;19930:19;;19589:366;;;:::o;19961:419::-;20127:4;20165:2;20154:9;20150:18;20142:26;;20214:9;20208:4;20204:20;20200:1;20189:9;20185:17;20178:47;20242:131;20368:4;20242:131;:::i;:::-;20234:139;;19961:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1702400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"liquidity()": "2489",
								"mint(address,int24,int24,uint128,bytes)": "infinite",
								"positions(bytes32)": "2808",
								"slot0()": "4829",
								"swap(address,bytes)": "infinite",
								"tickBitmap(int16)": "2784",
								"ticks(int24)": "5206",
								"token0()": "infinite",
								"token1()": "infinite"
							},
							"internal": {
								"balance0()": "infinite",
								"balance1()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1487,
									"end": 1738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1630,
									"end": 1637,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1621,
									"end": 1637,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1657,
									"end": 1664,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1704,
									"end": 1716,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1724,
									"end": 1728,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "SIGNEXTEND",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1683,
									"end": 1730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFF"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SIGNEXTEND",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFF"
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1675,
									"end": 1730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1738,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 967,
									"name": "tag",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 967,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 918,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 936,
									"end": 941,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 918,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 918,
									"end": 942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 918,
									"end": 942,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 918,
									"end": 942,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 908,
									"end": 943,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 898,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 898,
									"end": 961,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 957,
									"end": 958,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 947,
									"end": 959,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 898,
									"end": 961,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 898,
									"end": 961,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 845,
									"end": 967,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 967,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1035,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1067,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1055,
									"end": 1068,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1046,
									"end": 1068,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1046,
									"end": 1068,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 1077,
									"end": 1110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 973,
									"end": 1116,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1197,
									"end": 1198,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1186,
									"end": 1206,
									"name": "SIGNEXTEND",
									"source": 13
								},
								{
									"begin": 1175,
									"end": 1206,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1175,
									"end": 1206,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1305,
									"end": 1310,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1289,
									"end": 1311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1282,
									"end": 1287,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1327,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1324,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1328,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1218,
									"end": 1336,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1397,
									"end": 1402,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1434,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1422,
									"end": 1435,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1469,
									"end": 1474,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1444,
									"end": 1475,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1342,
									"end": 1481,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1588,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1590,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1655,
									"end": 1658,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1643,
									"end": 1652,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1634,
									"end": 1641,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1630,
									"end": 1653,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1659,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1662,
									"end": 1741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1782,
									"end": 1783,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1863,
									"end": 1870,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1843,
									"end": 1852,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1839,
									"end": 1861,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1807,
									"end": 1871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1753,
									"end": 1881,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1920,
									"end": 1922,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 2002,
									"end": 2009,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1993,
									"end": 1999,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1982,
									"end": 1991,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1978,
									"end": 2000,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "13"
								},
								{
									"begin": 1946,
									"end": 2010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1891,
									"end": 2020,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2141,
									"end": 2148,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2121,
									"end": 2130,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2139,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 2085,
									"end": 2149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2075,
									"end": 2149,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2075,
									"end": 2149,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2030,
									"end": 2159,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2198,
									"end": 2200,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 2278,
									"end": 2285,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2258,
									"end": 2267,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 2254,
									"end": 2276,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 2224,
									"end": 2286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2286,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2214,
									"end": 2286,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2169,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1487,
									"end": 2303,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 5014,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060e143dbee726d862ee50585d88c46e7efe1dd246a4afdb6a1ba92a45a95d46d64736f6c634300081e0033",
									".code": [
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "514EA4BF"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "514EA4BF"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "5339C296"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "E3547335"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "F30DBA93"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "1A686502"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "3C8A7D8D"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 5014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 913,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 913,
											"end": 944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1157,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1157,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1760,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1760,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1408,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1408,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1337,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1337,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1337,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 951,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 951,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3746,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3746,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3746,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1269,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1269,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1269,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 913,
											"end": 944,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 913,
											"end": 944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 1960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2017,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2008,
											"end": 2067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 2047,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2047,
											"end": 2067,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2056,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2067,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2047,
											"end": 2067,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2067,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2067,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2008,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2008,
											"end": 2104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 714,
											"end": 721,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 763,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 763,
											"end": 772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 763,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 763,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 763,
											"end": 772,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 763,
											"end": 772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2104,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2084,
											"end": 2104,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2104,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2084,
											"end": 2104,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2084,
											"end": 2104,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 2008,
											"end": 2104,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2008,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2141,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1990,
											"end": 2141,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "PUSH",
											"source": 0,
											"value": "64847D000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1990,
											"end": 2141,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1990,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2162,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2156,
											"end": 2167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2156,
											"end": 2167,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2152,
											"end": 2191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "1007454800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2152,
											"end": 2191,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2152,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2229,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2224,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2224,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2255,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2255,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2224,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2286,
											"end": 2317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2316,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2291,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2286,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2317,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2286,
											"end": 2317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2317,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2286,
											"end": 2317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 2317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2331,
											"end": 2343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2405,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2328,
											"end": 2405,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2360,
											"end": 2370,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2360,
											"end": 2379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2360,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2405,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2328,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2415,
											"end": 2492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2478,
											"end": 2479,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2447,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2447,
											"end": 2466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2480,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2447,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2492,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2415,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2594,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2537,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2537,
											"end": 2550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2537,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2504,
											"end": 2629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2656,
											"end": 2662,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2640,
											"end": 2655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2640,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 2703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2762,
											"end": 2768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2824,
											"end": 2833,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2796,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2796,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2726,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2866,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2726,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2866,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2889,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2944,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2987,
											"end": 2996,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 2959,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2959,
											"end": 2997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2959,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2889,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2889,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2889,
											"end": 3029,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2889,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3029,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 3029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3069,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3042,
											"end": 3051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3042,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3160,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3153,
											"end": 3164,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3149,
											"end": 3193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3183,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3183,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3149,
											"end": 3193,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3149,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3215,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3219,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3204,
											"end": 3248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3238,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3238,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3248,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3238,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3221,
											"end": 3248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3248,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3204,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3259,
											"end": 3315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3315,
											"name": "PUSH",
											"source": 0,
											"value": "D3487997"
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3359,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3378,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3378,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3259,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3415,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3456,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3404,
											"end": 3456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3446,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3446,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3446,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3443,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3419,
											"end": 3443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3419,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3443,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3419,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3456,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3404,
											"end": 3456,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3404,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3400,
											"end": 3503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 3503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3503,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3400,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3518,
											"end": 3570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3560,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3560,
											"end": 3570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 3570,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3560,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3557,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3533,
											"end": 3570,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3570,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3518,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3617,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3514,
											"end": 3617,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3592,
											"end": 3617,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3514,
											"end": 3617,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3514,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3659,
											"end": 3668,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3652,
											"end": 3657,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE"
										},
										{
											"begin": 3640,
											"end": 3650,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3681,
											"end": 3687,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 3689,
											"end": 3696,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 3698,
											"end": 3705,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3635,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3635,
											"end": 3706,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1979,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 3714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1408,
											"end": 1458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 951,
											"end": 982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 951,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 3848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3904,
											"name": "PUSH",
											"source": 0,
											"value": "14CC0"
										},
										{
											"begin": 3882,
											"end": 3904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3882,
											"end": 3904,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3915,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3966,
											"name": "PUSH",
											"source": 0,
											"value": "46BD046408013D67ED5D406B2D"
										},
										{
											"begin": 3915,
											"end": 3966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3915,
											"end": 3966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4014,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE22B3B9E50C0F4"
										},
										{
											"begin": 3977,
											"end": 4014,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3977,
											"end": 4014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4035,
											"end": 4043,
											"name": "PUSH",
											"source": 0,
											"value": "246DDF97976680000"
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4055,
											"end": 4065,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4067,
											"end": 4072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4067,
											"end": 4085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4138,
											"end": 4144,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4131,
											"end": 4154,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4154,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4155,
											"end": 4164,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4182,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4174,
											"end": 4182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4131,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4131,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4220,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4220,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4220,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4220,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4274,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4241,
											"end": 4297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4297,
											"name": "PUSH",
											"source": 0,
											"value": "FA461E33"
										},
										{
											"begin": 4312,
											"end": 4319,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4334,
											"end": 4341,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4360,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4356,
											"end": 4360,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4241,
											"end": 4371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4371,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4422,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4422,
											"end": 4432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4432,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4422,
											"end": 4432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4411,
											"end": 4418,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4386,
											"end": 4419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4386,
											"end": 4419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4419,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4386,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4432,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4382,
											"end": 4479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4382,
											"end": 4479,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4382,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4541,
											"end": 4550,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4516,
											"end": 4526,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "PUSH",
											"source": 0,
											"value": "C42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67"
										},
										{
											"begin": 4565,
											"end": 4572,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4587,
											"end": 4594,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4614,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4666,
											"end": 4676,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4497,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4497,
											"end": 4687,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 4695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 4695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3871,
											"end": 4695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 4695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 160,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 160,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 302,
											"end": 314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 359,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 364,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 326,
											"end": 365,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 326,
											"end": 365,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 375,
											"end": 398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 401,
											"end": 419,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 375,
											"end": 419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 375,
											"end": 419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 429,
											"end": 451,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 486,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 454,
											"end": 469,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 454,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 454,
											"end": 486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 454,
											"end": 486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 454,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 454,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 454,
											"end": 486,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 454,
											"end": 486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 429,
											"end": 486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 429,
											"end": 486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 533,
											"end": 553,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 533,
											"end": 553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 533,
											"end": 553,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 508,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 508,
											"end": 527,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 508,
											"end": 527,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 507,
											"end": 554,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 497,
											"end": 554,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 497,
											"end": 554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 588,
											"end": 589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 628,
											"end": 632,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 605,
											"end": 613,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 605,
											"end": 625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 605,
											"end": 625,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 632,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 605,
											"end": 632,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 605,
											"end": 632,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 605,
											"end": 632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 565,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 674,
											"end": 688,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 653,
											"end": 661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 653,
											"end": 671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 653,
											"end": 671,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 688,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 653,
											"end": 688,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 688,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 688,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 653,
											"end": 688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 316,
											"end": 695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 160,
											"end": 695,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 160,
											"end": 695,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 160,
											"end": 695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 160,
											"end": 695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 160,
											"end": 695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 160,
											"end": 695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1278,
											"end": 1279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1274,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1260,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1256,
											"end": 1274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1279,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1256,
											"end": 1279,
											"name": "SIGNEXTEND",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1279,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1325,
											"end": 1338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1352,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1372,
											"end": 1383,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1365,
											"end": 1369,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1365,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1356,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1384,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1356,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1384,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1384,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1384,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1384,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1420,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1420,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1394,
											"end": 1420,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1447,
											"end": 1451,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1434,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "SIGNEXTEND",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "SIGNEXTEND",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "XOR",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1238,
											"end": 1458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1238,
											"end": 1458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1238,
											"end": 1458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 138,
											"end": 444,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 300,
											"end": 330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 357,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 405,
											"end": 414,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 416,
											"end": 425,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 381,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 437,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 437,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 437,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 342,
											"end": 437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 342,
											"end": 437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 450,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 528,
											"end": 551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 558,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 554,
											"end": 568,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 568,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 528,
											"end": 568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 603,
											"end": 618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 603,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 603,
											"end": 635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 603,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 603,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 603,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 603,
											"end": 635,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 603,
											"end": 635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 578,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 578,
											"end": 635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 677,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 650,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 646,
											"end": 660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 677,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 646,
											"end": 677,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 677,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1499,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 1487,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 477,
											"end": 484,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 637,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 637,
											"end": 646,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFF"
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1535,
											"end": 1585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1612,
											"end": 1625,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1612,
											"end": 1630,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1670,
											"end": 1705,
											"name": "PUSH",
											"source": 12,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1633,
											"end": 1667,
											"name": "PUSH",
											"source": 12,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1719,
											"end": 1726,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1732,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1798,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1756,
											"end": 1790,
											"name": "PUSH",
											"source": 12,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1748,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1747,
											"end": 1798,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1747,
											"end": 1798,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1798,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1739,
											"end": 1798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1830,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1825,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1849,
											"end": 1883,
											"name": "PUSH",
											"source": 12,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1841,
											"end": 1846,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1841,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1832,
											"end": 1891,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1832,
											"end": 1891,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1905,
											"end": 1912,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1942,
											"end": 1976,
											"name": "PUSH",
											"source": 12,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 1934,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 1984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 1984,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1925,
											"end": 1984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2012,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2017,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 12,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2028,
											"end": 2033,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2028,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2078,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2078,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2078,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2092,
											"end": 2111,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 12,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2122,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2121,
											"end": 2172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2121,
											"end": 2172,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2172,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2200,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2200,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH",
											"source": 12,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2216,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2280,
											"end": 2294,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2280,
											"end": 2299,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2357,
											"end": 2360,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2318,
											"end": 2352,
											"name": "PUSH",
											"source": 12,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2310,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2360,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2360,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2301,
											"end": 2360,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2301,
											"end": 2360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2394,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2389,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2381,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2394,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2413,
											"end": 2447,
											"name": "PUSH",
											"source": 12,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2405,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2455,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2484,
											"name": "PUSH",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2508,
											"end": 2542,
											"name": "PUSH",
											"source": 12,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2500,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2550,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2491,
											"end": 2550,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2564,
											"end": 2584,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2642,
											"end": 2645,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "PUSH",
											"source": 12,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2595,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2645,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2674,
											"name": "PUSH",
											"source": 12,
											"value": "800"
										},
										{
											"begin": 2659,
											"end": 2666,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2674,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "PUSH",
											"source": 12,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2690,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2740,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2681,
											"end": 2740,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2681,
											"end": 2740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "PUSH",
											"source": 12,
											"value": "1000"
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2770,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2775,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2794,
											"end": 2828,
											"name": "PUSH",
											"source": 12,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2786,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2836,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 2836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 2836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 12,
											"value": "2000"
										},
										{
											"begin": 2850,
											"end": 2857,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2929,
											"end": 2932,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2890,
											"end": 2924,
											"name": "PUSH",
											"source": 12,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2882,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2881,
											"end": 2932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2881,
											"end": 2932,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "PUSH",
											"source": 12,
											"value": "4000"
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2946,
											"end": 2962,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2946,
											"end": 2967,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2986,
											"end": 3020,
											"name": "PUSH",
											"source": 12,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2978,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3028,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3028,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2969,
											"end": 3028,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2969,
											"end": 3028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "PUSH",
											"source": 12,
											"value": "8000"
										},
										{
											"begin": 3042,
											"end": 3049,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3058,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3042,
											"end": 3063,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3124,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3082,
											"end": 3116,
											"name": "PUSH",
											"source": 12,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 3074,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3124,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "PUSH",
											"source": 12,
											"value": "10000"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3138,
											"end": 3155,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3138,
											"end": 3160,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3217,
											"end": 3220,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3179,
											"end": 3212,
											"name": "PUSH",
											"source": 12,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3171,
											"end": 3176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 3171,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3170,
											"end": 3220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3170,
											"end": 3220,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3220,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "PUSH",
											"source": 12,
											"value": "20000"
										},
										{
											"begin": 3234,
											"end": 3241,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3234,
											"end": 3256,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3312,
											"end": 3315,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3275,
											"end": 3307,
											"name": "PUSH",
											"source": 12,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3267,
											"end": 3272,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 3267,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3315,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3315,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 12,
											"value": "40000"
										},
										{
											"begin": 3329,
											"end": 3336,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3329,
											"end": 3346,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3329,
											"end": 3351,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3408,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH",
											"source": 12,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3362,
											"end": 3367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 3362,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3408,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3408,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3408,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3408,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "PUSH",
											"source": 12,
											"value": "80000"
										},
										{
											"begin": 3422,
											"end": 3429,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3422,
											"end": 3444,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3463,
											"end": 3488,
											"name": "PUSH",
											"source": 12,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3455,
											"end": 3460,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 3455,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "SGT",
											"source": 12
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 3529,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3920,
											"name": "PUSH",
											"source": 12,
											"value": "100000000"
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 3904,
											"end": 3921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3926,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3887,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 3943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 3943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 245,
											"end": 830,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 245,
											"end": 830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 389,
											"end": 404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 420,
											"end": 449,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 449,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 420,
											"end": 433,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 420,
											"end": 449,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 449,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 420,
											"end": 449,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 416,
											"end": 526,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 416,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 416,
											"end": 526,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 512,
											"end": 525,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 416,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 416,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 558,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 545,
											"end": 562,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 545,
											"end": 562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 545,
											"end": 562,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 563,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 584,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 611,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 646,
											"end": 691,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 646,
											"end": 691,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 646,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 664,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 646,
											"end": 691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 646,
											"end": 691,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 727,
											"end": 740,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 711,
											"end": 724,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 711,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 711,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 711,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 611,
											"end": 786,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 611,
											"end": 786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 759,
											"end": 772,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 611,
											"end": 786,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 611,
											"end": 786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 611,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 611,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 611,
											"end": 786,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 611,
											"end": 786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 800,
											"end": 813,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 584,
											"end": 823,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 584,
											"end": 823,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 584,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 584,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 584,
											"end": 823,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 584,
											"end": 823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 574,
											"end": 823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 574,
											"end": 823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1133,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1225,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1330,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 1301,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 175,
											"end": 180,
											"name": "PUSH",
											"source": 6,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 1247,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1247,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4724,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4724,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4767,
											"end": 4782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4818,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4805,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4805,
											"end": 4829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4838,
											"end": 4842,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4805,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4805,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 4805,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4795,
											"end": 4844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 5009,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4881,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4924,
											"end": 4939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4975,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4962,
											"end": 4986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4962,
											"end": 4986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4986,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4995,
											"end": 4999,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4962,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4962,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4962,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4952,
											"end": 5001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 5009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 5009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 854,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 686,
											"end": 854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 738,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 765,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 793,
											"end": 797,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 793,
											"end": 802,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 802,
											"name": "SIGNEXTEND",
											"source": 11
										},
										{
											"begin": 793,
											"end": 802,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 793,
											"end": 802,
											"name": "SAR",
											"source": 11
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 777,
											"end": 803,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 842,
											"end": 845,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 835,
											"end": 839,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 835,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 835,
											"end": 845,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 835,
											"end": 845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 835,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 835,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 835,
											"end": 845,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 835,
											"end": 845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 813,
											"end": 847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 813,
											"end": 847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 686,
											"end": 854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 686,
											"end": 854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 686,
											"end": 854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 686,
											"end": 854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3302,
											"end": 3313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3281,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 3328,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3336,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "MULMOD",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3357,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3407,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3422,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3722,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3726,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3674,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1285,
											"end": 1299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1405,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1596,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1597,
											"name": "MULMOD",
											"source": 8
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1677,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1678,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1694,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1792,
											"end": 1802,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1788,
											"end": 1865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1838,
											"end": 1849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1830,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1865,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1788,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1965,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 1938,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2346,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2330,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "MULMOD",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2405,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2454,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2454,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2616,
											"end": 2627,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2627,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2611,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2632,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2632,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2714,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2705,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2715,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2751,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2761,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2761,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2812,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2813,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2924,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2934,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3023,
											"end": 3034,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "XOR",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3083,
											"end": 3090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3080,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3090,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3065,
											"end": 3090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3090,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3153,
											"end": 3160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3150,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3160,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3136,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3135,
											"end": 3160,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3224,
											"end": 3231,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3221,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3231,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3206,
											"end": 3231,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3231,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3231,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3292,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3302,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3302,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3348,
											"end": 3373,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3435,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3420,
											"end": 3445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3497,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3507,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 711,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 593,
											"end": 711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 704,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 668,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 659,
											"end": 705,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 648,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 648,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 711,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 593,
											"end": 711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 593,
											"end": 711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 717,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 717,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 804,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 804,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 804,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 804,
											"end": 828,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 804,
											"end": 828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 799,
											"end": 802,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 792,
											"end": 829,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 717,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 717,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 717,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 974,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 957,
											"end": 975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 949,
											"end": 975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 1053,
											"end": 1054,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 985,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 1174,
											"end": 1179,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 1156,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1181,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1069,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1276,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1277,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 1246,
											"end": 1277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1246,
											"end": 1277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 1372,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1367,
											"end": 1370,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1360,
											"end": 1395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1289,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1524,
											"end": 1528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1564,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1539,
											"end": 1565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1539,
											"end": 1565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1641,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1619,
											"end": 1625,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 1575,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 1656,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1407,
											"end": 1731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1935,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 1818,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1929,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1941,
											"end": 2058,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 1941,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2048,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2052,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 2137,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2127,
											"end": 2162,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2064,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2263,
											"end": 2283,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 2292,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2192,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 2408,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2398,
											"end": 2431,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2445,
											"end": 2446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2505,
											"end": 2510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2530,
											"end": 2550,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2559,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2461,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2675,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2665,
											"end": 2700,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2714,
											"end": 2715,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2716,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2801,
											"end": 2821,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2821,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2792,
											"end": 2821,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 2830,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2875,
											"end": 2992,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 2875,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 2985,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2986,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3115,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 2998,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3109,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3238,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3121,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3377,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3355,
											"end": 3372,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3382,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 3502,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3472,
											"end": 3502,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3472,
											"end": 3502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3517,
											"end": 3523,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3514,
											"end": 3544,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3547,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3666,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3666,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3711,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3699,
											"end": 3705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3695,
											"end": 3712,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3685,
											"end": 3693,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3719,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3722,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 3994,
											"end": 4003,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3985,
											"end": 3992,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 4004,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 4010,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 4013,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4192,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 4158,
											"end": 4211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4148,
											"end": 4211,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 4148,
											"end": 4211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4104,
											"end": 4221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 4329,
											"end": 4336,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4305,
											"end": 4327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 4286,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4276,
											"end": 4337,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4276,
											"end": 4337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4231,
											"end": 4347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4386,
											"end": 4388,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 4455,
											"end": 4462,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 4412,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4463,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4512,
											"end": 4514,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 4583,
											"end": 4590,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4572,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4559,
											"end": 4581,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4538,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4668,
											"end": 4671,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4640,
											"end": 4673,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4689,
											"end": 4719,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 4722,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 4891,
											"end": 4898,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4882,
											"end": 4888,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4880,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 4867,
											"end": 4889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 4835,
											"end": 4899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 4916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4993,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4977,
											"end": 4993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4977,
											"end": 4993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5110,
											"end": 5115,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 5092,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5080,
											"end": 5117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5005,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5250,
											"end": 5254,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5273,
											"end": 5291,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5354,
											"end": 5371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 5301,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5426,
											"end": 5432,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 5382,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5504,
											"end": 5511,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5538,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5522,
											"end": 5538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5522,
											"end": 5538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 5623,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5616,
											"end": 5621,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5648,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5664,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5550,
											"end": 5672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5724,
											"end": 5729,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5768,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5749,
											"end": 5769,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5740,
											"end": 5769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5740,
											"end": 5769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 5805,
											"end": 5810,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 5778,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5910,
											"end": 5917,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5906,
											"end": 5929,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5902,
											"end": 5934,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 5937,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6118,
											"end": 6124,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 6082,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6072,
											"end": 6135,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6072,
											"end": 6135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 6152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 6200,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6241,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 6341,
											"end": 6346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6325,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6315,
											"end": 6348,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6362,
											"end": 6363,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6360,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6364,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6254,
											"end": 6372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6447,
											"end": 6467,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 6476,
											"end": 6507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6604,
											"end": 6611,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6600,
											"end": 6623,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6628,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6631,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6810,
											"end": 6816,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 6776,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6827,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6722,
											"end": 6837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6519,
											"end": 6844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 6947,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 6984,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 6984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7060,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7047,
											"end": 7064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7044,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6994,
											"end": 7065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6850,
											"end": 7072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7157,
											"end": 7163,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7224,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7197,
											"end": 7220,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7193,
											"end": 7225,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7228,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 7228,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 7228,
											"end": 7307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7228,
											"end": 7307,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 7228,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7373,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 7418,
											"end": 7425,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7409,
											"end": 7415,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7398,
											"end": 7407,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7373,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 7373,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7373,
											"end": 7426,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 7373,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7503,
											"end": 7505,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7492,
											"end": 7501,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7507,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7526,
											"end": 7532,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7523,
											"end": 7553,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 7556,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 7556,
											"end": 7635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7635,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 7556,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 7725,
											"end": 7732,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7716,
											"end": 7722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7705,
											"end": 7714,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 7669,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7733,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7733,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7446,
											"end": 7743,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7792,
											"end": 7799,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7826,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7756,
											"end": 7832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7953,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 7838,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 7940,
											"end": 7945,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 7923,
											"end": 7946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7946,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 7923,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7918,
											"end": 7921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 7947,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8076,
											"end": 8080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8116,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8103,
											"end": 8112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8127,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8178,
											"end": 8195,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8127,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 8127,
											"end": 8196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8127,
											"end": 8196,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 8127,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8206,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 8272,
											"end": 8274,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8261,
											"end": 8270,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8257,
											"end": 8275,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8248,
											"end": 8254,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8206,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 8206,
											"end": 8276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8206,
											"end": 8276,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 8206,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 8283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8392,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8374,
											"end": 8381,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8370,
											"end": 8393,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8366,
											"end": 8398,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 8401,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 8401,
											"end": 8480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 8480,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 8401,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8521,
											"end": 8522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 8589,
											"end": 8596,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8569,
											"end": 8578,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8565,
											"end": 8587,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8546,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 8546,
											"end": 8597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8546,
											"end": 8597,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 8546,
											"end": 8597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8536,
											"end": 8597,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8536,
											"end": 8597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8492,
											"end": 8607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8289,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8654,
											"end": 8661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8702,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8690,
											"end": 8703,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8683,
											"end": 8704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8672,
											"end": 8704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8716,
											"end": 8825,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 8716,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 8812,
											"end": 8817,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 8797,
											"end": 8818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8792,
											"end": 8795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8785,
											"end": 8819,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8716,
											"end": 8825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8716,
											"end": 8825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8716,
											"end": 8825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 8986,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8973,
											"end": 8982,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8969,
											"end": 8987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 8987,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8961,
											"end": 8987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8997,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 9059,
											"end": 9060,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9041,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8997,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 8997,
											"end": 9062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8997,
											"end": 9062,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 8997,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9072,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 9140,
											"end": 9142,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9129,
											"end": 9138,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9125,
											"end": 9143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9116,
											"end": 9122,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9072,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 9072,
											"end": 9144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9072,
											"end": 9144,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 9072,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 9151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9157,
											"end": 9337,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 9157,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9205,
											"end": 9282,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9195,
											"end": 9283,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9302,
											"end": 9306,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9299,
											"end": 9300,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9292,
											"end": 9307,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 9330,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9323,
											"end": 9324,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9331,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9380,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 9416,
											"end": 9421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 9400,
											"end": 9422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9391,
											"end": 9422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9391,
											"end": 9422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9444,
											"end": 9510,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 9437,
											"end": 9442,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9434,
											"end": 9511,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9431,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 9431,
											"end": 9534,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 9514,
											"end": 9532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9431,
											"end": 9534,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 9431,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9557,
											"end": 9562,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9554,
											"end": 9555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9563,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9543,
											"end": 9563,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9543,
											"end": 9563,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9343,
											"end": 9569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9615,
											"end": 9618,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 9652,
											"end": 9653,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 9634,
											"end": 9654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9629,
											"end": 9654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9629,
											"end": 9654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 9686,
											"end": 9687,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 9668,
											"end": 9688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9663,
											"end": 9688,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9663,
											"end": 9688,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9711,
											"end": 9712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9697,
											"end": 9713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9697,
											"end": 9713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9734,
											"end": 9768,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9729,
											"end": 9732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9726,
											"end": 9769,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 9772,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9888,
											"end": 9899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9917,
											"end": 9920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9910,
											"end": 9929,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9962,
											"end": 9966,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9957,
											"end": 9960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9953,
											"end": 9967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9938,
											"end": 9967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9938,
											"end": 9967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9805,
											"end": 9973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10077,
											"end": 10083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10072,
											"end": 10075,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10067,
											"end": 10070,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10054,
											"end": 10084,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10115,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10104,
											"end": 10107,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10100,
											"end": 10116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10093,
											"end": 10120,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 10127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10174,
											"end": 10180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10227,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10221,
											"end": 10228,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 10216,
											"end": 10218,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10209,
											"end": 10214,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10205,
											"end": 10219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10201,
											"end": 10229,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10133,
											"end": 10235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10359,
											"end": 10362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10380,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 10443,
											"end": 10449,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10438,
											"end": 10441,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 10380,
											"end": 10450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10450,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 10380,
											"end": 10450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10450,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10460,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 10509,
											"end": 10515,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10504,
											"end": 10507,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10497,
											"end": 10502,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10460,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 10460,
											"end": 10516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10460,
											"end": 10516,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 10460,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 10563,
											"end": 10569,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 10541,
											"end": 10570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10570,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 10541,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10536,
											"end": 10539,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10571,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10525,
											"end": 10571,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10525,
											"end": 10571,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10263,
											"end": 10577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10800,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10787,
											"end": 10796,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 10801,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10801,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10877,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10864,
											"end": 10881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10855,
											"end": 10861,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 10811,
											"end": 10882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10811,
											"end": 10882,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 10811,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 10960,
											"end": 10962,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10958,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10936,
											"end": 10942,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 10892,
											"end": 10964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10964,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 10892,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11011,
											"end": 11020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11009,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11001,
											"end": 11021,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10996,
											"end": 10998,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10985,
											"end": 10994,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10981,
											"end": 10999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10974,
											"end": 11022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11039,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 11120,
											"end": 11124,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11103,
											"end": 11109,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11039,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 11039,
											"end": 11125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11039,
											"end": 11125,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 11039,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11031,
											"end": 11125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 11132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11178,
											"end": 11181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 11197,
											"end": 11217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11192,
											"end": 11217,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11192,
											"end": 11217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 11249,
											"end": 11250,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 11231,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11226,
											"end": 11251,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11226,
											"end": 11251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11274,
											"end": 11275,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11271,
											"end": 11272,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11267,
											"end": 11276,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11260,
											"end": 11276,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11260,
											"end": 11276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11295,
											"end": 11298,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11299,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 11302,
											"end": 11320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11138,
											"end": 11329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11516,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11553,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11539,
											"end": 11548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11535,
											"end": 11554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11527,
											"end": 11554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11527,
											"end": 11554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 11632,
											"end": 11633,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11621,
											"end": 11630,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11608,
											"end": 11614,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 11564,
											"end": 11635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11645,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 11713,
											"end": 11715,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11702,
											"end": 11711,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11698,
											"end": 11716,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11689,
											"end": 11695,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11645,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 11645,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11645,
											"end": 11717,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 11645,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11727,
											"end": 11799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 11795,
											"end": 11797,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11784,
											"end": 11793,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11771,
											"end": 11777,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11727,
											"end": 11799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 11727,
											"end": 11799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11727,
											"end": 11799,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 11727,
											"end": 11799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 11877,
											"end": 11879,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11866,
											"end": 11875,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11862,
											"end": 11880,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11853,
											"end": 11859,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 11809,
											"end": 11881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 11881,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 11809,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11335,
											"end": 11888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11929,
											"end": 11932,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11952,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 11969,
											"end": 11974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 11952,
											"end": 11975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 11975,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 11952,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11997,
											"end": 12063,
											"name": "PUSH",
											"source": 13,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11990,
											"end": 11995,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11987,
											"end": 12064,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11984,
											"end": 12087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 11984,
											"end": 12087,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 12067,
											"end": 12085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11984,
											"end": 12087,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 11984,
											"end": 12087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12110,
											"end": 12115,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12107,
											"end": 12108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12103,
											"end": 12116,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12096,
											"end": 12116,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12096,
											"end": 12116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11894,
											"end": 12122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12249,
											"end": 12253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12287,
											"end": 12289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12276,
											"end": 12285,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12264,
											"end": 12290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12264,
											"end": 12290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12300,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12353,
											"end": 12370,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12344,
											"end": 12350,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12300,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 12300,
											"end": 12371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12300,
											"end": 12371,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 12300,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12381,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 12449,
											"end": 12451,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12438,
											"end": 12447,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 12431,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12381,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 12381,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12381,
											"end": 12453,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 12381,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12128,
											"end": 12460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12466,
											"end": 12582,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 12466,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12536,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 12551,
											"end": 12556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12536,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 12536,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12536,
											"end": 12557,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 12536,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12529,
											"end": 12534,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12526,
											"end": 12558,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12516,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 12516,
											"end": 12576,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12562,
											"end": 12574,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12516,
											"end": 12576,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 12516,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12466,
											"end": 12582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12466,
											"end": 12582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12642,
											"end": 12647,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12667,
											"end": 12680,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12689,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 12713,
											"end": 12718,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12689,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 12689,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12689,
											"end": 12719,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 12689,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12588,
											"end": 12725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12798,
											"end": 12804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12847,
											"end": 12849,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12835,
											"end": 12844,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12826,
											"end": 12833,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12822,
											"end": 12845,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12818,
											"end": 12850,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12853,
											"end": 12932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 12853,
											"end": 12932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 12853,
											"end": 12932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12853,
											"end": 12932,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 12853,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12973,
											"end": 12974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 13051,
											"end": 13058,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13042,
											"end": 13048,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13031,
											"end": 13040,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13027,
											"end": 13049,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12998,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 12998,
											"end": 13059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12998,
											"end": 13059,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 12998,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13059,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12944,
											"end": 13069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12731,
											"end": 13076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13255,
											"end": 13259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13293,
											"end": 13295,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13282,
											"end": 13291,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13278,
											"end": 13296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13270,
											"end": 13296,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13270,
											"end": 13296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13306,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 13372,
											"end": 13373,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13361,
											"end": 13370,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13357,
											"end": 13374,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13348,
											"end": 13354,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 13306,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 13306,
											"end": 13375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13306,
											"end": 13375,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 13306,
											"end": 13375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 13451,
											"end": 13453,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13440,
											"end": 13449,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13436,
											"end": 13454,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13427,
											"end": 13433,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 13385,
											"end": 13455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13385,
											"end": 13455,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 13385,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13502,
											"end": 13511,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13496,
											"end": 13500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13492,
											"end": 13512,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13487,
											"end": 13489,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13476,
											"end": 13485,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13490,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13465,
											"end": 13513,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13530,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 13611,
											"end": 13615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13602,
											"end": 13608,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13594,
											"end": 13600,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13530,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 13530,
											"end": 13616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13530,
											"end": 13616,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 13530,
											"end": 13616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13522,
											"end": 13616,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13522,
											"end": 13616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13082,
											"end": 13623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13826,
											"end": 13830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13864,
											"end": 13867,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 13853,
											"end": 13862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13849,
											"end": 13868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13841,
											"end": 13868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13841,
											"end": 13868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13878,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 13944,
											"end": 13945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13942,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13929,
											"end": 13946,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13920,
											"end": 13926,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13878,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 13878,
											"end": 13947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13878,
											"end": 13947,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 13878,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13957,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 14023,
											"end": 14025,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14012,
											"end": 14021,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14008,
											"end": 14026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13999,
											"end": 14005,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 13957,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 13957,
											"end": 14027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13957,
											"end": 14027,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 13957,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14037,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 14105,
											"end": 14107,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14094,
											"end": 14103,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14090,
											"end": 14108,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14081,
											"end": 14087,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14037,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 14037,
											"end": 14109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14037,
											"end": 14109,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 14037,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14119,
											"end": 14191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 14187,
											"end": 14189,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14176,
											"end": 14185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14172,
											"end": 14190,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14163,
											"end": 14169,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14119,
											"end": 14191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 14119,
											"end": 14191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14119,
											"end": 14191,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 14119,
											"end": 14191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14201,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 14265,
											"end": 14268,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 14254,
											"end": 14263,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14250,
											"end": 14269,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14241,
											"end": 14247,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14201,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 14201,
											"end": 14270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14201,
											"end": 14270,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 14201,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13629,
											"end": 14277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14283,
											"end": 14463,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 14283,
											"end": 14463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14331,
											"end": 14408,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14328,
											"end": 14329,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14321,
											"end": 14409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14428,
											"end": 14432,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 14425,
											"end": 14426,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14418,
											"end": 14433,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14452,
											"end": 14456,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14449,
											"end": 14450,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14442,
											"end": 14457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14499,
											"end": 14500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 14532,
											"end": 14533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 14516,
											"end": 14534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14534,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14534,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 14564,
											"end": 14565,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 14548,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14543,
											"end": 14566,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14543,
											"end": 14566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14585,
											"end": 14586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14575,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 14575,
											"end": 14610,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 14590,
											"end": 14608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14575,
											"end": 14610,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 14575,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14632,
											"end": 14633,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14629,
											"end": 14630,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14624,
											"end": 14634,
											"name": "SMOD",
											"source": 13
										},
										{
											"begin": 14619,
											"end": 14634,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14619,
											"end": 14634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14469,
											"end": 14640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14684,
											"end": 14685,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 14717,
											"end": 14718,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 14701,
											"end": 14719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14696,
											"end": 14719,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14696,
											"end": 14719,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 14749,
											"end": 14750,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 14733,
											"end": 14751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14751,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14770,
											"end": 14771,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14760,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 14760,
											"end": 14795,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14775,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 14775,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 14775,
											"end": 14793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14775,
											"end": 14793,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 14775,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14760,
											"end": 14795,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 14760,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14961,
											"end": 14962,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14958,
											"end": 14959,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14954,
											"end": 14963,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14951,
											"end": 14952,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14948,
											"end": 14964,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14867,
											"end": 14933,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 14864,
											"end": 14865,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14861,
											"end": 14934,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 14844,
											"end": 14974,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 14977,
											"end": 14995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15020,
											"end": 15021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15017,
											"end": 15018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15012,
											"end": 15022,
											"name": "SDIV",
											"source": 13
										},
										{
											"begin": 15007,
											"end": 15022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15007,
											"end": 15022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14646,
											"end": 15028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15075,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15107,
											"end": 15121,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 15086,
											"end": 15121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15086,
											"end": 15121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15034,
											"end": 15128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15173,
											"end": 15180,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15202,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 15216,
											"end": 15221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15202,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 15202,
											"end": 15222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15202,
											"end": 15222,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 15202,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15222,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15134,
											"end": 15228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15273,
											"end": 15280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 15322,
											"end": 15327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15302,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 15302,
											"end": 15328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15302,
											"end": 15328,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 15302,
											"end": 15328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15291,
											"end": 15328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15234,
											"end": 15334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15497,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 15340,
											"end": 15497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 15465,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 15483,
											"end": 15488,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15465,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 15465,
											"end": 15489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15465,
											"end": 15489,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 15465,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 15445,
											"end": 15490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15445,
											"end": 15490,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 15445,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15440,
											"end": 15443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15433,
											"end": 15491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15537,
											"end": 15545,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15581,
											"end": 15584,
											"name": "PUSH",
											"source": 13,
											"value": "E8"
										},
										{
											"begin": 15577,
											"end": 15592,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 15556,
											"end": 15592,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15556,
											"end": 15592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15642,
											"end": 15649,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15671,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 15686,
											"end": 15691,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 15671,
											"end": 15692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15692,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 15671,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15660,
											"end": 15692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15660,
											"end": 15692,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15605,
											"end": 15698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15704,
											"end": 15853,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 15704,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15805,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 15823,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 15839,
											"end": 15844,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15823,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 15823,
											"end": 15845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15823,
											"end": 15845,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 15823,
											"end": 15845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15805,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 15805,
											"end": 15846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15805,
											"end": 15846,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 15805,
											"end": 15846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15800,
											"end": 15803,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15793,
											"end": 15847,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15704,
											"end": 15853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15704,
											"end": 15853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15704,
											"end": 15853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16019,
											"end": 16022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16034,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 16105,
											"end": 16108,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16096,
											"end": 16102,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16034,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 16034,
											"end": 16109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16034,
											"end": 16109,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 16034,
											"end": 16109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16134,
											"end": 16136,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 16129,
											"end": 16132,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16125,
											"end": 16137,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16118,
											"end": 16137,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16118,
											"end": 16137,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16147,
											"end": 16218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 16214,
											"end": 16217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16205,
											"end": 16211,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16147,
											"end": 16218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 16147,
											"end": 16218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16147,
											"end": 16218,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 16147,
											"end": 16218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16243,
											"end": 16244,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 16238,
											"end": 16241,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16234,
											"end": 16245,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16255,
											"end": 16326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 16322,
											"end": 16325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16313,
											"end": 16319,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16255,
											"end": 16326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 16255,
											"end": 16326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16255,
											"end": 16326,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 16255,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16351,
											"end": 16352,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 16346,
											"end": 16349,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16335,
											"end": 16353,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16335,
											"end": 16353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16370,
											"end": 16373,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16363,
											"end": 16373,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16363,
											"end": 16373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15859,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16385,
											"end": 16554,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 16385,
											"end": 16554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16469,
											"end": 16480,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16503,
											"end": 16509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16510,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16543,
											"end": 16547,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16538,
											"end": 16541,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16534,
											"end": 16548,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 16548,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 16548,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16385,
											"end": 16554,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16385,
											"end": 16554,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16385,
											"end": 16554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16385,
											"end": 16554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16385,
											"end": 16554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16560,
											"end": 16711,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 16560,
											"end": 16711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16700,
											"end": 16703,
											"name": "PUSH",
											"source": 13,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16696,
											"end": 16697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16688,
											"end": 16694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16684,
											"end": 16698,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16677,
											"end": 16704,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16560,
											"end": 16711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16560,
											"end": 16711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16717,
											"end": 17082,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 16717,
											"end": 17082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16859,
											"end": 16862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16880,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 16944,
											"end": 16945,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16939,
											"end": 16942,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16880,
											"end": 16946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 16880,
											"end": 16946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16880,
											"end": 16946,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 16880,
											"end": 16946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16873,
											"end": 16946,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16873,
											"end": 16946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16955,
											"end": 17048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 17044,
											"end": 17047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16955,
											"end": 17048,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 16955,
											"end": 17048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16955,
											"end": 17048,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 16955,
											"end": 17048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17073,
											"end": 17075,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17071,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17064,
											"end": 17076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17057,
											"end": 17076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17057,
											"end": 17076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16717,
											"end": 17082,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16717,
											"end": 17082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16717,
											"end": 17082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16717,
											"end": 17082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17088,
											"end": 17507,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 17088,
											"end": 17507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17254,
											"end": 17258,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17292,
											"end": 17294,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17281,
											"end": 17290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17277,
											"end": 17295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17269,
											"end": 17295,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17269,
											"end": 17295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17341,
											"end": 17350,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17335,
											"end": 17339,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17331,
											"end": 17351,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17327,
											"end": 17328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17316,
											"end": 17325,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17312,
											"end": 17329,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17305,
											"end": 17352,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17369,
											"end": 17500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 17495,
											"end": 17499,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17369,
											"end": 17500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 17369,
											"end": 17500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17369,
											"end": 17500,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 17369,
											"end": 17500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17361,
											"end": 17500,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17361,
											"end": 17500,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17088,
											"end": 17507,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17088,
											"end": 17507,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17088,
											"end": 17507,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17088,
											"end": 17507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17923,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 17513,
											"end": 17923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17553,
											"end": 17560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17576,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 17594,
											"end": 17595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17576,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 17576,
											"end": 17596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17576,
											"end": 17596,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 17576,
											"end": 17596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17571,
											"end": 17596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17571,
											"end": 17596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17610,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 17628,
											"end": 17629,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17610,
											"end": 17630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 17610,
											"end": 17630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17610,
											"end": 17630,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 17610,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17605,
											"end": 17630,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17605,
											"end": 17630,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17665,
											"end": 17666,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17662,
											"end": 17663,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17658,
											"end": 17667,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 17687,
											"end": 17717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 17705,
											"end": 17716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17687,
											"end": 17717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 17687,
											"end": 17717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17687,
											"end": 17717,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 17687,
											"end": 17717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17676,
											"end": 17717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17676,
											"end": 17717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17866,
											"end": 17867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17857,
											"end": 17864,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17853,
											"end": 17868,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 17850,
											"end": 17851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17847,
											"end": 17869,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 17827,
											"end": 17828,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17820,
											"end": 17829,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17800,
											"end": 17883,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 17777,
											"end": 17916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 17777,
											"end": 17916,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17896,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 17896,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 17896,
											"end": 17914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17896,
											"end": 17914,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 17896,
											"end": 17914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17777,
											"end": 17916,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 17777,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17561,
											"end": 17923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17923,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17923,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17513,
											"end": 17923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17929,
											"end": 18114,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 17929,
											"end": 18114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17969,
											"end": 17970,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17986,
											"end": 18006,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 18004,
											"end": 18005,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17986,
											"end": 18006,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 17986,
											"end": 18006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17986,
											"end": 18006,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 17986,
											"end": 18006,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17981,
											"end": 18006,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18020,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 18038,
											"end": 18039,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18020,
											"end": 18040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 18020,
											"end": 18040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18020,
											"end": 18040,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 18020,
											"end": 18040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18015,
											"end": 18040,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18015,
											"end": 18040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18059,
											"end": 18060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18049,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 18049,
											"end": 18084,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 18064,
											"end": 18082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 18064,
											"end": 18082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18049,
											"end": 18084,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 18049,
											"end": 18084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18106,
											"end": 18107,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18103,
											"end": 18104,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18099,
											"end": 18108,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 18094,
											"end": 18108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18094,
											"end": 18108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17929,
											"end": 18114,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17929,
											"end": 18114,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17929,
											"end": 18114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17929,
											"end": 18114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17929,
											"end": 18114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18120,
											"end": 18296,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 18120,
											"end": 18296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18152,
											"end": 18153,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 18187,
											"end": 18188,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 18169,
											"end": 18189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 18169,
											"end": 18189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18164,
											"end": 18189,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18164,
											"end": 18189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 18221,
											"end": 18222,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 18203,
											"end": 18223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 18203,
											"end": 18223,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18198,
											"end": 18223,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18198,
											"end": 18223,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18242,
											"end": 18243,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 18232,
											"end": 18267,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 18247,
											"end": 18265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 18247,
											"end": 18265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18232,
											"end": 18267,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 18232,
											"end": 18267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18288,
											"end": 18289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18285,
											"end": 18286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18281,
											"end": 18290,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 18276,
											"end": 18290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18276,
											"end": 18290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18120,
											"end": 18296,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18120,
											"end": 18296,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18120,
											"end": 18296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18120,
											"end": 18296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18120,
											"end": 18296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18302,
											"end": 18537,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 18302,
											"end": 18537,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18342,
											"end": 18346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18362,
											"end": 18382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 18380,
											"end": 18381,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18362,
											"end": 18382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 18362,
											"end": 18382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18362,
											"end": 18382,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 18362,
											"end": 18382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18357,
											"end": 18382,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18357,
											"end": 18382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18396,
											"end": 18416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 18414,
											"end": 18415,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18396,
											"end": 18416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 18396,
											"end": 18416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18396,
											"end": 18416,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 18396,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18391,
											"end": 18416,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18391,
											"end": 18416,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18440,
											"end": 18441,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18437,
											"end": 18438,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18433,
											"end": 18442,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18425,
											"end": 18442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18425,
											"end": 18442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18464,
											"end": 18506,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18458,
											"end": 18462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18455,
											"end": 18507,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 18452,
											"end": 18530,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18452,
											"end": 18530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 18452,
											"end": 18530,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18510,
											"end": 18528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 18510,
											"end": 18528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 18510,
											"end": 18528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18510,
											"end": 18528,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 18510,
											"end": 18528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18452,
											"end": 18530,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 18452,
											"end": 18530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18302,
											"end": 18537,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18302,
											"end": 18537,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18302,
											"end": 18537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18302,
											"end": 18537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18302,
											"end": 18537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18543,
											"end": 18665,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 18543,
											"end": 18665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18616,
											"end": 18640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 18634,
											"end": 18639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18616,
											"end": 18640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 18616,
											"end": 18640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18616,
											"end": 18640,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 18616,
											"end": 18640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18606,
											"end": 18641,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 18596,
											"end": 18659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 18596,
											"end": 18659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18655,
											"end": 18656,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18652,
											"end": 18653,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18645,
											"end": 18657,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18596,
											"end": 18659,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 18596,
											"end": 18659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18543,
											"end": 18665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18543,
											"end": 18665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18671,
											"end": 18814,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 18671,
											"end": 18814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18728,
											"end": 18733,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18759,
											"end": 18765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18753,
											"end": 18766,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18744,
											"end": 18766,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18744,
											"end": 18766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18775,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 18802,
											"end": 18807,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18775,
											"end": 18808,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 18775,
											"end": 18808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18775,
											"end": 18808,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 18775,
											"end": 18808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18671,
											"end": 18814,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18671,
											"end": 18814,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18671,
											"end": 18814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18671,
											"end": 18814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18671,
											"end": 18814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18820,
											"end": 19171,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 18820,
											"end": 19171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18890,
											"end": 18896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18939,
											"end": 18941,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18927,
											"end": 18936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18918,
											"end": 18925,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18914,
											"end": 18937,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18910,
											"end": 18942,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 18907,
											"end": 19026,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18907,
											"end": 19026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 18907,
											"end": 19026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18945,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 18945,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 18945,
											"end": 19024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18945,
											"end": 19024,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 18945,
											"end": 19024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18907,
											"end": 19026,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 18907,
											"end": 19026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19065,
											"end": 19066,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19090,
											"end": 19154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 19146,
											"end": 19153,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19137,
											"end": 19143,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19126,
											"end": 19135,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19122,
											"end": 19144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 19090,
											"end": 19154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19090,
											"end": 19154,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 19090,
											"end": 19154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19080,
											"end": 19154,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19080,
											"end": 19154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19036,
											"end": 19164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18820,
											"end": 19171,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18820,
											"end": 19171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18820,
											"end": 19171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18820,
											"end": 19171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18820,
											"end": 19171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19177,
											"end": 19410,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 19177,
											"end": 19410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19216,
											"end": 19219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 19257,
											"end": 19262,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19239,
											"end": 19263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 19239,
											"end": 19263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19239,
											"end": 19263,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 19239,
											"end": 19263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19230,
											"end": 19263,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19230,
											"end": 19263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19285,
											"end": 19351,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19278,
											"end": 19283,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19275,
											"end": 19352,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19272,
											"end": 19375,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 19272,
											"end": 19375,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19355,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 19355,
											"end": 19373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 19355,
											"end": 19373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19355,
											"end": 19373,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 19355,
											"end": 19373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19272,
											"end": 19375,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 19272,
											"end": 19375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19402,
											"end": 19403,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 19395,
											"end": 19400,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19391,
											"end": 19404,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19384,
											"end": 19404,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19384,
											"end": 19404,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19177,
											"end": 19410,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19177,
											"end": 19410,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19177,
											"end": 19410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19177,
											"end": 19410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19416,
											"end": 19583,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 19416,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19556,
											"end": 19575,
											"name": "PUSH",
											"source": 13,
											"value": "5052424D6174683A206F766572666C6F77000000000000000000000000000000"
										},
										{
											"begin": 19552,
											"end": 19553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19544,
											"end": 19550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19540,
											"end": 19554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19533,
											"end": 19576,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19416,
											"end": 19583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19416,
											"end": 19583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19955,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 19589,
											"end": 19955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19731,
											"end": 19734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19752,
											"end": 19819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 19816,
											"end": 19818,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 19811,
											"end": 19814,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19752,
											"end": 19819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 19752,
											"end": 19819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19752,
											"end": 19819,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 19752,
											"end": 19819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19745,
											"end": 19819,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19745,
											"end": 19819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 19921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 19917,
											"end": 19920,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 19921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 19828,
											"end": 19921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19828,
											"end": 19921,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 19828,
											"end": 19921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19946,
											"end": 19948,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19941,
											"end": 19944,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 19949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19930,
											"end": 19949,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19930,
											"end": 19949,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19955,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19955,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19589,
											"end": 19955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19961,
											"end": 20380,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 19961,
											"end": 20380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20127,
											"end": 20131,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20165,
											"end": 20167,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20154,
											"end": 20163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20150,
											"end": 20168,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20142,
											"end": 20168,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20142,
											"end": 20168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20214,
											"end": 20223,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20208,
											"end": 20212,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20204,
											"end": 20224,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20200,
											"end": 20201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20189,
											"end": 20198,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20185,
											"end": 20202,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20178,
											"end": 20225,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20242,
											"end": 20373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 20368,
											"end": 20372,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20242,
											"end": 20373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 20242,
											"end": 20373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20242,
											"end": 20373,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 20242,
											"end": 20373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20234,
											"end": 20373,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20234,
											"end": 20373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19961,
											"end": 20380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19961,
											"end": 20380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19961,
											"end": 20380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19961,
											"end": 20380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"liquidity()": "1a686502",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"positions(bytes32)": "514ea4bf",
							"slot0()": "3850c7bd",
							"swap(address,bytes)": "e3547335",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1_\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTickRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLiquidity\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/UniswapV3Pool.sol\":\"UniswapV3Pool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/UniswapV3Pool.sol\":{\"keccak256\":\"0xe8d9c16fda9d689cdbe59d3fb5c10ec7da1ce79e53411b0a136677036e4a1e1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65aac3f4ce1a09867682399b1ed66c65ca8b701146ea1978e11f9e7337b08617\",\"dweb:/ipfs/QmenLB47cjTosR5QkWCuhUYc4AwdJtKPvyT33PYavEXEYK\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x8f7e66ebc62dc73aa8871ca29cc1f93d1fffa19a569972bfd58dcbb674329a90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6b8cc533e3d0d71cbe0663f17395713b798dfc419cc543d79bd145c2062ffcab\",\"dweb:/ipfs/QmRHswF3a49hkXrBGssMSu1r2H2gBWBVbHJ3MrF56L5HRW\"]},\"src/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x8dbe3d6c23da7bb08718f050ff8474f94367f833c0587670435eb2d4b4b3ae79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://928a138d8c7953049f7f06dc4b1c9fdc244c129edbecf550b5cc9d079bed3405\",\"dweb:/ipfs/QmZM7eTaxzp9LeQqrrzKuJt15P7BvT6Ba32hazdKrfsJuz\"]},\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x825cf10c30e3c8676fb8a9055948a59841c44387bdc50a2271345282753c38ed\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8379da8abbc993cb98540120ab4a0cdaee66e8a53a1792fb099089f626d946c4\",\"dweb:/ipfs/QmSSb8GPR4S6WCpgrYZwhYiDPMKqkX3Pm3bsMVcPuvrWuj\"]},\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xb8e8f6f7326fc86450a2e8daba3194709c9c92f552fe8aea44cb7c77dbff4ad2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8ef383b9b4142ea5774816a87d48b64a29e922edc83af6fb15b3098cef9819f\",\"dweb:/ipfs/QmdZXMdDWgMEFMS8rQtR5QN5KdLSZUuSmd6dQsjAKN8DFA\"]},\"src/lib/BitMath.sol\":{\"keccak256\":\"0x7a2051864fa0e8705564bde430557a6e9bc6d7765551f1a3b6ef8c8604eee313\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://28e81d5a4f36365c170097e7c5f208fcef3ceb87d082bf79450e69a678cd0c78\",\"dweb:/ipfs/QmNrHt2Vw2iLQ7JNRsVafYnaJqxxDSHUCQ8W9wMxosheRV\"]},\"src/lib/FixedPoint96.sol\":{\"keccak256\":\"0x2af6468434f30acf1bf0fa92c02c1bcfded878b568fd376687dceeaae2ce5000\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee84c31e8d79f8ca5538fc453bc7b52b9757c3400337a6cf03303631fbc9f620\",\"dweb:/ipfs/QmfWC816uyiXW8UARZJcgTGnHyoYgdfNRZ9Awtxw2TDFmK\"]},\"src/lib/Math.sol\":{\"keccak256\":\"0x9011dcd46af40bd23344240e7a9535cd0eb9dab637a3e7c81333e837071ed64f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c0d54cec48e2a1d4ed65e26fa04e0eeb712ad8b6707d4c79a8d600e69e39b4a8\",\"dweb:/ipfs/QmUrJVytg1g6ixzynY7Mp2SiH6NFrgBtMNWG7YHS2Sx7oW\"]},\"src/lib/PRBMath.sol\":{\"keccak256\":\"0x9adb90635cbd067f1d25b2979c8816564ea1018dbbbd0d865ac5e4b29d6d9bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e55f9be29babfd960a697723aaa4f9142dc3d00251eda8e4853ddb65be70cb9\",\"dweb:/ipfs/QmdoV8yDxLFHhyKb8HFRzLjmEopyfMC1rX8iyiePSEFc97\"]},\"src/lib/Position.sol\":{\"keccak256\":\"0x62d2ab06531ac4a0f60c9daa994ae38e6a82c2195022fa4b04c0cf589468f8d2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3be896ccd46161b135499a4a736f719d4b10112af999df66cddd9734fc52ab06\",\"dweb:/ipfs/QmcntWtU1Qjx586SPS3GDgNrGMAyV13VrMgdQopXQAY9AN\"]},\"src/lib/Tick.sol\":{\"keccak256\":\"0x35a4d5dc0146b72ed1e530c16d691fa841d2edd786336adea1a306e698bc381a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1d17f41a71529f5eccf9c3af0a8d4693049950a7f46f6c5c97db70fd14d866cf\",\"dweb:/ipfs/QmcUjNxYXpBMErZpxF65XeA2fVg6R9sPy6gFGZEEcFR9Ud\"]},\"src/lib/TickBitmap.sol\":{\"keccak256\":\"0xa430211db40b0cf69be4f166c7764ac3d2ab3a494ebfdec27d1d3e69bd961d1c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://12ed04d4d2ef0939d532a400f6a3e8dddbad71f9938f1caccd624f463e70296a\",\"dweb:/ipfs/Qmcpf15LJRtGFT81KR2unB3YLKaUF5naiSJkiDYtqnFpfD\"]},\"src/lib/TickMath.sol\":{\"keccak256\":\"0x66bbfe54186fc7cc57565dbb20889526579a661c7971f7d4276bd7a600acbe81\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5bf2d491cd7ad9c8325715ad81245f0bb36e178b53e3acd1424af01ec09c48a7\",\"dweb:/ipfs/QmfXyEWsYun2KLtZALaN7HRGUxViEzr2gWkvGULWTtnRAt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 59,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "slot0",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Slot0)56_storage"
							},
							{
								"astId": 61,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "liquidity",
								"offset": 0,
								"slot": "1",
								"type": "t_uint128"
							},
							{
								"astId": 66,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "ticks",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_int24,t_struct(Info)1473_storage)"
							},
							{
								"astId": 70,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "tickBitmap",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_int16,t_uint256)"
							},
							{
								"astId": 75,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "positions",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_bytes32,t_struct(Info)1408_storage)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_int16": {
								"encoding": "inplace",
								"label": "int16",
								"numberOfBytes": "2"
							},
							"t_int24": {
								"encoding": "inplace",
								"label": "int24",
								"numberOfBytes": "3"
							},
							"t_mapping(t_bytes32,t_struct(Info)1408_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct Position.Info)",
								"numberOfBytes": "32",
								"value": "t_struct(Info)1408_storage"
							},
							"t_mapping(t_int16,t_uint256)": {
								"encoding": "mapping",
								"key": "t_int16",
								"label": "mapping(int16 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_int24,t_struct(Info)1473_storage)": {
								"encoding": "mapping",
								"key": "t_int24",
								"label": "mapping(int24 => struct Tick.Info)",
								"numberOfBytes": "32",
								"value": "t_struct(Info)1473_storage"
							},
							"t_struct(Info)1408_storage": {
								"encoding": "inplace",
								"label": "struct Position.Info",
								"members": [
									{
										"astId": 1407,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "liquidity",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Info)1473_storage": {
								"encoding": "inplace",
								"label": "struct Tick.Info",
								"members": [
									{
										"astId": 1470,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "initialized",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1472,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "liquidity",
										"offset": 1,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Slot0)56_storage": {
								"encoding": "inplace",
								"label": "struct UniswapV3Pool.Slot0",
								"members": [
									{
										"astId": 53,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "sqrtPriceX96",
										"offset": 0,
										"slot": "0",
										"type": "t_uint160"
									},
									{
										"astId": 55,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "tick",
										"offset": 20,
										"slot": "0",
										"type": "t_int24"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint160": {
								"encoding": "inplace",
								"label": "uint160",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for Uniswap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x8f7e66ebc62dc73aa8871ca29cc1f93d1fffa19a569972bfd58dcbb674329a90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6b8cc533e3d0d71cbe0663f17395713b798dfc419cc543d79bd145c2062ffcab\",\"dweb:/ipfs/QmRHswF3a49hkXrBGssMSu1r2H2gBWBVbHJ3MrF56L5HRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in Uniswap V3",
						"version": 1
					}
				}
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"IUniswapV3MintCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Owed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Owed",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3MintCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
								"params": {
									"amount0Owed": "The amount of token0 due to the pool for the minted liquidity",
									"amount1Owed": "The amount of token1 due to the pool for the minted liquidity"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#mint",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": "d3487997"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\"}}},\"title\":\"Callback for IUniswapV3PoolActions#mint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#mint must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/callback/IUniswapV3MintCallback.sol\":\"IUniswapV3MintCallback\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x8dbe3d6c23da7bb08718f050ff8474f94367f833c0587670435eb2d4b4b3ae79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://928a138d8c7953049f7f06dc4b1c9fdc244c129edbecf550b5cc9d079bed3405\",\"dweb:/ipfs/QmZM7eTaxzp9LeQqrrzKuJt15P7BvT6Ba32hazdKrfsJuz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"notice": "Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#mint must implement this interface",
						"version": 1
					}
				}
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool."
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x825cf10c30e3c8676fb8a9055948a59841c44387bdc50a2271345282753c38ed\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8379da8abbc993cb98540120ab4a0cdaee66e8a53a1792fb099089f626d946c4\",\"dweb:/ipfs/QmSSb8GPR4S6WCpgrYZwhYiDPMKqkX3Pm3bsMVcPuvrWuj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xb8e8f6f7326fc86450a2e8daba3194709c9c92f552fe8aea44cb7c77dbff4ad2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8ef383b9b4142ea5774816a87d48b64a29e922edc83af6fb15b3098cef9819f\",\"dweb:/ipfs/QmdZXMdDWgMEFMS8rQtR5QN5KdLSZUuSmd6dQsjAKN8DFA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"src/lib/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/BitMath.sol\":187:2789  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/BitMath.sol\":187:2789  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122008bee6bb8b141cbef156004e7b3e6beecf11b915f249f6f871ed1cebe5b8b71b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122008bee6bb8b141cbef156004e7b3e6beecf11b915f249f6f871ed1cebe5b8b71b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xBE DUPN 0xBB DUP12 EQ SHR 0xBE CALL JUMP STOP 0x4E PUSH28 0x3E6BEECF11B915F249F6F871ED1CEBE5B8B71B64736F6C634300081E STOP CALLER ",
							"sourceMap": "187:2602:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122008bee6bb8b141cbef156004e7b3e6beecf11b915f249f6f871ed1cebe5b8b71b64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xBE DUPN 0xBB DUP12 EQ SHR 0xBE CALL JUMP STOP 0x4E PUSH28 0x3E6BEECF11B915F249F6F871ED1CEBE5B8B71B64736F6C634300081E STOP CALLER ",
							"sourceMap": "187:2602:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008bee6bb8b141cbef156004e7b3e6beecf11b915f249f6f871ed1cebe5b8b71b64736f6c634300081e0033",
									".code": [
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/BitMath.sol\":{\"keccak256\":\"0x7a2051864fa0e8705564bde430557a6e9bc6d7765551f1a3b6ef8c8604eee313\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://28e81d5a4f36365c170097e7c5f208fcef3ceb87d082bf79450e69a678cd0c78\",\"dweb:/ipfs/QmNrHt2Vw2iLQ7JNRsVafYnaJqxxDSHUCQ8W9wMxosheRV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/FixedPoint96.sol\":71:183  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/FixedPoint96.sol\":71:183  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b4f662fdc47da00a0b0559c7c2ea96979abe136b01bcf550dbd1b5b8c8676f0864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4f662fdc47da00a0b0559c7c2ea96979abe136b01bcf550dbd1b5b8c8676f0864736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xF6 PUSH3 0xFDC47D LOG0 EXP SIGNEXTEND SDIV MSIZE 0xC7 0xC2 0xEA SWAP7 SWAP8 SWAP11 0xBE SGT PUSH12 0x1BCF550DBD1B5B8C8676F08 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "71:112:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4f662fdc47da00a0b0559c7c2ea96979abe136b01bcf550dbd1b5b8c8676f0864736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xF6 PUSH3 0xFDC47D LOG0 EXP SIGNEXTEND SDIV MSIZE 0xC7 0xC2 0xEA SWAP7 SWAP8 SWAP11 0xBE SGT PUSH12 0x1BCF550DBD1B5B8C8676F08 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "71:112:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4f662fdc47da00a0b0559c7c2ea96979abe136b01bcf550dbd1b5b8c8676f0864736f6c634300081e0033",
									".code": [
										{
											"begin": 71,
											"end": 183,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 71,
											"end": 183,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 71,
											"end": 183,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 71,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 71,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 183,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/FixedPoint96.sol\":{\"keccak256\":\"0x2af6468434f30acf1bf0fa92c02c1bcfded878b568fd376687dceeaae2ce5000\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee84c31e8d79f8ca5538fc453bc7b52b9757c3400337a6cf03303631fbc9f620\",\"dweb:/ipfs/QmfWC816uyiXW8UARZJcgTGnHyoYgdfNRZ9Awtxw2TDFmK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/Math.sol\":117:3758  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/Math.sol\":117:3758  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220cebbc48e96f0984f1664beb25d6ca2b3b9908e4d34e8084a68c1879e1a3439f164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cebbc48e96f0984f1664beb25d6ca2b3b9908e4d34e8084a68c1879e1a3439f164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBB 0xC4 DUP15 SWAP7 CREATE SWAP9 0x4F AND PUSH5 0xBEB25D6CA2 0xB3 0xB9 SWAP1 DUP15 0x4D CALLVALUE 0xE8 ADDMOD BLOBBASEFEE PUSH9 0xC1879E1A3439F16473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "117:3641:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cebbc48e96f0984f1664beb25d6ca2b3b9908e4d34e8084a68c1879e1a3439f164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBB 0xC4 DUP15 SWAP7 CREATE SWAP9 0x4F AND PUSH5 0xBEB25D6CA2 0xB3 0xB9 SWAP1 DUP15 0x4D CALLVALUE 0xE8 ADDMOD BLOBBASEFEE PUSH9 0xC1879E1A3439F16473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "117:3641:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"calcAmount0Delta(uint160,uint160,uint128)": "infinite",
								"calcAmount1Delta(uint160,uint160,uint128)": "infinite",
								"divRoundingUp(uint256,uint256)": "infinite",
								"getNextSqrtPriceFromAmount0RoundingUp(uint160,uint128,uint256)": "infinite",
								"getNextSqrtPriceFromAmount1RoundingDown(uint160,uint128,uint256)": "infinite",
								"getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cebbc48e96f0984f1664beb25d6ca2b3b9908e4d34e8084a68c1879e1a3439f164736f6c634300081e0033",
									".code": [
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Math.sol\":\"Math\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/FixedPoint96.sol\":{\"keccak256\":\"0x2af6468434f30acf1bf0fa92c02c1bcfded878b568fd376687dceeaae2ce5000\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee84c31e8d79f8ca5538fc453bc7b52b9757c3400337a6cf03303631fbc9f620\",\"dweb:/ipfs/QmfWC816uyiXW8UARZJcgTGnHyoYgdfNRZ9Awtxw2TDFmK\"]},\"src/lib/Math.sol\":{\"keccak256\":\"0x9011dcd46af40bd23344240e7a9535cd0eb9dab637a3e7c81333e837071ed64f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c0d54cec48e2a1d4ed65e26fa04e0eeb712ad8b6707d4c79a8d600e69e39b4a8\",\"dweb:/ipfs/QmUrJVytg1g6ixzynY7Mp2SiH6NFrgBtMNWG7YHS2Sx7oW\"]},\"src/lib/PRBMath.sol\":{\"keccak256\":\"0x9adb90635cbd067f1d25b2979c8816564ea1018dbbbd0d865ac5e4b29d6d9bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e55f9be29babfd960a697723aaa4f9142dc3d00251eda8e4853ddb65be70cb9\",\"dweb:/ipfs/QmdoV8yDxLFHhyKb8HFRzLjmEopyfMC1rX8iyiePSEFc97\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/PRBMath.sol": {
				"PRBMath": {
					"abi": [],
					"devdoc": {
						"author": "Paul Razvan Berg",
						"kind": "dev",
						"methods": {},
						"title": "PRBMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/PRBMath.sol\":215:3997  library PRBMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/PRBMath.sol\":215:3997  library PRBMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201352a86867544606be40f2f92183a9244fcb521190fee3b72afa3103d3e0b8ff64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201352a86867544606be40f2f92183a9244fcb521190fee3b72afa3103d3e0b8ff64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT MSTORE 0xA8 PUSH9 0x67544606BE40F2F921 DUP4 0xA9 0x24 0x4F 0xCB MSTORE GT SWAP1 INVALID CALLF 0xB72A STATICCALL BALANCE SUB 0xD3 RJUMP 0xB8FF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "215:3782:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201352a86867544606be40f2f92183a9244fcb521190fee3b72afa3103d3e0b8ff64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT MSTORE 0xA8 PUSH9 0x67544606BE40F2F921 DUP4 0xA9 0x24 0x4F 0xCB MSTORE GT SWAP1 INVALID CALLF 0xB72A STATICCALL BALANCE SUB 0xD3 RJUMP 0xB8FF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "215:3782:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivFixedPoint(uint256,uint256)": "infinite",
								"round(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201352a86867544606be40f2f92183a9244fcb521190fee3b72afa3103d3e0b8ff64736f6c634300081e0033",
									".code": [
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PRBMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Smart contract library for advanced fixed-point math that works with uint256 and int256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/PRBMath.sol\":\"PRBMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/PRBMath.sol\":{\"keccak256\":\"0x9adb90635cbd067f1d25b2979c8816564ea1018dbbbd0d865ac5e4b29d6d9bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e55f9be29babfd960a697723aaa4f9142dc3d00251eda8e4853ddb65be70cb9\",\"dweb:/ipfs/QmdoV8yDxLFHhyKb8HFRzLjmEopyfMC1rX8iyiePSEFc97\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Smart contract library for advanced fixed-point math that works with uint256 and int256.",
						"version": 1
					}
				}
			},
			"src/lib/Position.sol": {
				"Position": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/Position.sol\":63:686  library Position {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/Position.sol\":63:686  library Position {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220307c7c962ee535937910b5c32c02616010417ce605e306f0413c0bdfff81198264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220307c7c962ee535937910b5c32c02616010417ce605e306f0413c0bdfff81198264736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH29 0x7C962EE535937910B5C32C02616010417CE605E306F0413C0BDFFF8119 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "63:623:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220307c7c962ee535937910b5c32c02616010417ce605e306f0413c0bdfff81198264736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH29 0x7C962EE535937910B5C32C02616010417CE605E306F0413C0BDFFF8119 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "63:623:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"get(mapping(bytes32 => struct Position.Info storage ref),address,int24,int24)": "infinite",
								"update(struct Position.Info storage pointer,uint128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220307c7c962ee535937910b5c32c02616010417ce605e306f0413c0bdfff81198264736f6c634300081e0033",
									".code": [
										{
											"begin": 63,
											"end": 686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 63,
											"end": 686,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 63,
											"end": 686,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 63,
											"end": 686,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 63,
											"end": 686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 686,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Position.sol\":\"Position\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/Position.sol\":{\"keccak256\":\"0x62d2ab06531ac4a0f60c9daa994ae38e6a82c2195022fa4b04c0cf589468f8d2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3be896ccd46161b135499a4a736f719d4b10112af999df66cddd9734fc52ab06\",\"dweb:/ipfs/QmcntWtU1Qjx586SPS3GDgNrGMAyV13VrMgdQopXQAY9AN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/Tick.sol": {
				"Tick": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/Tick.sol\":63:697  library Tick {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/Tick.sol\":63:697  library Tick {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205b93848c86b17124649bb4b05a857e046de6b254e33b697a2e217de32c1503ae64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205b93848c86b17124649bb4b05a857e046de6b254e33b697a2e217de32c1503ae64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST SWAP4 DUP5 DUP13 DUP7 0xB1 PUSH18 0x24649BB4B05A857E046DE6B254E33B697A2E 0x21 PUSH30 0xE32C1503AE64736F6C634300081E00330000000000000000000000000000 ",
							"sourceMap": "63:634:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205b93848c86b17124649bb4b05a857e046de6b254e33b697a2e217de32c1503ae64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST SWAP4 DUP5 DUP13 DUP7 0xB1 PUSH18 0x24649BB4B05A857E046DE6B254E33B697A2E 0x21 PUSH30 0xE32C1503AE64736F6C634300081E00330000000000000000000000000000 ",
							"sourceMap": "63:634:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"update(mapping(int24 => struct Tick.Info storage ref),int24,uint128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 63,
									"end": 697,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b93848c86b17124649bb4b05a857e046de6b254e33b697a2e217de32c1503ae64736f6c634300081e0033",
									".code": [
										{
											"begin": 63,
											"end": 697,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 63,
											"end": 697,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 63,
											"end": 697,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 63,
											"end": 697,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 697,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 697,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 63,
											"end": 697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 697,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 697,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Tick.sol\":\"Tick\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/Tick.sol\":{\"keccak256\":\"0x35a4d5dc0146b72ed1e530c16d691fa841d2edd786336adea1a306e698bc381a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1d17f41a71529f5eccf9c3af0a8d4693049950a7f46f6c5c97db70fd14d866cf\",\"dweb:/ipfs/QmcUjNxYXpBMErZpxF65XeA2fVg6R9sPy6gFGZEEcFR9Ud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/TickBitmap.sol": {
				"TickBitmap": {
					"abi": [],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/TickBitmap.sol\":331:4155  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/TickBitmap.sol\":331:4155  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212207973bd7114730004733e60dc9c8e414f4d4dc602adfa5abbb2464cc80fdda30064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207973bd7114730004733e60dc9c8e414f4d4dc602adfa5abbb2464cc80fdda30064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x73BD7114730004733E60DC9C8E414F4D4DC602ADFA5ABBB2464C 0xC8 0xF 0xDD LOG3 STOP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "331:3824:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207973bd7114730004733e60dc9c8e414f4d4dc602adfa5abbb2464cc80fdda30064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x73BD7114730004733E60DC9C8E414F4D4DC602ADFA5ABBB2464C 0xC8 0xF 0xDD LOG3 STOP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "331:3824:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"flipTick(mapping(int16 => uint256),int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256),int24,int24,bool)": "infinite",
								"position(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207973bd7114730004733e60dc9c8e414f4d4dc602adfa5abbb2464cc80fdda30064736f6c634300081e0033",
									".code": [
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/BitMath.sol\":{\"keccak256\":\"0x7a2051864fa0e8705564bde430557a6e9bc6d7765551f1a3b6ef8c8604eee313\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://28e81d5a4f36365c170097e7c5f208fcef3ceb87d082bf79450e69a678cd0c78\",\"dweb:/ipfs/QmNrHt2Vw2iLQ7JNRsVafYnaJqxxDSHUCQ8W9wMxosheRV\"]},\"src/lib/TickBitmap.sol\":{\"keccak256\":\"0xa430211db40b0cf69be4f166c7764ac3d2ab3a494ebfdec27d1d3e69bd961d1c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://12ed04d4d2ef0939d532a400f6a3e8dddbad71f9938f1caccd624f463e70296a\",\"dweb:/ipfs/Qmcpf15LJRtGFT81KR2unB3YLKaUF5naiSJkiDYtqnFpfD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				}
			},
			"src/lib/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/TickMath.sol\":306:8645  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/TickMath.sol\":306:8645  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220060cf9530af2d81566adda729a18d3613826b4c7b46103037fc2ae48f22bd8a164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220060cf9530af2d81566adda729a18d3613826b4c7b46103037fc2ae48f22bd8a164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC EXTDELEGATECALL MSTORE8 EXP CALLCODE 0xD8 ISZERO PUSH7 0xADDA729A18D361 CODESIZE 0x26 0xB4 0xC7 0xB4 PUSH2 0x303 PUSH32 0xC2AE48F22BD8A164736F6C634300081E00330000000000000000000000000000 ",
							"sourceMap": "306:8339:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220060cf9530af2d81566adda729a18d3613826b4c7b46103037fc2ae48f22bd8a164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC EXTDELEGATECALL MSTORE8 EXP CALLCODE 0xD8 ISZERO PUSH7 0xADDA729A18D361 CODESIZE 0x26 0xB4 0xC7 0xB4 PUSH2 0x303 PUSH32 0xC2AE48F22BD8A164736F6C634300081E00330000000000000000000000000000 ",
							"sourceMap": "306:8339:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220060cf9530af2d81566adda729a18d3613826b4c7b46103037fc2ae48f22bd8a164736f6c634300081e0033",
									".code": [
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/TickMath.sol\":{\"keccak256\":\"0x66bbfe54186fc7cc57565dbb20889526579a661c7971f7d4276bd7a600acbe81\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5bf2d491cd7ad9c8325715ad81245f0bb36e178b53e3acd1424af01ec09c48a7\",\"dweb:/ipfs/QmfXyEWsYun2KLtZALaN7HRGUxViEzr2gWkvGULWTtnRAt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/UniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "src/UniswapV3Pool.sol",
					"exportedSymbols": {
						"BitMath": [
							935
						],
						"FixedPoint96": [
							946
						],
						"IERC20": [
							509
						],
						"IUniswapV3MintCallback": [
							523
						],
						"IUniswapV3PoolEvents": [
							656
						],
						"IUniswapV3SwapCallback": [
							537
						],
						"Math": [
							1216
						],
						"PRBMath": [
							1403
						],
						"Position": [
							1466
						],
						"Tick": [
							1538
						],
						"TickBitmap": [
							1811
						],
						"TickMath": [
							2349
						],
						"UniswapV3Pool": [
							437
						]
					},
					"id": 438,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "src/lib/Math.sol",
							"file": "./lib/Math.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 1217,
							"src": "61:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/Position.sol",
							"file": "./lib/Position.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 1467,
							"src": "87:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/Tick.sol",
							"file": "./lib/Tick.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 1539,
							"src": "117:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/TickBitmap.sol",
							"file": "./lib/TickBitmap.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 1812,
							"src": "143:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/TickMath.sol",
							"file": "./lib/TickMath.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 2350,
							"src": "175:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/callback/IUniswapV3MintCallback.sol",
							"file": "./interfaces/callback/IUniswapV3MintCallback.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 524,
							"src": "205:58:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "./interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 538,
							"src": "265:58:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./interfaces/pool/IUniswapV3PoolEvents.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 657,
							"src": "325:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 438,
							"sourceUnit": 510,
							"src": "379:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"448:20:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "448:20:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "448:20:0"
								}
							],
							"canonicalName": "UniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 437,
							"linearizedBaseContracts": [
								437,
								656
							],
							"name": "UniswapV3Pool",
							"nameLocation": "425:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 18,
									"libraryName": {
										"id": 13,
										"name": "Tick",
										"nameLocations": [
											"483:4:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1538,
										"src": "483:4:0"
									},
									"nodeType": "UsingForDirective",
									"src": "477:43:0",
									"typeName": {
										"id": 17,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 14,
											"name": "int24",
											"nodeType": "ElementaryTypeName",
											"src": "500:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"nodeType": "Mapping",
										"src": "492:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$",
											"typeString": "mapping(int24 => struct Tick.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 16,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 15,
												"name": "Tick.Info",
												"nameLocations": [
													"509:4:0",
													"514:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1473,
												"src": "509:9:0"
											},
											"referencedDeclaration": 1473,
											"src": "509:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$1473_storage_ptr",
												"typeString": "struct Tick.Info"
											}
										}
									}
								},
								{
									"global": false,
									"id": 24,
									"libraryName": {
										"id": 19,
										"name": "Position",
										"nameLocations": [
											"532:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "532:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "526:53:0",
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "553:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "545:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$",
											"typeString": "mapping(bytes32 => struct Position.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "Position.Info",
												"nameLocations": [
													"564:8:0",
													"573:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1408,
												"src": "564:13:0"
											},
											"referencedDeclaration": 1408,
											"src": "564:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
												"typeString": "struct Position.Info"
											}
										}
									}
								},
								{
									"global": false,
									"id": 28,
									"libraryName": {
										"id": 25,
										"name": "Position",
										"nameLocations": [
											"591:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "591:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "585:33:0",
									"typeName": {
										"id": 27,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 26,
											"name": "Position.Info",
											"nameLocations": [
												"604:8:0",
												"613:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1408,
											"src": "604:13:0"
										},
										"referencedDeclaration": 1408,
										"src": "604:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
											"typeString": "struct Position.Info"
										}
									}
								},
								{
									"global": false,
									"id": 33,
									"libraryName": {
										"id": 29,
										"name": "TickBitmap",
										"nameLocations": [
											"630:10:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1811,
										"src": "630:10:0"
									},
									"nodeType": "UsingForDirective",
									"src": "624:47:0",
									"typeName": {
										"id": 32,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 30,
											"name": "int16",
											"nodeType": "ElementaryTypeName",
											"src": "653:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int16",
												"typeString": "int16"
											}
										},
										"nodeType": "Mapping",
										"src": "645:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
											"typeString": "mapping(int16 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 31,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "662:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									}
								},
								{
									"constant": true,
									"id": 37,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "703:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "679:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 34,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "679:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "714:7:0",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 35,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "715:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 41,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "752:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "728:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 38,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "728:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 40,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "763:9:0",
										"subExpression": {
											"id": 39,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 37,
											"src": "764:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "064847d0",
									"id": 43,
									"name": "InvalidTickRange",
									"nameLocation": "787:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:2:0"
									},
									"src": "781:25:0"
								},
								{
									"errorSelector": "10074548",
									"id": 45,
									"name": "ZeroLiquidity",
									"nameLocation": "818:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "831:2:0"
									},
									"src": "812:22:0"
								},
								{
									"errorSelector": "098fb561",
									"id": 47,
									"name": "InsufficientInputAmount",
									"nameLocation": "846:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:0"
									},
									"src": "840:32:0"
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 49,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "938:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "913:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 48,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "913:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 51,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "976:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "951:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 50,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "951:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "UniswapV3Pool.Slot0",
									"id": 56,
									"members": [
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "sqrtPriceX96",
											"nameLocation": "1086:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1078:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 52,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1078:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 55,
											"mutability": "mutable",
											"name": "tick",
											"nameLocation": "1139:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 56,
											"src": "1133:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 54,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1133:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Slot0",
									"nameLocation": "1034:5:0",
									"nodeType": "StructDefinition",
									"scope": 437,
									"src": "1027:124:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3850c7bd",
									"id": 59,
									"mutability": "mutable",
									"name": "slot0",
									"nameLocation": "1170:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "1157:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Slot0_$56_storage",
										"typeString": "struct UniswapV3Pool.Slot0"
									},
									"typeName": {
										"id": 58,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 57,
											"name": "Slot0",
											"nameLocations": [
												"1157:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 56,
											"src": "1157:5:0"
										},
										"referencedDeclaration": 56,
										"src": "1157:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Slot0_$56_storage_ptr",
											"typeString": "struct UniswapV3Pool.Slot0"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a686502",
									"id": 61,
									"mutability": "mutable",
									"name": "liquidity",
									"nameLocation": "1230:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "1215:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 60,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "1215:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f30dba93",
									"id": 66,
									"mutability": "mutable",
									"name": "ticks",
									"nameLocation": "1304:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "1269:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$",
										"typeString": "mapping(int24 => struct Tick.Info)"
									},
									"typeName": {
										"id": 65,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 62,
											"name": "int24",
											"nodeType": "ElementaryTypeName",
											"src": "1277:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"nodeType": "Mapping",
										"src": "1269:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$",
											"typeString": "mapping(int24 => struct Tick.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 64,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 63,
												"name": "Tick.Info",
												"nameLocations": [
													"1286:4:0",
													"1291:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1473,
												"src": "1286:9:0"
											},
											"referencedDeclaration": 1473,
											"src": "1286:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$1473_storage_ptr",
												"typeString": "struct Tick.Info"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5339c296",
									"id": 70,
									"mutability": "mutable",
									"name": "tickBitmap",
									"nameLocation": "1370:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "1337:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
										"typeString": "mapping(int16 => uint256)"
									},
									"typeName": {
										"id": 69,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 67,
											"name": "int16",
											"nodeType": "ElementaryTypeName",
											"src": "1345:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int16",
												"typeString": "int16"
											}
										},
										"nodeType": "Mapping",
										"src": "1337:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
											"typeString": "mapping(int16 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 68,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1354:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "514ea4bf",
									"id": 75,
									"mutability": "mutable",
									"name": "positions",
									"nameLocation": "1449:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 437,
									"src": "1408:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$",
										"typeString": "mapping(bytes32 => struct Position.Info)"
									},
									"typeName": {
										"id": 74,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 71,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1416:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1408:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$",
											"typeString": "mapping(bytes32 => struct Position.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 73,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 72,
												"name": "Position.Info",
												"nameLocations": [
													"1427:8:0",
													"1436:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1408,
												"src": "1427:13:0"
											},
											"referencedDeclaration": 1408,
											"src": "1427:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
												"typeString": "struct Position.Info"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1610:128:0",
										"statements": [
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 86,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1621:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 87,
														"name": "token0_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1630:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1621:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1621:16:0"
											},
											{
												"expression": {
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 90,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1648:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 91,
														"name": "token1_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1648:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1648:16:0"
											},
											{
												"expression": {
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 94,
														"name": "slot0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1675:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$56_storage",
															"typeString": "struct UniswapV3Pool.Slot0 storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 96,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "1704:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 97,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "1724:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 95,
															"name": "Slot0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1683:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Slot0_$56_storage_ptr_$",
																"typeString": "type(struct UniswapV3Pool.Slot0 storage pointer)"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1690:12:0",
															"1718:4:0"
														],
														"names": [
															"sqrtPriceX96",
															"tick"
														],
														"nodeType": "FunctionCall",
														"src": "1683:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$56_memory_ptr",
															"typeString": "struct UniswapV3Pool.Slot0 memory"
														}
													},
													"src": "1675:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Slot0_$56_storage",
														"typeString": "struct UniswapV3Pool.Slot0 storage ref"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1675:55:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "token0_",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "token1_",
												"nameLocation": "1543:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1569:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1561:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 80,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1598:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1592:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 82,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:111:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1610:0:0"
									},
									"scope": 437,
									"src": "1487:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1979:1735:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 119,
																"name": "lowerTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2008:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 120,
																"name": "upperTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "2021:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2008:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "lowerTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "2047:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 123,
																"name": "MIN_TICK",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "2059:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2047:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2008:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 126,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2084:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 127,
															"name": "MAX_TICK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2096:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"src": "2084:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2008:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 133,
												"nodeType": "IfStatement",
												"src": "1990:151:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 130,
															"name": "InvalidTickRange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2123:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2123:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 132,
													"nodeType": "RevertStatement",
													"src": "2116:25:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 134,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "2156:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2156:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 140,
												"nodeType": "IfStatement",
												"src": "2152:39:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 137,
															"name": "ZeroLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2176:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2176:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 139,
													"nodeType": "RevertStatement",
													"src": "2169:22:0"
												}
											},
											{
												"assignments": [
													142
												],
												"declarations": [
													{
														"constant": false,
														"id": 142,
														"mutability": "mutable",
														"name": "flippedLower",
														"nameLocation": "2209:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "2204:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 141,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2204:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 148,
												"initialValue": {
													"arguments": [
														{
															"id": 145,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2237:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 146,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2248:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 143,
															"name": "ticks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2224:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2230:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1537,
														"src": "2224:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$_$_t_int24_$_t_uint128_$returns$_t_bool_$attached_to$_t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$_$",
															"typeString": "function (mapping(int24 => struct Tick.Info storage ref),int24,uint128) returns (bool)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2204:51:0"
											},
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "flippedUpper",
														"nameLocation": "2271:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "2266:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2266:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [
														{
															"id": 153,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2299:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 154,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2310:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 151,
															"name": "ticks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "2286:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2292:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1537,
														"src": "2286:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$_$_t_int24_$_t_uint128_$returns$_t_bool_$attached_to$_t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$_$",
															"typeString": "function (mapping(int24 => struct Tick.Info storage ref),int24,uint128) returns (bool)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2286:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2266:51:0"
											},
											{
												"condition": {
													"id": 157,
													"name": "flippedLower",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 142,
													"src": "2331:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2328:77:0",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2345:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 161,
																		"name": "lowerTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2380:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2391:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 158,
																		"name": "tickBitmap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "2360:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2371:8:0",
																	"memberName": "flipTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1617,
																	"src": "2360:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$returns$__$attached_to$_t_mapping$_t_int16_$_t_uint256_$_$",
																		"typeString": "function (mapping(int16 => uint256),int24,int24)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2360:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 164,
															"nodeType": "ExpressionStatement",
															"src": "2360:33:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 167,
													"name": "flippedUpper",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "2418:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 176,
												"nodeType": "IfStatement",
												"src": "2415:77:0",
												"trueBody": {
													"id": 175,
													"nodeType": "Block",
													"src": "2432:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 171,
																		"name": "upperTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "2467:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2478:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 168,
																		"name": "tickBitmap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "2447:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2458:8:0",
																	"memberName": "flipTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1617,
																	"src": "2447:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$returns$__$attached_to$_t_mapping$_t_int16_$_t_uint256_$_$",
																		"typeString": "function (mapping(int16 => uint256),int24,int24)"
																	}
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2447:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 174,
															"nodeType": "ExpressionStatement",
															"src": "2447:33:0"
														}
													]
												}
											},
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2526:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "2504:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
															"typeString": "struct Position.Info"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "Position.Info",
																"nameLocations": [
																	"2504:8:0",
																	"2513:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1408,
																"src": "2504:13:0"
															},
															"referencedDeclaration": 1408,
															"src": "2504:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
																"typeString": "struct Position.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"arguments": [
														{
															"id": 184,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2565:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2585:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 186,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2609:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 182,
															"name": "positions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "2537:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2547:3:0",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1439,
														"src": "2537:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$_$_t_address_$_t_int24_$_t_int24_$returns$_t_struct$_Info_$1408_storage_ptr_$attached_to$_t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$_$",
															"typeString": "function (mapping(bytes32 => struct Position.Info storage ref),address,int24,int24) view returns (struct Position.Info storage pointer)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2537:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2504:125:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 192,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "2656:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 189,
															"name": "position",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2640:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2649:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1465,
														"src": "2640:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Info_$1408_storage_ptr_$_t_uint128_$returns$__$attached_to$_t_struct$_Info_$1408_storage_ptr_$",
															"typeString": "function (struct Position.Info storage pointer,uint128)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2640:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "2640:23:0"
											},
											{
												"assignments": [
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "slot0_",
														"nameLocation": "2689:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "2676:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$56_memory_ptr",
															"typeString": "struct UniswapV3Pool.Slot0"
														},
														"typeName": {
															"id": 196,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 195,
																"name": "Slot0",
																"nameLocations": [
																	"2676:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 56,
																"src": "2676:5:0"
															},
															"referencedDeclaration": 56,
															"src": "2676:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Slot0_$56_storage_ptr",
																"typeString": "struct UniswapV3Pool.Slot0"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 199,
												"initialValue": {
													"id": 198,
													"name": "slot0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "2698:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Slot0_$56_storage",
														"typeString": "struct UniswapV3Pool.Slot0 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2676:27:0"
											},
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 200,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 203,
																	"name": "slot0_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "2762:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Slot0_$56_memory_ptr",
																		"typeString": "struct UniswapV3Pool.Slot0 memory"
																	}
																},
																"id": 204,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2769:12:0",
																"memberName": "sqrtPriceX96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "2762:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"arguments": [
																	{
																		"id": 207,
																		"name": "upperTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "2824:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"expression": {
																		"id": 205,
																		"name": "TickMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2349,
																		"src": "2796:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TickMath_$2349_$",
																			"typeString": "type(library TickMath)"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2805:18:0",
																	"memberName": "getSqrtRatioAtTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2209,
																	"src": "2796:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																		"typeString": "function (int24) pure returns (uint160)"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2796:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 209,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "2849:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"expression": {
																"id": 201,
																"name": "Math",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "2726:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Math_$1216_$",
																	"typeString": "type(library Math)"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2731:16:0",
															"memberName": "calcAmount0Delta",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1002,
															"src": "2726:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2726:140:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2716:150:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2716:150:0"
											},
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 213,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "2879:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 216,
																	"name": "slot0_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 197,
																	"src": "2925:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Slot0_$56_memory_ptr",
																		"typeString": "struct UniswapV3Pool.Slot0 memory"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2932:12:0",
																"memberName": "sqrtPriceX96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "2925:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"arguments": [
																	{
																		"id": 220,
																		"name": "lowerTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2987:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"expression": {
																		"id": 218,
																		"name": "TickMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2349,
																		"src": "2959:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TickMath_$2349_$",
																			"typeString": "type(library TickMath)"
																		}
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2968:18:0",
																	"memberName": "getSqrtRatioAtTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2209,
																	"src": "2959:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																		"typeString": "function (int24) pure returns (uint160)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2959:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 222,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "3012:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"expression": {
																"id": 214,
																"name": "Math",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "2889:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Math_$1216_$",
																	"typeString": "type(library Math)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2894:16:0",
															"memberName": "calcAmount1Delta",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1039,
															"src": "2889:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2889:140:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2879:150:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "2879:150:0"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "3042:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 229,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "3063:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 227,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "3055:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3055:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3042:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3042:28:0"
											},
											{
												"assignments": [
													234
												],
												"declarations": [
													{
														"constant": false,
														"id": 234,
														"mutability": "mutable",
														"name": "balance0Before",
														"nameLocation": "3091:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3083:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 233,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 235,
												"nodeType": "VariableDeclarationStatement",
												"src": "3083:22:0"
											},
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "balance1Before",
														"nameLocation": "3124:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 306,
														"src": "3116:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"nodeType": "VariableDeclarationStatement",
												"src": "3116:22:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 239,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "3153:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3153:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "IfStatement",
												"src": "3149:44:0",
												"trueBody": {
													"expression": {
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 242,
															"name": "balance0Before",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "3166:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 243,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "3183:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3183:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3166:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 246,
													"nodeType": "ExpressionStatement",
													"src": "3166:27:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "3208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3218:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3208:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "IfStatement",
												"src": "3204:44:0",
												"trueBody": {
													"expression": {
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 251,
															"name": "balance1Before",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "3221:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 252,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "3238:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3221:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 255,
													"nodeType": "ExpressionStatement",
													"src": "3221:27:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 263,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 264,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "3374:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 258,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3282:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3286:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3282:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 257,
																"name": "IUniswapV3MintCallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "3259:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3MintCallback_$523_$",
																	"typeString": "type(contract IUniswapV3MintCallback)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3259:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3MintCallback_$523",
																"typeString": "contract IUniswapV3MintCallback"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3294:21:0",
														"memberName": "uniswapV3MintCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 522,
														"src": "3259:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,bytes memory) external"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "3259:130:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 267,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3404:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3414:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3404:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "balance0Before",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "3419:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 271,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "3436:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3419:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 273,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "3446:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3446:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3419:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3404:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 280,
												"nodeType": "IfStatement",
												"src": "3400:103:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 277,
															"name": "InsufficientInputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "3478:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3478:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 279,
													"nodeType": "RevertStatement",
													"src": "3471:32:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 281,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3518:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3528:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3518:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 284,
																"name": "balance1Before",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 237,
																"src": "3533:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 285,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "3550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3533:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 287,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "3560:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3560:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3533:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3518:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 294,
												"nodeType": "IfStatement",
												"src": "3514:103:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 291,
															"name": "InsufficientInputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "3592:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3592:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 293,
													"nodeType": "RevertStatement",
													"src": "3585:32:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 296,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3640:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3644:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3640:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "3652:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3659:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 300,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3670:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 301,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3681:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 302,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 303,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3698:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "3635:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,int24,int24,uint128,uint256,uint256)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3635:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "EmitStatement",
												"src": "3630:76:0"
											}
										]
									},
									"functionSelector": "3c8a7d8d",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1769:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1792:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1784:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "lowerTick",
												"nameLocation": "1814:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 105,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1808:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "upperTick",
												"nameLocation": "1840:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1834:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 107,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 109,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1900:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1885:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1885:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1773:153:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1953:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1945:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1962:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:34:0"
									},
									"scope": 437,
									"src": "1760:1954:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "3871:824:0",
										"statements": [
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "nextTick",
														"nameLocation": "3888:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3882:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 318,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "3882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"hexValue": "3835313834",
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3899:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_85184_by_1",
														"typeString": "int_const 85184"
													},
													"value": "85184"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3882:22:0"
											},
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "nextPrice",
														"nameLocation": "3923:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "3915:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 322,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"hexValue": "35363034343639333530393432333237383839343434373433343431313937",
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3935:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5604469350942327889444743441197_by_1",
														"typeString": "int_const 5604469350942327889444743441197"
													},
													"value": "5604469350942327889444743441197"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3915:51:0"
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 326,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "3977:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "3987:27:0",
														"subExpression": {
															"hexValue": "302e303038333936373134323432313632343434",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3988:26:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8396714242162444_by_1",
																"typeString": "int_const 8396714242162444"
															},
															"value": "0.008396714242162444"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_8396714242162444_by_1",
															"typeString": "int_const -8396714242162444"
														}
													},
													"src": "3977:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "3977:37:0"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "4025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3432",
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4035:8:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42000000000000000000_by_1",
															"typeString": "int_const 42000000000000000000"
														},
														"value": "42"
													},
													"src": "4025:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "4025:18:0"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"expression": {
																	"id": 335,
																	"name": "slot0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "4055:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Slot0_$56_storage",
																		"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "4061:4:0",
																"memberName": "tick",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 55,
																"src": "4055:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 338,
																	"name": "slot0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "4067:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Slot0_$56_storage",
																		"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																	}
																},
																"id": 339,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "4073:12:0",
																"memberName": "sqrtPriceX96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "4067:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"id": 340,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4054:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int24_$_t_uint160_$",
															"typeString": "tuple(int24,uint160)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"id": 341,
																"name": "nextTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "4090:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 342,
																"name": "nextPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 323,
																"src": "4100:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"id": 343,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4089:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int24_$_t_uint160_$",
															"typeString": "tuple(int24,uint160)"
														}
													},
													"src": "4054:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "4054:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4155:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "4174:8:0",
																	"subExpression": {
																		"id": 353,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 314,
																		"src": "4175:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4166:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 351,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4166:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4166:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 347,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "4138:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 346,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "4131:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$509_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4131:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$509",
																"typeString": "contract IERC20"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4146:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 458,
														"src": "4131:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4131:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "4131:53:0"
											},
											{
												"assignments": [
													359
												],
												"declarations": [
													{
														"constant": false,
														"id": 359,
														"mutability": "mutable",
														"name": "balance1Before",
														"nameLocation": "4203:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 399,
														"src": "4195:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 360,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "4220:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4220:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4195:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 368,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 369,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 370,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "4356:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 364,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4264:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4268:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4264:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 363,
																"name": "IUniswapV3SwapCallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "4241:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3SwapCallback_$537_$",
																	"typeString": "type(contract IUniswapV3SwapCallback)"
																}
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4241:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$537",
																"typeString": "contract IUniswapV3SwapCallback"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4276:21:0",
														"memberName": "uniswapV3SwapCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 536,
														"src": "4241:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_int256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (int256,int256,bytes memory) external"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4241:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "4241:130:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 373,
															"name": "balance1Before",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "4386:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [
																{
																	"id": 376,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "4411:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4403:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4403:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4403:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4386:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 379,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "4422:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4422:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4386:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 385,
												"nodeType": "IfStatement",
												"src": "4382:97:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 382,
															"name": "InsufficientInputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "4454:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4454:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 384,
													"nodeType": "RevertStatement",
													"src": "4447:32:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 387,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4516:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4520:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4516:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4541:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "4565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 391,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "4587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"expression": {
																"id": 392,
																"name": "slot0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "4609:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$56_storage",
																	"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4615:12:0",
															"memberName": "sqrtPriceX96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 53,
															"src": "4609:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 394,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "4642:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"id": 395,
																"name": "slot0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "4666:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$56_storage",
																	"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4672:4:0",
															"memberName": "tick",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 55,
															"src": "4666:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 386,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "4497:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_int256_$_t_int256_$_t_uint160_$_t_uint128_$_t_int24_$returns$__$",
															"typeString": "function (address,address,int256,int256,uint160,uint128,int24)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4497:190:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "EmitStatement",
												"src": "4492:195:0"
											}
										]
									},
									"functionSelector": "e3547335",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "3755:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3768:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3760:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3794:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3779:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:40:0"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3841:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3834:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 313,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3834:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3857:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "3850:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 315,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3850:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3833:32:0"
									},
									"scope": 437,
									"src": "3746:949:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "4784:68:0",
										"statements": [
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 405,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "4795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 412,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4838:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$437",
																			"typeString": "contract UniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$437",
																			"typeString": "contract UniswapV3Pool"
																		}
																	],
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4830:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 410,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4830:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4830:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 407,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "4812:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 406,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "4805:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$509_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4805:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$509",
																	"typeString": "contract IERC20"
																}
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4820:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 448,
															"src": "4805:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4805:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4795:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "4795:49:0"
											}
										]
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance0",
									"nameLocation": "4733:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4741:2:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4766:17:0"
									},
									"scope": 437,
									"src": "4724:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 435,
										"nodeType": "Block",
										"src": "4941:68:0",
										"statements": [
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 423,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "4952:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 430,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4995:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$437",
																			"typeString": "contract UniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$437",
																			"typeString": "contract UniswapV3Pool"
																		}
																	],
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4987:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 428,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4987:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4987:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 425,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "4969:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 424,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "4962:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$509_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4962:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$509",
																	"typeString": "contract IERC20"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4977:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 448,
															"src": "4962:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4962:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4952:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "4952:49:0"
											}
										]
									},
									"id": 436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance1",
									"nameLocation": "4890:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4898:2:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4932:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 436,
												"src": "4924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4923:17:0"
									},
									"scope": 437,
									"src": "4881:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 438,
							"src": "416:4598:0",
							"usedErrors": [
								43,
								45,
								47
							],
							"usedEvents": [
								547,
								564,
								579,
								594,
								611,
								626,
								633,
								644,
								655
							]
						}
					],
					"src": "33:4983:0"
				},
				"id": 0
			},
			"src/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							509
						]
					},
					"id": 510,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 439,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 440,
								"nodeType": "StructuredDocumentation",
								"src": "74:134:1",
								"text": "@title Minimal ERC20 interface for Uniswap\n @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 509,
							"linearizedBaseContracts": [
								509
							],
							"name": "IERC20",
							"nameLocation": "218:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "232:203:1",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "450:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "460:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:17:1"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "500:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:9:1"
									},
									"scope": 509,
									"src": "441:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 449,
										"nodeType": "StructuredDocumentation",
										"src": "517:336:1",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "868:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "885:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "877:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "904:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "896:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:35:1"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "930:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:6:1"
									},
									"scope": 509,
									"src": "859:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "944:253:1",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1212:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1230:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1222:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1245:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1237:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:32:1"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1277:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:9:1"
									},
									"scope": 509,
									"src": "1203:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1294:346:1",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1655:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1688:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1680:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:33:1"
									},
									"returnParameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1714:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1713:6:1"
									},
									"scope": 509,
									"src": "1646:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "1728:375:1",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2118:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2149:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2141:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2174:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2166:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2202:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2194:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:85:1"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2234:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2234:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2233:6:1"
									},
									"scope": 509,
									"src": "2109:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "2248:372:1",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 499,
									"name": "Transfer",
									"nameLocation": "2632:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2657:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "2641:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2679:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "2663:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "2683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:57:1"
									},
									"src": "2626:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "2706:324:1",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 508,
									"name": "Approval",
									"nameLocation": "3042:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3067:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3051:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3090:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3074:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3107:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3099:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:63:1"
									},
									"src": "3036:78:1"
								}
							],
							"scope": 510,
							"src": "208:2909:1",
							"usedErrors": [],
							"usedEvents": [
								499,
								508
							]
						}
					],
					"src": "46:3073:1"
				},
				"id": 1
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"ast": {
					"absolutePath": "src/interfaces/callback/IUniswapV3MintCallback.sol",
					"exportedSymbols": {
						"IUniswapV3MintCallback": [
							523
						]
					},
					"id": 524,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 511,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3MintCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 512,
								"nodeType": "StructuredDocumentation",
								"src": "74:146:2",
								"text": "@title Callback for IUniswapV3PoolActions#mint\n @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface"
							},
							"fullyImplemented": false,
							"id": 523,
							"linearizedBaseContracts": [
								523
							],
							"name": "IUniswapV3MintCallback",
							"nameLocation": "230:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "260:491:2",
										"text": "@notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\n @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n @param amount1Owed The amount of token1 due to the pool for the minted liquidity"
									},
									"functionSelector": "d3487997",
									"id": 522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3MintCallback",
									"nameLocation": "766:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "amount0Owed",
												"nameLocation": "806:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "798:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "amount1Owed",
												"nameLocation": "836:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "828:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "873:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "858:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 518,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "858:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:97:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:2"
									},
									"scope": 523,
									"src": "757:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 524,
							"src": "220:677:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:853:2"
				},
				"id": 2
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "src/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							537
						]
					},
					"id": 538,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 525,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "74:146:3",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 537,
							"linearizedBaseContracts": [
								537
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "230:22:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "260:807:3",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool."
									},
									"functionSelector": "fa461e33",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1082:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1121:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1114:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 528,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1151:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1144:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 530,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1189:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1174:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1174:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:97:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1209:0:3"
									},
									"scope": 537,
									"src": "1073:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 538,
							"src": "220:993:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1169:3"
				},
				"id": 3
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "src/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							656
						]
					},
					"id": 657,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 539,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 540,
								"nodeType": "StructuredDocumentation",
								"src": "74:90:4",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 656,
							"linearizedBaseContracts": [
								656
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "174:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "202:347:4",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 547,
									"name": "Initialize",
									"nameLocation": "561:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "580:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "572:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 542,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "600:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "594:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 544,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "594:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:34:4"
									},
									"src": "555:51:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "614:558:4",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 564,
									"name": "Mint",
									"nameLocation": "1184:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1207:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1199:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1240:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1224:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1270:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1256:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 553,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1304:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1290:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 555,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1290:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1332:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1324:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 557,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1383:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1375:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:209:4"
									},
									"src": "1178:220:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "1406:499:4",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 579,
									"name": "Collect",
									"nameLocation": "1917:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1951:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1935:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1975:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1967:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2009:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "1995:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 570,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1995:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2043:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2029:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 572,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2029:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2071:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2063:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 574,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2097:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2089:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 576,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:187:4"
									},
									"src": "1911:201:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2120:530:4",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 594,
									"name": "Burn",
									"nameLocation": "2662:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2677:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2723:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2709:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 583,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2709:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2757:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2743:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 585,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2785:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2777:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 587,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2810:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2802:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2836:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2828:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:184:4"
									},
									"src": "2656:195:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2859:607:4",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 611,
									"name": "Swap",
									"nameLocation": "3478:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3509:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3493:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3542:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3526:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3569:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3562:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 600,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3594:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3587:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3587:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3620:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3612:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 604,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3651:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3643:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 606,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3677:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3671:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 608,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3671:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:206:4"
									},
									"src": "3472:217:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "3697:568:4",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 626,
									"name": "Flash",
									"nameLocation": "4277:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4309:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4293:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4342:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4326:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4370:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4362:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4396:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4388:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4422:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4414:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:176:4"
									},
									"src": "4271:188:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "4467:455:4",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 633,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4934:34:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4986:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "4979:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 628,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "5033:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5026:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 630,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5026:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:101:4"
									},
									"src": "4928:142:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5078:374:4",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 644,
									"name": "SetFeeProtocol",
									"nameLocation": "5464:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5485:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5479:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 635,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5479:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5508:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5502:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 637,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5502:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5531:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5525:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 639,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5525:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5554:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "5548:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 641,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5548:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5478:92:4"
									},
									"src": "5458:113:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "5579:388:4",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 655,
									"name": "CollectProtocol",
									"nameLocation": "5979:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6011:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "5995:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5995:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6035:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6019:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6054:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 650,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6071:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6063:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 652,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5994:85:4"
									},
									"src": "5973:107:4"
								}
							],
							"scope": 657,
							"src": "164:5919:4",
							"usedErrors": [],
							"usedEvents": [
								547,
								564,
								579,
								594,
								611,
								626,
								633,
								644,
								655
							]
						}
					],
					"src": "46:6039:4"
				},
				"id": 4
			},
			"src/lib/BitMath.sol": {
				"ast": {
					"absolutePath": "src/lib/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							935
						]
					},
					"id": 936,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 659,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:5",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 935,
							"linearizedBaseContracts": [
								935
							],
							"name": "BitMath",
							"nameLocation": "195:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "742:660:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 668,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "760:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "764:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "760:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "752:14:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 673,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "781:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "781:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 685,
												"nodeType": "IfStatement",
												"src": "777:102:5",
												"trueBody": {
													"id": 684,
													"nodeType": "Block",
													"src": "823:56:5",
													"statements": [
														{
															"expression": {
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 676,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "837:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "837:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 679,
															"nodeType": "ExpressionStatement",
															"src": "837:9:5"
														},
														{
															"expression": {
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 680,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "860:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "865:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "860:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 683,
															"nodeType": "ExpressionStatement",
															"src": "860:8:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 686,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "897:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "892:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "888:84:5",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "918:54:5",
													"statements": [
														{
															"expression": {
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 689,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "932:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "938:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "932:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 692,
															"nodeType": "ExpressionStatement",
															"src": "932:8:5"
														},
														{
															"expression": {
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 693,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "954:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "959:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "954:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 696,
															"nodeType": "ExpressionStatement",
															"src": "954:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "985:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "990:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "985:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"nodeType": "IfStatement",
												"src": "981:76:5",
												"trueBody": {
													"id": 710,
													"nodeType": "Block",
													"src": "1003:54:5",
													"statements": [
														{
															"expression": {
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 702,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "1017:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1023:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1017:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 705,
															"nodeType": "ExpressionStatement",
															"src": "1017:8:5"
														},
														{
															"expression": {
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 706,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1039:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1044:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1039:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 709,
															"nodeType": "ExpressionStatement",
															"src": "1039:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1070:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1070:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "1066:72:5",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "1084:54:5",
													"statements": [
														{
															"expression": {
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 715,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "1098:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1104:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1098:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 718,
															"nodeType": "ExpressionStatement",
															"src": "1098:8:5"
														},
														{
															"expression": {
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 719,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1120:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1125:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1120:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 722,
															"nodeType": "ExpressionStatement",
															"src": "1120:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 725,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1151:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1151:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "1147:68:5",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "1163:52:5",
													"statements": [
														{
															"expression": {
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 728,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "1177:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1183:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1177:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 731,
															"nodeType": "ExpressionStatement",
															"src": "1177:7:5"
														},
														{
															"expression": {
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 732,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1198:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1203:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1198:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 735,
															"nodeType": "ExpressionStatement",
															"src": "1198:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1228:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1228:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "1224:67:5",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "1239:52:5",
													"statements": [
														{
															"expression": {
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 741,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "1253:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1259:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1253:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 744,
															"nodeType": "ExpressionStatement",
															"src": "1253:7:5"
														},
														{
															"expression": {
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 745,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1274:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1279:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1274:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 748,
															"nodeType": "ExpressionStatement",
															"src": "1274:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1304:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1309:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1304:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "1300:66:5",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "1314:52:5",
													"statements": [
														{
															"expression": {
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 754,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 662,
																	"src": "1328:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1334:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1328:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 757,
															"nodeType": "ExpressionStatement",
															"src": "1328:7:5"
														},
														{
															"expression": {
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 758,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1349:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1354:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1349:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 761,
															"nodeType": "ExpressionStatement",
															"src": "1349:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "1379:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1384:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1379:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "1375:20:5",
												"trueBody": {
													"expression": {
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 767,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "1389:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1389:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 770,
													"nodeType": "ExpressionStatement",
													"src": "1389:6:5"
												}
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "209:457:5",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "680:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "707:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "699:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:11:5"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "739:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "733:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 664,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "733:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:9:5"
									},
									"scope": 935,
									"src": "671:731:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 933,
										"nodeType": "Block",
										"src": "1965:822:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "1983:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1987:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1983:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "1975:14:5"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 787,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "2000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2004:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "2000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "2000:7:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 791,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "2021:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2030:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 793,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2030:7:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 792,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2025:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2025:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2039:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2025:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "2021:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2021:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 809,
													"nodeType": "Block",
													"src": "2087:34:5",
													"statements": [
														{
															"expression": {
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 805,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2101:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2101:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 808,
															"nodeType": "ExpressionStatement",
															"src": "2101:9:5"
														}
													]
												},
												"id": 810,
												"nodeType": "IfStatement",
												"src": "2017:104:5",
												"trueBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "2048:33:5",
													"statements": [
														{
															"expression": {
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 800,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2062:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2067:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2062:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 803,
															"nodeType": "ExpressionStatement",
															"src": "2062:8:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 811,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "2134:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2143:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 813,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2143:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 812,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2138:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2138:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2151:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2138:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2134:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2157:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2134:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 829,
													"nodeType": "Block",
													"src": "2198:33:5",
													"statements": [
														{
															"expression": {
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 825,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2212:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2218:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2212:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 828,
															"nodeType": "ExpressionStatement",
															"src": "2212:8:5"
														}
													]
												},
												"id": 830,
												"nodeType": "IfStatement",
												"src": "2130:101:5",
												"trueBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "2160:32:5",
													"statements": [
														{
															"expression": {
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 820,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2174:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2179:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2174:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 823,
															"nodeType": "ExpressionStatement",
															"src": "2174:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 831,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "2244:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2253:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 833,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2253:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 832,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2248:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2261:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2248:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2244:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2267:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2244:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "2308:33:5",
													"statements": [
														{
															"expression": {
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 845,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2322:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2328:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2322:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "2322:8:5"
														}
													]
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "2240:101:5",
												"trueBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "2270:32:5",
													"statements": [
														{
															"expression": {
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 840,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2284:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2289:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2284:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 843,
															"nodeType": "ExpressionStatement",
															"src": "2284:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 851,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "2354:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2363:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 853,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "2363:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 852,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2358:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2358:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2371:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2358:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2354:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2354:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 869,
													"nodeType": "Block",
													"src": "2418:33:5",
													"statements": [
														{
															"expression": {
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 865,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2432:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2438:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2432:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 868,
															"nodeType": "ExpressionStatement",
															"src": "2432:8:5"
														}
													]
												},
												"id": 870,
												"nodeType": "IfStatement",
												"src": "2350:101:5",
												"trueBody": {
													"id": 864,
													"nodeType": "Block",
													"src": "2380:32:5",
													"statements": [
														{
															"expression": {
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 860,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2394:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2399:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2394:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 863,
															"nodeType": "ExpressionStatement",
															"src": "2394:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 871,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "2464:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2473:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 873,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2473:5:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 872,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2468:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2468:11:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2480:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2468:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2464:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2486:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2464:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "2526:32:5",
													"statements": [
														{
															"expression": {
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 885,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2540:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2546:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2540:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"nodeType": "ExpressionStatement",
															"src": "2540:7:5"
														}
													]
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "2460:98:5",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "2489:31:5",
													"statements": [
														{
															"expression": {
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 880,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2503:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2508:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2503:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 883,
															"nodeType": "ExpressionStatement",
															"src": "2503:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 891,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "2571:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "2571:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2581:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2571:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 905,
													"nodeType": "Block",
													"src": "2621:32:5",
													"statements": [
														{
															"expression": {
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 901,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2635:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2641:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2635:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 904,
															"nodeType": "ExpressionStatement",
															"src": "2635:7:5"
														}
													]
												},
												"id": 906,
												"nodeType": "IfStatement",
												"src": "2567:86:5",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "2584:31:5",
													"statements": [
														{
															"expression": {
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 896,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2598:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2603:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2598:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "2598:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 907,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "2666:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2670:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "2666:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2676:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2666:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "2716:32:5",
													"statements": [
														{
															"expression": {
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 917,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "2730:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2736:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2730:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 920,
															"nodeType": "ExpressionStatement",
															"src": "2730:7:5"
														}
													]
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "2662:86:5",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "2679:31:5",
													"statements": [
														{
															"expression": {
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 912,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2693:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2698:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2693:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 915,
															"nodeType": "ExpressionStatement",
															"src": "2693:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 923,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "2761:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "2761:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2771:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2761:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 932,
												"nodeType": "IfStatement",
												"src": "2757:23:5",
												"trueBody": {
													"expression": {
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 928,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "2774:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2774:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 931,
													"nodeType": "ExpressionStatement",
													"src": "2774:6:5"
												}
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "1408:480:5",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nameLocation": "1902:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1930:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1922:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:11:5"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1962:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1956:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 778,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1956:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:9:5"
									},
									"scope": 935,
									"src": "1893:894:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 936,
							"src": "187:2602:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2744:5"
				},
				"id": 5
			},
			"src/lib/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "src/lib/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							946
						]
					},
					"id": 947,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 937,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPoint96",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 946,
							"linearizedBaseContracts": [
								946
							],
							"name": "FixedPoint96",
							"nameLocation": "79:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 940,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nameLocation": "122:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 946,
									"src": "98:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 938,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "98:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 939,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "135:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 945,
									"mutability": "constant",
									"name": "Q96",
									"nameLocation": "169:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 946,
									"src": "143:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 941,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "143:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"id": 944,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 942,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "175:1:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3936",
											"id": 943,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "178:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_96_by_1",
												"typeString": "int_const 96"
											},
											"value": "96"
										},
										"src": "175:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 947,
							"src": "71:112:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:139:6"
				},
				"id": 6
			},
			"src/lib/Math.sol": {
				"ast": {
					"absolutePath": "src/lib/Math.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							946
						],
						"Math": [
							1216
						],
						"PRBMath": [
							1403
						]
					},
					"id": 1217,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 948,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"absolutePath": "src/lib/FixedPoint96.sol",
							"file": "./FixedPoint96.sol",
							"id": 949,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 947,
							"src": "63:28:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/PRBMath.sol",
							"file": "./PRBMath.sol",
							"id": 950,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1217,
							"sourceUnit": 1404,
							"src": "92:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1216,
							"linearizedBaseContracts": [
								1216
							],
							"name": "Math",
							"nameLocation": "125:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "406:424:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "sqrtPriceAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "420:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 963,
														"name": "sqrtPriceBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "436:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "420:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "416:110:7",
												"trueBody": {
													"expression": {
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 965,
																	"name": "sqrtPriceAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "464:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 966,
																	"name": "sqrtPriceBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "479:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 967,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "463:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 968,
																	"name": "sqrtPriceBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "497:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 969,
																	"name": "sqrtPriceAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "512:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 970,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "496:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "463:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 972,
													"nodeType": "ExpressionStatement",
													"src": "463:63:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 975,
																"name": "sqrtPriceAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "545:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "561:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "545:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 974,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "537:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "537:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "537:26:7"
											},
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 980,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "574:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 985,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 957,
																							"src": "654:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						],
																						"id": 984,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "646:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 983,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "646:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 986,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "646:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"expression": {
																						"id": 987,
																						"name": "FixedPoint96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 946,
																						"src": "668:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$946_$",
																							"typeString": "type(library FixedPoint96)"
																						}
																					},
																					"id": 988,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "681:10:7",
																					"memberName": "RESOLUTION",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 940,
																					"src": "668:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "646:45:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 990,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "645:47:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 991,
																					"name": "sqrtPriceBX96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "711:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 992,
																					"name": "sqrtPriceAX96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "727:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"src": "711:29:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"id": 994,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "710:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 995,
																		"name": "sqrtPriceBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "759:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 982,
																	"name": "mulDivRoundingUp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "611:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "611:175:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 997,
																"name": "sqrtPriceAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "800:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 981,
															"name": "divRoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "584:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "584:239:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "574:249:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "574:249:7"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "136:104:7",
										"text": "@notice Calculates amount0 delta between two prices\n TODO: round down when removing liquidity"
									},
									"id": 1002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAmount0Delta",
									"nameLocation": "254:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "sqrtPriceAX96",
												"nameLocation": "288:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "280:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 952,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "sqrtPriceBX96",
												"nameLocation": "319:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "311:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 954,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "350:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "342:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 956,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:95:7"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "397:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "389:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:7"
									},
									"scope": 1216,
									"src": "245:585:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "1106:272:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1014,
														"name": "sqrtPriceAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "1120:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1015,
														"name": "sqrtPriceBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "1136:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1120:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1025,
												"nodeType": "IfStatement",
												"src": "1116:110:7",
												"trueBody": {
													"expression": {
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1017,
																	"name": "sqrtPriceAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "1164:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1018,
																	"name": "sqrtPriceBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "1179:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1019,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "1163:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1020,
																	"name": "sqrtPriceBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "1197:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1021,
																	"name": "sqrtPriceAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "1212:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1022,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1196:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "1163:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1024,
													"nodeType": "ExpressionStatement",
													"src": "1163:63:7"
												}
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1026,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "1237:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1028,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "1277:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1029,
																			"name": "sqrtPriceBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1007,
																			"src": "1301:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1030,
																			"name": "sqrtPriceAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "1317:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "1301:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1032,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1300:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"expression": {
																	"id": 1033,
																	"name": "FixedPoint96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "1345:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$946_$",
																		"typeString": "type(library FixedPoint96)"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1358:3:7",
																"memberName": "Q96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "1345:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1027,
															"name": "mulDivRoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "1247:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1247:124:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1237:134:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "1237:134:7"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "836:104:7",
										"text": "@notice Calculates amount1 delta between two prices\n TODO: round down when removing liquidity"
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAmount1Delta",
									"nameLocation": "954:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "sqrtPriceAX96",
												"nameLocation": "988:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "980:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1004,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "sqrtPriceBX96",
												"nameLocation": "1019:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1011:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1006,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1050:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1042:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1008,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:95:7"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1097:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "1089:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:17:7"
									},
									"scope": 1216,
									"src": "945:433:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1067,
										"nodeType": "Block",
										"src": "1582:346:7",
										"statements": [
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1052,
														"name": "sqrtPriceNextX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "1592:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1053,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1611:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [
																{
																	"id": 1060,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "1842:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1061,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "1872:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																{
																	"id": 1062,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "1899:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1059,
																"name": "getNextSqrtPriceFromAmount1RoundingDown",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "1785:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$returns$_t_uint160_$",
																	"typeString": "function (uint160,uint128,uint256) pure returns (uint160)"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1785:136:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1611:310:7",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1055,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "1691:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1056,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "1721:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																{
																	"id": 1057,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "1748:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1054,
																"name": "getNextSqrtPriceFromAmount0RoundingUp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "1636:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$returns$_t_uint160_$",
																	"typeString": "function (uint160,uint128,uint256) pure returns (uint160)"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:134:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1592:329:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "1592:329:7"
											}
										]
									},
									"id": 1068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromInput",
									"nameLocation": "1393:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1436:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "1428:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1040,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1466:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "1458:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1042,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1493:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "1485:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "1516:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "1511:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1511:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:114:7"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "sqrtPriceNextX96",
												"nameLocation": "1564:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1068,
												"src": "1556:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1049,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:26:7"
									},
									"scope": 1216,
									"src": "1384:544:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "2102:719:7",
										"statements": [
											{
												"assignments": [
													1080
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "2120:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1135,
														"src": "2112:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2112:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1083,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "2140:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2132:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2132:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2132:18:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"expression": {
															"id": 1085,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "2154:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$946_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2167:10:7",
														"memberName": "RESOLUTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 940,
														"src": "2154:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2132:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2112:65:7"
											},
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "product",
														"nameLocation": "2195:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1135,
														"src": "2187:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1089,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2187:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1094,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1091,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "2205:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1092,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2216:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2205:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2187:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1095,
															"name": "product",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "2308:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1096,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "2318:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2308:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1098,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2330:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2308:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"nodeType": "IfStatement",
												"src": "2304:318:7",
												"trueBody": {
													"id": 1120,
													"nodeType": "Block",
													"src": "2344:278:7",
													"statements": [
														{
															"assignments": [
																1101
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1101,
																	"mutability": "mutable",
																	"name": "denominator",
																	"nameLocation": "2366:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1120,
																	"src": "2358:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1100,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2358:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1105,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1102,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "2380:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1103,
																	"name": "product",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "2392:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2380:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2358:41:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1106,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "2417:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1107,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "2432:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2417:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1119,
															"nodeType": "IfStatement",
															"src": "2413:199:7",
															"trueBody": {
																"id": 1118,
																"nodeType": "Block",
																"src": "2443:169:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1112,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1080,
																							"src": "2538:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1113,
																							"name": "sqrtPriceX96",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1070,
																							"src": "2549:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						{
																							"id": 1114,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1101,
																							"src": "2563:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1111,
																						"name": "mulDivRoundingUp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1204,
																						"src": "2521:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1115,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2521:54:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2488:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1109,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "2488:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2488:109:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"functionReturnParameters": 1078,
																		"id": 1117,
																		"nodeType": "Return",
																		"src": "2461:136:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1125,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "2751:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1126,
																					"name": "numerator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1080,
																					"src": "2763:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1127,
																					"name": "sqrtPriceX96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1070,
																					"src": "2775:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"src": "2763:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1129,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2762:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1130,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "2791:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2762:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1124,
																"name": "divRoundingUp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "2737:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2737:63:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2712:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 1122,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2712:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2712:102:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 1078,
												"id": 1134,
												"nodeType": "Return",
												"src": "2693:121:7"
											}
										]
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount0RoundingUp",
									"nameLocation": "1943:37:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1998:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "1990:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1069,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2028:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2020:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1071,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2055:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2047:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:89:7"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "2093:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1076,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:9:7"
									},
									"scope": 1216,
									"src": "1934:887:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "2997:121:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1147,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "3026:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1150,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1142,
																				"src": "3062:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"expression": {
																					"id": 1151,
																					"name": "FixedPoint96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "3074:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$946_$",
																						"typeString": "type(library FixedPoint96)"
																					}
																				},
																				"id": 1152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "3087:10:7",
																				"memberName": "RESOLUTION",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 940,
																				"src": "3074:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "3062:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1154,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3061:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1155,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "3101:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3061:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3053:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 1148,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3053:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3053:58:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3026:85:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 1146,
												"id": 1159,
												"nodeType": "Return",
												"src": "3007:104:7"
											}
										]
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount1RoundingDown",
									"nameLocation": "2836:39:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "2893:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2885:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1137,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2923:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2915:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1139,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2950:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2942:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:89:7"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2988:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1144,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:9:7"
									},
									"scope": 1216,
									"src": "2827:291:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "3262:185:7",
										"statements": [
											{
												"expression": {
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1172,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "3272:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1175,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "3296:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1176,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "3299:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1177,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "3302:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1173,
																"name": "PRBMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_PRBMath_$1403_$",
																	"typeString": "type(library PRBMath)"
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3289:6:7",
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1365,
															"src": "3281:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3281:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3272:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1180,
												"nodeType": "ExpressionStatement",
												"src": "3272:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1182,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "3335:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "3338:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1184,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "3341:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1181,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "3328:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3328:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"nodeType": "IfStatement",
												"src": "3324:117:7",
												"trueBody": {
													"id": 1201,
													"nodeType": "Block",
													"src": "3359:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1189,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "3381:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1192,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3395:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1191,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "3395:7:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 1190,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "3390:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3390:13:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3404:3:7",
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "3390:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3381:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1188,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3373:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3373:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1197,
															"nodeType": "ExpressionStatement",
															"src": "3373:35:7"
														},
														{
															"expression": {
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3422:8:7",
																"subExpression": {
																	"id": 1198,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "3422:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1200,
															"nodeType": "ExpressionStatement",
															"src": "3422:8:7"
														}
													]
												}
											}
										]
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nameLocation": "3133:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3167:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3159:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3186:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3178:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3178:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3205:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3197:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3149:73:7"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3254:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3246:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3245:16:7"
									},
									"scope": 1216,
									"src": "3124:323:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "3583:173:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3602:148:7",
													"nodeType": "YulBlock",
													"src": "3602:148:7",
													"statements": [
														{
															"nativeSrc": "3616:124:7",
															"nodeType": "YulAssignment",
															"src": "3616:124:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "numerator",
																				"nativeSrc": "3651:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:7"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3662:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "3662:11:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3647:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:7"
																		},
																		"nativeSrc": "3647:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:27:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "numerator",
																						"nativeSrc": "3699:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3699:9:7"
																					},
																					{
																						"name": "denominator",
																						"nativeSrc": "3710:11:7",
																						"nodeType": "YulIdentifier",
																						"src": "3710:11:7"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nativeSrc": "3695:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3695:3:7"
																				},
																				"nativeSrc": "3695:27:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3695:27:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3724:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3724:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3692:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3692:2:7"
																		},
																		"nativeSrc": "3692:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3692:34:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3626:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3626:3:7"
																},
																"nativeSrc": "3626:114:7",
																"nodeType": "YulFunctionCall",
																"src": "3626:114:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3616:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3616:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1208,
														"isOffset": false,
														"isSlot": false,
														"src": "3662:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1208,
														"isOffset": false,
														"isSlot": false,
														"src": "3710:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1206,
														"isOffset": false,
														"isSlot": false,
														"src": "3651:9:7",
														"valueSize": 1
													},
													{
														"declaration": 1206,
														"isOffset": false,
														"isSlot": false,
														"src": "3699:9:7",
														"valueSize": 1
													},
													{
														"declaration": 1211,
														"isOffset": false,
														"isSlot": false,
														"src": "3616:6:7",
														"valueSize": 1
													}
												],
												"id": 1213,
												"nodeType": "InlineAssembly",
												"src": "3593:157:7"
											}
										]
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divRoundingUp",
									"nameLocation": "3462:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "3484:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "3476:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3476:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3503:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "3495:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3475:40:7"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3571:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "3563:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:16:7"
									},
									"scope": 1216,
									"src": "3453:303:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1217,
							"src": "117:3641:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:3722:7"
				},
				"id": 7
			},
			"src/lib/PRBMath.sol": {
				"ast": {
					"absolutePath": "src/lib/PRBMath.sol",
					"exportedSymbols": {
						"PRBMath": [
							1403
						]
					},
					"id": 1404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1218,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PRBMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1219,
								"nodeType": "StructuredDocumentation",
								"src": "61:152:8",
								"text": "@title PRBMath\n @author Paul Razvan Berg\n @notice Smart contract library for advanced fixed-point math that works with uint256 and int256."
							},
							"fullyImplemented": true,
							"id": 1403,
							"linearizedBaseContracts": [
								1403
							],
							"name": "PRBMath",
							"nameLocation": "223:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "238:57:8",
										"text": "@notice The maximum value an uint256 number can have."
									},
									"id": 1223,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nameLocation": "327:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "301:115:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1221,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "301:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
										"id": 1222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "350:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "425:56:8",
										"text": "@notice The maximum value an int256 number can have."
									},
									"id": 1227,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nameLocation": "512:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "487:104:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 1225,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "487:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"hexValue": "307837464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
										"id": 1226,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "525:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9967"
										},
										"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "600:56:8",
										"text": "@notice The minimum value an int256 number can have."
									},
									"id": 1234,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nameLocation": "687:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "662:109:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 1229,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "662:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const -578...(70 digits omitted)...9968"
										},
										"id": 1233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1231,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "-",
											"prefix": true,
											"src": "700:67:8",
											"subExpression": {
												"hexValue": "307837464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
												"id": 1230,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "701:66:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
													"typeString": "int_const 5789...(69 digits omitted)...9967"
												},
												"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
											},
											"typeDescriptions": {
												"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
												"typeString": "int_const -578...(70 digits omitted)...9967"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1232,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "770:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "700:71:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const -578...(70 digits omitted)...9968"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "780:66:8",
										"text": "@notice The scaling factor used for fixed-point numbers: 1e18."
									},
									"id": 1238,
									"mutability": "constant",
									"name": "SCALE",
									"nameLocation": "878:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "852:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "852:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1237,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "886:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "899:46:8",
										"text": "@notice The half scale, used for rounding."
									},
									"id": 1242,
									"mutability": "constant",
									"name": "HALF_SCALE",
									"nameLocation": "977:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "951:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1240,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "951:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35653137",
										"id": 1241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "990:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000_by_1",
											"typeString": "int_const 500000000000000000"
										},
										"value": "5e17"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "1301:2253:8",
										"statements": [
											{
												"id": 1363,
												"nodeType": "UncheckedBlock",
												"src": "1312:2235:8",
												"statements": [
													{
														"assignments": [
															1255
														],
														"declarations": [
															{
																"constant": false,
																"id": 1255,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "1400:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1363,
																"src": "1392:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1254,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1392:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1256,
														"nodeType": "VariableDeclarationStatement",
														"src": "1392:13:8"
													},
													{
														"assignments": [
															1258
														],
														"declarations": [
															{
																"constant": false,
																"id": 1258,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "1473:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1363,
																"src": "1465:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1257,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1465:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1259,
														"nodeType": "VariableDeclarationStatement",
														"src": "1465:13:8"
													},
													{
														"AST": {
															"nativeSrc": "1548:161:8",
															"nodeType": "YulBlock",
															"src": "1548:161:8",
															"statements": [
																{
																	"nativeSrc": "1567:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1567:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1584:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1584:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "1587:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1587:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1594:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1594:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1590:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1590:3:8"
																				},
																				"nativeSrc": "1590:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1590:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "1577:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1577:6:8"
																		},
																		"nativeSrc": "1577:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "1571:2:8",
																			"nodeType": "YulTypedName",
																			"src": "1571:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1615:18:8",
																	"nodeType": "YulAssignment",
																	"src": "1615:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1628:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1628:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "1631:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1631:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "1624:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1624:3:8"
																		},
																		"nativeSrc": "1624:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1624:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "1615:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "1615:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "1651:43:8",
																	"nodeType": "YulAssignment",
																	"src": "1651:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "1668:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1668:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "1672:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1672:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1664:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1664:3:8"
																				},
																				"nativeSrc": "1664:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1664:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "1683:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1683:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "1687:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1687:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1680:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1680:2:8"
																				},
																				"nativeSrc": "1680:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1660:3:8"
																		},
																		"nativeSrc": "1660:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1660:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "1651:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "1651:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1255,
																"isOffset": false,
																"isSlot": false,
																"src": "1615:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1255,
																"isOffset": false,
																"isSlot": false,
																"src": "1672:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1255,
																"isOffset": false,
																"isSlot": false,
																"src": "1687:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1258,
																"isOffset": false,
																"isSlot": false,
																"src": "1651:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "1584:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "1628:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1247,
																"isOffset": false,
																"isSlot": false,
																"src": "1587:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1247,
																"isOffset": false,
																"isSlot": false,
																"src": "1631:1:8",
																"valueSize": 1
															}
														],
														"id": 1260,
														"nodeType": "InlineAssembly",
														"src": "1539:170:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1261,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "1792:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1792:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1269,
														"nodeType": "IfStatement",
														"src": "1788:77:8",
														"trueBody": {
															"id": 1268,
															"nodeType": "Block",
															"src": "1804:61:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1264,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "1830:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1265,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1249,
																			"src": "1838:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1830:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1253,
																	"id": 1267,
																	"nodeType": "Return",
																	"src": "1823:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1271,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "1946:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1272,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "1960:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1946:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5052424d6174683a206f766572666c6f77",
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1967:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238",
																		"typeString": "literal_string \"PRBMath: overflow\""
																	},
																	"value": "PRBMath: overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238",
																		"typeString": "literal_string \"PRBMath: overflow\""
																	}
																],
																"id": 1270,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1938:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1938:49:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1276,
														"nodeType": "ExpressionStatement",
														"src": "1938:49:8"
													},
													{
														"assignments": [
															1278
														],
														"declarations": [
															{
																"constant": false,
																"id": 1278,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2257:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1363,
																"src": "2249:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2249:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1279,
														"nodeType": "VariableDeclarationStatement",
														"src": "2249:17:8"
													},
													{
														"AST": {
															"nativeSrc": "2290:179:8",
															"nodeType": "YulBlock",
															"src": "2290:179:8",
															"statements": [
																{
																	"nativeSrc": "2309:38:8",
																	"nodeType": "YulAssignment",
																	"src": "2309:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2329:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2332:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2332:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "2335:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "2335:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2322:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2322:6:8"
																		},
																		"nativeSrc": "2322:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "2309:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "2309:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2365:41:8",
																	"nodeType": "YulAssignment",
																	"src": "2365:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "2378:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "2388:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2388:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2399:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "2385:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2385:2:8"
																				},
																				"nativeSrc": "2385:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2385:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2374:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2374:3:8"
																		},
																		"nativeSrc": "2374:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2365:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2365:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2424:30:8",
																	"nodeType": "YulAssignment",
																	"src": "2424:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "2437:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2437:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "2444:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2433:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2433:3:8"
																		},
																		"nativeSrc": "2433:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2433:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2424:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2424:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1249,
																"isOffset": false,
																"isSlot": false,
																"src": "2335:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1255,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1255,
																"isOffset": false,
																"isSlot": false,
																"src": "2424:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1255,
																"isOffset": false,
																"isSlot": false,
																"src": "2437:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1258,
																"isOffset": false,
																"isSlot": false,
																"src": "2365:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1258,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1278,
																"isOffset": false,
																"isSlot": false,
																"src": "2309:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1278,
																"isOffset": false,
																"isSlot": false,
																"src": "2388:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1278,
																"isOffset": false,
																"isSlot": false,
																"src": "2444:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1247,
																"isOffset": false,
																"isSlot": false,
																"src": "2332:1:8",
																"valueSize": 1
															}
														],
														"id": 1280,
														"nodeType": "InlineAssembly",
														"src": "2281:188:8"
													},
													{
														"assignments": [
															1282
														],
														"declarations": [
															{
																"constant": false,
																"id": 1282,
																"mutability": "mutable",
																"name": "lpotdod",
																"nameLocation": "2590:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1363,
																"src": "2582:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2582:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1290,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1283,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "2600:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "2615:12:8",
																			"subExpression": {
																				"id": 1284,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "2616:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2630:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2615:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2614:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2600:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2582:50:8"
													},
													{
														"AST": {
															"nativeSrc": "2656:186:8",
															"nodeType": "YulBlock",
															"src": "2656:186:8",
															"statements": [
																{
																	"nativeSrc": "2675:40:8",
																	"nodeType": "YulAssignment",
																	"src": "2675:40:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "2694:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "2694:11:8"
																			},
																			{
																				"name": "lpotdod",
																				"nativeSrc": "2707:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2707:7:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2690:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2690:3:8"
																		},
																		"nativeSrc": "2690:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2690:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "2675:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "2675:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2733:28:8",
																	"nodeType": "YulAssignment",
																	"src": "2733:28:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "2746:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2746:5:8"
																			},
																			{
																				"name": "lpotdod",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2742:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:8"
																		},
																		"nativeSrc": "2742:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2742:19:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2733:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2733:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2779:48:8",
																	"nodeType": "YulAssignment",
																	"src": "2779:48:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2802:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2802:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "lpotdod",
																								"nativeSrc": "2805:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "2805:7:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2798:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2798:3:8"
																						},
																						"nativeSrc": "2798:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2798:15:8"
																					},
																					{
																						"name": "lpotdod",
																						"nativeSrc": "2815:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "2815:7:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "2794:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2794:3:8"
																				},
																				"nativeSrc": "2794:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2794:29:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2825:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2825:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2790:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:8"
																		},
																		"nativeSrc": "2790:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:37:8"
																	},
																	"variableNames": [
																		{
																			"name": "lpotdod",
																			"nativeSrc": "2779:7:8",
																			"nodeType": "YulIdentifier",
																			"src": "2779:7:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1249,
																"isOffset": false,
																"isSlot": false,
																"src": "2675:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1249,
																"isOffset": false,
																"isSlot": false,
																"src": "2694:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1282,
																"isOffset": false,
																"isSlot": false,
																"src": "2707:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1282,
																"isOffset": false,
																"isSlot": false,
																"src": "2753:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1282,
																"isOffset": false,
																"isSlot": false,
																"src": "2779:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1282,
																"isOffset": false,
																"isSlot": false,
																"src": "2805:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1282,
																"isOffset": false,
																"isSlot": false,
																"src": "2815:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1255,
																"isOffset": false,
																"isSlot": false,
																"src": "2733:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1255,
																"isOffset": false,
																"isSlot": false,
																"src": "2746:5:8",
																"valueSize": 1
															}
														],
														"id": 1291,
														"nodeType": "InlineAssembly",
														"src": "2647:195:8"
													},
													{
														"expression": {
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1292,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "2910:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1293,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "2919:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1294,
																	"name": "lpotdod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "2927:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2919:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2910:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1297,
														"nodeType": "ExpressionStatement",
														"src": "2910:24:8"
													},
													{
														"assignments": [
															1299
														],
														"declarations": [
															{
																"constant": false,
																"id": 1299,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "3008:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1363,
																"src": "3000:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1298,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3000:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1306,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3019:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1301,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1249,
																			"src": "3023:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3019:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1303,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3018:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3038:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3018:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3000:39:8"
													},
													{
														"expression": {
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1307,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3054:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3065:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1309,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "3069:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1310,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "3083:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3069:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3065:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3054:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1314,
														"nodeType": "ExpressionStatement",
														"src": "3054:36:8"
													},
													{
														"expression": {
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1315,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3124:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3135:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1317,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "3139:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1318,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "3153:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3139:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3135:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3124:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1322,
														"nodeType": "ExpressionStatement",
														"src": "3124:36:8"
													},
													{
														"expression": {
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1323,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3195:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3206:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1325,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "3210:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1326,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "3224:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3210:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3206:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3195:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1330,
														"nodeType": "ExpressionStatement",
														"src": "3195:36:8"
													},
													{
														"expression": {
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1331,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3266:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3277:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1333,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "3281:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1334,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "3295:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3281:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3277:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3266:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1338,
														"nodeType": "ExpressionStatement",
														"src": "3266:36:8"
													},
													{
														"expression": {
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1339,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3337:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3348:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1341,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "3352:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1342,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "3366:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3352:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3348:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3337:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1346,
														"nodeType": "ExpressionStatement",
														"src": "3337:36:8"
													},
													{
														"expression": {
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1347,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "3409:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3420:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1349,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "3424:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1350,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "3438:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3424:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3420:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3409:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1354,
														"nodeType": "ExpressionStatement",
														"src": "3409:36:8"
													},
													{
														"expression": {
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1355,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "3483:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1356,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "3492:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1357,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1299,
																	"src": "3500:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3492:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3483:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1360,
														"nodeType": "ExpressionStatement",
														"src": "3483:24:8"
													},
													{
														"expression": {
															"id": 1361,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "3529:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1253,
														"id": 1362,
														"nodeType": "Return",
														"src": "3522:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "1003:160:8",
										"text": "@notice Calculates floor(a × b ÷ denominator) with full precision.\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1178:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1203:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1195:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1223:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1215:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1243:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1235:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:77:8"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1293:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "1285:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:16:8"
									},
									"scope": 1403,
									"src": "1169:2385:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "3719:47:8",
										"statements": [
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1375,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "3730:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1377,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "3746:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1378,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "3749:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1379,
																"name": "SCALE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "3752:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1376,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "3739:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3730:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "3730:28:8"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "3562:64:8",
										"text": "@notice Calculates floor(x * y / SCALE) with full precision."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivFixedPoint",
									"nameLocation": "3641:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3666:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "3658:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3677:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "3669:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:22:8"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3711:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "3703:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3703:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3702:16:8"
									},
									"scope": 1403,
									"src": "3632:134:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "3942:52:8",
										"statements": [
											{
												"expression": {
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1392,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "3953:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1393,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "3963:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1394,
																		"name": "HALF_SCALE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "3967:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3963:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1396,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3962:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1397,
															"name": "SCALE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "3981:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3962:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3953:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "3953:33:8"
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "3774:97:8",
										"text": "@notice Rounds x to the nearest integer. If the fractional part is 0.5 or more, it rounds up."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "round",
									"nameLocation": "3886:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3900:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3892:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3891:11:8"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3934:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "3926:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:16:8"
									},
									"scope": 1403,
									"src": "3877:117:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1404,
							"src": "215:3782:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:3966:8"
				},
				"id": 8
			},
			"src/lib/Position.sol": {
				"ast": {
					"absolutePath": "src/lib/Position.sol",
					"exportedSymbols": {
						"Position": [
							1466
						]
					},
					"id": 1467,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Position",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1466,
							"linearizedBaseContracts": [
								1466
							],
							"name": "Position",
							"nameLocation": "71:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Position.Info",
									"id": 1408,
									"members": [
										{
											"constant": false,
											"id": 1407,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "116:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1408,
											"src": "108:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1406,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "108:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nameLocation": "93:4:9",
									"nodeType": "StructDefinition",
									"scope": 1466,
									"src": "86:46:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "332:112:9",
										"statements": [
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1425,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "342:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1426,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "353:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 1435,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1430,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "398:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1431,
																			"name": "lowerTick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1417,
																			"src": "405:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"id": 1432,
																			"name": "upperTick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "416:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"expression": {
																			"id": 1428,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "381:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "385:12:9",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "381:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "381:45:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1427,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "371:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "371:56:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "353:84:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1408_storage",
															"typeString": "struct Position.Info storage ref"
														}
													},
													"src": "342:95:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "342:95:9"
											}
										]
									},
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "147:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "193:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "160:37:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$",
													"typeString": "mapping(bytes32 => struct Position.Info)"
												},
												"typeName": {
													"id": 1412,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1409,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "168:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Mapping",
													"src": "160:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1408_storage_$",
														"typeString": "mapping(bytes32 => struct Position.Info)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1411,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1410,
															"name": "Info",
															"nameLocations": [
																"179:4:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1408,
															"src": "179:4:9"
														},
														"referencedDeclaration": 1408,
														"src": "179:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
															"typeString": "struct Position.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "215:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "207:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "lowerTick",
												"nameLocation": "236:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "230:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1416,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "230:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "upperTick",
												"nameLocation": "261:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "255:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1418,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "255:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:126:9"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "322:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "300:30:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 1422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1421,
														"name": "Position.Info",
														"nameLocations": [
															"300:8:9",
															"309:4:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1408,
														"src": "300:13:9"
													},
													"referencedDeclaration": 1408,
													"src": "300:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:32:9"
									},
									"scope": 1466,
									"src": "138:306:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "518:166:9",
										"statements": [
											{
												"assignments": [
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "liquidityBefore",
														"nameLocation": "536:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "528:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1447,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "528:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1451,
												"initialValue": {
													"expression": {
														"id": 1449,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "554:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "559:9:9",
													"memberName": "liquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1407,
													"src": "554:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "528:40:9"
											},
											{
												"assignments": [
													1453
												],
												"declarations": [
													{
														"constant": false,
														"id": 1453,
														"mutability": "mutable",
														"name": "liquidityAfter",
														"nameLocation": "586:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "578:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1452,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "578:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1457,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1454,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "603:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1455,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "621:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "603:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "578:57:9"
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1458,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "646:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "651:9:9",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1407,
														"src": "646:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1461,
														"name": "liquidityAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "663:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "646:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "646:31:9"
											}
										]
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "459:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "479:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "466:17:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 1441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1440,
														"name": "Info",
														"nameLocations": [
															"466:4:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1408,
														"src": "466:4:9"
													},
													"referencedDeclaration": 1408,
													"src": "466:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1408_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nameLocation": "493:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "485:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1443,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:43:9"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:0:9"
									},
									"scope": 1466,
									"src": "450:234:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1467,
							"src": "63:623:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:650:9"
				},
				"id": 9
			},
			"src/lib/Tick.sol": {
				"ast": {
					"absolutePath": "src/lib/Tick.sol",
					"exportedSymbols": {
						"Tick": [
							1538
						]
					},
					"id": 1539,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Tick",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "Tick",
							"nameLocation": "71:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Tick.Info",
									"id": 1473,
									"members": [
										{
											"constant": false,
											"id": 1470,
											"mutability": "mutable",
											"name": "initialized",
											"nameLocation": "109:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1473,
											"src": "104:16:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1469,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "104:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1472,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "138:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1473,
											"src": "130:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1471,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "130:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nameLocation": "89:4:10",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "82:72:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "316:379:10",
										"statements": [
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "tickInfo",
														"nameLocation": "344:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1536,
														"src": "326:26:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1473_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 1490,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1489,
																"name": "Tick.Info",
																"nameLocations": [
																	"326:4:10",
																	"331:4:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1473,
																"src": "326:9:10"
															},
															"referencedDeclaration": 1473,
															"src": "326:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1473_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"baseExpression": {
														"id": 1492,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "355:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 1494,
													"indexExpression": {
														"id": 1493,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "360:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "355:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1473_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "326:39:10"
											},
											{
												"assignments": [
													1497
												],
												"declarations": [
													{
														"constant": false,
														"id": 1497,
														"mutability": "mutable",
														"name": "liquidityBefore",
														"nameLocation": "383:15:10",
														"nodeType": "VariableDeclaration",
														"scope": 1536,
														"src": "375:23:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1496,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "375:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1500,
												"initialValue": {
													"expression": {
														"id": 1498,
														"name": "tickInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "401:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1473_storage_ptr",
															"typeString": "struct Tick.Info storage pointer"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "410:9:10",
													"memberName": "liquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1472,
													"src": "401:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "375:44:10"
											},
											{
												"assignments": [
													1502
												],
												"declarations": [
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "liquidityAfter",
														"nameLocation": "437:14:10",
														"nodeType": "VariableDeclaration",
														"scope": 1536,
														"src": "429:22:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1501,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "429:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1503,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "454:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1504,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "472:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "454:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "429:57:10"
											},
											{
												"expression": {
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1507,
														"name": "flipped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "497:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1508,
																		"name": "liquidityAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1502,
																		"src": "508:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "526:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "508:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1511,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "507:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1512,
																		"name": "liquidityBefore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "533:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "552:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "533:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1515,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "532:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "507:47:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "497:57:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"nodeType": "ExpressionStatement",
												"src": "497:57:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "569:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "588:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "569:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1529,
												"nodeType": "IfStatement",
												"src": "565:78:10",
												"trueBody": {
													"id": 1528,
													"nodeType": "Block",
													"src": "591:52:10",
													"statements": [
														{
															"expression": {
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1522,
																		"name": "tickInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "605:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$1473_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "614:11:10",
																	"memberName": "initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1470,
																	"src": "605:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "628:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "605:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1527,
															"nodeType": "ExpressionStatement",
															"src": "605:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1530,
															"name": "tickInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "653:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1473_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "662:9:10",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1472,
														"src": "653:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1533,
														"name": "liquidityAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "674:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "653:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "653:35:10"
											}
										]
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "169:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "221:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "185:40:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 1477,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1474,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "193:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "185:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1473_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1476,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1475,
															"name": "Tick.Info",
															"nameLocations": [
																"202:4:10",
																"207:4:10"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1473,
															"src": "202:9:10"
														},
														"referencedDeclaration": 1473,
														"src": "202:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1473_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "241:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "235:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1479,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "235:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nameLocation": "263:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "255:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1481,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:108:10"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "flipped",
												"nameLocation": "307:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "302:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "302:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:14:10"
									},
									"scope": 1538,
									"src": "160:535:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1539,
							"src": "63:634:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:661:10"
				},
				"id": 10
			},
			"src/lib/TickBitmap.sol": {
				"ast": {
					"absolutePath": "src/lib/TickBitmap.sol",
					"exportedSymbols": {
						"BitMath": [
							935
						],
						"TickBitmap": [
							1811
						]
					},
					"id": 1812,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1540,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:11"
						},
						{
							"absolutePath": "src/lib/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 1541,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1812,
							"sourceUnit": 936,
							"src": "63:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickBitmap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1542,
								"nodeType": "StructuredDocumentation",
								"src": "88:243:11",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 1811,
							"linearizedBaseContracts": [
								1811
							],
							"name": "TickBitmap",
							"nameLocation": "339:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "767:87:11",
										"statements": [
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1552,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "777:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1555,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "793:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "801:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "793:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "787:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 1553,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "787:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "787:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "777:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "777:26:11"
											},
											{
												"expression": {
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1561,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "813:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1566,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1545,
																			"src": "835:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "323536",
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "842:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"src": "835:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "828:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 1564,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "828:6:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "828:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "822:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 1562,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "822:5:11",
																"typeDescriptions": {}
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "822:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "813:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "813:34:11"
											}
										]
									},
									"documentation": {
										"id": 1543,
										"nodeType": "StructuredDocumentation",
										"src": "356:325:11",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nameLocation": "695:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "710:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "704:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1544,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "704:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:12:11"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "744:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "738:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1547,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "738:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "bitPos",
												"nameLocation": "759:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "753:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1549,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "753:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:29:11"
									},
									"scope": 1811,
									"src": "686:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "1238:220:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1587,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "1256:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1588,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "1263:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1256:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1278:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1256:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1593,
												"nodeType": "ExpressionStatement",
												"src": "1248:32:11"
											},
											{
												"assignments": [
													1595,
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "wordPos",
														"nameLocation": "1331:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1616,
														"src": "1325:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 1594,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "1325:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "bitPos",
														"nameLocation": "1346:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1616,
														"src": "1340:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1596,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1340:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1603,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1599,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1581,
																"src": "1365:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1600,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1583,
																"src": "1372:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1365:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 1598,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "1356:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1356:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:60:11"
											},
											{
												"assignments": [
													1605
												],
												"declarations": [
													{
														"constant": false,
														"id": 1605,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "1402:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1616,
														"src": "1394:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1394:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1609,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1409:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1607,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "1414:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1409:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1394:26:11"
											},
											{
												"expression": {
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1610,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "1430:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 1612,
														"indexExpression": {
															"id": 1611,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "1435:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1430:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 1613,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "1447:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1430:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1615,
												"nodeType": "ExpressionStatement",
												"src": "1430:21:11"
											}
										]
									},
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "860:245:11",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nameLocation": "1119:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1171:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "1137:38:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 1578,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1576,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1145:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "1137:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1577,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1154:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1191:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "1185:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1580,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1185:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1211:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "1205:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1582,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1205:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:101:11"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1238:0:11"
									},
									"scope": 1811,
									"src": "1110:348:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "2410:1743:11",
										"statements": [
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "compressed",
														"nameLocation": "2426:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "2420:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1635,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2420:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1637,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "2439:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1638,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "2446:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2439:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2420:37:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1641,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "2471:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2471:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1644,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "2483:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1645,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "2490:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2483:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2505:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2483:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2471:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1653,
												"nodeType": "IfStatement",
												"src": "2467:53:11",
												"trueBody": {
													"expression": {
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "2508:12:11",
														"subExpression": {
															"id": 1650,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "2508:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 1652,
													"nodeType": "ExpressionStatement",
													"src": "2508:12:11"
												}
											},
											{
												"condition": {
													"id": 1654,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1628,
													"src": "2570:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1807,
													"nodeType": "Block",
													"src": "3313:834:11",
													"statements": [
														{
															"assignments": [
																1727,
																1729
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1727,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nameLocation": "3431:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1807,
																	"src": "3425:13:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 1726,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "3425:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1729,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nameLocation": "3446:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1807,
																	"src": "3440:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3440:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1735,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1731,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "3465:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3478:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3465:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1730,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "3456:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3456:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3424:56:11"
														},
														{
															"assignments": [
																1737
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1737,
																	"mutability": "mutable",
																	"name": "mask",
																	"nameLocation": "3560:4:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1807,
																	"src": "3552:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1736,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1746,
															"initialValue": {
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "3567:20:11",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1740,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1738,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3570:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1739,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1729,
																							"src": "3575:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3570:11:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1741,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3569:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3585:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3569:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1744,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3568:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3552:35:11"
														},
														{
															"assignments": [
																1748
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1748,
																	"mutability": "mutable",
																	"name": "masked",
																	"nameLocation": "3609:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1807,
																	"src": "3601:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1747,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1754,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1749,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "3618:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 1751,
																	"indexExpression": {
																		"id": 1750,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "3623:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3618:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1752,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "3634:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3618:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3601:37:11"
														},
														{
															"expression": {
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1755,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "3763:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1756,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "3777:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3787:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3777:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3763:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1760,
															"nodeType": "ExpressionStatement",
															"src": "3763:25:11"
														},
														{
															"expression": {
																"id": 1805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1761,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "3912:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 1762,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "3919:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1800,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 1785,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1783,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1636,
																							"src": "4063:10:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1784,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4076:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4063:14:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 1796,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"expression": {
																														"arguments": [
																															{
																																"id": 1792,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"lValueRequested": false,
																																"nodeType": "ElementaryTypeNameExpression",
																																"src": "4099:5:11",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_type$_t_uint8_$",
																																	"typeString": "type(uint8)"
																																},
																																"typeName": {
																																	"id": 1791,
																																	"name": "uint8",
																																	"nodeType": "ElementaryTypeName",
																																	"src": "4099:5:11",
																																	"typeDescriptions": {}
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_type$_t_uint8_$",
																																	"typeString": "type(uint8)"
																																}
																															],
																															"id": 1790,
																															"name": "type",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 4294967269,
																															"src": "4094:4:11",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																																"typeString": "function () pure"
																															}
																														},
																														"id": 1793,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"nameLocations": [],
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "4094:11:11",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_magic_meta_type_t_uint8",
																															"typeString": "type(uint8)"
																														}
																													},
																													"id": 1794,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"memberLocation": "4106:3:11",
																													"memberName": "max",
																													"nodeType": "MemberAccess",
																													"src": "4094:15:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"id": 1795,
																													"name": "bitPos",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1729,
																													"src": "4112:6:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "4094:24:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"id": 1797,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "4093:26:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 1789,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4086:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 1788,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "4086:6:11",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1798,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4086:34:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 1787,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4080:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1786,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4080:5:11",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1799,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4080:41:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4063:58:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1801,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4062:60:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1802,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "4125:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4062:74:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3919:217:11",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1779,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 1765,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1763,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1636,
																							"src": "3950:10:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1764,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3963:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3950:14:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 1775,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"arguments": [
																														{
																															"id": 1772,
																															"name": "masked",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1748,
																															"src": "4009:6:11",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"expression": {
																														"argumentTypes": [
																															{
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														],
																														"expression": {
																															"id": 1770,
																															"name": "BitMath",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 935,
																															"src": "3981:7:11",
																															"typeDescriptions": {
																																"typeIdentifier": "t_type$_t_contract$_BitMath_$935_$",
																																"typeString": "type(library BitMath)"
																															}
																														},
																														"id": 1771,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "3989:19:11",
																														"memberName": "leastSignificantBit",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 934,
																														"src": "3981:27:11",
																														"typeDescriptions": {
																															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																															"typeString": "function (uint256) pure returns (uint8)"
																														}
																													},
																													"id": 1773,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"kind": "functionCall",
																													"lValueRequested": false,
																													"nameLocations": [],
																													"names": [],
																													"nodeType": "FunctionCall",
																													"src": "3981:35:11",
																													"tryCall": false,
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"id": 1774,
																													"name": "bitPos",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1729,
																													"src": "4019:6:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "3981:44:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"id": 1776,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "3980:46:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 1769,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3973:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 1768,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3973:6:11",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1777,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3973:54:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 1767,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3967:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1766,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3967:5:11",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1778,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3967:61:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3950:78:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1780,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3949:80:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1781,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "4032:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3949:94:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3912:224:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1806,
															"nodeType": "ExpressionStatement",
															"src": "3912:224:11"
														}
													]
												},
												"id": 1808,
												"nodeType": "IfStatement",
												"src": "2566:1581:11",
												"trueBody": {
													"id": 1725,
													"nodeType": "Block",
													"src": "2575:732:11",
													"statements": [
														{
															"assignments": [
																1656,
																1658
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1656,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nameLocation": "2596:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "2590:13:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 1655,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "2590:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1658,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nameLocation": "2611:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "2605:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1657,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2605:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1662,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1660,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "2630:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1659,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "2621:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2621:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2589:52:11"
														},
														{
															"assignments": [
																1664
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1664,
																	"mutability": "mutable",
																	"name": "mask",
																	"nameLocation": "2730:4:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "2722:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1663,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2722:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1676,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1665,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2738:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1666,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1658,
																					"src": "2743:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2738:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1668,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2737:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2753:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2737:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2758:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1672,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1658,
																				"src": "2763:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2758:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1674,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2757:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2737:33:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2722:48:11"
														},
														{
															"assignments": [
																1678
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1678,
																	"mutability": "mutable",
																	"name": "masked",
																	"nameLocation": "2792:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1725,
																	"src": "2784:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1677,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2784:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1684,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1679,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "2801:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 1681,
																	"indexExpression": {
																		"id": 1680,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1656,
																		"src": "2806:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2801:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1682,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "2817:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2801:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2784:37:11"
														},
														{
															"expression": {
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1685,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "2954:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1686,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1678,
																		"src": "2968:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2978:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2968:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2954:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1690,
															"nodeType": "ExpressionStatement",
															"src": "2954:25:11"
														},
														{
															"expression": {
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1691,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "3103:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 1692,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "3110:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1718,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1710,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1636,
																						"src": "3247:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1715,
																										"name": "bitPos",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1658,
																										"src": "3273:6:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 1714,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3266:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 1713,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3266:6:11",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1716,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3266:14:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 1712,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3260:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1711,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3260:5:11",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1717,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3260:21:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3247:34:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1719,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3246:36:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1720,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "3285:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3246:50:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3110:186:11",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1706,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1693,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1636,
																						"src": "3141:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 1703,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 1698,
																											"name": "bitPos",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1658,
																											"src": "3167:6:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"arguments": [
																												{
																													"id": 1701,
																													"name": "masked",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1678,
																													"src": "3203:6:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"id": 1699,
																													"name": "BitMath",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 935,
																													"src": "3176:7:11",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_contract$_BitMath_$935_$",
																														"typeString": "type(library BitMath)"
																													}
																												},
																												"id": 1700,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "3184:18:11",
																												"memberName": "mostSignificantBit",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 773,
																												"src": "3176:26:11",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																													"typeString": "function (uint256) pure returns (uint8)"
																												}
																											},
																											"id": 1702,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "3176:34:11",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "3167:43:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 1697,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3160:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 1696,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3160:6:11",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1704,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3160:51:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 1695,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3154:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1694,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3154:5:11",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1705,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3154:58:11",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3141:71:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1707,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3140:73:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1708,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "3216:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3140:87:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3103:193:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1724,
															"nodeType": "ExpressionStatement",
															"src": "3103:193:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "1464:727:11",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nameLocation": "2205:32:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2281:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2247:38:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 1621,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1619,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "2255:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "2247:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1620,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2264:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "2301:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2295:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1623,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2295:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "2321:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2315:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1625,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2315:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "lte",
												"nameLocation": "2347:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2342:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:119:11"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "next",
												"nameLocation": "2386:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2380:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1630,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2380:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "2397:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "2392:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2392:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2379:30:11"
									},
									"scope": 1811,
									"src": "2196:1957:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1812,
							"src": "331:3824:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:4118:11"
				},
				"id": 11
			},
			"src/lib/TickMath.sol": {
				"ast": {
					"absolutePath": "src/lib/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							2349
						]
					},
					"id": 2350,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1813,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1814,
								"nodeType": "StructuredDocumentation",
								"src": "71:235:12",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 2349,
							"linearizedBaseContracts": [
								2349
							],
							"name": "TickMath",
							"nameLocation": "314:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "329:108:12",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 1819,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "466:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 2349,
									"src": "442:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1816,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "442:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1818,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "477:7:12",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 1817,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "478:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "490:107:12",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 1824,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "626:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 2349,
									"src": "602:44:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1821,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "602:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1823,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "637:9:12",
										"subExpression": {
											"id": 1822,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1819,
											"src": "638:8:12",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "653:116:12",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 1828,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nameLocation": "800:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2349,
									"src": "774:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1826,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "774:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 1827,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "817:10:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "833:116:12",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 1832,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nameLocation": "980:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2349,
									"src": "954:92:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1830,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "954:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 1831,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "997:49:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "1440:2503:12",
										"statements": [
											{
												"assignments": [
													1841
												],
												"declarations": [
													{
														"constant": false,
														"id": 1841,
														"mutability": "mutable",
														"name": "absTick",
														"nameLocation": "1458:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2208,
														"src": "1450:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1450:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1861,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1842,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "1468:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1475:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1468:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1857,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "1519:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1512:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1855,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1512:6:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1512:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1504:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1853,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1504:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1504:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1468:57:12",
													"trueExpression": {
														"arguments": [
															{
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1487:13:12",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1849,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1835,
																			"src": "1495:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1488:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1847,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1488:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1488:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1479:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1845,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1479:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1479:22:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:75:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1863,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "1543:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1868,
																				"name": "MAX_TICK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1824,
																				"src": "1569:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 1867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1562:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			},
																			"typeName": {
																				"id": 1866,
																				"name": "uint24",
																				"nodeType": "ElementaryTypeName",
																				"src": "1562:6:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1562:16:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1554:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1864,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1554:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1554:25:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1543:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1581:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 1862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1535:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "1535:50:12"
											},
											{
												"assignments": [
													1876
												],
												"declarations": [
													{
														"constant": false,
														"id": 1876,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1604:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2208,
														"src": "1596:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1875,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1596:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1885,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1877,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "1612:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1622:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1612:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1629:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1612:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 1883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1670:35:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1612:93:12",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1633:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1596:109:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1886,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "1719:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1729:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1719:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1736:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1719:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1900,
												"nodeType": "IfStatement",
												"src": "1715:83:12",
												"trueBody": {
													"expression": {
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1891,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "1739:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1892,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "1748:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1756:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1748:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1895,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1747:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1795:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1747:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1739:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1899,
													"nodeType": "ExpressionStatement",
													"src": "1739:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1901,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "1812:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1822:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1812:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1904,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1829:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1812:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1915,
												"nodeType": "IfStatement",
												"src": "1808:83:12",
												"trueBody": {
													"expression": {
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1906,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "1832:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1907,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "1841:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 1908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1849:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1841:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1910,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1840:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1888:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1840:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1832:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1914,
													"nodeType": "ExpressionStatement",
													"src": "1832:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1916,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "1905:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1915:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1905:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1922:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1905:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1930,
												"nodeType": "IfStatement",
												"src": "1901:83:12",
												"trueBody": {
													"expression": {
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1921,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "1925:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1922,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "1934:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 1923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1942:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1934:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1925,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1933:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1981:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1933:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1925:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1929,
													"nodeType": "ExpressionStatement",
													"src": "1925:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1931,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "1998:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2008:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1998:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2016:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1998:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1945,
												"nodeType": "IfStatement",
												"src": "1994:84:12",
												"trueBody": {
													"expression": {
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1936,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2019:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1937,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2028:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 1938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2036:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2028:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2075:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2027:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2019:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1944,
													"nodeType": "ExpressionStatement",
													"src": "2019:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1946,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2092:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2102:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2092:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2110:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2092:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1960,
												"nodeType": "IfStatement",
												"src": "2088:84:12",
												"trueBody": {
													"expression": {
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1951,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2113:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1952,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2122:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 1953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2130:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2122:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2121:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2169:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2121:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2113:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1959,
													"nodeType": "ExpressionStatement",
													"src": "2113:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1961,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2186:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2196:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2186:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2204:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2186:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1975,
												"nodeType": "IfStatement",
												"src": "2182:84:12",
												"trueBody": {
													"expression": {
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1966,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2207:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1967,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2216:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 1968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2224:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2216:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1970,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2215:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2263:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2215:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2207:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1974,
													"nodeType": "ExpressionStatement",
													"src": "2207:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1976,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2280:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2280:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2298:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2280:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1990,
												"nodeType": "IfStatement",
												"src": "2276:84:12",
												"trueBody": {
													"expression": {
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1981,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2301:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1982,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2310:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 1983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2318:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2310:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1985,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2309:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2357:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2309:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2301:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1989,
													"nodeType": "ExpressionStatement",
													"src": "2301:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1991,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2374:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2384:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2374:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2393:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2374:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2005,
												"nodeType": "IfStatement",
												"src": "2370:85:12",
												"trueBody": {
													"expression": {
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1996,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2396:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1997,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2405:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2000,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2404:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2452:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2404:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2396:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2004,
													"nodeType": "ExpressionStatement",
													"src": "2396:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2006,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2469:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2479:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2469:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2469:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2020,
												"nodeType": "IfStatement",
												"src": "2465:85:12",
												"trueBody": {
													"expression": {
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2011,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2491:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2012,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2500:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 2013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2508:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2500:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2015,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2499:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2547:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2499:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2491:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2019,
													"nodeType": "ExpressionStatement",
													"src": "2491:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2021,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2564:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2574:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2564:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2583:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2564:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2035,
												"nodeType": "IfStatement",
												"src": "2560:85:12",
												"trueBody": {
													"expression": {
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2026,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2586:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2027,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2595:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2603:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2595:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2594:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2642:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2594:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2586:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2034,
													"nodeType": "ExpressionStatement",
													"src": "2586:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2036,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2659:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2669:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2659:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2678:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2659:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2050,
												"nodeType": "IfStatement",
												"src": "2655:85:12",
												"trueBody": {
													"expression": {
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2041,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2681:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2042,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2690:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 2043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2698:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2690:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2045,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2689:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2737:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2689:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2681:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2049,
													"nodeType": "ExpressionStatement",
													"src": "2681:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2051,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2754:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2754:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2774:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2754:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2065,
												"nodeType": "IfStatement",
												"src": "2750:86:12",
												"trueBody": {
													"expression": {
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2056,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2777:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2057,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2786:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 2058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2794:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2786:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2060,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2785:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2833:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2785:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2777:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2064,
													"nodeType": "ExpressionStatement",
													"src": "2777:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2066,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2850:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2860:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2850:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2870:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2850:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2080,
												"nodeType": "IfStatement",
												"src": "2846:86:12",
												"trueBody": {
													"expression": {
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2071,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2873:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2072,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2882:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 2073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2890:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2882:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2881:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2929:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2881:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2873:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2079,
													"nodeType": "ExpressionStatement",
													"src": "2873:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2081,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "2946:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2956:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2946:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2966:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2946:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2095,
												"nodeType": "IfStatement",
												"src": "2942:86:12",
												"trueBody": {
													"expression": {
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2086,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "2969:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2087,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "2978:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 2088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2986:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2978:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2977:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3025:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2977:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2969:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2094,
													"nodeType": "ExpressionStatement",
													"src": "2969:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2096,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "3042:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 2097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3052:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3042:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3062:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3042:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2110,
												"nodeType": "IfStatement",
												"src": "3038:86:12",
												"trueBody": {
													"expression": {
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2101,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "3065:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2102,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "3074:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3082:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3074:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3073:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3121:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3073:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3065:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2109,
													"nodeType": "ExpressionStatement",
													"src": "3065:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2111,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "3138:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3148:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3138:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3159:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3138:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2125,
												"nodeType": "IfStatement",
												"src": "3134:86:12",
												"trueBody": {
													"expression": {
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2116,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "3162:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2117,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "3171:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 2118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3179:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3171:41:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2120,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3170:43:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3217:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3170:50:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3162:58:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2124,
													"nodeType": "ExpressionStatement",
													"src": "3162:58:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2126,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "3234:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3244:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3234:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3255:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3234:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2140,
												"nodeType": "IfStatement",
												"src": "3230:85:12",
												"trueBody": {
													"expression": {
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2131,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "3258:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2132,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "3267:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 2133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3275:32:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3267:40:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2135,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3266:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3312:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3266:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3258:57:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2139,
													"nodeType": "ExpressionStatement",
													"src": "3258:57:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2141,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "3329:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3339:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3329:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3350:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3329:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2155,
												"nodeType": "IfStatement",
												"src": "3325:83:12",
												"trueBody": {
													"expression": {
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2146,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "3353:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2147,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "3362:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3370:30:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3362:38:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3361:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3405:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3361:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3353:55:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2154,
													"nodeType": "ExpressionStatement",
													"src": "3353:55:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2156,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "3422:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3432:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3422:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3443:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3422:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2170,
												"nodeType": "IfStatement",
												"src": "3418:78:12",
												"trueBody": {
													"expression": {
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2161,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "3446:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2162,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "3455:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 2163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3463:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3455:33:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2165,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3454:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3493:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3454:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3446:50:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2169,
													"nodeType": "ExpressionStatement",
													"src": "3446:50:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2171,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "3511:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3518:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3511:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2184,
												"nodeType": "IfStatement",
												"src": "3507:47:12",
												"trueBody": {
													"expression": {
														"id": 2182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2174,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "3521:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3534:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2176,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3534:7:12",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2175,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3529:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3529:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3543:3:12",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3529:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2180,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "3549:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3529:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3521:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2183,
													"nodeType": "ExpressionStatement",
													"src": "3521:33:12"
												}
											},
											{
												"expression": {
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2185,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "3864:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2188,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1876,
																				"src": "3888:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2189,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3897:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3888:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2191,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3887:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2197,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2192,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1876,
																						"src": "3904:5:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 2195,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 2193,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3913:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 2194,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3918:2:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3913:7:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 2196,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3912:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3904:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2198,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3925:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3904:22:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 2201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3933:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3904:30:12",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 2200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3929:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 2203,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3903:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3887:48:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3879:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 2186,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3879:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3879:57:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3864:72:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 2207,
												"nodeType": "ExpressionStatement",
												"src": "3864:72:12"
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "1053:297:12",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1364:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1389:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "1383:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1834,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1383:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:12:12"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1426:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "1418:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1837,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:22:12"
									},
									"scope": 2349,
									"src": "1355:2588:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2347,
										"nodeType": "Block",
										"src": "4447:4196:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2218,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "4564:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2219,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "4580:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4564:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2221,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "4598:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2222,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "4613:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4598:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4564:63:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4629:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 2217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4556:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4556:77:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "4556:77:12"
											},
											{
												"assignments": [
													2229
												],
												"declarations": [
													{
														"constant": false,
														"id": 2229,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "4651:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2347,
														"src": "4643:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4643:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2236,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2232,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "4667:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4659:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2230,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4659:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4659:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4684:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4659:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4643:43:12"
											},
											{
												"assignments": [
													2238
												],
												"declarations": [
													{
														"constant": false,
														"id": 2238,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4705:1:12",
														"nodeType": "VariableDeclaration",
														"scope": 2347,
														"src": "4697:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4697:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2240,
												"initialValue": {
													"id": 2239,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2229,
													"src": "4709:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4697:17:12"
											},
											{
												"assignments": [
													2242
												],
												"declarations": [
													{
														"constant": false,
														"id": 2242,
														"mutability": "mutable",
														"name": "msb",
														"nameLocation": "4732:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 2347,
														"src": "4724:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4724:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2244,
												"initialValue": {
													"hexValue": "30",
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4738:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4724:15:12"
											},
											{
												"AST": {
													"nativeSrc": "4759:139:12",
													"nodeType": "YulBlock",
													"src": "4759:139:12",
													"statements": [
														{
															"nativeSrc": "4773:58:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4773:58:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4786:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4786:1:12",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "4792:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4792:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4795:34:12",
																				"nodeType": "YulLiteral",
																				"src": "4795:34:12",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4789:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:12"
																		},
																		"nativeSrc": "4789:41:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4789:41:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4782:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4782:3:12"
																},
																"nativeSrc": "4782:49:12",
																"nodeType": "YulFunctionCall",
																"src": "4782:49:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "4777:1:12",
																	"nodeType": "YulTypedName",
																	"src": "4777:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4844:17:12",
															"nodeType": "YulAssignment",
															"src": "4844:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "4854:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4854:3:12"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "4859:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4859:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4851:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4851:2:12"
																},
																"nativeSrc": "4851:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4851:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "4844:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:12"
																}
															]
														},
														{
															"nativeSrc": "4874:14:12",
															"nodeType": "YulAssignment",
															"src": "4874:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "4883:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4883:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "4886:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4886:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4879:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:12"
																},
																"nativeSrc": "4879:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4879:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4874:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "4874:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "4844:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "4854:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "4792:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "4874:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "4886:1:12",
														"valueSize": 1
													}
												],
												"id": 2245,
												"nodeType": "InlineAssembly",
												"src": "4750:148:12"
											},
											{
												"AST": {
													"nativeSrc": "4916:123:12",
													"nodeType": "YulBlock",
													"src": "4916:123:12",
													"statements": [
														{
															"nativeSrc": "4930:42:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4930:42:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4943:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4943:1:12",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "4949:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4949:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4952:18:12",
																				"nodeType": "YulLiteral",
																				"src": "4952:18:12",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4946:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4946:2:12"
																		},
																		"nativeSrc": "4946:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4946:25:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4939:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:12"
																},
																"nativeSrc": "4939:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4939:33:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "4934:1:12",
																	"nodeType": "YulTypedName",
																	"src": "4934:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4985:17:12",
															"nodeType": "YulAssignment",
															"src": "4985:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "4995:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4995:3:12"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5000:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5000:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4992:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:12"
																},
																"nativeSrc": "4992:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4992:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "4985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:12"
																}
															]
														},
														{
															"nativeSrc": "5015:14:12",
															"nodeType": "YulAssignment",
															"src": "5015:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5024:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5024:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5027:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5020:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:12"
																},
																"nativeSrc": "5020:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5020:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5015:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5015:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "4985:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "4995:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "4949:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5015:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5027:1:12",
														"valueSize": 1
													}
												],
												"id": 2246,
												"nodeType": "InlineAssembly",
												"src": "4907:132:12"
											},
											{
												"AST": {
													"nativeSrc": "5057:115:12",
													"nodeType": "YulBlock",
													"src": "5057:115:12",
													"statements": [
														{
															"nativeSrc": "5071:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5071:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5084:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5084:1:12",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5090:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5090:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5093:10:12",
																				"nodeType": "YulLiteral",
																				"src": "5093:10:12",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5087:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5087:2:12"
																		},
																		"nativeSrc": "5087:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5087:17:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5080:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:12"
																},
																"nativeSrc": "5080:25:12",
																"nodeType": "YulFunctionCall",
																"src": "5080:25:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5075:1:12",
																	"nodeType": "YulTypedName",
																	"src": "5075:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5118:17:12",
															"nodeType": "YulAssignment",
															"src": "5118:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5128:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5128:3:12"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5133:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5133:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5125:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5125:2:12"
																},
																"nativeSrc": "5125:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5125:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5118:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:12"
																}
															]
														},
														{
															"nativeSrc": "5148:14:12",
															"nodeType": "YulAssignment",
															"src": "5148:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5157:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5157:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5160:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5160:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5153:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5153:3:12"
																},
																"nativeSrc": "5153:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5153:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5148:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5148:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5118:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5128:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5090:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5148:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5160:1:12",
														"valueSize": 1
													}
												],
												"id": 2247,
												"nodeType": "InlineAssembly",
												"src": "5048:124:12"
											},
											{
												"AST": {
													"nativeSrc": "5190:111:12",
													"nodeType": "YulBlock",
													"src": "5190:111:12",
													"statements": [
														{
															"nativeSrc": "5204:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5204:30:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5217:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5217:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5223:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5223:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5226:6:12",
																				"nodeType": "YulLiteral",
																				"src": "5226:6:12",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5220:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5220:2:12"
																		},
																		"nativeSrc": "5220:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5220:13:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5213:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:12"
																},
																"nativeSrc": "5213:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5213:21:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5208:1:12",
																	"nodeType": "YulTypedName",
																	"src": "5208:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5247:17:12",
															"nodeType": "YulAssignment",
															"src": "5247:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5257:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5257:3:12"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5262:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5262:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5254:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5254:2:12"
																},
																"nativeSrc": "5254:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5254:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5247:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5247:3:12"
																}
															]
														},
														{
															"nativeSrc": "5277:14:12",
															"nodeType": "YulAssignment",
															"src": "5277:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5286:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5286:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5289:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5289:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5282:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:12"
																},
																"nativeSrc": "5282:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5282:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5277:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5277:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5247:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5257:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5223:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5277:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5289:1:12",
														"valueSize": 1
													}
												],
												"id": 2248,
												"nodeType": "InlineAssembly",
												"src": "5181:120:12"
											},
											{
												"AST": {
													"nativeSrc": "5319:109:12",
													"nodeType": "YulBlock",
													"src": "5319:109:12",
													"statements": [
														{
															"nativeSrc": "5333:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5333:28:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5346:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5346:1:12",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5352:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5352:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5355:4:12",
																				"nodeType": "YulLiteral",
																				"src": "5355:4:12",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5349:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5349:2:12"
																		},
																		"nativeSrc": "5349:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5349:11:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5342:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:12"
																},
																"nativeSrc": "5342:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5342:19:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5337:1:12",
																	"nodeType": "YulTypedName",
																	"src": "5337:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5374:17:12",
															"nodeType": "YulAssignment",
															"src": "5374:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5384:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5384:3:12"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5389:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5389:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5381:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5381:2:12"
																},
																"nativeSrc": "5381:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5381:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5374:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:12"
																}
															]
														},
														{
															"nativeSrc": "5404:14:12",
															"nodeType": "YulAssignment",
															"src": "5404:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5413:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5413:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5416:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5416:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5409:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:12"
																},
																"nativeSrc": "5409:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5409:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5404:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5404:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5374:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5384:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5352:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5404:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5416:1:12",
														"valueSize": 1
													}
												],
												"id": 2249,
												"nodeType": "InlineAssembly",
												"src": "5310:118:12"
											},
											{
												"AST": {
													"nativeSrc": "5446:108:12",
													"nodeType": "YulBlock",
													"src": "5446:108:12",
													"statements": [
														{
															"nativeSrc": "5460:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5460:27:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5473:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5473:1:12",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5479:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5479:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5482:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5482:3:12",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5476:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5476:2:12"
																		},
																		"nativeSrc": "5476:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5476:10:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5469:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:12"
																},
																"nativeSrc": "5469:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5469:18:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5464:1:12",
																	"nodeType": "YulTypedName",
																	"src": "5464:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5500:17:12",
															"nodeType": "YulAssignment",
															"src": "5500:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5510:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5510:3:12"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5515:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5515:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5507:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5507:2:12"
																},
																"nativeSrc": "5507:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5507:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5500:3:12"
																}
															]
														},
														{
															"nativeSrc": "5530:14:12",
															"nodeType": "YulAssignment",
															"src": "5530:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5539:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5539:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5542:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5542:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5535:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:12"
																},
																"nativeSrc": "5535:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5535:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5530:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5530:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5500:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5510:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5479:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5530:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5542:1:12",
														"valueSize": 1
													}
												],
												"id": 2250,
												"nodeType": "InlineAssembly",
												"src": "5437:117:12"
											},
											{
												"AST": {
													"nativeSrc": "5572:108:12",
													"nodeType": "YulBlock",
													"src": "5572:108:12",
													"statements": [
														{
															"nativeSrc": "5586:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5586:27:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5599:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5599:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5605:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5605:1:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5608:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5608:3:12",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5602:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5602:2:12"
																		},
																		"nativeSrc": "5602:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:10:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5595:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:12"
																},
																"nativeSrc": "5595:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5595:18:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5590:1:12",
																	"nodeType": "YulTypedName",
																	"src": "5590:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5626:17:12",
															"nodeType": "YulAssignment",
															"src": "5626:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5636:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5636:3:12"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5641:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5641:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5633:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5633:2:12"
																},
																"nativeSrc": "5633:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5633:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5626:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:12"
																}
															]
														},
														{
															"nativeSrc": "5656:14:12",
															"nodeType": "YulAssignment",
															"src": "5656:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5665:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5665:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5668:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5668:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5661:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:12"
																},
																"nativeSrc": "5661:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5661:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5656:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5656:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5626:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5636:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5605:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5656:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5668:1:12",
														"valueSize": 1
													}
												],
												"id": 2251,
												"nodeType": "InlineAssembly",
												"src": "5563:117:12"
											},
											{
												"AST": {
													"nativeSrc": "5698:73:12",
													"nodeType": "YulBlock",
													"src": "5698:73:12",
													"statements": [
														{
															"nativeSrc": "5712:19:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5712:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "5724:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5724:1:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5727:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5727:3:12",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5721:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5721:2:12"
																},
																"nativeSrc": "5721:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5721:10:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5716:1:12",
																	"nodeType": "YulTypedName",
																	"src": "5716:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5744:17:12",
															"nodeType": "YulAssignment",
															"src": "5744:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5754:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5754:3:12"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5759:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5759:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5751:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5751:2:12"
																},
																"nativeSrc": "5751:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5751:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5744:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5744:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2242,
														"isOffset": false,
														"isSlot": false,
														"src": "5754:3:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5724:1:12",
														"valueSize": 1
													}
												],
												"id": 2252,
												"nodeType": "InlineAssembly",
												"src": "5689:82:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2253,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "5785:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 2254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5792:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5785:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 2272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2265,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "5836:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2266,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "5840:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5850:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2268,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2242,
																			"src": "5856:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5850:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2270,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5849:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5840:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5836:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2273,
													"nodeType": "ExpressionStatement",
													"src": "5836:24:12"
												},
												"id": 2274,
												"nodeType": "IfStatement",
												"src": "5781:79:12",
												"trueBody": {
													"expression": {
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2256,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "5797:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2257,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2229,
																"src": "5801:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2258,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2242,
																			"src": "5811:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5817:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5811:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5810:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5801:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5797:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2264,
													"nodeType": "ExpressionStatement",
													"src": "5797:24:12"
												}
											},
											{
												"assignments": [
													2276
												],
												"declarations": [
													{
														"constant": false,
														"id": 2276,
														"mutability": "mutable",
														"name": "log_2",
														"nameLocation": "5878:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2347,
														"src": "5871:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2275,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5871:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2286,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2279,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2242,
																			"src": "5894:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5887:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2277,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5887:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5887:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5901:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5887:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2283,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5886:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 2284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5909:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5886:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5871:40:12"
											},
											{
												"AST": {
													"nativeSrc": "5931:151:12",
													"nodeType": "YulBlock",
													"src": "5931:151:12",
													"statements": [
														{
															"nativeSrc": "5945:24:12",
															"nodeType": "YulAssignment",
															"src": "5945:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5954:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5954:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5963:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5963:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "5966:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5966:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5959:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:12"
																		},
																		"nativeSrc": "5959:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5959:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5950:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:12"
																},
																"nativeSrc": "5950:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5950:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5945:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5945:1:12"
																}
															]
														},
														{
															"nativeSrc": "5982:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5982:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5995:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5995:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6000:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6000:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5991:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5991:3:12"
																},
																"nativeSrc": "5991:11:12",
																"nodeType": "YulFunctionCall",
																"src": "5991:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5986:1:12",
																	"nodeType": "YulTypedName",
																	"src": "5986:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6015:30:12",
															"nodeType": "YulAssignment",
															"src": "6015:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6027:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6027:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6038:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6038:2:12",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6042:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6042:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6034:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:12"
																		},
																		"nativeSrc": "6034:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6034:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6024:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6024:2:12"
																},
																"nativeSrc": "6024:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6024:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6015:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6015:5:12"
																}
															]
														},
														{
															"nativeSrc": "6058:14:12",
															"nodeType": "YulAssignment",
															"src": "6058:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6067:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6067:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6070:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6070:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6063:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6063:3:12"
																},
																"nativeSrc": "6063:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6063:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6058:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6058:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6015:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6027:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5945:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5963:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "5966:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6000:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6058:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6070:1:12",
														"valueSize": 1
													}
												],
												"id": 2287,
												"nodeType": "InlineAssembly",
												"src": "5922:160:12"
											},
											{
												"AST": {
													"nativeSrc": "6100:151:12",
													"nodeType": "YulBlock",
													"src": "6100:151:12",
													"statements": [
														{
															"nativeSrc": "6114:24:12",
															"nodeType": "YulAssignment",
															"src": "6114:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6123:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6123:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6132:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6132:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6135:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6135:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6128:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6128:3:12"
																		},
																		"nativeSrc": "6128:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6128:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6119:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6119:3:12"
																},
																"nativeSrc": "6119:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6119:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6114:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6114:1:12"
																}
															]
														},
														{
															"nativeSrc": "6151:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6151:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6164:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6164:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6169:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6169:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6160:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:12"
																},
																"nativeSrc": "6160:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6160:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6155:1:12",
																	"nodeType": "YulTypedName",
																	"src": "6155:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6184:30:12",
															"nodeType": "YulAssignment",
															"src": "6184:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6196:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6196:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6207:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:12",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6211:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6211:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6203:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6203:3:12"
																		},
																		"nativeSrc": "6203:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6203:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6193:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6193:2:12"
																},
																"nativeSrc": "6193:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6193:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6184:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6184:5:12"
																}
															]
														},
														{
															"nativeSrc": "6227:14:12",
															"nodeType": "YulAssignment",
															"src": "6227:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6236:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6236:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6239:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6239:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6232:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6232:3:12"
																},
																"nativeSrc": "6232:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6232:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6227:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6227:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6184:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6196:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6114:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6132:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6135:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6169:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6227:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6239:1:12",
														"valueSize": 1
													}
												],
												"id": 2288,
												"nodeType": "InlineAssembly",
												"src": "6091:160:12"
											},
											{
												"AST": {
													"nativeSrc": "6269:151:12",
													"nodeType": "YulBlock",
													"src": "6269:151:12",
													"statements": [
														{
															"nativeSrc": "6283:24:12",
															"nodeType": "YulAssignment",
															"src": "6283:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6292:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6292:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6301:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6301:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6304:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6304:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6297:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:12"
																		},
																		"nativeSrc": "6297:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6297:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6288:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:12"
																},
																"nativeSrc": "6288:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6288:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6283:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6283:1:12"
																}
															]
														},
														{
															"nativeSrc": "6320:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6320:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6333:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6333:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6338:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6338:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6329:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:12"
																},
																"nativeSrc": "6329:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6329:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6324:1:12",
																	"nodeType": "YulTypedName",
																	"src": "6324:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6353:30:12",
															"nodeType": "YulAssignment",
															"src": "6353:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6365:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6365:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6376:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6376:2:12",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6380:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6380:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6372:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:12"
																		},
																		"nativeSrc": "6372:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6372:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6362:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6362:2:12"
																},
																"nativeSrc": "6362:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6362:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6353:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:12"
																}
															]
														},
														{
															"nativeSrc": "6396:14:12",
															"nodeType": "YulAssignment",
															"src": "6396:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6405:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6405:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6408:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6408:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6401:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6401:3:12"
																},
																"nativeSrc": "6401:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6401:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6396:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6396:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6353:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6365:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6283:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6301:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6304:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6338:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6396:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6408:1:12",
														"valueSize": 1
													}
												],
												"id": 2289,
												"nodeType": "InlineAssembly",
												"src": "6260:160:12"
											},
											{
												"AST": {
													"nativeSrc": "6438:151:12",
													"nodeType": "YulBlock",
													"src": "6438:151:12",
													"statements": [
														{
															"nativeSrc": "6452:24:12",
															"nodeType": "YulAssignment",
															"src": "6452:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6461:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6461:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6470:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6470:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6473:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6473:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:12"
																		},
																		"nativeSrc": "6466:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6466:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6457:3:12"
																},
																"nativeSrc": "6457:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6457:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6452:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6452:1:12"
																}
															]
														},
														{
															"nativeSrc": "6489:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6489:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6502:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6502:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6507:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6507:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:12"
																},
																"nativeSrc": "6498:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6498:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6493:1:12",
																	"nodeType": "YulTypedName",
																	"src": "6493:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6522:30:12",
															"nodeType": "YulAssignment",
															"src": "6522:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6534:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6534:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6545:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6545:2:12",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6549:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6549:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6541:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:12"
																		},
																		"nativeSrc": "6541:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6541:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6531:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6531:2:12"
																},
																"nativeSrc": "6531:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6531:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6522:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6522:5:12"
																}
															]
														},
														{
															"nativeSrc": "6565:14:12",
															"nodeType": "YulAssignment",
															"src": "6565:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6574:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6574:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6577:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6577:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6570:3:12"
																},
																"nativeSrc": "6570:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6570:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6565:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6565:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6522:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6534:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6452:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6470:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6473:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6507:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6565:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6577:1:12",
														"valueSize": 1
													}
												],
												"id": 2290,
												"nodeType": "InlineAssembly",
												"src": "6429:160:12"
											},
											{
												"AST": {
													"nativeSrc": "6607:151:12",
													"nodeType": "YulBlock",
													"src": "6607:151:12",
													"statements": [
														{
															"nativeSrc": "6621:24:12",
															"nodeType": "YulAssignment",
															"src": "6621:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6630:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6630:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6639:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6639:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6642:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6642:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6635:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:12"
																		},
																		"nativeSrc": "6635:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6626:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:12"
																},
																"nativeSrc": "6626:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6626:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6621:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6621:1:12"
																}
															]
														},
														{
															"nativeSrc": "6658:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6658:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6671:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6671:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6676:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6676:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6667:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6667:3:12"
																},
																"nativeSrc": "6667:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6667:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6662:1:12",
																	"nodeType": "YulTypedName",
																	"src": "6662:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6691:30:12",
															"nodeType": "YulAssignment",
															"src": "6691:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6703:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6703:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6714:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6714:2:12",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6718:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6718:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6710:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:12"
																		},
																		"nativeSrc": "6710:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6710:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6700:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6700:2:12"
																},
																"nativeSrc": "6700:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6700:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6691:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6691:5:12"
																}
															]
														},
														{
															"nativeSrc": "6734:14:12",
															"nodeType": "YulAssignment",
															"src": "6734:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6743:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6743:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6746:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6746:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6739:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6739:3:12"
																},
																"nativeSrc": "6739:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6739:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6734:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6734:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6691:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6703:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6621:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6639:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6642:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6676:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6734:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6746:1:12",
														"valueSize": 1
													}
												],
												"id": 2291,
												"nodeType": "InlineAssembly",
												"src": "6598:160:12"
											},
											{
												"AST": {
													"nativeSrc": "6776:151:12",
													"nodeType": "YulBlock",
													"src": "6776:151:12",
													"statements": [
														{
															"nativeSrc": "6790:24:12",
															"nodeType": "YulAssignment",
															"src": "6790:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6799:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6799:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6808:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6808:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6811:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6811:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6804:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:12"
																		},
																		"nativeSrc": "6804:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6804:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6795:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6795:3:12"
																},
																"nativeSrc": "6795:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6795:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6790:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6790:1:12"
																}
															]
														},
														{
															"nativeSrc": "6827:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6827:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6840:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6840:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6845:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6845:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6836:3:12"
																},
																"nativeSrc": "6836:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6836:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6831:1:12",
																	"nodeType": "YulTypedName",
																	"src": "6831:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6860:30:12",
															"nodeType": "YulAssignment",
															"src": "6860:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6872:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6872:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6883:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6883:2:12",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6887:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6887:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6879:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:12"
																		},
																		"nativeSrc": "6879:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6879:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6869:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:12"
																},
																"nativeSrc": "6869:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6869:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6860:5:12"
																}
															]
														},
														{
															"nativeSrc": "6903:14:12",
															"nodeType": "YulAssignment",
															"src": "6903:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6912:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6912:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6915:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6915:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6908:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:12"
																},
																"nativeSrc": "6908:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6908:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6903:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6903:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6860:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "6872:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6790:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6808:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6811:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6845:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6903:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6915:1:12",
														"valueSize": 1
													}
												],
												"id": 2292,
												"nodeType": "InlineAssembly",
												"src": "6767:160:12"
											},
											{
												"AST": {
													"nativeSrc": "6945:151:12",
													"nodeType": "YulBlock",
													"src": "6945:151:12",
													"statements": [
														{
															"nativeSrc": "6959:24:12",
															"nodeType": "YulAssignment",
															"src": "6959:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6968:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6968:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6977:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6977:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6980:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "6980:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6973:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:12"
																		},
																		"nativeSrc": "6973:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6973:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6964:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6964:3:12"
																},
																"nativeSrc": "6964:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6964:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6959:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6959:1:12"
																}
															]
														},
														{
															"nativeSrc": "6996:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6996:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7009:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7009:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7014:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7014:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7005:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7005:3:12"
																},
																"nativeSrc": "7005:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7005:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7000:1:12",
																	"nodeType": "YulTypedName",
																	"src": "7000:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7029:30:12",
															"nodeType": "YulAssignment",
															"src": "7029:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7041:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7041:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7052:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7052:2:12",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7056:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7056:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7048:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7048:3:12"
																		},
																		"nativeSrc": "7048:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7048:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7038:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7038:2:12"
																},
																"nativeSrc": "7038:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7038:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7029:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7029:5:12"
																}
															]
														},
														{
															"nativeSrc": "7072:14:12",
															"nodeType": "YulAssignment",
															"src": "7072:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7081:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7081:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7084:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7084:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7077:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:12"
																},
																"nativeSrc": "7077:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7077:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7072:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7072:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7029:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7041:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6959:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6977:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "6980:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7014:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7072:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7084:1:12",
														"valueSize": 1
													}
												],
												"id": 2293,
												"nodeType": "InlineAssembly",
												"src": "6936:160:12"
											},
											{
												"AST": {
													"nativeSrc": "7114:151:12",
													"nodeType": "YulBlock",
													"src": "7114:151:12",
													"statements": [
														{
															"nativeSrc": "7128:24:12",
															"nodeType": "YulAssignment",
															"src": "7128:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7137:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7137:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7146:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7146:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7149:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7149:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7142:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:12"
																		},
																		"nativeSrc": "7142:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7142:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7133:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:12"
																},
																"nativeSrc": "7133:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7133:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7128:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7128:1:12"
																}
															]
														},
														{
															"nativeSrc": "7165:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7165:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7178:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7178:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7183:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7183:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7174:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:12"
																},
																"nativeSrc": "7174:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7174:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7169:1:12",
																	"nodeType": "YulTypedName",
																	"src": "7169:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7198:30:12",
															"nodeType": "YulAssignment",
															"src": "7198:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7210:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7210:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7221:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7221:2:12",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7225:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7225:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7217:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7217:3:12"
																		},
																		"nativeSrc": "7217:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7217:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7207:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7207:2:12"
																},
																"nativeSrc": "7207:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7207:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7198:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7198:5:12"
																}
															]
														},
														{
															"nativeSrc": "7241:14:12",
															"nodeType": "YulAssignment",
															"src": "7241:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7250:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7250:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7253:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7253:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7246:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7246:3:12"
																},
																"nativeSrc": "7246:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7246:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7241:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7241:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7198:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7210:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7128:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7146:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7149:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7183:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7241:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7253:1:12",
														"valueSize": 1
													}
												],
												"id": 2294,
												"nodeType": "InlineAssembly",
												"src": "7105:160:12"
											},
											{
												"AST": {
													"nativeSrc": "7283:151:12",
													"nodeType": "YulBlock",
													"src": "7283:151:12",
													"statements": [
														{
															"nativeSrc": "7297:24:12",
															"nodeType": "YulAssignment",
															"src": "7297:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7306:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7306:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7315:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7315:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7318:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7318:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7311:3:12"
																		},
																		"nativeSrc": "7311:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7311:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7302:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:12"
																},
																"nativeSrc": "7302:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7302:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7297:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7297:1:12"
																}
															]
														},
														{
															"nativeSrc": "7334:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7334:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7347:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7347:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7352:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7352:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7343:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7343:3:12"
																},
																"nativeSrc": "7343:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7343:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7338:1:12",
																	"nodeType": "YulTypedName",
																	"src": "7338:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7367:30:12",
															"nodeType": "YulAssignment",
															"src": "7367:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7379:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7379:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7390:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:12",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7394:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7394:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7386:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:12"
																		},
																		"nativeSrc": "7386:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7386:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7376:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7376:2:12"
																},
																"nativeSrc": "7376:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7376:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7367:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7367:5:12"
																}
															]
														},
														{
															"nativeSrc": "7410:14:12",
															"nodeType": "YulAssignment",
															"src": "7410:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7419:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7419:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7422:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7422:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7415:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:12"
																},
																"nativeSrc": "7415:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7415:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7410:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7410:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7367:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7379:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7297:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7315:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7318:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7352:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7410:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7422:1:12",
														"valueSize": 1
													}
												],
												"id": 2295,
												"nodeType": "InlineAssembly",
												"src": "7274:160:12"
											},
											{
												"AST": {
													"nativeSrc": "7452:151:12",
													"nodeType": "YulBlock",
													"src": "7452:151:12",
													"statements": [
														{
															"nativeSrc": "7466:24:12",
															"nodeType": "YulAssignment",
															"src": "7466:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7475:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7475:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7484:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7484:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7487:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7487:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7480:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7480:3:12"
																		},
																		"nativeSrc": "7480:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7480:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7471:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:12"
																},
																"nativeSrc": "7471:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7471:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7466:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7466:1:12"
																}
															]
														},
														{
															"nativeSrc": "7503:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7503:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7516:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7516:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7521:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7521:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7512:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:12"
																},
																"nativeSrc": "7512:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7512:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7507:1:12",
																	"nodeType": "YulTypedName",
																	"src": "7507:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7536:30:12",
															"nodeType": "YulAssignment",
															"src": "7536:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7548:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7548:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7559:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7559:2:12",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7563:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7563:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7555:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:12"
																		},
																		"nativeSrc": "7555:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7555:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7545:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:12"
																},
																"nativeSrc": "7545:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7545:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7536:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7536:5:12"
																}
															]
														},
														{
															"nativeSrc": "7579:14:12",
															"nodeType": "YulAssignment",
															"src": "7579:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7588:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7588:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7591:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7591:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7584:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:12"
																},
																"nativeSrc": "7584:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7584:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7579:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7579:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7536:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7548:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7466:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7484:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7487:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7521:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7579:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7591:1:12",
														"valueSize": 1
													}
												],
												"id": 2296,
												"nodeType": "InlineAssembly",
												"src": "7443:160:12"
											},
											{
												"AST": {
													"nativeSrc": "7621:151:12",
													"nodeType": "YulBlock",
													"src": "7621:151:12",
													"statements": [
														{
															"nativeSrc": "7635:24:12",
															"nodeType": "YulAssignment",
															"src": "7635:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7644:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7644:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7653:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7653:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7656:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7656:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7649:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7649:3:12"
																		},
																		"nativeSrc": "7649:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7649:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:12"
																},
																"nativeSrc": "7640:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7640:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7635:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7635:1:12"
																}
															]
														},
														{
															"nativeSrc": "7672:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7672:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7685:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7685:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7690:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7690:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:12"
																},
																"nativeSrc": "7681:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7681:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7676:1:12",
																	"nodeType": "YulTypedName",
																	"src": "7676:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7705:30:12",
															"nodeType": "YulAssignment",
															"src": "7705:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7717:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7717:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7728:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7728:2:12",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7732:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7732:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7724:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:12"
																		},
																		"nativeSrc": "7724:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7724:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7714:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7714:2:12"
																},
																"nativeSrc": "7714:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7714:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7705:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7705:5:12"
																}
															]
														},
														{
															"nativeSrc": "7748:14:12",
															"nodeType": "YulAssignment",
															"src": "7748:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7757:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7757:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7760:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7760:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7753:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7753:3:12"
																},
																"nativeSrc": "7753:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7753:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7748:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7748:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7705:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7717:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7635:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7653:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7656:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7690:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7748:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7760:1:12",
														"valueSize": 1
													}
												],
												"id": 2297,
												"nodeType": "InlineAssembly",
												"src": "7612:160:12"
											},
											{
												"AST": {
													"nativeSrc": "7790:151:12",
													"nodeType": "YulBlock",
													"src": "7790:151:12",
													"statements": [
														{
															"nativeSrc": "7804:24:12",
															"nodeType": "YulAssignment",
															"src": "7804:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7813:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7813:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7822:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7822:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7825:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7825:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7818:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7818:3:12"
																		},
																		"nativeSrc": "7818:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7818:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7809:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:12"
																},
																"nativeSrc": "7809:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7809:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7804:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7804:1:12"
																}
															]
														},
														{
															"nativeSrc": "7841:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7841:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7854:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7854:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7859:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7859:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7850:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7850:3:12"
																},
																"nativeSrc": "7850:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7850:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7845:1:12",
																	"nodeType": "YulTypedName",
																	"src": "7845:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7874:30:12",
															"nodeType": "YulAssignment",
															"src": "7874:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7886:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7886:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7897:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7897:2:12",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7901:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7901:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7893:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:12"
																		},
																		"nativeSrc": "7893:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7883:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7883:2:12"
																},
																"nativeSrc": "7883:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7883:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7874:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7874:5:12"
																}
															]
														},
														{
															"nativeSrc": "7917:14:12",
															"nodeType": "YulAssignment",
															"src": "7917:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7926:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7926:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7929:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7929:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7922:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:12"
																},
																"nativeSrc": "7922:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7922:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7917:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7917:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7874:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "7886:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7804:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7822:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7825:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7859:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7917:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7929:1:12",
														"valueSize": 1
													}
												],
												"id": 2298,
												"nodeType": "InlineAssembly",
												"src": "7781:160:12"
											},
											{
												"AST": {
													"nativeSrc": "7959:151:12",
													"nodeType": "YulBlock",
													"src": "7959:151:12",
													"statements": [
														{
															"nativeSrc": "7973:24:12",
															"nodeType": "YulAssignment",
															"src": "7973:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7982:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7982:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7991:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7991:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7994:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "7994:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7987:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7987:3:12"
																		},
																		"nativeSrc": "7987:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7987:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7978:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7978:3:12"
																},
																"nativeSrc": "7978:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7978:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7973:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7973:1:12"
																}
															]
														},
														{
															"nativeSrc": "8010:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8010:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8023:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8023:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8028:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8028:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8019:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:12"
																},
																"nativeSrc": "8019:11:12",
																"nodeType": "YulFunctionCall",
																"src": "8019:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "8014:1:12",
																	"nodeType": "YulTypedName",
																	"src": "8014:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8043:30:12",
															"nodeType": "YulAssignment",
															"src": "8043:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "8055:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8055:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8066:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8066:2:12",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "8070:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "8070:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8062:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8062:3:12"
																		},
																		"nativeSrc": "8062:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8062:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8052:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8052:2:12"
																},
																"nativeSrc": "8052:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8052:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "8043:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8043:5:12"
																}
															]
														},
														{
															"nativeSrc": "8086:14:12",
															"nodeType": "YulAssignment",
															"src": "8086:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "8095:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8095:1:12"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8098:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8098:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8091:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:12"
																},
																"nativeSrc": "8091:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8091:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8086:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8086:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "8043:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "8055:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7973:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7991:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "7994:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "8028:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "8086:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "8098:1:12",
														"valueSize": 1
													}
												],
												"id": 2299,
												"nodeType": "InlineAssembly",
												"src": "7950:160:12"
											},
											{
												"AST": {
													"nativeSrc": "8128:124:12",
													"nodeType": "YulBlock",
													"src": "8128:124:12",
													"statements": [
														{
															"nativeSrc": "8142:24:12",
															"nodeType": "YulAssignment",
															"src": "8142:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8151:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8151:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "8160:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "8160:1:12"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8163:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "8163:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8156:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:12"
																		},
																		"nativeSrc": "8156:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8156:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8147:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:12"
																},
																"nativeSrc": "8147:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8147:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8142:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8142:1:12"
																}
															]
														},
														{
															"nativeSrc": "8179:20:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8179:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8192:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8192:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8197:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8197:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8188:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:12"
																},
																"nativeSrc": "8188:11:12",
																"nodeType": "YulFunctionCall",
																"src": "8188:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "8183:1:12",
																	"nodeType": "YulTypedName",
																	"src": "8183:1:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8212:30:12",
															"nodeType": "YulAssignment",
															"src": "8212:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "8224:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8224:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8235:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8235:2:12",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "8239:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "8239:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8231:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:12"
																		},
																		"nativeSrc": "8231:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8231:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8221:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8221:2:12"
																},
																"nativeSrc": "8221:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8221:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "8212:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8212:5:12"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "8212:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2276,
														"isOffset": false,
														"isSlot": false,
														"src": "8224:5:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "8142:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "8160:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "8163:1:12",
														"valueSize": 1
													},
													{
														"declaration": 2238,
														"isOffset": false,
														"isSlot": false,
														"src": "8197:1:12",
														"valueSize": 1
													}
												],
												"id": 2300,
												"nodeType": "InlineAssembly",
												"src": "8119:133:12"
											},
											{
												"assignments": [
													2302
												],
												"declarations": [
													{
														"constant": false,
														"id": 2302,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nameLocation": "8269:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 2347,
														"src": "8262:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2301,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8262:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2306,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2303,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "8285:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 2304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8293:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8285:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8262:55:12"
											},
											{
												"assignments": [
													2308
												],
												"declarations": [
													{
														"constant": false,
														"id": 2308,
														"mutability": "mutable",
														"name": "tickLow",
														"nameLocation": "8352:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2347,
														"src": "8346:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2307,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8346:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2318,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2311,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "8369:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8385:37:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8369:53:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2314,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8368:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8427:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8368:62:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8362:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2309,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8362:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8362:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8346:85:12"
											},
											{
												"assignments": [
													2320
												],
												"declarations": [
													{
														"constant": false,
														"id": 2320,
														"mutability": "mutable",
														"name": "tickHi",
														"nameLocation": "8447:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2347,
														"src": "8441:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2319,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8441:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2330,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2323,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "8463:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8479:39:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8463:55:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8462:57:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8523:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8462:64:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2322,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8456:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2321,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8456:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8456:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8441:86:12"
											},
											{
												"expression": {
													"id": 2345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2331,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "8538:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2332,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "8545:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2333,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "8556:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8545:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2337,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "8594:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2336,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2209,
																		"src": "8575:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 2338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8575:26:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2339,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "8605:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8575:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 2342,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2308,
																"src": "8629:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8575:61:12",
															"trueExpression": {
																"id": 2341,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "8620:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 2344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8545:91:12",
														"trueExpression": {
															"id": 2335,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2308,
															"src": "8565:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8538:98:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2346,
												"nodeType": "ExpressionStatement",
												"src": "8538:98:12"
											}
										]
									},
									"documentation": {
										"id": 2210,
										"nodeType": "StructuredDocumentation",
										"src": "3949:408:12",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 2348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nameLocation": "4371:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4398:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "4390:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2211,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4390:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4389:22:12"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4441:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "4435:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2214,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4435:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4434:12:12"
									},
									"scope": 2349,
									"src": "4362:4281:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2350,
							"src": "306:8339:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:8600:12"
				},
				"id": 12
			}
		}
	}
}