{
	"id": "43e95a7cdfc5302a513e4121f1d74cdd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/UniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\nimport \"./lib/Math.sol\";\r\nimport \"./lib/Position.sol\";\r\nimport \"./lib/Tick.sol\";\r\nimport \"./lib/TickBitmap.sol\";\r\nimport \"./lib/TickMath.sol\";\r\nimport \"./lib/SwapMath.sol\";\r\nimport \"./interfaces/callback/IUniswapV3MintCallback.sol\";\r\nimport \"./interfaces/callback/IUniswapV3SwapCallback.sol\";\r\nimport \"./interfaces/pool/IUniswapV3PoolEvents.sol\";\r\nimport \"./interfaces/IERC20.sol\";\r\n\r\ncontract UniswapV3Pool is \r\n    IUniswapV3PoolEvents\r\n{\r\n    using Tick for mapping(int24 => Tick.Info);\r\n    using Position for mapping(bytes32 => Position.Info);\r\n    using Position for Position.Info;\r\n    using TickBitmap for mapping(int16 => uint256);\r\n\r\n    int24 internal constant MIN_TICK = -887272;\r\n    int24 internal constant MAX_TICK = -MIN_TICK;\r\n\r\n    error InvalidTickRange();\r\n    error ZeroLiquidity();\r\n    error InsufficientInputAmount();\r\n\r\n    // 池子代币，不可变\r\n    address public immutable token0;\r\n    address public immutable token1;\r\n\r\n    // 打包一起读取的变量\r\n    struct Slot0 {\r\n        // 当前 sqrt(P)\r\n        uint160 sqrtPriceX96;\r\n        // 当前 tick\r\n        int24 tick;\r\n    }\r\n    Slot0 public slot0;\r\n\r\n    // 流动性数量，L。\r\n    uint128 public liquidity;\r\n\r\n    // Ticks 信息\r\n    mapping(int24 => Tick.Info) public ticks;\r\n    // Ticks 位图\r\n    mapping(int16 => uint256) public tickBitmap;\r\n    // 头寸信息\r\n    mapping(bytes32 => Position.Info) public positions;\r\n\r\n    struct SwapState {\r\n        uint256 amountSpecifiedRemaining;\r\n        uint256 amountCalculated;\r\n        uint160 sqrtPriceX96;\r\n        int24 tick;\r\n    }\r\n\r\n    struct StepState {\r\n        uint160 sqrtPriceStartX96;\r\n        int24 nextTick;\r\n        uint160 sqrtPriceNextX96;\r\n        uint256 amountIn;\r\n        uint256 amountOut;\r\n    }\r\n\r\n    //构造函数\r\n    constructor(\r\n        address token0_,\r\n        address token1_,\r\n        uint160 sqrtPriceX96,\r\n        int24 tick\r\n    ) {\r\n        // ticks[2];\r\n        token0 = token0_;\r\n        token1 = token1_;\r\n        slot0 = Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick});\r\n    }\r\n\r\n    //铸造\r\n    function mint(\r\n        address owner,\r\n        int24 lowerTick,\r\n        int24 upperTick,\r\n        uint128 amount,\r\n        bytes calldata data // <--- 新行\r\n    ) external returns (uint256 amount0, uint256 amount1) {\r\n        if (\r\n            lowerTick >= upperTick ||\r\n            lowerTick < MIN_TICK ||\r\n            upperTick > MAX_TICK\r\n        ) revert InvalidTickRange();\r\n        if (amount == 0) revert ZeroLiquidity();\r\n\r\n        bool flippedLower = ticks.update(lowerTick, amount);\r\n        bool flippedUpper = ticks.update(upperTick, amount);\r\n        if(flippedLower) {\r\n            tickBitmap.flipTick(lowerTick, 1);\r\n        }\r\n        if(flippedUpper) {\r\n            tickBitmap.flipTick(upperTick, 1);\r\n        }\r\n\r\n        Position.Info storage position = positions.get(\r\n            owner,\r\n            lowerTick,\r\n            upperTick\r\n        );\r\n        position.update(amount);\r\n\r\n        Slot0 memory slot0_ = slot0;\r\n\r\n        if (slot0_.tick < lowerTick) {\r\n            amount0 = Math.calcAmount0Delta(\r\n                TickMath.getSqrtRatioAtTick(lowerTick),\r\n                TickMath.getSqrtRatioAtTick(upperTick),\r\n                amount\r\n            );\r\n        } else if (slot0_.tick < upperTick) {\r\n            amount0 = Math.calcAmount0Delta(\r\n                slot0_.sqrtPriceX96,\r\n                TickMath.getSqrtRatioAtTick(upperTick),\r\n                amount\r\n            );\r\n            amount1 = Math.calcAmount1Delta(\r\n                slot0_.sqrtPriceX96,\r\n                TickMath.getSqrtRatioAtTick(lowerTick),\r\n                amount\r\n            );\r\n            liquidity += uint128(amount);\r\n        } else {\r\n            amount1 = Math.calcAmount1Delta(\r\n                TickMath.getSqrtRatioAtTick(lowerTick),\r\n                TickMath.getSqrtRatioAtTick(upperTick),\r\n                amount\r\n            );\r\n        }\r\n\r\n        uint256 balance0Before;\r\n        uint256 balance1Before;\r\n        if (amount0 > 0) balance0Before = balance0();\r\n        if (amount1 > 0) balance1Before = balance1();\r\n        IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback(\r\n            amount0,\r\n            amount1,\r\n            data\r\n        );\r\n        if (amount0 > 0 && balance0Before + amount0 > balance0())\r\n            revert InsufficientInputAmount();\r\n        if (amount1 > 0 && balance1Before + amount1 > balance1())\r\n            revert InsufficientInputAmount();\r\n        emit Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1);\r\n    }\r\n    \r\n    //交易代币\r\n    function swap(\r\n        address recipient,          //who get the coin\r\n        bool zeroForOne,            //swap direction\r\n        uint256 amountSpecified,    //amount of the coin to swap\r\n        bytes calldata data)\r\n        public returns (int256 amount0, int256 amount1)\r\n    {\r\n        Slot0 memory slot0_ = slot0;\r\n\r\n        SwapState memory state = SwapState({\r\n            amountSpecifiedRemaining: amountSpecified,\r\n            amountCalculated: 0,\r\n            sqrtPriceX96: slot0_.sqrtPriceX96,\r\n            tick: slot0_.tick\r\n        });\r\n\r\n        while (state.amountSpecifiedRemaining > 0) {\r\n            StepState memory step;\r\n            step.sqrtPriceStartX96 = state.sqrtPriceX96;\r\n            (step.nextTick, ) = tickBitmap.nextInitializedTickWithinOneWord(\r\n                state.tick,\r\n                1,\r\n                zeroForOne\r\n            );\r\n            step.sqrtPriceNextX96 = TickMath.getSqrtRatioAtTick(step.nextTick);\r\n            (state.sqrtPriceX96, step.amountIn, step.amountOut) = SwapMath\r\n                .computeSwapStep(\r\n                    state.sqrtPriceX96,\r\n                    step.sqrtPriceNextX96,\r\n                    liquidity,\r\n                    state.amountSpecifiedRemaining\r\n                );\r\n            state.amountSpecifiedRemaining -= step.amountIn;                //remain swap amount\r\n            state.amountCalculated += step.amountOut;                       //how many coin the user need paied\r\n            state.tick = TickMath.getTickAtSqrtRatio(state.sqrtPriceX96);   //upload tick by sqrtPriceX96\r\n        }\r\n        \r\n        if (state.tick != slot0_.tick) {\r\n            (slot0.sqrtPriceX96, slot0.tick) = (state.sqrtPriceX96, state.tick);\r\n        }\r\n\r\n        (amount0, amount1) = zeroForOne\r\n            ? (\r\n                int256(amountSpecified - state.amountSpecifiedRemaining),\r\n                -int256(state.amountCalculated)\r\n            )\r\n            : (\r\n                -int256(state.amountCalculated),\r\n                int256(amountSpecified - state.amountSpecifiedRemaining)\r\n            );\r\n\r\n        if (zeroForOne) {\r\n            IERC20(token1).transfer(recipient, uint256(-amount1));\r\n\r\n            uint256 balance0Before = balance0();\r\n            IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(\r\n                amount0,\r\n                amount1,\r\n                data\r\n            );\r\n            if (balance0Before + uint256(amount0) > balance0())\r\n                revert InsufficientInputAmount();\r\n        } else {\r\n            IERC20(token0).transfer(recipient, uint256(-amount0));\r\n\r\n            uint256 balance1Before = balance1();\r\n            IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(\r\n                amount0,\r\n                amount1,\r\n                data\r\n            );\r\n            if (balance1Before + uint256(amount1) > balance1())\r\n                revert InsufficientInputAmount();\r\n        }\r\n \r\n        emit Swap(\r\n            msg.sender,\r\n            recipient,\r\n            amount0,\r\n            amount1,\r\n            slot0.sqrtPriceX96,\r\n            liquidity,\r\n            slot0.tick\r\n        );\r\n    }\r\n\r\n    //代币0余额\r\n    function balance0() internal view returns (uint256 balance) {\r\n        balance = IERC20(token0).balanceOf(address(this));\r\n    }\r\n\r\n    //代币1余额\r\n    function balance1() internal view returns (uint256 balance) {\r\n        balance = IERC20(token1).balanceOf(address(this));\r\n    }\r\n\r\n}\r\n"
			},
			"src/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Minimal ERC20 interface for Uniswap\r\n/// @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3\r\ninterface IERC20 {\r\n    /// @notice Returns the balance of a token\r\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\r\n    /// @return The number of tokens held by the account\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\r\n    /// @param recipient The account that will receive the amount transferred\r\n    /// @param amount The number of tokens to send from the sender to the recipient\r\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /// @notice Returns the current allowance given to a spender by an owner\r\n    /// @param owner The account of the token owner\r\n    /// @param spender The account of the token spender\r\n    /// @return The current allowance granted by `owner` to `spender`\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\r\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\r\n    /// @param amount The amount of tokens allowed to be used by `spender`\r\n    /// @return Returns true for a successful approval, false for unsuccessful\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\r\n    /// @param sender The account from which the transfer will be initiated\r\n    /// @param recipient The recipient of the transfer\r\n    /// @param amount The amount of the transfer\r\n    /// @return Returns true for a successful transfer, false for unsuccessful\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\r\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\r\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\r\n    /// @param value The amount of tokens that were transferred\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\r\n    /// @param owner The account that approved spending of its tokens\r\n    /// @param spender The account for which the spending allowance was modified\r\n    /// @param value The new allowance from the owner to the spender\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Events emitted by a pool\r\n/// @notice Contains all events emitted by the pool\r\ninterface IUniswapV3PoolEvents {\r\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\r\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\r\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\r\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\r\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\r\n\r\n    /// @notice Emitted when liquidity is minted for a given position\r\n    /// @param sender The address that minted the liquidity\r\n    /// @param owner The owner of the position and recipient of any minted liquidity\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity minted to the position range\r\n    /// @param amount0 How much token0 was required for the minted liquidity\r\n    /// @param amount1 How much token1 was required for the minted liquidity\r\n    event Mint(\r\n        address sender,\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted when fees are collected by the owner of a position\r\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\r\n    /// @param owner The owner of the position for which fees are collected\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount0 The amount of token0 fees collected\r\n    /// @param amount1 The amount of token1 fees collected\r\n    event Collect(\r\n        address indexed owner,\r\n        address recipient,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount0,\r\n        uint128 amount1\r\n    );\r\n\r\n    /// @notice Emitted when a position's liquidity is removed\r\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\r\n    /// @param owner The owner of the position for which liquidity is removed\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity to remove\r\n    /// @param amount0 The amount of token0 withdrawn\r\n    /// @param amount1 The amount of token1 withdrawn\r\n    event Burn(\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any swaps between token0 and token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the output of the swap\r\n    /// @param amount0 The delta of the token0 balance of the pool\r\n    /// @param amount1 The delta of the token1 balance of the pool\r\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\r\n    /// @param liquidity The liquidity of the pool after the swap\r\n    /// @param tick The log base 1.0001 of price of the pool after the swap\r\n    event Swap(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        int256 amount0,\r\n        int256 amount1,\r\n        uint160 sqrtPriceX96,\r\n        uint128 liquidity,\r\n        int24 tick\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any flashes of token0/token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the tokens from flash\r\n    /// @param amount0 The amount of token0 that was flashed\r\n    /// @param amount1 The amount of token1 that was flashed\r\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\r\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\r\n    event Flash(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        uint256 paid0,\r\n        uint256 paid1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\r\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\r\n    /// just before a mint/swap/burn.\r\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\r\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\r\n    event IncreaseObservationCardinalityNext(\r\n        uint16 observationCardinalityNextOld,\r\n        uint16 observationCardinalityNextNew\r\n    );\r\n\r\n    /// @notice Emitted when the protocol fee is changed by the pool\r\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\r\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\r\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\r\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\r\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\r\n\r\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\r\n    /// @param sender The address that collects the protocol fees\r\n    /// @param recipient The address that receives the collected protocol fees\r\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\r\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\r\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\r\n}\r\n"
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#swap\r\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\r\ninterface IUniswapV3SwapCallback {\r\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\r\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\r\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\r\n    function uniswapV3SwapCallback(\r\n        int256 amount0Delta,\r\n        int256 amount1Delta,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#mint\r\n/// @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface\r\ninterface IUniswapV3MintCallback {\r\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\r\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\r\n    function uniswapV3MintCallback(\r\n        uint256 amount0Owed,\r\n        uint256 amount1Owed,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"src/lib/SwapMath.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nimport \"./Math.sol\";\n\nlibrary SwapMath {\n    function computeSwapStep(\n        uint160 sqrtPriceCurrentX96,\n        uint160 sqrtPriceTargetX96,\n        uint128 liquidity,\n        uint256 amountRemaining\n    )\n        internal\n        pure\n        returns (\n            uint160 sqrtPriceNextX96,   //how many coin \n            uint256 amountIn,\n            uint256 amountOut\n        )\n    {\n        bool zeroForOne = sqrtPriceCurrentX96 >= sqrtPriceTargetX96;\n\n        sqrtPriceNextX96 = Math.getNextSqrtPriceFromInput(\n            sqrtPriceCurrentX96,\n            liquidity,\n            amountRemaining,\n            zeroForOne\n        );\n\n        amountIn = Math.calcAmount0Delta(\n            sqrtPriceCurrentX96,\n            sqrtPriceNextX96,\n            liquidity\n        );\n        amountOut = Math.calcAmount1Delta(\n            sqrtPriceCurrentX96,\n            sqrtPriceNextX96,\n            liquidity\n        );\n\n        if (!zeroForOne) {\n            (amountIn, amountOut) = (amountOut, amountIn);\n        }\n    }\n}\n"
			},
			"src/lib/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(uint24(MAX_TICK)), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}"
			},
			"src/lib/TickBitmap.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity >=0.5.0;\n\nimport './BitMath.sol';\n\n/// @title Packed tick initialized state library\n/// @notice Stores a packed mapping of tick index to its initialized state\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\nlibrary TickBitmap {\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\n    /// @param tick The tick for which to compute the position\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\n    /// @return bitPos The bit position in the word where the flag is stored\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\n        wordPos = int16(tick >> 8);\n        bitPos = uint8(uint24(tick % 256));\n    }\n\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\n    /// @param self The mapping in which to flip the tick\n    /// @param tick The tick to flip\n    /// @param tickSpacing The spacing between usable ticks\n    function flipTick(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing\n    ) internal {\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\n        uint256 mask = 1 << bitPos;\n        self[wordPos] ^= mask;\n    }\n\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n    /// to the left (less than or equal to) or right (greater than) of the given tick\n    /// @param self The mapping in which to compute the next initialized tick\n    /// @param tick The starting tick\n    /// @param tickSpacing The spacing between usable ticks\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\n    function nextInitializedTickWithinOneWord(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing,\n        bool lte\n    ) internal view returns (int24 next, bool initialized) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\n\n        if (lte) {\n            (int16 wordPos, uint8 bitPos) = position(compressed);\n            // all the 1s at or to the right of the current bitPos\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked)))) * tickSpacing\n                : (compressed - int24(uint24(bitPos))) * tickSpacing;\n        } else {\n            // start from the word of the next tick, since the current tick state doesn't matter\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\n            // all the 1s at or to the left of the bitPos\n            uint256 mask = ~((1 << bitPos) - 1);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed + 1 + int24(uint24((BitMath.leastSignificantBit(masked) - bitPos)))) * tickSpacing\n                : (compressed + 1 + int24(uint24((type(uint8).max - bitPos)))) * tickSpacing;\n        }\n    }\n}"
			},
			"src/lib/Tick.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nlibrary Tick {\n    struct Info {\n        bool initialized;\n        uint128 liquidity;\n    }\n\n    function update(\n        mapping(int24 => Tick.Info) storage self,\n        int24 tick,\n        uint128 liquidityDelta\n    ) internal returns (bool flipped) {\n        Tick.Info storage tickInfo = self[tick];\n        uint128 liquidityBefore = tickInfo.liquidity;\n        uint128 liquidityAfter = liquidityBefore + liquidityDelta;\n\n        flipped = (liquidityAfter == 0) != (liquidityBefore == 0);\n\n        if (liquidityBefore == 0) {\n            tickInfo.initialized = true;\n        }\n\n        tickInfo.liquidity = liquidityAfter;\n    }\n}\n"
			},
			"src/lib/Position.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nlibrary Position {\n    struct Info {\n        uint128 liquidity;\n    }\n\n    function get(\n        mapping(bytes32 => Info) storage self,\n        address owner,\n        int24 lowerTick,\n        int24 upperTick\n    ) internal view returns (Position.Info storage position) {\n        position = self[\n            keccak256(abi.encodePacked(owner, lowerTick, upperTick))\n        ];\n    }\n\n    function update(Info storage self, uint128 liquidityDelta) internal {\n        uint128 liquidityBefore = self.liquidity;\n        uint128 liquidityAfter = liquidityBefore + liquidityDelta;\n\n        self.liquidity = liquidityAfter;\n    }\n}\n"
			},
			"src/lib/Math.sol": {
				"content": "// SPDX-License-Identifier: BUSL-1.1\npragma solidity ^0.8.14;\n\nimport \"./FixedPoint96.sol\";\nimport \"./PRBMath.sol\";\n\nlibrary Math {\n    /// @notice Calculates amount0 delta between two prices\n    /// TODO: round down when removing liquidity\n    function calcAmount0Delta(\n        uint160 sqrtPriceAX96,\n        uint160 sqrtPriceBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount0) {\n        if (sqrtPriceAX96 > sqrtPriceBX96)\n            (sqrtPriceAX96, sqrtPriceBX96) = (sqrtPriceBX96, sqrtPriceAX96);\n\n        require(sqrtPriceAX96 > 0);\n\n        amount0 = divRoundingUp(\n            mulDivRoundingUp(\n                (uint256(liquidity) << FixedPoint96.RESOLUTION),\n                (sqrtPriceBX96 - sqrtPriceAX96),\n                sqrtPriceBX96\n            ),\n            sqrtPriceAX96\n        );\n    }\n\n    /// @notice Calculates amount1 delta between two prices\n    /// TODO: round down when removing liquidity\n    function calcAmount1Delta(\n        uint160 sqrtPriceAX96,\n        uint160 sqrtPriceBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount1) {\n        if (sqrtPriceAX96 > sqrtPriceBX96)\n            (sqrtPriceAX96, sqrtPriceBX96) = (sqrtPriceBX96, sqrtPriceAX96);\n\n        amount1 = mulDivRoundingUp(\n            liquidity,\n            (sqrtPriceBX96 - sqrtPriceAX96),\n            FixedPoint96.Q96\n        );\n    }\n\n    function getNextSqrtPriceFromInput(\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        uint256 amountIn,\n        bool zeroForOne\n    ) internal pure returns (uint160 sqrtPriceNextX96) {\n        sqrtPriceNextX96 = zeroForOne\n            ? getNextSqrtPriceFromAmount0RoundingUp(\n                sqrtPriceX96,\n                liquidity,\n                amountIn\n            )\n            : getNextSqrtPriceFromAmount1RoundingDown(\n                sqrtPriceX96,\n                liquidity,\n                amountIn\n            );\n    }\n\n    function getNextSqrtPriceFromAmount0RoundingUp(\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        uint256 amountIn\n    ) internal pure returns (uint160) {\n        uint256 numerator = uint256(liquidity) << FixedPoint96.RESOLUTION;\n        uint256 product = amountIn * sqrtPriceX96;\n\n        // If product doesn't overflow, use the precise formula.\n        if (product / amountIn == sqrtPriceX96) {\n            uint256 denominator = numerator + product;\n            if (denominator >= numerator) {\n                return\n                    uint160(\n                        mulDivRoundingUp(numerator, sqrtPriceX96, denominator)\n                    );\n            }\n        }\n\n        // If product overflows, use a less precise formula.\n        return\n            uint160(\n                divRoundingUp(numerator, (numerator / sqrtPriceX96) + amountIn)\n            );\n    }\n\n    function getNextSqrtPriceFromAmount1RoundingDown(\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        uint256 amountIn\n    ) internal pure returns (uint160) {\n        return\n            sqrtPriceX96 +\n            uint160((amountIn << FixedPoint96.RESOLUTION) / liquidity);\n    }\n\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = PRBMath.mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n\n    function divRoundingUp(uint256 numerator, uint256 denominator)\n        internal\n        pure\n        returns (uint256 result)\n    {\n        assembly {\n            result := add(\n                div(numerator, denominator),\n                gt(mod(numerator, denominator), 0)\n            )\n        }\n    }\n}\n"
			},
			"src/lib/BitMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title BitMath\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\nlibrary BitMath {\n    /// @notice Returns the index of the most significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\n    /// @return r the index of the most significant bit\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            r += 128;\n        }\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            r += 64;\n        }\n        if (x >= 0x100000000) {\n            x >>= 32;\n            r += 32;\n        }\n        if (x >= 0x10000) {\n            x >>= 16;\n            r += 16;\n        }\n        if (x >= 0x100) {\n            x >>= 8;\n            r += 8;\n        }\n        if (x >= 0x10) {\n            x >>= 4;\n            r += 4;\n        }\n        if (x >= 0x4) {\n            x >>= 2;\n            r += 2;\n        }\n        if (x >= 0x2) r += 1;\n    }\n\n    /// @notice Returns the index of the least significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\n    /// @return r the index of the least significant bit\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        r = 255;\n        if (x & type(uint128).max > 0) {\n            r -= 128;\n        } else {\n            x >>= 128;\n        }\n        if (x & type(uint64).max > 0) {\n            r -= 64;\n        } else {\n            x >>= 64;\n        }\n        if (x & type(uint32).max > 0) {\n            r -= 32;\n        } else {\n            x >>= 32;\n        }\n        if (x & type(uint16).max > 0) {\n            r -= 16;\n        } else {\n            x >>= 16;\n        }\n        if (x & type(uint8).max > 0) {\n            r -= 8;\n        } else {\n            x >>= 8;\n        }\n        if (x & 0xf > 0) {\n            r -= 4;\n        } else {\n            x >>= 4;\n        }\n        if (x & 0x3 > 0) {\n            r -= 2;\n        } else {\n            x >>= 2;\n        }\n        if (x & 0x1 > 0) r -= 1;\n    }\n}"
			},
			"src/lib/PRBMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.4;\r\n\r\n/// @title PRBMath\r\n/// @author Paul Razvan Berg\r\n/// @notice Smart contract library for advanced fixed-point math that works with uint256 and int256.\r\n\r\nlibrary PRBMath {\r\n    /// @notice The maximum value an uint256 number can have.\r\n    uint256 internal constant MAX_UINT256 =\r\n        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n    /// @notice The maximum value an int256 number can have.\r\n    int256 internal constant MAX_INT256 = 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;\r\n\r\n    /// @notice The minimum value an int256 number can have.\r\n    int256 internal constant MIN_INT256 = -0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF - 1;\r\n\r\n    /// @notice The scaling factor used for fixed-point numbers: 1e18.\r\n    uint256 internal constant SCALE = 1e18;\r\n\r\n    /// @notice The half scale, used for rounding.\r\n    uint256 internal constant HALF_SCALE = 5e17;\r\n\r\n    /// @notice Calculates floor(a × b ÷ denominator) with full precision.\r\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\r\n    function mulDiv(\r\n        uint256 x,\r\n        uint256 y,\r\n        uint256 denominator\r\n    ) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division\r\n            if (prod1 == 0) {\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256.\r\n            require(denominator > prod1, \"PRBMath: overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0]\r\n            uint256 remainder;\r\n            assembly {\r\n                remainder := mulmod(x, y, denominator)\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor\r\n            uint256 lpotdod = denominator & (~denominator + 1);\r\n            assembly {\r\n                denominator := div(denominator, lpotdod)\r\n                prod0 := div(prod0, lpotdod)\r\n                lpotdod := add(div(sub(0, lpotdod), lpotdod), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0\r\n            prod0 |= prod1 * lpotdod;\r\n\r\n            // Invert the denominator mod 2^256\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /// @notice Calculates floor(x * y / SCALE) with full precision.\r\n    function mulDivFixedPoint(uint256 x, uint256 y) internal pure returns (uint256 result) {\r\n        result = mulDiv(x, y, SCALE);\r\n    }\r\n\r\n    /// @notice Rounds x to the nearest integer. If the fractional part is 0.5 or more, it rounds up.\r\n    function round(uint256 x) internal pure returns (uint256 result) {\r\n        result = (x + HALF_SCALE) / SCALE;\r\n    }\r\n}\r\n"
			},
			"src/lib/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.14;\n\nlibrary FixedPoint96 {\n    uint8 internal constant RESOLUTION = 96;\n    uint256 internal constant Q96 = 2**96;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/UniswapV3Pool.sol": {
				"UniswapV3Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1_",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InsufficientInputAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTickRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroLiquidity",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "lowerTick",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "upperTick",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "amountSpecified",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/UniswapV3Pool.sol\":446:8170  contract UniswapV3Pool is ... */\n  mstore(0x40, 0xc0)\n    /* \"src/UniswapV3Pool.sol\":1864:2137  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/UniswapV3Pool.sol\":2029:2036  token0_ */\n  dup4\n    /* \"src/UniswapV3Pool.sol\":2020:2036  token0 = token0_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":2056:2063  token1_ */\n  dup3\n    /* \"src/UniswapV3Pool.sol\":2047:2063  token1 = token1_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":2082:2129  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"src/UniswapV3Pool.sol\":2103:2115  sqrtPriceX96 */\n  dup4\n    /* \"src/UniswapV3Pool.sol\":2082:2129  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"src/UniswapV3Pool.sol\":2123:2127  tick */\n  dup3\n    /* \"src/UniswapV3Pool.sol\":2082:2129  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0x02\n  signextend\n  dup2\n  mstore\n  pop\n    /* \"src/UniswapV3Pool.sol\":2074:2079  slot0 */\n  0x00\n    /* \"src/UniswapV3Pool.sol\":2074:2129  slot0 = Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  signextend\n  0xffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":1864:2137  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":446:8170  contract UniswapV3Pool is ... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_25\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_27\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_28:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_30\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:967   */\ntag_14:\n    /* \"#utility.yul\":918:942   */\n  tag_32\n    /* \"#utility.yul\":936:941   */\n  dup2\n    /* \"#utility.yul\":918:942   */\n  tag_10\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":908:943   */\n  eq\n    /* \"#utility.yul\":898:961   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":957:958   */\n  0x00\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":947:959   */\n  revert\n    /* \"#utility.yul\":898:961   */\ntag_33:\n    /* \"#utility.yul\":845:967   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":973:1116   */\ntag_15:\n    /* \"#utility.yul\":1030:1035   */\n  0x00\n    /* \"#utility.yul\":1061:1067   */\n  dup2\n    /* \"#utility.yul\":1055:1068   */\n  mload\n    /* \"#utility.yul\":1046:1068   */\n  swap1\n  pop\n    /* \"#utility.yul\":1077:1110   */\n  tag_35\n    /* \"#utility.yul\":1104:1109   */\n  dup2\n    /* \"#utility.yul\":1077:1110   */\n  tag_14\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":973:1116   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1122:1212   */\ntag_16:\n    /* \"#utility.yul\":1157:1164   */\n  0x00\n    /* \"#utility.yul\":1200:1205   */\n  dup2\n    /* \"#utility.yul\":1197:1198   */\n  0x02\n    /* \"#utility.yul\":1186:1206   */\n  signextend\n    /* \"#utility.yul\":1175:1206   */\n  swap1\n  pop\n    /* \"#utility.yul\":1122:1212   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1218:1336   */\ntag_17:\n    /* \"#utility.yul\":1289:1311   */\n  tag_38\n    /* \"#utility.yul\":1305:1310   */\n  dup2\n    /* \"#utility.yul\":1289:1311   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1282:1287   */\n  dup2\n    /* \"#utility.yul\":1279:1312   */\n  eq\n    /* \"#utility.yul\":1269:1330   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1326:1327   */\n  0x00\n    /* \"#utility.yul\":1323:1324   */\n  0x00\n    /* \"#utility.yul\":1316:1328   */\n  revert\n    /* \"#utility.yul\":1269:1330   */\ntag_39:\n    /* \"#utility.yul\":1218:1336   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1342:1481   */\ntag_18:\n    /* \"#utility.yul\":1397:1402   */\n  0x00\n    /* \"#utility.yul\":1428:1434   */\n  dup2\n    /* \"#utility.yul\":1422:1435   */\n  mload\n    /* \"#utility.yul\":1413:1435   */\n  swap1\n  pop\n    /* \"#utility.yul\":1444:1475   */\n  tag_41\n    /* \"#utility.yul\":1469:1474   */\n  dup2\n    /* \"#utility.yul\":1444:1475   */\n  tag_17\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1342:1481   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1487:2303   */\ntag_3:\n    /* \"#utility.yul\":1582:1588   */\n  0x00\n    /* \"#utility.yul\":1590:1596   */\n  0x00\n    /* \"#utility.yul\":1598:1604   */\n  0x00\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1655:1658   */\n  0x80\n    /* \"#utility.yul\":1643:1652   */\n  dup6\n    /* \"#utility.yul\":1634:1641   */\n  dup8\n    /* \"#utility.yul\":1630:1653   */\n  sub\n    /* \"#utility.yul\":1626:1659   */\n  slt\n    /* \"#utility.yul\":1623:1743   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1662:1741   */\n  tag_44\n  tag_8\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1623:1743   */\ntag_43:\n    /* \"#utility.yul\":1782:1783   */\n  0x00\n    /* \"#utility.yul\":1807:1871   */\n  tag_45\n    /* \"#utility.yul\":1863:1870   */\n  dup8\n    /* \"#utility.yul\":1854:1860   */\n  dup3\n    /* \"#utility.yul\":1843:1852   */\n  dup9\n    /* \"#utility.yul\":1839:1861   */\n  add\n    /* \"#utility.yul\":1807:1871   */\n  tag_13\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1797:1871   */\n  swap5\n  pop\n    /* \"#utility.yul\":1753:1881   */\n  pop\n    /* \"#utility.yul\":1920:1922   */\n  0x20\n    /* \"#utility.yul\":1946:2010   */\n  tag_46\n    /* \"#utility.yul\":2002:2009   */\n  dup8\n    /* \"#utility.yul\":1993:1999   */\n  dup3\n    /* \"#utility.yul\":1982:1991   */\n  dup9\n    /* \"#utility.yul\":1978:2000   */\n  add\n    /* \"#utility.yul\":1946:2010   */\n  tag_13\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1936:2010   */\n  swap4\n  pop\n    /* \"#utility.yul\":1891:2020   */\n  pop\n    /* \"#utility.yul\":2059:2061   */\n  0x40\n    /* \"#utility.yul\":2085:2149   */\n  tag_47\n    /* \"#utility.yul\":2141:2148   */\n  dup8\n    /* \"#utility.yul\":2132:2138   */\n  dup3\n    /* \"#utility.yul\":2121:2130   */\n  dup9\n    /* \"#utility.yul\":2117:2139   */\n  add\n    /* \"#utility.yul\":2085:2149   */\n  tag_15\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2075:2149   */\n  swap3\n  pop\n    /* \"#utility.yul\":2030:2159   */\n  pop\n    /* \"#utility.yul\":2198:2200   */\n  0x60\n    /* \"#utility.yul\":2224:2286   */\n  tag_48\n    /* \"#utility.yul\":2278:2285   */\n  dup8\n    /* \"#utility.yul\":2269:2275   */\n  dup3\n    /* \"#utility.yul\":2258:2267   */\n  dup9\n    /* \"#utility.yul\":2254:2276   */\n  add\n    /* \"#utility.yul\":2224:2286   */\n  tag_18\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2214:2286   */\n  swap2\n  pop\n    /* \"#utility.yul\":2169:2296   */\n  pop\n    /* \"#utility.yul\":1487:2303   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"src/UniswapV3Pool.sol\":446:8170  contract UniswapV3Pool is ... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xcd41b8bf8f20f7ad95d96d948a315af225b219053fc98a80aee13063b692b681\")\n  0x00\n  assignImmutable(\"0x215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/UniswapV3Pool.sol\":446:8170  contract UniswapV3Pool is ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x514ea4bf\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x514ea4bf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5339c296\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x80c2c6ef\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf30dba93\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1a686502\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3850c7bd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3c8a7d8d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"src/UniswapV3Pool.sol\":943:974  address public immutable token0 */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1245:1269  uint128 public liquidity */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1187:1205  Slot0 public slot0 */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":2159:4667  function mint(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1438:1488  mapping(bytes32 => Position.Info) public positions */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1367:1410  mapping(int16 => uint256) public tickBitmap */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":4699:7851  function swap(... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":981:1012  address public immutable token1 */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1299:1339  mapping(int24 => Tick.Info) public ticks */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":943:974  address public immutable token0 */\n    tag_14:\n      immutable(\"0x215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803\")\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1245:1269  uint128 public liquidity */\n    tag_18:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1187:1205  Slot0 public slot0 */\n    tag_22:\n      0x00\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":2159:4667  function mint(... */\n    tag_28:\n        /* \"src/UniswapV3Pool.sol\":2344:2359  uint256 amount0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2361:2376  uint256 amount1 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2420:2429  upperTick */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":2407:2429  lowerTick >= upperTick */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":2407:2416  lowerTick */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2407:2429  lowerTick >= upperTick */\n      0x02\n      signextend\n      slt\n      iszero\n        /* \"src/UniswapV3Pool.sol\":2407:2466  lowerTick >= upperTick ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":744:751  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"src/UniswapV3Pool.sol\":2446:2466  lowerTick < MIN_TICK */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":2446:2455  lowerTick */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2446:2466  lowerTick < MIN_TICK */\n      0x02\n      signextend\n      slt\n        /* \"src/UniswapV3Pool.sol\":2407:2466  lowerTick >= upperTick ||... */\n    tag_58:\n        /* \"src/UniswapV3Pool.sol\":2407:2503  lowerTick >= upperTick ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":744:751  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"src/UniswapV3Pool.sol\":793:802  -MIN_TICK */\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"src/UniswapV3Pool.sol\":2483:2503  upperTick > MAX_TICK */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":2483:2492  upperTick */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":2483:2503  upperTick > MAX_TICK */\n      0x02\n      signextend\n      sgt\n        /* \"src/UniswapV3Pool.sol\":2407:2503  lowerTick >= upperTick ||... */\n    tag_59:\n        /* \"src/UniswapV3Pool.sol\":2389:2540  if (... */\n      iszero\n      tag_62\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2522:2540  InvalidTickRange() */\n      mload(0x40)\n      0x064847d000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":2389:2540  if (... */\n    tag_62:\n        /* \"src/UniswapV3Pool.sol\":2565:2566  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2555:2561  amount */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":2555:2566  amount == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/UniswapV3Pool.sol\":2551:2590  if (amount == 0) revert ZeroLiquidity() */\n      tag_63\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2575:2590  ZeroLiquidity() */\n      mload(0x40)\n      0x1007454800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":2551:2590  if (amount == 0) revert ZeroLiquidity() */\n    tag_63:\n        /* \"src/UniswapV3Pool.sol\":2603:2620  bool flippedLower */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2623:2654  ticks.update(lowerTick, amount) */\n      tag_64\n        /* \"src/UniswapV3Pool.sol\":2636:2645  lowerTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2647:2653  amount */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2623:2628  ticks */\n      0x02\n        /* \"src/UniswapV3Pool.sol\":2623:2635  ticks.update */\n      tag_65\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2623:2654  ticks.update(lowerTick, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"src/UniswapV3Pool.sol\":2603:2654  bool flippedLower = ticks.update(lowerTick, amount) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2665:2682  bool flippedUpper */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2685:2716  ticks.update(upperTick, amount) */\n      tag_66\n        /* \"src/UniswapV3Pool.sol\":2698:2707  upperTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2709:2715  amount */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2685:2690  ticks */\n      0x02\n        /* \"src/UniswapV3Pool.sol\":2685:2697  ticks.update */\n      tag_65\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2685:2716  ticks.update(upperTick, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"src/UniswapV3Pool.sol\":2665:2716  bool flippedUpper = ticks.update(upperTick, amount) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2730:2742  flippedLower */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":2727:2804  if(flippedLower) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2759:2792  tickBitmap.flipTick(lowerTick, 1) */\n      tag_68\n        /* \"src/UniswapV3Pool.sol\":2779:2788  lowerTick */\n      dup10\n        /* \"src/UniswapV3Pool.sol\":2790:2791  1 */\n      0x01\n        /* \"src/UniswapV3Pool.sol\":2759:2769  tickBitmap */\n      0x03\n        /* \"src/UniswapV3Pool.sol\":2759:2778  tickBitmap.flipTick */\n      tag_69\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2759:2792  tickBitmap.flipTick(lowerTick, 1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"src/UniswapV3Pool.sol\":2727:2804  if(flippedLower) {... */\n    tag_67:\n        /* \"src/UniswapV3Pool.sol\":2817:2829  flippedUpper */\n      dup1\n        /* \"src/UniswapV3Pool.sol\":2814:2891  if(flippedUpper) {... */\n      iszero\n      tag_70\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2846:2879  tickBitmap.flipTick(upperTick, 1) */\n      tag_71\n        /* \"src/UniswapV3Pool.sol\":2866:2875  upperTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2877:2878  1 */\n      0x01\n        /* \"src/UniswapV3Pool.sol\":2846:2856  tickBitmap */\n      0x03\n        /* \"src/UniswapV3Pool.sol\":2846:2865  tickBitmap.flipTick */\n      tag_69\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2846:2879  tickBitmap.flipTick(upperTick, 1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"src/UniswapV3Pool.sol\":2814:2891  if(flippedUpper) {... */\n    tag_70:\n        /* \"src/UniswapV3Pool.sol\":2903:2933  Position.Info storage position */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2936:3028  positions.get(... */\n      tag_72\n        /* \"src/UniswapV3Pool.sol\":2964:2969  owner */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2984:2993  lowerTick */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":3008:3017  upperTick */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2936:2945  positions */\n      0x04\n        /* \"src/UniswapV3Pool.sol\":2936:2949  positions.get */\n      tag_73\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2936:3028  positions.get(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"src/UniswapV3Pool.sol\":2903:3028  Position.Info storage position = positions.get(... */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":3039:3062  position.update(amount) */\n      tag_74\n        /* \"src/UniswapV3Pool.sol\":3055:3061  amount */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3039:3047  position */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":3039:3054  position.update */\n      tag_75\n      swap1\n        /* \"src/UniswapV3Pool.sol\":3039:3062  position.update(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"src/UniswapV3Pool.sol\":3075:3094  Slot0 memory slot0_ */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3097:3102  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3075:3102  Slot0 memory slot0_ = slot0 */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":3133:3142  lowerTick */\n      dup11\n        /* \"src/UniswapV3Pool.sol\":3119:3142  slot0_.tick < lowerTick */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":3119:3125  slot0_ */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":3119:3130  slot0_.tick */\n      0x20\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":3119:3142  slot0_.tick < lowerTick */\n      0x02\n      signextend\n      slt\n        /* \"src/UniswapV3Pool.sol\":3115:4026  if (slot0_.tick < lowerTick) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":3169:3344  Math.calcAmount0Delta(... */\n      tag_77\n        /* \"src/UniswapV3Pool.sol\":3209:3247  TickMath.getSqrtRatioAtTick(lowerTick) */\n      tag_78\n        /* \"src/UniswapV3Pool.sol\":3237:3246  lowerTick */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":3209:3236  TickMath.getSqrtRatioAtTick */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":3209:3247  TickMath.getSqrtRatioAtTick(lowerTick) */\n      jump\t// in\n    tag_78:\n        /* \"src/UniswapV3Pool.sol\":3266:3304  TickMath.getSqrtRatioAtTick(upperTick) */\n      tag_80\n        /* \"src/UniswapV3Pool.sol\":3294:3303  upperTick */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":3266:3293  TickMath.getSqrtRatioAtTick */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":3266:3304  TickMath.getSqrtRatioAtTick(upperTick) */\n      jump\t// in\n    tag_80:\n        /* \"src/UniswapV3Pool.sol\":3323:3329  amount */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":3169:3190  Math.calcAmount0Delta */\n      tag_81\n        /* \"src/UniswapV3Pool.sol\":3169:3344  Math.calcAmount0Delta(... */\n      jump\t// in\n    tag_77:\n        /* \"src/UniswapV3Pool.sol\":3159:3344  amount0 = Math.calcAmount0Delta(... */\n      swap6\n      pop\n        /* \"src/UniswapV3Pool.sol\":3115:4026  if (slot0_.tick < lowerTick) {... */\n      jump(tag_82)\n    tag_76:\n        /* \"src/UniswapV3Pool.sol\":3380:3389  upperTick */\n      dup10\n        /* \"src/UniswapV3Pool.sol\":3366:3389  slot0_.tick < upperTick */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":3366:3372  slot0_ */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":3366:3377  slot0_.tick */\n      0x20\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":3366:3389  slot0_.tick < upperTick */\n      0x02\n      signextend\n      slt\n        /* \"src/UniswapV3Pool.sol\":3362:4026  if (slot0_.tick < upperTick) {... */\n      iszero\n      tag_83\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":3416:3572  Math.calcAmount0Delta(... */\n      tag_84\n        /* \"src/UniswapV3Pool.sol\":3456:3462  slot0_ */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":3456:3475  slot0_.sqrtPriceX96 */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":3494:3532  TickMath.getSqrtRatioAtTick(upperTick) */\n      tag_85\n        /* \"src/UniswapV3Pool.sol\":3522:3531  upperTick */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":3494:3521  TickMath.getSqrtRatioAtTick */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":3494:3532  TickMath.getSqrtRatioAtTick(upperTick) */\n      jump\t// in\n    tag_85:\n        /* \"src/UniswapV3Pool.sol\":3551:3557  amount */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":3416:3437  Math.calcAmount0Delta */\n      tag_81\n        /* \"src/UniswapV3Pool.sol\":3416:3572  Math.calcAmount0Delta(... */\n      jump\t// in\n    tag_84:\n        /* \"src/UniswapV3Pool.sol\":3406:3572  amount0 = Math.calcAmount0Delta(... */\n      swap6\n      pop\n        /* \"src/UniswapV3Pool.sol\":3597:3753  Math.calcAmount1Delta(... */\n      tag_86\n        /* \"src/UniswapV3Pool.sol\":3637:3643  slot0_ */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":3637:3656  slot0_.sqrtPriceX96 */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":3675:3713  TickMath.getSqrtRatioAtTick(lowerTick) */\n      tag_87\n        /* \"src/UniswapV3Pool.sol\":3703:3712  lowerTick */\n      dup14\n        /* \"src/UniswapV3Pool.sol\":3675:3702  TickMath.getSqrtRatioAtTick */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":3675:3713  TickMath.getSqrtRatioAtTick(lowerTick) */\n      jump\t// in\n    tag_87:\n        /* \"src/UniswapV3Pool.sol\":3732:3738  amount */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":3597:3618  Math.calcAmount1Delta */\n      tag_88\n        /* \"src/UniswapV3Pool.sol\":3597:3753  Math.calcAmount1Delta(... */\n      jump\t// in\n    tag_86:\n        /* \"src/UniswapV3Pool.sol\":3587:3753  amount1 = Math.calcAmount1Delta(... */\n      swap5\n      pop\n        /* \"src/UniswapV3Pool.sol\":3789:3795  amount */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3768:3777  liquidity */\n      0x01\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3768:3796  liquidity += uint128(amount) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/UniswapV3Pool.sol\":3362:4026  if (slot0_.tick < upperTick) {... */\n      jump(tag_91)\n    tag_83:\n        /* \"src/UniswapV3Pool.sol\":3839:4014  Math.calcAmount1Delta(... */\n      tag_92\n        /* \"src/UniswapV3Pool.sol\":3879:3917  TickMath.getSqrtRatioAtTick(lowerTick) */\n      tag_93\n        /* \"src/UniswapV3Pool.sol\":3907:3916  lowerTick */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":3879:3906  TickMath.getSqrtRatioAtTick */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":3879:3917  TickMath.getSqrtRatioAtTick(lowerTick) */\n      jump\t// in\n    tag_93:\n        /* \"src/UniswapV3Pool.sol\":3936:3974  TickMath.getSqrtRatioAtTick(upperTick) */\n      tag_94\n        /* \"src/UniswapV3Pool.sol\":3964:3973  upperTick */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":3936:3963  TickMath.getSqrtRatioAtTick */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":3936:3974  TickMath.getSqrtRatioAtTick(upperTick) */\n      jump\t// in\n    tag_94:\n        /* \"src/UniswapV3Pool.sol\":3993:3999  amount */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":3839:3860  Math.calcAmount1Delta */\n      tag_88\n        /* \"src/UniswapV3Pool.sol\":3839:4014  Math.calcAmount1Delta(... */\n      jump\t// in\n    tag_92:\n        /* \"src/UniswapV3Pool.sol\":3829:4014  amount1 = Math.calcAmount1Delta(... */\n      swap5\n      pop\n        /* \"src/UniswapV3Pool.sol\":3362:4026  if (slot0_.tick < upperTick) {... */\n    tag_91:\n        /* \"src/UniswapV3Pool.sol\":3115:4026  if (slot0_.tick < lowerTick) {... */\n    tag_82:\n        /* \"src/UniswapV3Pool.sol\":4038:4060  uint256 balance0Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4071:4093  uint256 balance1Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4118:4119  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4108:4115  amount0 */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":4108:4119  amount0 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":4104:4148  if (amount0 > 0) balance0Before = balance0() */\n      iszero\n      tag_95\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":4138:4148  balance0() */\n      tag_96\n        /* \"src/UniswapV3Pool.sol\":4138:4146  balance0 */\n      tag_97\n        /* \"src/UniswapV3Pool.sol\":4138:4148  balance0() */\n      jump\t// in\n    tag_96:\n        /* \"src/UniswapV3Pool.sol\":4121:4148  balance0Before = balance0() */\n      swap2\n      pop\n        /* \"src/UniswapV3Pool.sol\":4104:4148  if (amount0 > 0) balance0Before = balance0() */\n    tag_95:\n        /* \"src/UniswapV3Pool.sol\":4173:4174  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4163:4170  amount1 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4163:4174  amount1 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":4159:4203  if (amount1 > 0) balance1Before = balance1() */\n      iszero\n      tag_98\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":4193:4203  balance1() */\n      tag_99\n        /* \"src/UniswapV3Pool.sol\":4193:4201  balance1 */\n      tag_100\n        /* \"src/UniswapV3Pool.sol\":4193:4203  balance1() */\n      jump\t// in\n    tag_99:\n        /* \"src/UniswapV3Pool.sol\":4176:4203  balance1Before = balance1() */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":4159:4203  if (amount1 > 0) balance1Before = balance1() */\n    tag_98:\n        /* \"src/UniswapV3Pool.sol\":4237:4247  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":4214:4270  IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd3487997\n        /* \"src/UniswapV3Pool.sol\":4285:4292  amount0 */\n      dup10\n        /* \"src/UniswapV3Pool.sol\":4307:4314  amount1 */\n      dup10\n        /* \"src/UniswapV3Pool.sol\":4329:4333  data */\n      dup14\n      dup14\n        /* \"src/UniswapV3Pool.sol\":4214:4344  IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      revert(0x00, 0x00)\n    tag_103:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":4369:4370  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4359:4366  amount0 */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":4359:4370  amount0 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":4359:4411  amount0 > 0 && balance0Before + amount0 > balance0() */\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":4401:4411  balance0() */\n      tag_107\n        /* \"src/UniswapV3Pool.sol\":4401:4409  balance0 */\n      tag_97\n        /* \"src/UniswapV3Pool.sol\":4401:4411  balance0() */\n      jump\t// in\n    tag_107:\n        /* \"src/UniswapV3Pool.sol\":4391:4398  amount0 */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":4374:4388  balance0Before */\n      dup4\n        /* \"src/UniswapV3Pool.sol\":4374:4398  balance0Before + amount0 */\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"src/UniswapV3Pool.sol\":4374:4411  balance0Before + amount0 > balance0() */\n      gt\n        /* \"src/UniswapV3Pool.sol\":4359:4411  amount0 > 0 && balance0Before + amount0 > balance0() */\n    tag_106:\n        /* \"src/UniswapV3Pool.sol\":4355:4458  if (amount0 > 0 && balance0Before + amount0 > balance0())... */\n      iszero\n      tag_110\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":4433:4458  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":4355:4458  if (amount0 > 0 && balance0Before + amount0 > balance0())... */\n    tag_110:\n        /* \"src/UniswapV3Pool.sol\":4483:4484  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4473:4480  amount1 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4473:4484  amount1 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":4473:4525  amount1 > 0 && balance1Before + amount1 > balance1() */\n      dup1\n      iszero\n      tag_111\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":4515:4525  balance1() */\n      tag_112\n        /* \"src/UniswapV3Pool.sol\":4515:4523  balance1 */\n      tag_100\n        /* \"src/UniswapV3Pool.sol\":4515:4525  balance1() */\n      jump\t// in\n    tag_112:\n        /* \"src/UniswapV3Pool.sol\":4505:4512  amount1 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4488:4502  balance1Before */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":4488:4512  balance1Before + amount1 */\n      tag_113\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_113:\n        /* \"src/UniswapV3Pool.sol\":4488:4525  balance1Before + amount1 > balance1() */\n      gt\n        /* \"src/UniswapV3Pool.sol\":4473:4525  amount1 > 0 && balance1Before + amount1 > balance1() */\n    tag_111:\n        /* \"src/UniswapV3Pool.sol\":4469:4572  if (amount1 > 0 && balance1Before + amount1 > balance1())... */\n      iszero\n      tag_114\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":4547:4572  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":4469:4572  if (amount1 > 0 && balance1Before + amount1 > balance1())... */\n    tag_114:\n        /* \"src/UniswapV3Pool.sol\":4623:4632  upperTick */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":4588:4659  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":4612:4621  lowerTick */\n      dup14\n        /* \"src/UniswapV3Pool.sol\":4588:4659  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":4605:4610  owner */\n      dup16\n        /* \"src/UniswapV3Pool.sol\":4588:4659  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde\n        /* \"src/UniswapV3Pool.sol\":4593:4603  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":4634:4640  amount */\n      dup16\n        /* \"src/UniswapV3Pool.sol\":4642:4649  amount0 */\n      dup14\n        /* \"src/UniswapV3Pool.sol\":4651:4658  amount1 */\n      dup14\n        /* \"src/UniswapV3Pool.sol\":4588:4659  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      mload(0x40)\n      tag_115\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/UniswapV3Pool.sol\":2378:4667  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":2159:4667  function mint(... */\n      swap7\n      pop\n      swap7\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1438:1488  mapping(bytes32 => Position.Info) public positions */\n    tag_34:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1367:1410  mapping(int16 => uint256) public tickBitmap */\n    tag_39:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":4699:7851  function swap(... */\n    tag_45:\n        /* \"src/UniswapV3Pool.sol\":4945:4959  int256 amount0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4961:4975  int256 amount1 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4993:5012  Slot0 memory slot0_ */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":5015:5020  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4993:5020  Slot0 memory slot0_ = slot0 */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":5033:5055  SwapState memory state */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":5058:5250  SwapState({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/UniswapV3Pool.sol\":5109:5124  amountSpecified */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":5058:5250  SwapState({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/UniswapV3Pool.sol\":5157:5158  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":5058:5250  SwapState({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/UniswapV3Pool.sol\":5187:5193  slot0_ */\n      dup4\n        /* \"src/UniswapV3Pool.sol\":5187:5206  slot0_.sqrtPriceX96 */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5058:5250  SwapState({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/UniswapV3Pool.sol\":5227:5233  slot0_ */\n      dup4\n        /* \"src/UniswapV3Pool.sol\":5227:5238  slot0_.tick */\n      0x20\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5058:5250  SwapState({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n        /* \"src/UniswapV3Pool.sol\":5033:5250  SwapState memory state = SwapState({... */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":5263:6282  while (state.amountSpecifiedRemaining > 0) {... */\n    tag_118:\n        /* \"src/UniswapV3Pool.sol\":5303:5304  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":5270:5275  state */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":5270:5300  state.amountSpecifiedRemaining */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5270:5304  state.amountSpecifiedRemaining > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":5263:6282  while (state.amountSpecifiedRemaining > 0) {... */\n      iszero\n      tag_119\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":5321:5342  StepState memory step */\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"src/UniswapV3Pool.sol\":5382:5387  state */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":5382:5400  state.sqrtPriceX96 */\n      0x40\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5357:5361  step */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":5357:5379  step.sqrtPriceStartX96 */\n      0x00\n      add\n        /* \"src/UniswapV3Pool.sol\":5357:5400  step.sqrtPriceStartX96 = state.sqrtPriceX96 */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":5435:5571  tickBitmap.nextInitializedTickWithinOneWord(... */\n      tag_122\n        /* \"src/UniswapV3Pool.sol\":5497:5502  state */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":5497:5507  state.tick */\n      0x60\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5526:5527  1 */\n      0x01\n        /* \"src/UniswapV3Pool.sol\":5546:5556  zeroForOne */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":5435:5445  tickBitmap */\n      0x03\n        /* \"src/UniswapV3Pool.sol\":5435:5478  tickBitmap.nextInitializedTickWithinOneWord */\n      tag_123\n      swap1\n        /* \"src/UniswapV3Pool.sol\":5435:5571  tickBitmap.nextInitializedTickWithinOneWord(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"src/UniswapV3Pool.sol\":5415:5571  (step.nextTick, ) = tickBitmap.nextInitializedTickWithinOneWord(... */\n      pop\n        /* \"src/UniswapV3Pool.sol\":5416:5420  step */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":5416:5429  step.nextTick */\n      0x20\n      add\n        /* \"src/UniswapV3Pool.sol\":5415:5571  (step.nextTick, ) = tickBitmap.nextInitializedTickWithinOneWord(... */\n      dup2\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":5610:5652  TickMath.getSqrtRatioAtTick(step.nextTick) */\n      tag_124\n        /* \"src/UniswapV3Pool.sol\":5638:5642  step */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":5638:5651  step.nextTick */\n      0x20\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5610:5637  TickMath.getSqrtRatioAtTick */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":5610:5652  TickMath.getSqrtRatioAtTick(step.nextTick) */\n      jump\t// in\n    tag_124:\n        /* \"src/UniswapV3Pool.sol\":5586:5590  step */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":5586:5607  step.sqrtPriceNextX96 */\n      0x40\n      add\n        /* \"src/UniswapV3Pool.sol\":5586:5652  step.sqrtPriceNextX96 = TickMath.getSqrtRatioAtTick(step.nextTick) */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":5721:5952  SwapMath... */\n      tag_125\n        /* \"src/UniswapV3Pool.sol\":5786:5791  state */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":5786:5804  state.sqrtPriceX96 */\n      0x40\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5827:5831  step */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":5827:5848  step.sqrtPriceNextX96 */\n      0x40\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5871:5880  liquidity */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":5903:5908  state */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":5903:5933  state.amountSpecifiedRemaining */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5721:5763  SwapMath... */\n      tag_126\n        /* \"src/UniswapV3Pool.sol\":5721:5952  SwapMath... */\n      jump\t// in\n    tag_125:\n        /* \"src/UniswapV3Pool.sol\":5668:5673  state */\n      dup5\n        /* \"src/UniswapV3Pool.sol\":5668:5686  state.sqrtPriceX96 */\n      0x40\n      add\n        /* \"src/UniswapV3Pool.sol\":5688:5692  step */\n      dup5\n        /* \"src/UniswapV3Pool.sol\":5688:5701  step.amountIn */\n      0x60\n      add\n        /* \"src/UniswapV3Pool.sol\":5703:5707  step */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":5703:5717  step.amountOut */\n      0x80\n      add\n        /* \"src/UniswapV3Pool.sol\":5667:5952  (state.sqrtPriceX96, step.amountIn, step.amountOut) = SwapMath... */\n      dup4\n      dup2\n      mstore\n      pop\n      dup4\n      dup2\n      mstore\n      pop\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":6001:6005  step */\n      dup1\n        /* \"src/UniswapV3Pool.sol\":6001:6014  step.amountIn */\n      0x60\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":5967:5972  state */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":5967:5997  state.amountSpecifiedRemaining */\n      0x00\n      add\n        /* \"src/UniswapV3Pool.sol\":5967:6014  state.amountSpecifiedRemaining -= step.amountIn */\n      dup2\n      dup2\n      mload\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap2\n      pop\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":6091:6095  step */\n      dup1\n        /* \"src/UniswapV3Pool.sol\":6091:6105  step.amountOut */\n      0x80\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6065:6070  state */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":6065:6087  state.amountCalculated */\n      0x20\n      add\n        /* \"src/UniswapV3Pool.sol\":6065:6105  state.amountCalculated += step.amountOut */\n      dup2\n      dup2\n      mload\n      tag_129\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_129:\n      swap2\n      pop\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":6191:6238  TickMath.getTickAtSqrtRatio(state.sqrtPriceX96) */\n      tag_130\n        /* \"src/UniswapV3Pool.sol\":6219:6224  state */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":6219:6237  state.sqrtPriceX96 */\n      0x40\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6191:6218  TickMath.getTickAtSqrtRatio */\n      tag_131\n        /* \"src/UniswapV3Pool.sol\":6191:6238  TickMath.getTickAtSqrtRatio(state.sqrtPriceX96) */\n      jump\t// in\n    tag_130:\n        /* \"src/UniswapV3Pool.sol\":6178:6183  state */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":6178:6188  state.tick */\n      0x60\n      add\n        /* \"src/UniswapV3Pool.sol\":6178:6238  state.tick = TickMath.getTickAtSqrtRatio(state.sqrtPriceX96) */\n      swap1\n      0x02\n      signextend\n      swap1\n      dup2\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":5306:6282  {... */\n      pop\n        /* \"src/UniswapV3Pool.sol\":5263:6282  while (state.amountSpecifiedRemaining > 0) {... */\n      jump(tag_118)\n    tag_119:\n        /* \"src/UniswapV3Pool.sol\":6320:6326  slot0_ */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":6320:6331  slot0_.tick */\n      0x20\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6306:6331  state.tick != slot0_.tick */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":6306:6311  state */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":6306:6316  state.tick */\n      0x60\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6306:6331  state.tick != slot0_.tick */\n      0x02\n      signextend\n      eq\n        /* \"src/UniswapV3Pool.sol\":6302:6427  if (state.tick != slot0_.tick) {... */\n      tag_132\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":6384:6389  state */\n      dup1\n        /* \"src/UniswapV3Pool.sol\":6384:6402  state.sqrtPriceX96 */\n      0x40\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6404:6409  state */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":6404:6414  state.tick */\n      0x60\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6349:6354  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":6349:6367  slot0.sqrtPriceX96 */\n      0x00\n      add\n      0x00\n        /* \"src/UniswapV3Pool.sol\":6369:6374  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":6369:6379  slot0.tick */\n      0x00\n      add\n      0x14\n        /* \"src/UniswapV3Pool.sol\":6348:6415  (slot0.sqrtPriceX96, slot0.tick) = (state.sqrtPriceX96, state.tick) */\n      dup5\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      signextend\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      dup4\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":6302:6427  if (state.tick != slot0_.tick) {... */\n    tag_132:\n        /* \"src/UniswapV3Pool.sol\":6460:6470  zeroForOne */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":6460:6782  zeroForOne... */\n      tag_133\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":6669:6674  state */\n      dup1\n        /* \"src/UniswapV3Pool.sol\":6669:6691  state.amountCalculated */\n      0x20\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6661:6692  -int256(state.amountCalculated) */\n      tag_134\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"src/UniswapV3Pool.sol\":6736:6741  state */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":6736:6766  state.amountSpecifiedRemaining */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6718:6733  amountSpecified */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":6718:6766  amountSpecified - state.amountSpecifiedRemaining */\n      tag_136\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_136:\n        /* \"src/UniswapV3Pool.sol\":6460:6782  zeroForOne... */\n      jump(tag_137)\n    tag_133:\n        /* \"src/UniswapV3Pool.sol\":6530:6535  state */\n      dup1\n        /* \"src/UniswapV3Pool.sol\":6530:6560  state.amountSpecifiedRemaining */\n      0x00\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6512:6527  amountSpecified */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":6512:6560  amountSpecified - state.amountSpecifiedRemaining */\n      tag_138\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_138:\n        /* \"src/UniswapV3Pool.sol\":6588:6593  state */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":6588:6610  state.amountCalculated */\n      0x20\n      add\n      mload\n        /* \"src/UniswapV3Pool.sol\":6580:6611  -int256(state.amountCalculated) */\n      tag_139\n      swap1\n      tag_135\n      jump\t// in\n    tag_139:\n        /* \"src/UniswapV3Pool.sol\":6460:6782  zeroForOne... */\n    tag_137:\n        /* \"src/UniswapV3Pool.sol\":6439:6782  (amount0, amount1) = zeroForOne... */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":6799:6809  zeroForOne */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":6795:7635  if (zeroForOne) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":6833:6839  token1 */\n      immutable(\"0xcd41b8bf8f20f7ad95d96d948a315af225b219053fc98a80aee13063b692b681\")\n        /* \"src/UniswapV3Pool.sol\":6826:6849  IERC20(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/UniswapV3Pool.sol\":6850:6859  recipient */\n      dup11\n        /* \"src/UniswapV3Pool.sol\":6870:6877  amount1 */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":6869:6877  -amount1 */\n      tag_141\n      swap1\n      tag_135\n      jump\t// in\n    tag_141:\n        /* \"src/UniswapV3Pool.sol\":6826:6879  IERC20(token1).transfer(recipient, uint256(-amount1)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      pop\n        /* \"src/UniswapV3Pool.sol\":6896:6918  uint256 balance0Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":6921:6931  balance0() */\n      tag_148\n        /* \"src/UniswapV3Pool.sol\":6921:6929  balance0 */\n      tag_97\n        /* \"src/UniswapV3Pool.sol\":6921:6931  balance0() */\n      jump\t// in\n    tag_148:\n        /* \"src/UniswapV3Pool.sol\":6896:6931  uint256 balance0Before = balance0() */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":6969:6979  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":6946:7002  IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfa461e33\n        /* \"src/UniswapV3Pool.sol\":7021:7028  amount0 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":7047:7054  amount1 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":7073:7077  data */\n      dup11\n      dup11\n        /* \"src/UniswapV3Pool.sol\":6946:7092  IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      revert(0x00, 0x00)\n    tag_151:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":7147:7157  balance0() */\n      tag_154\n        /* \"src/UniswapV3Pool.sol\":7147:7155  balance0 */\n      tag_97\n        /* \"src/UniswapV3Pool.sol\":7147:7157  balance0() */\n      jump\t// in\n    tag_154:\n        /* \"src/UniswapV3Pool.sol\":7136:7143  amount0 */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":7111:7125  balance0Before */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":7111:7144  balance0Before + uint256(amount0) */\n      tag_155\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_155:\n        /* \"src/UniswapV3Pool.sol\":7111:7157  balance0Before + uint256(amount0) > balance0() */\n      gt\n        /* \"src/UniswapV3Pool.sol\":7107:7208  if (balance0Before + uint256(amount0) > balance0())... */\n      iszero\n      tag_156\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":7183:7208  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":7107:7208  if (balance0Before + uint256(amount0) > balance0())... */\n    tag_156:\n        /* \"src/UniswapV3Pool.sol\":6811:7220  {... */\n      pop\n        /* \"src/UniswapV3Pool.sol\":6795:7635  if (zeroForOne) {... */\n      jump(tag_157)\n    tag_140:\n        /* \"src/UniswapV3Pool.sol\":7248:7254  token0 */\n      immutable(\"0x215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803\")\n        /* \"src/UniswapV3Pool.sol\":7241:7264  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/UniswapV3Pool.sol\":7265:7274  recipient */\n      dup11\n        /* \"src/UniswapV3Pool.sol\":7285:7292  amount0 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":7284:7292  -amount0 */\n      tag_158\n      swap1\n      tag_135\n      jump\t// in\n    tag_158:\n        /* \"src/UniswapV3Pool.sol\":7241:7294  IERC20(token0).transfer(recipient, uint256(-amount0)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_162:\n      pop\n        /* \"src/UniswapV3Pool.sol\":7311:7333  uint256 balance1Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":7336:7346  balance1() */\n      tag_163\n        /* \"src/UniswapV3Pool.sol\":7336:7344  balance1 */\n      tag_100\n        /* \"src/UniswapV3Pool.sol\":7336:7346  balance1() */\n      jump\t// in\n    tag_163:\n        /* \"src/UniswapV3Pool.sol\":7311:7346  uint256 balance1Before = balance1() */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":7384:7394  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":7361:7417  IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfa461e33\n        /* \"src/UniswapV3Pool.sol\":7436:7443  amount0 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":7462:7469  amount1 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":7488:7492  data */\n      dup11\n      dup11\n        /* \"src/UniswapV3Pool.sol\":7361:7507  IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_164:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      revert(0x00, 0x00)\n    tag_165:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":7562:7572  balance1() */\n      tag_168\n        /* \"src/UniswapV3Pool.sol\":7562:7570  balance1 */\n      tag_100\n        /* \"src/UniswapV3Pool.sol\":7562:7572  balance1() */\n      jump\t// in\n    tag_168:\n        /* \"src/UniswapV3Pool.sol\":7551:7558  amount1 */\n      dup5\n        /* \"src/UniswapV3Pool.sol\":7526:7540  balance1Before */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":7526:7559  balance1Before + uint256(amount1) */\n      tag_169\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_169:\n        /* \"src/UniswapV3Pool.sol\":7526:7572  balance1Before + uint256(amount1) > balance1() */\n      gt\n        /* \"src/UniswapV3Pool.sol\":7522:7623  if (balance1Before + uint256(amount1) > balance1())... */\n      iszero\n      tag_170\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":7598:7623  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":7522:7623  if (balance1Before + uint256(amount1) > balance1())... */\n    tag_170:\n        /* \"src/UniswapV3Pool.sol\":7226:7635  {... */\n      pop\n        /* \"src/UniswapV3Pool.sol\":6795:7635  if (zeroForOne) {... */\n    tag_157:\n        /* \"src/UniswapV3Pool.sol\":7697:7706  recipient */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":7653:7843  Swap(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":7672:7682  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":7653:7843  Swap(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67\n        /* \"src/UniswapV3Pool.sol\":7721:7728  amount0 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":7743:7750  amount1 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":7765:7770  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":7765:7783  slot0.sqrtPriceX96 */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":7798:7807  liquidity */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":7822:7827  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":7822:7832  slot0.tick */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":7653:7843  Swap(... */\n      mload(0x40)\n      tag_171\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/UniswapV3Pool.sol\":4982:7851  {... */\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":4699:7851  function swap(... */\n      swap6\n      pop\n      swap6\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":981:1012  address public immutable token1 */\n    tag_49:\n      immutable(\"0xcd41b8bf8f20f7ad95d96d948a315af225b219053fc98a80aee13063b692b681\")\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1299:1339  mapping(int24 => Tick.Info) public ticks */\n    tag_54:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/lib/Tick.sol\":160:695  function update(... */\n    tag_65:\n        /* \"src/lib/Tick.sol\":302:314  bool flipped */\n      0x00\n        /* \"src/lib/Tick.sol\":326:352  Tick.Info storage tickInfo */\n      0x00\n        /* \"src/lib/Tick.sol\":355:359  self */\n      dup5\n        /* \"src/lib/Tick.sol\":355:365  self[tick] */\n      0x00\n        /* \"src/lib/Tick.sol\":360:364  tick */\n      dup6\n        /* \"src/lib/Tick.sol\":355:365  self[tick] */\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/lib/Tick.sol\":326:365  Tick.Info storage tickInfo = self[tick] */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":375:398  uint128 liquidityBefore */\n      0x00\n        /* \"src/lib/Tick.sol\":401:409  tickInfo */\n      dup2\n        /* \"src/lib/Tick.sol\":401:419  tickInfo.liquidity */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Tick.sol\":375:419  uint128 liquidityBefore = tickInfo.liquidity */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":429:451  uint128 liquidityAfter */\n      0x00\n        /* \"src/lib/Tick.sol\":472:486  liquidityDelta */\n      dup5\n        /* \"src/lib/Tick.sol\":454:469  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":454:486  liquidityBefore + liquidityDelta */\n      tag_174\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_174:\n        /* \"src/lib/Tick.sol\":429:486  uint128 liquidityAfter = liquidityBefore + liquidityDelta */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":552:553  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":533:548  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":533:553  liquidityBefore == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/lib/Tick.sol\":507:554  (liquidityAfter == 0) != (liquidityBefore == 0) */\n      iszero\n      iszero\n        /* \"src/lib/Tick.sol\":526:527  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":508:522  liquidityAfter */\n      dup3\n        /* \"src/lib/Tick.sol\":508:527  liquidityAfter == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/lib/Tick.sol\":507:554  (liquidityAfter == 0) != (liquidityBefore == 0) */\n      iszero\n      iszero\n      eq\n      iszero\n        /* \"src/lib/Tick.sol\":497:554  flipped = (liquidityAfter == 0) != (liquidityBefore == 0) */\n      swap4\n      pop\n        /* \"src/lib/Tick.sol\":588:589  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":569:584  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":569:589  liquidityBefore == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/lib/Tick.sol\":565:643  if (liquidityBefore == 0) {... */\n      tag_175\n      jumpi\n        /* \"src/lib/Tick.sol\":628:632  true */\n      0x01\n        /* \"src/lib/Tick.sol\":605:613  tickInfo */\n      dup4\n        /* \"src/lib/Tick.sol\":605:625  tickInfo.initialized */\n      0x00\n      add\n      0x00\n        /* \"src/lib/Tick.sol\":605:632  tickInfo.initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Tick.sol\":565:643  if (liquidityBefore == 0) {... */\n    tag_175:\n        /* \"src/lib/Tick.sol\":674:688  liquidityAfter */\n      dup1\n        /* \"src/lib/Tick.sol\":653:661  tickInfo */\n      dup4\n        /* \"src/lib/Tick.sol\":653:671  tickInfo.liquidity */\n      0x00\n      add\n      0x01\n        /* \"src/lib/Tick.sol\":653:688  tickInfo.liquidity = liquidityAfter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Tick.sol\":316:695  {... */\n      pop\n      pop\n      pop\n        /* \"src/lib/Tick.sol\":160:695  function update(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":1110:1458  function flipTick(... */\n    tag_69:\n        /* \"src/lib/TickBitmap.sol\":1278:1279  0 */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1263:1274  tickSpacing */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":1256:1260  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":1256:1274  tick % tickSpacing */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"src/lib/TickBitmap.sol\":1256:1279  tick % tickSpacing == 0 */\n      0x02\n      signextend\n      eq\n        /* \"src/lib/TickBitmap.sol\":1248:1280  require(tick % tickSpacing == 0) */\n      tag_179\n      jumpi\n      revert(0x00, 0x00)\n    tag_179:\n        /* \"src/lib/TickBitmap.sol\":1325:1338  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1340:1352  uint8 bitPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1356:1384  position(tick / tickSpacing) */\n      tag_180\n        /* \"src/lib/TickBitmap.sol\":1372:1383  tickSpacing */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":1365:1369  tick */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":1365:1383  tick / tickSpacing */\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"src/lib/TickBitmap.sol\":1356:1364  position */\n      tag_183\n        /* \"src/lib/TickBitmap.sol\":1356:1384  position(tick / tickSpacing) */\n      jump\t// in\n    tag_180:\n        /* \"src/lib/TickBitmap.sol\":1324:1384  (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":1394:1406  uint256 mask */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1414:1420  bitPos */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":1409:1420  1 << bitPos */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":1409:1410  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":1409:1420  1 << bitPos */\n      swap1\n      shl\n        /* \"src/lib/TickBitmap.sol\":1394:1420  uint256 mask = 1 << bitPos */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":1447:1451  mask */\n      dup1\n        /* \"src/lib/TickBitmap.sol\":1430:1434  self */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":1430:1443  self[wordPos] */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1435:1442  wordPos */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":1430:1443  self[wordPos] */\n      0x01\n      signextend\n      0x01\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1430:1451  self[wordPos] ^= mask */\n      dup3\n      dup3\n      sload\n      xor\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/lib/TickBitmap.sol\":1238:1458  {... */\n      pop\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":1110:1458  function flipTick(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Position.sol\":138:444  function get(... */\n    tag_73:\n        /* \"src/lib/Position.sol\":300:330  Position.Info storage position */\n      0x00\n        /* \"src/lib/Position.sol\":353:357  self */\n      dup5\n        /* \"src/lib/Position.sol\":353:437  self[... */\n      0x00\n        /* \"src/lib/Position.sol\":398:403  owner */\n      dup6\n        /* \"src/lib/Position.sol\":405:414  lowerTick */\n      dup6\n        /* \"src/lib/Position.sol\":416:425  upperTick */\n      dup6\n        /* \"src/lib/Position.sol\":381:426  abi.encodePacked(owner, lowerTick, upperTick) */\n      add(0x20, mload(0x40))\n      tag_185\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/lib/Position.sol\":371:427  keccak256(abi.encodePacked(owner, lowerTick, upperTick)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/lib/Position.sol\":353:437  self[... */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/lib/Position.sol\":342:437  position = self[... */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":138:444  function get(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Position.sol\":450:684  function update(Info storage self, uint128 liquidityDelta) internal {... */\n    tag_75:\n        /* \"src/lib/Position.sol\":528:551  uint128 liquidityBefore */\n      0x00\n        /* \"src/lib/Position.sol\":554:558  self */\n      dup3\n        /* \"src/lib/Position.sol\":554:568  self.liquidity */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Position.sol\":528:568  uint128 liquidityBefore = self.liquidity */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":578:600  uint128 liquidityAfter */\n      0x00\n        /* \"src/lib/Position.sol\":621:635  liquidityDelta */\n      dup3\n        /* \"src/lib/Position.sol\":603:618  liquidityBefore */\n      dup3\n        /* \"src/lib/Position.sol\":603:635  liquidityBefore + liquidityDelta */\n      tag_188\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_188:\n        /* \"src/lib/Position.sol\":578:635  uint128 liquidityAfter = liquidityBefore + liquidityDelta */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":663:677  liquidityAfter */\n      dup1\n        /* \"src/lib/Position.sol\":646:650  self */\n      dup5\n        /* \"src/lib/Position.sol\":646:660  self.liquidity */\n      0x00\n      add\n      0x00\n        /* \"src/lib/Position.sol\":646:677  self.liquidity = liquidityAfter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Position.sol\":518:684  {... */\n      pop\n      pop\n        /* \"src/lib/Position.sol\":450:684  function update(Info storage self, uint128 liquidityDelta) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/TickMath.sol\":1355:3943  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_79:\n        /* \"src/lib/TickMath.sol\":1418:1438  uint160 sqrtPriceX96 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1450:1465  uint256 absTick */\n      0x00\n        /* \"src/lib/TickMath.sol\":1475:1476  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1468:1472  tick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1468:1476  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"src/lib/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_190\n      jumpi\n        /* \"src/lib/TickMath.sol\":1519:1523  tick */\n      dup3\n        /* \"src/lib/TickMath.sol\":1512:1524  int256(tick) */\n      0x02\n      signextend\n        /* \"src/lib/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_191)\n    tag_190:\n        /* \"src/lib/TickMath.sol\":1495:1499  tick */\n      dup3\n        /* \"src/lib/TickMath.sol\":1488:1500  int256(tick) */\n      0x02\n      signextend\n        /* \"src/lib/TickMath.sol\":1487:1500  -int256(tick) */\n      tag_192\n      swap1\n      tag_135\n      jump\t// in\n    tag_192:\n        /* \"src/lib/TickMath.sol\":1468:1525  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_191:\n        /* \"src/lib/TickMath.sol\":1450:1525  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":477:484  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"src/lib/TickMath.sol\":637:646  -MIN_TICK */\n      tag_193\n      swap1\n      tag_61\n      jump\t// in\n    tag_193:\n        /* \"src/lib/TickMath.sol\":1554:1579  uint256(uint24(MAX_TICK)) */\n      0xffffff\n      and\n        /* \"src/lib/TickMath.sol\":1543:1550  absTick */\n      dup2\n        /* \"src/lib/TickMath.sol\":1543:1579  absTick <= uint256(uint24(MAX_TICK)) */\n      gt\n      iszero\n        /* \"src/lib/TickMath.sol\":1535:1585  require(absTick <= uint256(uint24(MAX_TICK)), 'T') */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"src/lib/TickMath.sol\":1596:1609  uint256 ratio */\n      0x00\n        /* \"src/lib/TickMath.sol\":1629:1630  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1622:1625  0x1 */\n      0x01\n        /* \"src/lib/TickMath.sol\":1612:1619  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1612:1625  absTick & 0x1 */\n      and\n        /* \"src/lib/TickMath.sol\":1612:1630  absTick & 0x1 != 0 */\n      sub\n        /* \"src/lib/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_197\n      jumpi\n        /* \"src/lib/TickMath.sol\":1670:1705  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"src/lib/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      jump(tag_198)\n    tag_197:\n        /* \"src/lib/TickMath.sol\":1633:1667  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"src/lib/TickMath.sol\":1612:1705  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_198:\n        /* \"src/lib/TickMath.sol\":1596:1705  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1736:1737  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1729:1732  0x2 */\n      0x02\n        /* \"src/lib/TickMath.sol\":1719:1726  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1719:1732  absTick & 0x2 */\n      and\n        /* \"src/lib/TickMath.sol\":1719:1737  absTick & 0x2 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":1715:1798  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_199\n      jumpi\n        /* \"src/lib/TickMath.sol\":1795:1798  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":1756:1790  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"src/lib/TickMath.sol\":1748:1753  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":1748:1790  ratio * 0xfff97272373d413259a46990580e213a */\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"src/lib/TickMath.sol\":1747:1798  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":1739:1798  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1715:1798  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_199:\n        /* \"src/lib/TickMath.sol\":1829:1830  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1822:1825  0x4 */\n      0x04\n        /* \"src/lib/TickMath.sol\":1812:1819  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1812:1825  absTick & 0x4 */\n      and\n        /* \"src/lib/TickMath.sol\":1812:1830  absTick & 0x4 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":1808:1891  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_202\n      jumpi\n        /* \"src/lib/TickMath.sol\":1888:1891  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":1849:1883  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"src/lib/TickMath.sol\":1841:1846  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":1841:1883  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      tag_203\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_203:\n        /* \"src/lib/TickMath.sol\":1840:1891  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":1832:1891  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1808:1891  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_202:\n        /* \"src/lib/TickMath.sol\":1922:1923  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":1915:1918  0x8 */\n      0x08\n        /* \"src/lib/TickMath.sol\":1905:1912  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1905:1918  absTick & 0x8 */\n      and\n        /* \"src/lib/TickMath.sol\":1905:1923  absTick & 0x8 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":1901:1984  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_204\n      jumpi\n        /* \"src/lib/TickMath.sol\":1981:1984  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":1942:1976  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"src/lib/TickMath.sol\":1934:1939  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":1934:1976  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      tag_205\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_205:\n        /* \"src/lib/TickMath.sol\":1933:1984  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":1925:1984  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1901:1984  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_204:\n        /* \"src/lib/TickMath.sol\":2016:2017  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2008:2012  0x10 */\n      0x10\n        /* \"src/lib/TickMath.sol\":1998:2005  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":1998:2012  absTick & 0x10 */\n      and\n        /* \"src/lib/TickMath.sol\":1998:2017  absTick & 0x10 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":1994:2078  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_206\n      jumpi\n        /* \"src/lib/TickMath.sol\":2075:2078  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2036:2070  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"src/lib/TickMath.sol\":2028:2033  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2028:2070  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      tag_207\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_207:\n        /* \"src/lib/TickMath.sol\":2027:2078  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2019:2078  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":1994:2078  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_206:\n        /* \"src/lib/TickMath.sol\":2110:2111  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2102:2106  0x20 */\n      0x20\n        /* \"src/lib/TickMath.sol\":2092:2099  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2092:2106  absTick & 0x20 */\n      and\n        /* \"src/lib/TickMath.sol\":2092:2111  absTick & 0x20 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2088:2172  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_208\n      jumpi\n        /* \"src/lib/TickMath.sol\":2169:2172  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2130:2164  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"src/lib/TickMath.sol\":2122:2127  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2122:2164  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      tag_209\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_209:\n        /* \"src/lib/TickMath.sol\":2121:2172  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2113:2172  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2088:2172  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_208:\n        /* \"src/lib/TickMath.sol\":2204:2205  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2196:2200  0x40 */\n      0x40\n        /* \"src/lib/TickMath.sol\":2186:2193  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2186:2200  absTick & 0x40 */\n      and\n        /* \"src/lib/TickMath.sol\":2186:2205  absTick & 0x40 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2182:2266  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_210\n      jumpi\n        /* \"src/lib/TickMath.sol\":2263:2266  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2224:2258  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"src/lib/TickMath.sol\":2216:2221  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2216:2258  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      tag_211\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_211:\n        /* \"src/lib/TickMath.sol\":2215:2266  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2207:2266  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2182:2266  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_210:\n        /* \"src/lib/TickMath.sol\":2298:2299  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2290:2294  0x80 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2280:2287  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2280:2294  absTick & 0x80 */\n      and\n        /* \"src/lib/TickMath.sol\":2280:2299  absTick & 0x80 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2276:2360  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_212\n      jumpi\n        /* \"src/lib/TickMath.sol\":2357:2360  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2318:2352  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"src/lib/TickMath.sol\":2310:2315  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2310:2352  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      tag_213\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_213:\n        /* \"src/lib/TickMath.sol\":2309:2360  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2301:2360  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2276:2360  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_212:\n        /* \"src/lib/TickMath.sol\":2393:2394  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2384:2389  0x100 */\n      0x0100\n        /* \"src/lib/TickMath.sol\":2374:2381  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2374:2389  absTick & 0x100 */\n      and\n        /* \"src/lib/TickMath.sol\":2374:2394  absTick & 0x100 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2370:2455  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_214\n      jumpi\n        /* \"src/lib/TickMath.sol\":2452:2455  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2413:2447  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"src/lib/TickMath.sol\":2405:2410  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2405:2447  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      tag_215\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_215:\n        /* \"src/lib/TickMath.sol\":2404:2455  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2396:2455  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2370:2455  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_214:\n        /* \"src/lib/TickMath.sol\":2488:2489  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2479:2484  0x200 */\n      0x0200\n        /* \"src/lib/TickMath.sol\":2469:2476  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2469:2484  absTick & 0x200 */\n      and\n        /* \"src/lib/TickMath.sol\":2469:2489  absTick & 0x200 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2465:2550  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_216\n      jumpi\n        /* \"src/lib/TickMath.sol\":2547:2550  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2508:2542  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"src/lib/TickMath.sol\":2500:2505  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2500:2542  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      tag_217\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_217:\n        /* \"src/lib/TickMath.sol\":2499:2550  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2491:2550  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2465:2550  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_216:\n        /* \"src/lib/TickMath.sol\":2583:2584  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2574:2579  0x400 */\n      0x0400\n        /* \"src/lib/TickMath.sol\":2564:2571  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2564:2579  absTick & 0x400 */\n      and\n        /* \"src/lib/TickMath.sol\":2564:2584  absTick & 0x400 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2560:2645  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_218\n      jumpi\n        /* \"src/lib/TickMath.sol\":2642:2645  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2603:2637  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"src/lib/TickMath.sol\":2595:2600  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2595:2637  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      tag_219\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_219:\n        /* \"src/lib/TickMath.sol\":2594:2645  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2586:2645  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2560:2645  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_218:\n        /* \"src/lib/TickMath.sol\":2678:2679  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2669:2674  0x800 */\n      0x0800\n        /* \"src/lib/TickMath.sol\":2659:2666  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2659:2674  absTick & 0x800 */\n      and\n        /* \"src/lib/TickMath.sol\":2659:2679  absTick & 0x800 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2655:2740  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_220\n      jumpi\n        /* \"src/lib/TickMath.sol\":2737:2740  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2698:2732  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"src/lib/TickMath.sol\":2690:2695  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2690:2732  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      tag_221\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_221:\n        /* \"src/lib/TickMath.sol\":2689:2740  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2681:2740  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2655:2740  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_220:\n        /* \"src/lib/TickMath.sol\":2774:2775  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2764:2770  0x1000 */\n      0x1000\n        /* \"src/lib/TickMath.sol\":2754:2761  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2754:2770  absTick & 0x1000 */\n      and\n        /* \"src/lib/TickMath.sol\":2754:2775  absTick & 0x1000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2750:2836  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_222\n      jumpi\n        /* \"src/lib/TickMath.sol\":2833:2836  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2794:2828  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"src/lib/TickMath.sol\":2786:2791  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2786:2828  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      tag_223\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_223:\n        /* \"src/lib/TickMath.sol\":2785:2836  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2777:2836  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2750:2836  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_222:\n        /* \"src/lib/TickMath.sol\":2870:2871  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2860:2866  0x2000 */\n      0x2000\n        /* \"src/lib/TickMath.sol\":2850:2857  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2850:2866  absTick & 0x2000 */\n      and\n        /* \"src/lib/TickMath.sol\":2850:2871  absTick & 0x2000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2846:2932  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_224\n      jumpi\n        /* \"src/lib/TickMath.sol\":2929:2932  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2890:2924  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"src/lib/TickMath.sol\":2882:2887  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2882:2924  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      tag_225\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_225:\n        /* \"src/lib/TickMath.sol\":2881:2932  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2873:2932  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2846:2932  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_224:\n        /* \"src/lib/TickMath.sol\":2966:2967  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":2956:2962  0x4000 */\n      0x4000\n        /* \"src/lib/TickMath.sol\":2946:2953  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":2946:2962  absTick & 0x4000 */\n      and\n        /* \"src/lib/TickMath.sol\":2946:2967  absTick & 0x4000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":2942:3028  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_226\n      jumpi\n        /* \"src/lib/TickMath.sol\":3025:3028  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":2986:3020  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"src/lib/TickMath.sol\":2978:2983  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":2978:3020  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      tag_227\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_227:\n        /* \"src/lib/TickMath.sol\":2977:3028  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":2969:3028  ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":2942:3028  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_226:\n        /* \"src/lib/TickMath.sol\":3062:3063  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3052:3058  0x8000 */\n      0x8000\n        /* \"src/lib/TickMath.sol\":3042:3049  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3042:3058  absTick & 0x8000 */\n      and\n        /* \"src/lib/TickMath.sol\":3042:3063  absTick & 0x8000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3038:3124  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_228\n      jumpi\n        /* \"src/lib/TickMath.sol\":3121:3124  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3082:3116  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"src/lib/TickMath.sol\":3074:3079  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3074:3116  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      tag_229\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_229:\n        /* \"src/lib/TickMath.sol\":3073:3124  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3065:3124  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3038:3124  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_228:\n        /* \"src/lib/TickMath.sol\":3159:3160  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3148:3155  0x10000 */\n      0x010000\n        /* \"src/lib/TickMath.sol\":3138:3145  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3138:3155  absTick & 0x10000 */\n      and\n        /* \"src/lib/TickMath.sol\":3138:3160  absTick & 0x10000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3134:3220  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_230\n      jumpi\n        /* \"src/lib/TickMath.sol\":3217:3220  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3179:3212  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"src/lib/TickMath.sol\":3171:3176  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3171:3212  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      tag_231\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_231:\n        /* \"src/lib/TickMath.sol\":3170:3220  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3162:3220  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3134:3220  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_230:\n        /* \"src/lib/TickMath.sol\":3255:3256  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3244:3251  0x20000 */\n      0x020000\n        /* \"src/lib/TickMath.sol\":3234:3241  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3234:3251  absTick & 0x20000 */\n      and\n        /* \"src/lib/TickMath.sol\":3234:3256  absTick & 0x20000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3230:3315  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_232\n      jumpi\n        /* \"src/lib/TickMath.sol\":3312:3315  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3275:3307  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"src/lib/TickMath.sol\":3267:3272  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3267:3307  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      tag_233\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_233:\n        /* \"src/lib/TickMath.sol\":3266:3315  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3258:3315  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3230:3315  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_232:\n        /* \"src/lib/TickMath.sol\":3350:3351  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3339:3346  0x40000 */\n      0x040000\n        /* \"src/lib/TickMath.sol\":3329:3336  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3329:3346  absTick & 0x40000 */\n      and\n        /* \"src/lib/TickMath.sol\":3329:3351  absTick & 0x40000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3325:3408  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_234\n      jumpi\n        /* \"src/lib/TickMath.sol\":3405:3408  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3370:3400  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"src/lib/TickMath.sol\":3362:3367  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3362:3400  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      tag_235\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_235:\n        /* \"src/lib/TickMath.sol\":3361:3408  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3353:3408  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3325:3408  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_234:\n        /* \"src/lib/TickMath.sol\":3443:3444  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3432:3439  0x80000 */\n      0x080000\n        /* \"src/lib/TickMath.sol\":3422:3429  absTick */\n      dup4\n        /* \"src/lib/TickMath.sol\":3422:3439  absTick & 0x80000 */\n      and\n        /* \"src/lib/TickMath.sol\":3422:3444  absTick & 0x80000 != 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3418:3496  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_236\n      jumpi\n        /* \"src/lib/TickMath.sol\":3493:3496  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":3463:3488  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"src/lib/TickMath.sol\":3455:3460  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3455:3488  ratio * 0x48a170391f7dc42444e8fa2 */\n      tag_237\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_237:\n        /* \"src/lib/TickMath.sol\":3454:3496  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3446:3496  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3418:3496  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_236:\n        /* \"src/lib/TickMath.sol\":3518:3519  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3511:3515  tick */\n      dup5\n        /* \"src/lib/TickMath.sol\":3511:3519  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"src/lib/TickMath.sol\":3507:3554  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_238\n      jumpi\n        /* \"src/lib/TickMath.sol\":3549:3554  ratio */\n      dup1\n        /* \"src/lib/TickMath.sol\":3529:3546  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/lib/TickMath.sol\":3529:3554  type(uint256).max / ratio */\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"src/lib/TickMath.sol\":3521:3554  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":3507:3554  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_238:\n        /* \"src/lib/TickMath.sol\":3925:3926  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3913:3920  1 << 32 */\n      0x0100000000\n        /* \"src/lib/TickMath.sol\":3904:3909  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3904:3921  ratio % (1 << 32) */\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"src/lib/TickMath.sol\":3904:3926  ratio % (1 << 32) == 0 */\n      eq\n        /* \"src/lib/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_243\n      jumpi\n        /* \"src/lib/TickMath.sol\":3933:3934  1 */\n      0x01\n        /* \"src/lib/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_244)\n    tag_243:\n        /* \"src/lib/TickMath.sol\":3929:3930  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":3904:3934  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_244:\n        /* \"src/lib/TickMath.sol\":3887:3935  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"src/lib/TickMath.sol\":3897:3899  32 */\n      0x20\n        /* \"src/lib/TickMath.sol\":3888:3893  ratio */\n      dup3\n        /* \"src/lib/TickMath.sol\":3888:3899  ratio >> 32 */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":3887:3935  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      tag_245\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_245:\n        /* \"src/lib/TickMath.sol\":3864:3936  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":1440:3943  {... */\n      pop\n      pop\n        /* \"src/lib/TickMath.sol\":1355:3943  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":245:830  function calcAmount0Delta(... */\n    tag_81:\n        /* \"src/lib/Math.sol\":389:404  uint256 amount0 */\n      0x00\n        /* \"src/lib/Math.sol\":436:449  sqrtPriceBX96 */\n      dup3\n        /* \"src/lib/Math.sol\":420:449  sqrtPriceAX96 > sqrtPriceBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":420:433  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":420:449  sqrtPriceAX96 > sqrtPriceBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"src/lib/Math.sol\":416:526  if (sqrtPriceAX96 > sqrtPriceBX96)... */\n      iszero\n      tag_247\n      jumpi\n        /* \"src/lib/Math.sol\":497:510  sqrtPriceBX96 */\n      dup3\n        /* \"src/lib/Math.sol\":512:525  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":463:526  (sqrtPriceAX96, sqrtPriceBX96) = (sqrtPriceBX96, sqrtPriceAX96) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"src/lib/Math.sol\":416:526  if (sqrtPriceAX96 > sqrtPriceBX96)... */\n    tag_247:\n        /* \"src/lib/Math.sol\":561:562  0 */\n      0x00\n        /* \"src/lib/Math.sol\":545:558  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":545:562  sqrtPriceAX96 > 0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"src/lib/Math.sol\":537:563  require(sqrtPriceAX96 > 0) */\n      tag_248\n      jumpi\n      revert(0x00, 0x00)\n    tag_248:\n        /* \"src/lib/Math.sol\":584:823  divRoundingUp(... */\n      tag_249\n        /* \"src/lib/Math.sol\":611:786  mulDivRoundingUp(... */\n      tag_250\n        /* \"src/lib/FixedPoint96.sol\":135:137  96 */\n      0x60\n        /* \"src/lib/Math.sol\":646:691  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      0xff\n      and\n        /* \"src/lib/Math.sol\":654:663  liquidity */\n      dup5\n        /* \"src/lib/Math.sol\":646:664  uint256(liquidity) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":646:691  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      swap1\n      shl\n        /* \"src/lib/Math.sol\":727:740  sqrtPriceAX96 */\n      dup7\n        /* \"src/lib/Math.sol\":711:724  sqrtPriceBX96 */\n      dup7\n        /* \"src/lib/Math.sol\":711:740  sqrtPriceBX96 - sqrtPriceAX96 */\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"src/lib/Math.sol\":611:786  mulDivRoundingUp(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":759:772  sqrtPriceBX96 */\n      dup7\n        /* \"src/lib/Math.sol\":611:786  mulDivRoundingUp(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":611:627  mulDivRoundingUp */\n      tag_253\n        /* \"src/lib/Math.sol\":611:786  mulDivRoundingUp(... */\n      jump\t// in\n    tag_250:\n        /* \"src/lib/Math.sol\":800:813  sqrtPriceAX96 */\n      dup6\n        /* \"src/lib/Math.sol\":584:823  divRoundingUp(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":584:597  divRoundingUp */\n      tag_254\n        /* \"src/lib/Math.sol\":584:823  divRoundingUp(... */\n      jump\t// in\n    tag_249:\n        /* \"src/lib/Math.sol\":574:823  amount0 = divRoundingUp(... */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":245:830  function calcAmount0Delta(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":945:1378  function calcAmount1Delta(... */\n    tag_88:\n        /* \"src/lib/Math.sol\":1089:1104  uint256 amount1 */\n      0x00\n        /* \"src/lib/Math.sol\":1136:1149  sqrtPriceBX96 */\n      dup3\n        /* \"src/lib/Math.sol\":1120:1149  sqrtPriceAX96 > sqrtPriceBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":1120:1133  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":1120:1149  sqrtPriceAX96 > sqrtPriceBX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"src/lib/Math.sol\":1116:1226  if (sqrtPriceAX96 > sqrtPriceBX96)... */\n      iszero\n      tag_256\n      jumpi\n        /* \"src/lib/Math.sol\":1197:1210  sqrtPriceBX96 */\n      dup3\n        /* \"src/lib/Math.sol\":1212:1225  sqrtPriceAX96 */\n      dup5\n        /* \"src/lib/Math.sol\":1163:1226  (sqrtPriceAX96, sqrtPriceBX96) = (sqrtPriceBX96, sqrtPriceAX96) */\n      dup1\n      swap5\n      pop\n      dup2\n      swap6\n      pop\n      pop\n      pop\n        /* \"src/lib/Math.sol\":1116:1226  if (sqrtPriceAX96 > sqrtPriceBX96)... */\n    tag_256:\n        /* \"src/lib/Math.sol\":1247:1371  mulDivRoundingUp(... */\n      tag_257\n        /* \"src/lib/Math.sol\":1277:1286  liquidity */\n      dup3\n        /* \"src/lib/Math.sol\":1247:1371  mulDivRoundingUp(... */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":1317:1330  sqrtPriceAX96 */\n      dup6\n        /* \"src/lib/Math.sol\":1301:1314  sqrtPriceBX96 */\n      dup6\n        /* \"src/lib/Math.sol\":1301:1330  sqrtPriceBX96 - sqrtPriceAX96 */\n      tag_258\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_258:\n        /* \"src/lib/Math.sol\":1247:1371  mulDivRoundingUp(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/FixedPoint96.sol\":175:180  2**96 */\n      0x01000000000000000000000000\n        /* \"src/lib/Math.sol\":1247:1263  mulDivRoundingUp */\n      tag_253\n        /* \"src/lib/Math.sol\":1247:1371  mulDivRoundingUp(... */\n      jump\t// in\n    tag_257:\n        /* \"src/lib/Math.sol\":1237:1371  amount1 = mulDivRoundingUp(... */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":945:1378  function calcAmount1Delta(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":7880:8008  function balance0() internal view returns (uint256 balance) {... */\n    tag_97:\n        /* \"src/UniswapV3Pool.sol\":7923:7938  uint256 balance */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":7968:7974  token0 */\n      immutable(\"0x215d56ac8bbcf4ec574772ebea743ba30ac9d1c5e1b1ff899e5de1045f5df803\")\n        /* \"src/UniswapV3Pool.sol\":7961:7985  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/UniswapV3Pool.sol\":7994:7998  this */\n      address\n        /* \"src/UniswapV3Pool.sol\":7961:8000  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_260:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_263\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"src/UniswapV3Pool.sol\":7951:8000  balance = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":7880:8008  function balance0() internal view returns (uint256 balance) {... */\n      swap1\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":8037:8165  function balance1() internal view returns (uint256 balance) {... */\n    tag_100:\n        /* \"src/UniswapV3Pool.sol\":8080:8095  uint256 balance */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":8125:8131  token1 */\n      immutable(\"0xcd41b8bf8f20f7ad95d96d948a315af225b219053fc98a80aee13063b692b681\")\n        /* \"src/UniswapV3Pool.sol\":8118:8142  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/UniswapV3Pool.sol\":8151:8155  this */\n      address\n        /* \"src/UniswapV3Pool.sol\":8118:8157  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_266:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_268:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_269\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_269:\n        /* \"src/UniswapV3Pool.sol\":8108:8157  balance = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":8037:8165  function balance1() internal view returns (uint256 balance) {... */\n      swap1\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":2196:4153  function nextInitializedTickWithinOneWord(... */\n    tag_123:\n        /* \"src/lib/TickBitmap.sol\":2380:2390  int24 next */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2392:2408  bool initialized */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2420:2436  int24 compressed */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2446:2457  tickSpacing */\n      dup5\n        /* \"src/lib/TickBitmap.sol\":2439:2443  tick */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":2439:2457  tick / tickSpacing */\n      tag_271\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_271:\n        /* \"src/lib/TickBitmap.sol\":2420:2457  int24 compressed = tick / tickSpacing */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":2478:2479  0 */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2471:2475  tick */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":2471:2479  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"src/lib/TickBitmap.sol\":2471:2506  tick < 0 && tick % tickSpacing != 0 */\n      dup1\n      iszero\n      tag_272\n      jumpi\n      pop\n        /* \"src/lib/TickBitmap.sol\":2505:2506  0 */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2490:2501  tickSpacing */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":2483:2487  tick */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":2483:2501  tick % tickSpacing */\n      tag_273\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_273:\n        /* \"src/lib/TickBitmap.sol\":2483:2506  tick % tickSpacing != 0 */\n      0x02\n      signextend\n      eq\n      iszero\n        /* \"src/lib/TickBitmap.sol\":2471:2506  tick < 0 && tick % tickSpacing != 0 */\n    tag_272:\n        /* \"src/lib/TickBitmap.sol\":2467:2520  if (tick < 0 && tick % tickSpacing != 0) compressed-- */\n      iszero\n      tag_274\n      jumpi\n        /* \"src/lib/TickBitmap.sol\":2508:2520  compressed-- */\n      dup1\n      dup1\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      swap2\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":2467:2520  if (tick < 0 && tick % tickSpacing != 0) compressed-- */\n    tag_274:\n        /* \"src/lib/TickBitmap.sol\":2570:2573  lte */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":2566:4147  if (lte) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"src/lib/TickBitmap.sol\":2590:2603  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2605:2617  uint8 bitPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2621:2641  position(compressed) */\n      tag_278\n        /* \"src/lib/TickBitmap.sol\":2630:2640  compressed */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":2621:2629  position */\n      tag_183\n        /* \"src/lib/TickBitmap.sol\":2621:2641  position(compressed) */\n      jump\t// in\n    tag_278:\n        /* \"src/lib/TickBitmap.sol\":2589:2641  (int16 wordPos, uint8 bitPos) = position(compressed) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":2722:2734  uint256 mask */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2763:2769  bitPos */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":2758:2769  1 << bitPos */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":2758:2759  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":2758:2769  1 << bitPos */\n      swap1\n      shl\n        /* \"src/lib/TickBitmap.sol\":2753:2754  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":2743:2749  bitPos */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":2738:2749  1 << bitPos */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":2738:2739  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":2738:2749  1 << bitPos */\n      swap1\n      shl\n        /* \"src/lib/TickBitmap.sol\":2737:2754  (1 << bitPos) - 1 */\n      tag_279\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_279:\n        /* \"src/lib/TickBitmap.sol\":2737:2770  (1 << bitPos) - 1 + (1 << bitPos) */\n      tag_280\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_280:\n        /* \"src/lib/TickBitmap.sol\":2722:2770  uint256 mask = (1 << bitPos) - 1 + (1 << bitPos) */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":2784:2798  uint256 masked */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2817:2821  mask */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":2801:2805  self */\n      dup12\n        /* \"src/lib/TickBitmap.sol\":2801:2814  self[wordPos] */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2806:2813  wordPos */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":2801:2814  self[wordPos] */\n      0x01\n      signextend\n      0x01\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/lib/TickBitmap.sol\":2801:2821  self[wordPos] & mask */\n      and\n        /* \"src/lib/TickBitmap.sol\":2784:2821  uint256 masked = self[wordPos] & mask */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":2978:2979  0 */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":2968:2974  masked */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":2968:2979  masked != 0 */\n      eq\n      iszero\n        /* \"src/lib/TickBitmap.sol\":2954:2979  initialized = masked != 0 */\n      swap6\n      pop\n        /* \"src/lib/TickBitmap.sol\":3110:3121  initialized */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":3110:3296  initialized... */\n      tag_281\n      jumpi\n        /* \"src/lib/TickBitmap.sol\":3285:3296  tickSpacing */\n      dup9\n        /* \"src/lib/TickBitmap.sol\":3273:3279  bitPos */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":3266:3280  uint24(bitPos) */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":3247:3257  compressed */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":3247:3281  compressed - int24(uint24(bitPos)) */\n      tag_282\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"src/lib/TickBitmap.sol\":3246:3296  (compressed - int24(uint24(bitPos))) * tickSpacing */\n      tag_284\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"src/lib/TickBitmap.sol\":3110:3296  initialized... */\n      jump(tag_286)\n    tag_281:\n        /* \"src/lib/TickBitmap.sol\":3216:3227  tickSpacing */\n      dup9\n        /* \"src/lib/TickBitmap.sol\":3176:3210  BitMath.mostSignificantBit(masked) */\n      tag_287\n        /* \"src/lib/TickBitmap.sol\":3203:3209  masked */\n      dup3\n        /* \"src/lib/TickBitmap.sol\":3176:3202  BitMath.mostSignificantBit */\n      tag_288\n        /* \"src/lib/TickBitmap.sol\":3176:3210  BitMath.mostSignificantBit(masked) */\n      jump\t// in\n    tag_287:\n        /* \"src/lib/TickBitmap.sol\":3167:3173  bitPos */\n      dup5\n        /* \"src/lib/TickBitmap.sol\":3167:3210  bitPos - BitMath.mostSignificantBit(masked) */\n      tag_289\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"src/lib/TickBitmap.sol\":3160:3211  uint24(bitPos - BitMath.mostSignificantBit(masked)) */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":3141:3151  compressed */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":3141:3212  compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked))) */\n      tag_291\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_291:\n        /* \"src/lib/TickBitmap.sol\":3140:3227  (compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked)))) * tickSpacing */\n      tag_292\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_292:\n        /* \"src/lib/TickBitmap.sol\":3110:3296  initialized... */\n    tag_286:\n        /* \"src/lib/TickBitmap.sol\":3103:3296  next = initialized... */\n      swap7\n      pop\n        /* \"src/lib/TickBitmap.sol\":2575:3307  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":2566:4147  if (lte) {... */\n      jump(tag_293)\n    tag_277:\n        /* \"src/lib/TickBitmap.sol\":3425:3438  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":3440:3452  uint8 bitPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":3456:3480  position(compressed + 1) */\n      tag_294\n        /* \"src/lib/TickBitmap.sol\":3478:3479  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":3465:3475  compressed */\n      dup5\n        /* \"src/lib/TickBitmap.sol\":3465:3479  compressed + 1 */\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n        /* \"src/lib/TickBitmap.sol\":3456:3464  position */\n      tag_183\n        /* \"src/lib/TickBitmap.sol\":3456:3480  position(compressed + 1) */\n      jump\t// in\n    tag_294:\n        /* \"src/lib/TickBitmap.sol\":3424:3480  (int16 wordPos, uint8 bitPos) = position(compressed + 1) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":3552:3564  uint256 mask */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":3585:3586  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":3575:3581  bitPos */\n      dup3\n        /* \"src/lib/TickBitmap.sol\":3570:3581  1 << bitPos */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":3570:3571  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":3570:3581  1 << bitPos */\n      swap1\n      shl\n        /* \"src/lib/TickBitmap.sol\":3569:3586  (1 << bitPos) - 1 */\n      tag_297\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_297:\n        /* \"src/lib/TickBitmap.sol\":3567:3587  ~((1 << bitPos) - 1) */\n      not\n        /* \"src/lib/TickBitmap.sol\":3552:3587  uint256 mask = ~((1 << bitPos) - 1) */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":3601:3615  uint256 masked */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":3634:3638  mask */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":3618:3622  self */\n      dup12\n        /* \"src/lib/TickBitmap.sol\":3618:3631  self[wordPos] */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":3623:3630  wordPos */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":3618:3631  self[wordPos] */\n      0x01\n      signextend\n      0x01\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/lib/TickBitmap.sol\":3618:3638  self[wordPos] & mask */\n      and\n        /* \"src/lib/TickBitmap.sol\":3601:3638  uint256 masked = self[wordPos] & mask */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":3787:3788  0 */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":3777:3783  masked */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":3777:3788  masked != 0 */\n      eq\n      iszero\n        /* \"src/lib/TickBitmap.sol\":3763:3788  initialized = masked != 0 */\n      swap6\n      pop\n        /* \"src/lib/TickBitmap.sol\":3919:3930  initialized */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":3919:4136  initialized... */\n      tag_298\n      jumpi\n        /* \"src/lib/TickBitmap.sol\":4125:4136  tickSpacing */\n      dup9\n        /* \"src/lib/TickBitmap.sol\":4112:4118  bitPos */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":4094:4109  type(uint8).max */\n      0xff\n        /* \"src/lib/TickBitmap.sol\":4094:4118  type(uint8).max - bitPos */\n      tag_299\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_299:\n        /* \"src/lib/TickBitmap.sol\":4086:4120  uint24((type(uint8).max - bitPos)) */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":4076:4077  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":4063:4073  compressed */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":4063:4077  compressed + 1 */\n      tag_300\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_300:\n        /* \"src/lib/TickBitmap.sol\":4063:4121  compressed + 1 + int24(uint24((type(uint8).max - bitPos))) */\n      tag_301\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_301:\n        /* \"src/lib/TickBitmap.sol\":4062:4136  (compressed + 1 + int24(uint24((type(uint8).max - bitPos)))) * tickSpacing */\n      tag_302\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_302:\n        /* \"src/lib/TickBitmap.sol\":3919:4136  initialized... */\n      jump(tag_303)\n    tag_298:\n        /* \"src/lib/TickBitmap.sol\":4032:4043  tickSpacing */\n      dup9\n        /* \"src/lib/TickBitmap.sol\":4019:4025  bitPos */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":3981:4016  BitMath.leastSignificantBit(masked) */\n      tag_304\n        /* \"src/lib/TickBitmap.sol\":4009:4015  masked */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":3981:4008  BitMath.leastSignificantBit */\n      tag_305\n        /* \"src/lib/TickBitmap.sol\":3981:4016  BitMath.leastSignificantBit(masked) */\n      jump\t// in\n    tag_304:\n        /* \"src/lib/TickBitmap.sol\":3981:4025  BitMath.leastSignificantBit(masked) - bitPos */\n      tag_306\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_306:\n        /* \"src/lib/TickBitmap.sol\":3973:4027  uint24((BitMath.leastSignificantBit(masked) - bitPos)) */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":3963:3964  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":3950:3960  compressed */\n      dup8\n        /* \"src/lib/TickBitmap.sol\":3950:3964  compressed + 1 */\n      tag_307\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_307:\n        /* \"src/lib/TickBitmap.sol\":3950:4028  compressed + 1 + int24(uint24((BitMath.leastSignificantBit(masked) - bitPos))) */\n      tag_308\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_308:\n        /* \"src/lib/TickBitmap.sol\":3949:4043  (compressed + 1 + int24(uint24((BitMath.leastSignificantBit(masked) - bitPos)))) * tickSpacing */\n      tag_309\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_309:\n        /* \"src/lib/TickBitmap.sol\":3919:4136  initialized... */\n    tag_303:\n        /* \"src/lib/TickBitmap.sol\":3912:4136  next = initialized... */\n      swap7\n      pop\n        /* \"src/lib/TickBitmap.sol\":3313:4147  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":2566:4147  if (lte) {... */\n    tag_293:\n        /* \"src/lib/TickBitmap.sol\":2410:4153  {... */\n      pop\n        /* \"src/lib/TickBitmap.sol\":2196:4153  function nextInitializedTickWithinOneWord(... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/SwapMath.sol\":108:1081  function computeSwapStep(... */\n    tag_126:\n        /* \"src/lib/SwapMath.sol\":332:356  uint160 sqrtPriceNextX96 */\n      0x00\n        /* \"src/lib/SwapMath.sol\":389:405  uint256 amountIn */\n      0x00\n        /* \"src/lib/SwapMath.sol\":419:436  uint256 amountOut */\n      0x00\n        /* \"src/lib/SwapMath.sol\":461:476  bool zeroForOne */\n      0x00\n        /* \"src/lib/SwapMath.sol\":502:520  sqrtPriceTargetX96 */\n      dup7\n        /* \"src/lib/SwapMath.sol\":479:520  sqrtPriceCurrentX96 >= sqrtPriceTargetX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/SwapMath.sol\":479:498  sqrtPriceCurrentX96 */\n      dup9\n        /* \"src/lib/SwapMath.sol\":479:520  sqrtPriceCurrentX96 >= sqrtPriceTargetX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"src/lib/SwapMath.sol\":461:520  bool zeroForOne = sqrtPriceCurrentX96 >= sqrtPriceTargetX96 */\n      swap1\n      pop\n        /* \"src/lib/SwapMath.sol\":550:699  Math.getNextSqrtPriceFromInput(... */\n      tag_311\n        /* \"src/lib/SwapMath.sol\":594:613  sqrtPriceCurrentX96 */\n      dup9\n        /* \"src/lib/SwapMath.sol\":627:636  liquidity */\n      dup8\n        /* \"src/lib/SwapMath.sol\":650:665  amountRemaining */\n      dup8\n        /* \"src/lib/SwapMath.sol\":679:689  zeroForOne */\n      dup5\n        /* \"src/lib/SwapMath.sol\":550:580  Math.getNextSqrtPriceFromInput */\n      tag_312\n        /* \"src/lib/SwapMath.sol\":550:699  Math.getNextSqrtPriceFromInput(... */\n      jump\t// in\n    tag_311:\n        /* \"src/lib/SwapMath.sol\":531:699  sqrtPriceNextX96 = Math.getNextSqrtPriceFromInput(... */\n      swap4\n      pop\n        /* \"src/lib/SwapMath.sol\":721:838  Math.calcAmount0Delta(... */\n      tag_313\n        /* \"src/lib/SwapMath.sol\":756:775  sqrtPriceCurrentX96 */\n      dup9\n        /* \"src/lib/SwapMath.sol\":789:805  sqrtPriceNextX96 */\n      dup6\n        /* \"src/lib/SwapMath.sol\":819:828  liquidity */\n      dup9\n        /* \"src/lib/SwapMath.sol\":721:742  Math.calcAmount0Delta */\n      tag_81\n        /* \"src/lib/SwapMath.sol\":721:838  Math.calcAmount0Delta(... */\n      jump\t// in\n    tag_313:\n        /* \"src/lib/SwapMath.sol\":710:838  amountIn = Math.calcAmount0Delta(... */\n      swap3\n      pop\n        /* \"src/lib/SwapMath.sol\":860:977  Math.calcAmount1Delta(... */\n      tag_314\n        /* \"src/lib/SwapMath.sol\":895:914  sqrtPriceCurrentX96 */\n      dup9\n        /* \"src/lib/SwapMath.sol\":928:944  sqrtPriceNextX96 */\n      dup6\n        /* \"src/lib/SwapMath.sol\":958:967  liquidity */\n      dup9\n        /* \"src/lib/SwapMath.sol\":860:881  Math.calcAmount1Delta */\n      tag_88\n        /* \"src/lib/SwapMath.sol\":860:977  Math.calcAmount1Delta(... */\n      jump\t// in\n    tag_314:\n        /* \"src/lib/SwapMath.sol\":848:977  amountOut = Math.calcAmount1Delta(... */\n      swap2\n      pop\n        /* \"src/lib/SwapMath.sol\":993:1003  zeroForOne */\n      dup1\n        /* \"src/lib/SwapMath.sol\":988:1075  if (!zeroForOne) {... */\n      tag_315\n      jumpi\n        /* \"src/lib/SwapMath.sol\":1044:1053  amountOut */\n      dup2\n        /* \"src/lib/SwapMath.sol\":1055:1063  amountIn */\n      dup4\n        /* \"src/lib/SwapMath.sol\":1019:1064  (amountIn, amountOut) = (amountOut, amountIn) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"src/lib/SwapMath.sol\":988:1075  if (!zeroForOne) {... */\n    tag_315:\n        /* \"src/lib/SwapMath.sol\":451:1081  {... */\n      pop\n        /* \"src/lib/SwapMath.sol\":108:1081  function computeSwapStep(... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/TickMath.sol\":4362:8643  function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {... */\n    tag_131:\n        /* \"src/lib/TickMath.sol\":4435:4445  int24 tick */\n      0x00\n        /* \"src/lib/TickMath.sol\":817:827  4295128739 */\n      0x01000276a3\n        /* \"src/lib/TickMath.sol\":4564:4594  sqrtPriceX96 >= MIN_SQRT_RATIO */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/TickMath.sol\":4564:4576  sqrtPriceX96 */\n      dup3\n        /* \"src/lib/TickMath.sol\":4564:4594  sqrtPriceX96 >= MIN_SQRT_RATIO */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"src/lib/TickMath.sol\":4564:4627  sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO */\n      dup1\n      iszero\n      tag_317\n      jumpi\n      pop\n        /* \"src/lib/TickMath.sol\":997:1046  1461446703485210103287273052203988822378723970342 */\n      0xfffd8963efd1fc6a506488495d951d5263988d26\n        /* \"src/lib/TickMath.sol\":4598:4627  sqrtPriceX96 < MAX_SQRT_RATIO */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/TickMath.sol\":4598:4610  sqrtPriceX96 */\n      dup3\n        /* \"src/lib/TickMath.sol\":4598:4627  sqrtPriceX96 < MAX_SQRT_RATIO */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"src/lib/TickMath.sol\":4564:4627  sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO */\n    tag_317:\n        /* \"src/lib/TickMath.sol\":4556:4633  require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R') */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"src/lib/TickMath.sol\":4643:4656  uint256 ratio */\n      0x00\n        /* \"src/lib/TickMath.sol\":4684:4686  32 */\n      0x20\n        /* \"src/lib/TickMath.sol\":4667:4679  sqrtPriceX96 */\n      dup4\n        /* \"src/lib/TickMath.sol\":4659:4680  uint256(sqrtPriceX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/TickMath.sol\":4659:4686  uint256(sqrtPriceX96) << 32 */\n      swap1\n      shl\n        /* \"src/lib/TickMath.sol\":4643:4686  uint256 ratio = uint256(sqrtPriceX96) << 32 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":4697:4706  uint256 r */\n      0x00\n        /* \"src/lib/TickMath.sol\":4709:4714  ratio */\n      dup2\n        /* \"src/lib/TickMath.sol\":4697:4714  uint256 r = ratio */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":4724:4735  uint256 msb */\n      0x00\n        /* \"src/lib/TickMath.sol\":4738:4739  0 */\n      0x00\n        /* \"src/lib/TickMath.sol\":4724:4739  uint256 msb = 0 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":4795:4829  0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF */\n      0xffffffffffffffffffffffffffffffff\n        /* \"src/lib/TickMath.sol\":4792:4793  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":4789:4830  gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) */\n      gt\n        /* \"src/lib/TickMath.sol\":4786:4787  7 */\n      0x07\n        /* \"src/lib/TickMath.sol\":4782:4831  shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF)) */\n      shl\n        /* \"src/lib/TickMath.sol\":4859:4860  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":4854:4857  msb */\n      dup3\n        /* \"src/lib/TickMath.sol\":4851:4861  or(msb, f) */\n      or\n        /* \"src/lib/TickMath.sol\":4844:4861  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":4886:4887  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":4883:4884  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":4879:4888  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":4874:4888  r := shr(f, r) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":4759:4898  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":4952:4970  0xFFFFFFFFFFFFFFFF */\n      0xffffffffffffffff\n        /* \"src/lib/TickMath.sol\":4949:4950  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":4946:4971  gt(r, 0xFFFFFFFFFFFFFFFF) */\n      gt\n        /* \"src/lib/TickMath.sol\":4943:4944  6 */\n      0x06\n        /* \"src/lib/TickMath.sol\":4939:4972  shl(6, gt(r, 0xFFFFFFFFFFFFFFFF)) */\n      shl\n        /* \"src/lib/TickMath.sol\":5000:5001  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":4995:4998  msb */\n      dup3\n        /* \"src/lib/TickMath.sol\":4992:5002  or(msb, f) */\n      or\n        /* \"src/lib/TickMath.sol\":4985:5002  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5027:5028  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5024:5025  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":5020:5029  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":5015:5029  r := shr(f, r) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":4916:5039  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":5093:5103  0xFFFFFFFF */\n      0xffffffff\n        /* \"src/lib/TickMath.sol\":5090:5091  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5087:5104  gt(r, 0xFFFFFFFF) */\n      gt\n        /* \"src/lib/TickMath.sol\":5084:5085  5 */\n      0x05\n        /* \"src/lib/TickMath.sol\":5080:5105  shl(5, gt(r, 0xFFFFFFFF)) */\n      shl\n        /* \"src/lib/TickMath.sol\":5133:5134  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":5128:5131  msb */\n      dup3\n        /* \"src/lib/TickMath.sol\":5125:5135  or(msb, f) */\n      or\n        /* \"src/lib/TickMath.sol\":5118:5135  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5160:5161  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5157:5158  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":5153:5162  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":5148:5162  r := shr(f, r) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":5057:5172  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":5226:5232  0xFFFF */\n      0xffff\n        /* \"src/lib/TickMath.sol\":5223:5224  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5220:5233  gt(r, 0xFFFF) */\n      gt\n        /* \"src/lib/TickMath.sol\":5217:5218  4 */\n      0x04\n        /* \"src/lib/TickMath.sol\":5213:5234  shl(4, gt(r, 0xFFFF)) */\n      shl\n        /* \"src/lib/TickMath.sol\":5262:5263  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":5257:5260  msb */\n      dup3\n        /* \"src/lib/TickMath.sol\":5254:5264  or(msb, f) */\n      or\n        /* \"src/lib/TickMath.sol\":5247:5264  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5289:5290  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5286:5287  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":5282:5291  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":5277:5291  r := shr(f, r) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":5190:5301  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":5355:5359  0xFF */\n      0xff\n        /* \"src/lib/TickMath.sol\":5352:5353  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5349:5360  gt(r, 0xFF) */\n      gt\n        /* \"src/lib/TickMath.sol\":5346:5347  3 */\n      0x03\n        /* \"src/lib/TickMath.sol\":5342:5361  shl(3, gt(r, 0xFF)) */\n      shl\n        /* \"src/lib/TickMath.sol\":5389:5390  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":5384:5387  msb */\n      dup3\n        /* \"src/lib/TickMath.sol\":5381:5391  or(msb, f) */\n      or\n        /* \"src/lib/TickMath.sol\":5374:5391  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5416:5417  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5413:5414  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":5409:5418  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":5404:5418  r := shr(f, r) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":5319:5428  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":5482:5485  0xF */\n      0x0f\n        /* \"src/lib/TickMath.sol\":5479:5480  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5476:5486  gt(r, 0xF) */\n      gt\n        /* \"src/lib/TickMath.sol\":5473:5474  2 */\n      0x02\n        /* \"src/lib/TickMath.sol\":5469:5487  shl(2, gt(r, 0xF)) */\n      shl\n        /* \"src/lib/TickMath.sol\":5515:5516  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":5510:5513  msb */\n      dup3\n        /* \"src/lib/TickMath.sol\":5507:5517  or(msb, f) */\n      or\n        /* \"src/lib/TickMath.sol\":5500:5517  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5542:5543  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5539:5540  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":5535:5544  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":5530:5544  r := shr(f, r) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":5446:5554  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":5608:5611  0x3 */\n      0x03\n        /* \"src/lib/TickMath.sol\":5605:5606  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5602:5612  gt(r, 0x3) */\n      gt\n        /* \"src/lib/TickMath.sol\":5599:5600  1 */\n      0x01\n        /* \"src/lib/TickMath.sol\":5595:5613  shl(1, gt(r, 0x3)) */\n      shl\n        /* \"src/lib/TickMath.sol\":5641:5642  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":5636:5639  msb */\n      dup3\n        /* \"src/lib/TickMath.sol\":5633:5643  or(msb, f) */\n      or\n        /* \"src/lib/TickMath.sol\":5626:5643  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5668:5669  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5665:5666  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":5661:5670  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":5656:5670  r := shr(f, r) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":5572:5680  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":5727:5730  0x1 */\n      0x01\n        /* \"src/lib/TickMath.sol\":5724:5725  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5721:5731  gt(r, 0x1) */\n      gt\n        /* \"src/lib/TickMath.sol\":5759:5760  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":5754:5757  msb */\n      dup3\n        /* \"src/lib/TickMath.sol\":5751:5761  or(msb, f) */\n      or\n        /* \"src/lib/TickMath.sol\":5744:5761  msb := or(msb, f) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5698:5771  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":5792:5795  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":5785:5788  msb */\n      dup2\n        /* \"src/lib/TickMath.sol\":5785:5795  msb >= 128 */\n      lt\n        /* \"src/lib/TickMath.sol\":5781:5860  if (msb >= 128) r = ratio >> (msb - 127);... */\n      tag_321\n      jumpi\n        /* \"src/lib/TickMath.sol\":5817:5820  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":5811:5814  msb */\n      dup2\n        /* \"src/lib/TickMath.sol\":5811:5820  msb - 127 */\n      tag_322\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_322:\n        /* \"src/lib/TickMath.sol\":5801:5806  ratio */\n      dup4\n        /* \"src/lib/TickMath.sol\":5801:5821  ratio >> (msb - 127) */\n      swap1\n      shr\n        /* \"src/lib/TickMath.sol\":5797:5821  r = ratio >> (msb - 127) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5781:5860  if (msb >= 128) r = ratio >> (msb - 127);... */\n      jump(tag_323)\n    tag_321:\n        /* \"src/lib/TickMath.sol\":5856:5859  msb */\n      dup1\n        /* \"src/lib/TickMath.sol\":5850:5853  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":5850:5859  127 - msb */\n      tag_324\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_324:\n        /* \"src/lib/TickMath.sol\":5840:5845  ratio */\n      dup4\n        /* \"src/lib/TickMath.sol\":5840:5860  ratio << (127 - msb) */\n      swap1\n      shl\n        /* \"src/lib/TickMath.sol\":5836:5860  r = ratio << (127 - msb) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":5781:5860  if (msb >= 128) r = ratio >> (msb - 127);... */\n    tag_323:\n        /* \"src/lib/TickMath.sol\":5871:5883  int256 log_2 */\n      0x00\n        /* \"src/lib/TickMath.sol\":5909:5911  64 */\n      0x40\n        /* \"src/lib/TickMath.sol\":5901:5904  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":5894:5897  msb */\n      dup4\n        /* \"src/lib/TickMath.sol\":5887:5904  int256(msb) - 128 */\n      tag_325\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"src/lib/TickMath.sol\":5886:5911  (int256(msb) - 128) << 64 */\n      swap1\n      shl\n        /* \"src/lib/TickMath.sol\":5871:5911  int256 log_2 = (int256(msb) - 128) << 64 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":5966:5967  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5963:5964  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":5959:5968  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":5954:5957  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":5950:5969  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":5945:5969  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":6000:6001  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":5995:5998  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":5991:6002  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6042:6043  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":6038:6040  63 */\n      0x3f\n        /* \"src/lib/TickMath.sol\":6034:6044  shl(63, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":6027:6032  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":6024:6045  or(log_2, shl(63, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":6015:6045  log_2 := or(log_2, shl(63, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":6070:6071  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6067:6068  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":6063:6072  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6058:6072  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":5931:6082  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":6135:6136  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6132:6133  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6128:6137  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":6123:6126  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":6119:6138  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":6114:6138  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":6169:6170  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6164:6167  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":6160:6171  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6211:6212  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":6207:6209  62 */\n      0x3e\n        /* \"src/lib/TickMath.sol\":6203:6213  shl(62, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":6196:6201  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":6193:6214  or(log_2, shl(62, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":6184:6214  log_2 := or(log_2, shl(62, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":6239:6240  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6236:6237  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":6232:6241  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6227:6241  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":6100:6251  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":6304:6305  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6301:6302  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6297:6306  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":6292:6295  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":6288:6307  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":6283:6307  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":6338:6339  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6333:6336  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":6329:6340  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6380:6381  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":6376:6378  61 */\n      0x3d\n        /* \"src/lib/TickMath.sol\":6372:6382  shl(61, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":6365:6370  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":6362:6383  or(log_2, shl(61, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":6353:6383  log_2 := or(log_2, shl(61, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":6408:6409  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6405:6406  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":6401:6410  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6396:6410  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":6269:6420  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":6473:6474  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6470:6471  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6466:6475  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":6461:6464  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":6457:6476  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":6452:6476  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":6507:6508  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6502:6505  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":6498:6509  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6549:6550  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":6545:6547  60 */\n      0x3c\n        /* \"src/lib/TickMath.sol\":6541:6551  shl(60, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":6534:6539  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":6531:6552  or(log_2, shl(60, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":6522:6552  log_2 := or(log_2, shl(60, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":6577:6578  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6574:6575  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":6570:6579  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6565:6579  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":6438:6589  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":6642:6643  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6639:6640  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6635:6644  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":6630:6633  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":6626:6645  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":6621:6645  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":6676:6677  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6671:6674  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":6667:6678  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6718:6719  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":6714:6716  59 */\n      0x3b\n        /* \"src/lib/TickMath.sol\":6710:6720  shl(59, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":6703:6708  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":6700:6721  or(log_2, shl(59, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":6691:6721  log_2 := or(log_2, shl(59, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":6746:6747  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6743:6744  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":6739:6748  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6734:6748  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":6607:6758  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":6811:6812  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6808:6809  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6804:6813  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":6799:6802  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":6795:6814  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":6790:6814  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":6845:6846  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6840:6843  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":6836:6847  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6887:6888  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":6883:6885  58 */\n      0x3a\n        /* \"src/lib/TickMath.sol\":6879:6889  shl(58, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":6872:6877  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":6869:6890  or(log_2, shl(58, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":6860:6890  log_2 := or(log_2, shl(58, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":6915:6916  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6912:6913  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":6908:6917  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":6903:6917  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":6776:6927  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":6980:6981  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":6977:6978  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":6973:6982  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":6968:6971  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":6964:6983  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":6959:6983  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":7014:7015  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7009:7012  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":7005:7016  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7056:7057  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":7052:7054  57 */\n      0x39\n        /* \"src/lib/TickMath.sol\":7048:7058  shl(57, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":7041:7046  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":7038:7059  or(log_2, shl(57, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":7029:7059  log_2 := or(log_2, shl(57, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":7084:7085  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7081:7082  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":7077:7086  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7072:7086  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":6945:7096  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":7149:7150  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7146:7147  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7142:7151  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":7137:7140  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":7133:7152  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":7128:7152  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":7183:7184  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7178:7181  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":7174:7185  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7225:7226  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":7221:7223  56 */\n      0x38\n        /* \"src/lib/TickMath.sol\":7217:7227  shl(56, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":7210:7215  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":7207:7228  or(log_2, shl(56, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":7198:7228  log_2 := or(log_2, shl(56, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":7253:7254  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7250:7251  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":7246:7255  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7241:7255  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":7114:7265  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":7318:7319  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7315:7316  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7311:7320  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":7306:7309  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":7302:7321  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":7297:7321  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":7352:7353  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7347:7350  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":7343:7354  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7394:7395  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":7390:7392  55 */\n      0x37\n        /* \"src/lib/TickMath.sol\":7386:7396  shl(55, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":7379:7384  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":7376:7397  or(log_2, shl(55, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":7367:7397  log_2 := or(log_2, shl(55, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":7422:7423  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7419:7420  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":7415:7424  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7410:7424  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":7283:7434  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":7487:7488  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7484:7485  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7480:7489  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":7475:7478  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":7471:7490  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":7466:7490  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":7521:7522  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7516:7519  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":7512:7523  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7563:7564  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":7559:7561  54 */\n      0x36\n        /* \"src/lib/TickMath.sol\":7555:7565  shl(54, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":7548:7553  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":7545:7566  or(log_2, shl(54, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":7536:7566  log_2 := or(log_2, shl(54, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":7591:7592  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7588:7589  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":7584:7593  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7579:7593  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":7452:7603  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":7656:7657  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7653:7654  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7649:7658  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":7644:7647  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":7640:7659  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":7635:7659  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":7690:7691  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7685:7688  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":7681:7692  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7732:7733  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":7728:7730  53 */\n      0x35\n        /* \"src/lib/TickMath.sol\":7724:7734  shl(53, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":7717:7722  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":7714:7735  or(log_2, shl(53, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":7705:7735  log_2 := or(log_2, shl(53, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":7760:7761  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7757:7758  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":7753:7762  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7748:7762  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":7621:7772  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":7825:7826  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7822:7823  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7818:7827  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":7813:7816  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":7809:7828  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":7804:7828  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":7859:7860  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7854:7857  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":7850:7861  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7901:7902  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":7897:7899  52 */\n      0x34\n        /* \"src/lib/TickMath.sol\":7893:7903  shl(52, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":7886:7891  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":7883:7904  or(log_2, shl(52, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":7874:7904  log_2 := or(log_2, shl(52, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":7929:7930  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7926:7927  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":7922:7931  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":7917:7931  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":7790:7941  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":7994:7995  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":7991:7992  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":7987:7996  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":7982:7985  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":7978:7997  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":7973:7997  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":8028:8029  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":8023:8026  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":8019:8030  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":8070:8071  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":8066:8068  51 */\n      0x33\n        /* \"src/lib/TickMath.sol\":8062:8072  shl(51, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":8055:8060  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":8052:8073  or(log_2, shl(51, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":8043:8073  log_2 := or(log_2, shl(51, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":8098:8099  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":8095:8096  f */\n      dup2\n        /* \"src/lib/TickMath.sol\":8091:8100  shr(f, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":8086:8100  r := shr(f, r) */\n      swap4\n      pop\n        /* \"src/lib/TickMath.sol\":7959:8110  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":8163:8164  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":8160:8161  r */\n      dup4\n        /* \"src/lib/TickMath.sol\":8156:8165  mul(r, r) */\n      mul\n        /* \"src/lib/TickMath.sol\":8151:8154  127 */\n      0x7f\n        /* \"src/lib/TickMath.sol\":8147:8166  shr(127, mul(r, r)) */\n      shr\n        /* \"src/lib/TickMath.sol\":8142:8166  r := shr(127, mul(r, r)) */\n      swap3\n      pop\n        /* \"src/lib/TickMath.sol\":8197:8198  r */\n      dup3\n        /* \"src/lib/TickMath.sol\":8192:8195  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":8188:8199  shr(128, r) */\n      shr\n        /* \"src/lib/TickMath.sol\":8239:8240  f */\n      dup1\n        /* \"src/lib/TickMath.sol\":8235:8237  50 */\n      0x32\n        /* \"src/lib/TickMath.sol\":8231:8241  shl(50, f) */\n      shl\n        /* \"src/lib/TickMath.sol\":8224:8229  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":8221:8242  or(log_2, shl(50, f)) */\n      or\n        /* \"src/lib/TickMath.sol\":8212:8242  log_2 := or(log_2, shl(50, f)) */\n      swap2\n      pop\n        /* \"src/lib/TickMath.sol\":8128:8252  {... */\n      pop\n        /* \"src/lib/TickMath.sol\":8262:8282  int256 log_sqrt10001 */\n      0x00\n        /* \"src/lib/TickMath.sol\":8293:8317  255738958999603826347141 */\n      0x3627a301d71055774c85\n        /* \"src/lib/TickMath.sol\":8285:8290  log_2 */\n      dup3\n        /* \"src/lib/TickMath.sol\":8285:8317  log_2 * 255738958999603826347141 */\n      tag_327\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"src/lib/TickMath.sol\":8262:8317  int256 log_sqrt10001 = log_2 * 255738958999603826347141 */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":8346:8359  int24 tickLow */\n      0x00\n        /* \"src/lib/TickMath.sol\":8427:8430  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":8385:8422  3402992956809132418596140100660247210 */\n      0x028f6481ab7f045a5af012a19d003aaa\n        /* \"src/lib/TickMath.sol\":8369:8382  log_sqrt10001 */\n      dup4\n        /* \"src/lib/TickMath.sol\":8369:8422  log_sqrt10001 - 3402992956809132418596140100660247210 */\n      tag_329\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_329:\n        /* \"src/lib/TickMath.sol\":8368:8430  (log_sqrt10001 - 3402992956809132418596140100660247210) >> 128 */\n      swap1\n      sar\n        /* \"src/lib/TickMath.sol\":8346:8431  int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128) */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":8441:8453  int24 tickHi */\n      0x00\n        /* \"src/lib/TickMath.sol\":8523:8526  128 */\n      0x80\n        /* \"src/lib/TickMath.sol\":8479:8518  291339464771989622907027621153398088495 */\n      0xdb2df09e81959a81455e260799a0632f\n        /* \"src/lib/TickMath.sol\":8463:8476  log_sqrt10001 */\n      dup5\n        /* \"src/lib/TickMath.sol\":8463:8518  log_sqrt10001 + 291339464771989622907027621153398088495 */\n      tag_330\n      swap2\n      swap1\n      tag_331\n      jump\t// in\n    tag_330:\n        /* \"src/lib/TickMath.sol\":8462:8526  (log_sqrt10001 + 291339464771989622907027621153398088495) >> 128 */\n      swap1\n      sar\n        /* \"src/lib/TickMath.sol\":8441:8527  int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128) */\n      swap1\n      pop\n        /* \"src/lib/TickMath.sol\":8556:8562  tickHi */\n      dup1\n        /* \"src/lib/TickMath.sol\":8545:8562  tickLow == tickHi */\n      0x02\n      signextend\n        /* \"src/lib/TickMath.sol\":8545:8552  tickLow */\n      dup3\n        /* \"src/lib/TickMath.sol\":8545:8562  tickLow == tickHi */\n      0x02\n      signextend\n      eq\n        /* \"src/lib/TickMath.sol\":8545:8636  tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      tag_332\n      jumpi\n        /* \"src/lib/TickMath.sol\":8605:8617  sqrtPriceX96 */\n      dup9\n        /* \"src/lib/TickMath.sol\":8575:8617  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/TickMath.sol\":8575:8601  getSqrtRatioAtTick(tickHi) */\n      tag_333\n        /* \"src/lib/TickMath.sol\":8594:8600  tickHi */\n      dup3\n        /* \"src/lib/TickMath.sol\":8575:8593  getSqrtRatioAtTick */\n      tag_79\n        /* \"src/lib/TickMath.sol\":8575:8601  getSqrtRatioAtTick(tickHi) */\n      jump\t// in\n    tag_333:\n        /* \"src/lib/TickMath.sol\":8575:8617  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"src/lib/TickMath.sol\":8575:8636  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      tag_334\n      jumpi\n        /* \"src/lib/TickMath.sol\":8629:8636  tickLow */\n      dup2\n        /* \"src/lib/TickMath.sol\":8575:8636  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      jump(tag_335)\n    tag_334:\n        /* \"src/lib/TickMath.sol\":8620:8626  tickHi */\n      dup1\n        /* \"src/lib/TickMath.sol\":8575:8636  getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n    tag_335:\n        /* \"src/lib/TickMath.sol\":8545:8636  tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      jump(tag_336)\n    tag_332:\n        /* \"src/lib/TickMath.sol\":8565:8572  tickLow */\n      dup2\n        /* \"src/lib/TickMath.sol\":8545:8636  tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n    tag_336:\n        /* \"src/lib/TickMath.sol\":8538:8636  tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow */\n      swap8\n      pop\n        /* \"src/lib/TickMath.sol\":4447:8643  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/lib/TickMath.sol\":4362:8643  function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":686:854  function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {... */\n    tag_183:\n        /* \"src/lib/TickBitmap.sol\":738:751  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":753:765  uint8 bitPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":801:802  8 */\n      0x08\n        /* \"src/lib/TickBitmap.sol\":793:797  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":793:802  tick >> 8 */\n      0x02\n      signextend\n      swap1\n      sar\n        /* \"src/lib/TickBitmap.sol\":777:803  wordPos = int16(tick >> 8) */\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":842:845  256 */\n      0x0100\n        /* \"src/lib/TickBitmap.sol\":835:839  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":835:845  tick % 256 */\n      tag_338\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_338:\n        /* \"src/lib/TickBitmap.sol\":813:847  bitPos = uint8(uint24(tick % 256)) */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":686:854  function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"src/lib/Math.sol\":3124:3447  function mulDivRoundingUp(... */\n    tag_253:\n        /* \"src/lib/Math.sol\":3246:3260  uint256 result */\n      0x00\n        /* \"src/lib/Math.sol\":3281:3314  PRBMath.mulDiv(a, b, denominator) */\n      tag_340\n        /* \"src/lib/Math.sol\":3296:3297  a */\n      dup5\n        /* \"src/lib/Math.sol\":3299:3300  b */\n      dup5\n        /* \"src/lib/Math.sol\":3302:3313  denominator */\n      dup5\n        /* \"src/lib/Math.sol\":3281:3295  PRBMath.mulDiv */\n      tag_341\n        /* \"src/lib/Math.sol\":3281:3314  PRBMath.mulDiv(a, b, denominator) */\n      jump\t// in\n    tag_340:\n        /* \"src/lib/Math.sol\":3272:3314  result = PRBMath.mulDiv(a, b, denominator) */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":3356:3357  0 */\n      0x00\n        /* \"src/lib/Math.sol\":3341:3352  denominator */\n      dup3\n        /* \"src/lib/Math.sol\":3328:3353  mulmod(a, b, denominator) */\n      dup1\n      tag_342\n      jumpi\n      tag_343\n      tag_344\n      jump\t// in\n    tag_343:\n    tag_342:\n        /* \"src/lib/Math.sol\":3338:3339  b */\n      dup5\n        /* \"src/lib/Math.sol\":3335:3336  a */\n      dup7\n        /* \"src/lib/Math.sol\":3328:3353  mulmod(a, b, denominator) */\n      mulmod\n        /* \"src/lib/Math.sol\":3328:3357  mulmod(a, b, denominator) > 0 */\n      gt\n        /* \"src/lib/Math.sol\":3324:3441  if (mulmod(a, b, denominator) > 0) {... */\n      iszero\n      tag_345\n      jumpi\n        /* \"src/lib/Math.sol\":3390:3407  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/lib/Math.sol\":3381:3387  result */\n      dup2\n        /* \"src/lib/Math.sol\":3381:3407  result < type(uint256).max */\n      lt\n        /* \"src/lib/Math.sol\":3373:3408  require(result < type(uint256).max) */\n      tag_346\n      jumpi\n      revert(0x00, 0x00)\n    tag_346:\n        /* \"src/lib/Math.sol\":3422:3430  result++ */\n      dup1\n      dup1\n      tag_347\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      swap2\n      pop\n      pop\n        /* \"src/lib/Math.sol\":3324:3441  if (mulmod(a, b, denominator) > 0) {... */\n    tag_345:\n        /* \"src/lib/Math.sol\":3124:3447  function mulDivRoundingUp(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":3453:3756  function divRoundingUp(uint256 numerator, uint256 denominator)... */\n    tag_254:\n        /* \"src/lib/Math.sol\":3563:3577  uint256 result */\n      0x00\n        /* \"src/lib/Math.sol\":3724:3725  0 */\n      0x00\n        /* \"src/lib/Math.sol\":3710:3721  denominator */\n      dup3\n        /* \"src/lib/Math.sol\":3699:3708  numerator */\n      dup5\n        /* \"src/lib/Math.sol\":3695:3722  mod(numerator, denominator) */\n      mod\n        /* \"src/lib/Math.sol\":3692:3726  gt(mod(numerator, denominator), 0) */\n      gt\n        /* \"src/lib/Math.sol\":3662:3673  denominator */\n      dup3\n        /* \"src/lib/Math.sol\":3651:3660  numerator */\n      dup5\n        /* \"src/lib/Math.sol\":3647:3674  div(numerator, denominator) */\n      div\n        /* \"src/lib/Math.sol\":3626:3740  add(... */\n      add\n        /* \"src/lib/Math.sol\":3616:3740  result := add(... */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":3453:3756  function divRoundingUp(uint256 numerator, uint256 denominator)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/BitMath.sol\":671:1402  function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {... */\n    tag_288:\n        /* \"src/lib/BitMath.sol\":733:740  uint8 r */\n      0x00\n        /* \"src/lib/BitMath.sol\":764:765  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":760:761  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":760:765  x > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":752:766  require(x > 0) */\n      tag_351\n      jumpi\n      revert(0x00, 0x00)\n    tag_351:\n        /* \"src/lib/BitMath.sol\":786:821  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"src/lib/BitMath.sol\":781:782  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":781:821  x >= 0x100000000000000000000000000000000 */\n      lt\n        /* \"src/lib/BitMath.sol\":777:879  if (x >= 0x100000000000000000000000000000000) {... */\n      tag_352\n      jumpi\n        /* \"src/lib/BitMath.sol\":843:846  128 */\n      0x80\n        /* \"src/lib/BitMath.sol\":837:846  x >>= 128 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":865:868  128 */\n      0x80\n        /* \"src/lib/BitMath.sol\":860:868  r += 128 */\n      dup2\n      tag_353\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_353:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":777:879  if (x >= 0x100000000000000000000000000000000) {... */\n    tag_352:\n        /* \"src/lib/BitMath.sol\":897:916  0x10000000000000000 */\n      0x010000000000000000\n        /* \"src/lib/BitMath.sol\":892:893  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":892:916  x >= 0x10000000000000000 */\n      lt\n        /* \"src/lib/BitMath.sol\":888:972  if (x >= 0x10000000000000000) {... */\n      tag_355\n      jumpi\n        /* \"src/lib/BitMath.sol\":938:940  64 */\n      0x40\n        /* \"src/lib/BitMath.sol\":932:940  x >>= 64 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":959:961  64 */\n      0x40\n        /* \"src/lib/BitMath.sol\":954:961  r += 64 */\n      dup2\n      tag_356\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_356:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":888:972  if (x >= 0x10000000000000000) {... */\n    tag_355:\n        /* \"src/lib/BitMath.sol\":990:1001  0x100000000 */\n      0x0100000000\n        /* \"src/lib/BitMath.sol\":985:986  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":985:1001  x >= 0x100000000 */\n      lt\n        /* \"src/lib/BitMath.sol\":981:1057  if (x >= 0x100000000) {... */\n      tag_357\n      jumpi\n        /* \"src/lib/BitMath.sol\":1023:1025  32 */\n      0x20\n        /* \"src/lib/BitMath.sol\":1017:1025  x >>= 32 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":1044:1046  32 */\n      0x20\n        /* \"src/lib/BitMath.sol\":1039:1046  r += 32 */\n      dup2\n      tag_358\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_358:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":981:1057  if (x >= 0x100000000) {... */\n    tag_357:\n        /* \"src/lib/BitMath.sol\":1075:1082  0x10000 */\n      0x010000\n        /* \"src/lib/BitMath.sol\":1070:1071  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1070:1082  x >= 0x10000 */\n      lt\n        /* \"src/lib/BitMath.sol\":1066:1138  if (x >= 0x10000) {... */\n      tag_359\n      jumpi\n        /* \"src/lib/BitMath.sol\":1104:1106  16 */\n      0x10\n        /* \"src/lib/BitMath.sol\":1098:1106  x >>= 16 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":1125:1127  16 */\n      0x10\n        /* \"src/lib/BitMath.sol\":1120:1127  r += 16 */\n      dup2\n      tag_360\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_360:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1066:1138  if (x >= 0x10000) {... */\n    tag_359:\n        /* \"src/lib/BitMath.sol\":1156:1161  0x100 */\n      0x0100\n        /* \"src/lib/BitMath.sol\":1151:1152  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1151:1161  x >= 0x100 */\n      lt\n        /* \"src/lib/BitMath.sol\":1147:1215  if (x >= 0x100) {... */\n      tag_361\n      jumpi\n        /* \"src/lib/BitMath.sol\":1183:1184  8 */\n      0x08\n        /* \"src/lib/BitMath.sol\":1177:1184  x >>= 8 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":1203:1204  8 */\n      0x08\n        /* \"src/lib/BitMath.sol\":1198:1204  r += 8 */\n      dup2\n      tag_362\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_362:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1147:1215  if (x >= 0x100) {... */\n    tag_361:\n        /* \"src/lib/BitMath.sol\":1233:1237  0x10 */\n      0x10\n        /* \"src/lib/BitMath.sol\":1228:1229  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1228:1237  x >= 0x10 */\n      lt\n        /* \"src/lib/BitMath.sol\":1224:1291  if (x >= 0x10) {... */\n      tag_363\n      jumpi\n        /* \"src/lib/BitMath.sol\":1259:1260  4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":1253:1260  x >>= 4 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":1279:1280  4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":1274:1280  r += 4 */\n      dup2\n      tag_364\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_364:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1224:1291  if (x >= 0x10) {... */\n    tag_363:\n        /* \"src/lib/BitMath.sol\":1309:1312  0x4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":1304:1305  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1304:1312  x >= 0x4 */\n      lt\n        /* \"src/lib/BitMath.sol\":1300:1366  if (x >= 0x4) {... */\n      tag_365\n      jumpi\n        /* \"src/lib/BitMath.sol\":1334:1335  2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":1328:1335  x >>= 2 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":1354:1355  2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":1349:1355  r += 2 */\n      dup2\n      tag_366\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_366:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1300:1366  if (x >= 0x4) {... */\n    tag_365:\n        /* \"src/lib/BitMath.sol\":1384:1387  0x2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":1379:1380  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1379:1387  x >= 0x2 */\n      lt\n        /* \"src/lib/BitMath.sol\":1375:1395  if (x >= 0x2) r += 1 */\n      tag_367\n      jumpi\n        /* \"src/lib/BitMath.sol\":1394:1395  1 */\n      0x01\n        /* \"src/lib/BitMath.sol\":1389:1395  r += 1 */\n      dup2\n      tag_368\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_368:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":1375:1395  if (x >= 0x2) r += 1 */\n    tag_367:\n        /* \"src/lib/BitMath.sol\":671:1402  function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/lib/BitMath.sol\":1893:2787  function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {... */\n    tag_305:\n        /* \"src/lib/BitMath.sol\":1956:1963  uint8 r */\n      0x00\n        /* \"src/lib/BitMath.sol\":1987:1988  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":1983:1984  x */\n      dup3\n        /* \"src/lib/BitMath.sol\":1983:1988  x > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":1975:1989  require(x > 0) */\n      tag_370\n      jumpi\n      revert(0x00, 0x00)\n    tag_370:\n        /* \"src/lib/BitMath.sol\":2004:2007  255 */\n      0xff\n        /* \"src/lib/BitMath.sol\":2000:2007  r = 255 */\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2045:2046  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":2025:2042  type(uint128).max */\n      0xffffffffffffffffffffffffffffffff\n        /* \"src/lib/BitMath.sol\":2021:2042  x & type(uint128).max */\n      dup1\n      and\n        /* \"src/lib/BitMath.sol\":2021:2022  x */\n      dup4\n        /* \"src/lib/BitMath.sol\":2021:2042  x & type(uint128).max */\n      and\n        /* \"src/lib/BitMath.sol\":2021:2046  x & type(uint128).max > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2017:2121  if (x & type(uint128).max > 0) {... */\n      iszero\n      tag_371\n      jumpi\n        /* \"src/lib/BitMath.sol\":2067:2070  128 */\n      0x80\n        /* \"src/lib/BitMath.sol\":2062:2070  r -= 128 */\n      dup2\n      tag_372\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_372:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2017:2121  if (x & type(uint128).max > 0) {... */\n      jump(tag_373)\n    tag_371:\n        /* \"src/lib/BitMath.sol\":2107:2110  128 */\n      0x80\n        /* \"src/lib/BitMath.sol\":2101:2110  x >>= 128 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2017:2121  if (x & type(uint128).max > 0) {... */\n    tag_373:\n        /* \"src/lib/BitMath.sol\":2157:2158  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":2138:2154  type(uint64).max */\n      0xffffffffffffffff\n        /* \"src/lib/BitMath.sol\":2134:2154  x & type(uint64).max */\n      dup1\n      and\n        /* \"src/lib/BitMath.sol\":2134:2135  x */\n      dup4\n        /* \"src/lib/BitMath.sol\":2134:2154  x & type(uint64).max */\n      and\n        /* \"src/lib/BitMath.sol\":2134:2158  x & type(uint64).max > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2130:2231  if (x & type(uint64).max > 0) {... */\n      iszero\n      tag_374\n      jumpi\n        /* \"src/lib/BitMath.sol\":2179:2181  64 */\n      0x40\n        /* \"src/lib/BitMath.sol\":2174:2181  r -= 64 */\n      dup2\n      tag_375\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_375:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2130:2231  if (x & type(uint64).max > 0) {... */\n      jump(tag_376)\n    tag_374:\n        /* \"src/lib/BitMath.sol\":2218:2220  64 */\n      0x40\n        /* \"src/lib/BitMath.sol\":2212:2220  x >>= 64 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2130:2231  if (x & type(uint64).max > 0) {... */\n    tag_376:\n        /* \"src/lib/BitMath.sol\":2267:2268  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":2248:2264  type(uint32).max */\n      0xffffffff\n        /* \"src/lib/BitMath.sol\":2244:2264  x & type(uint32).max */\n      dup1\n      and\n        /* \"src/lib/BitMath.sol\":2244:2245  x */\n      dup4\n        /* \"src/lib/BitMath.sol\":2244:2264  x & type(uint32).max */\n      and\n        /* \"src/lib/BitMath.sol\":2244:2268  x & type(uint32).max > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2240:2341  if (x & type(uint32).max > 0) {... */\n      iszero\n      tag_377\n      jumpi\n        /* \"src/lib/BitMath.sol\":2289:2291  32 */\n      0x20\n        /* \"src/lib/BitMath.sol\":2284:2291  r -= 32 */\n      dup2\n      tag_378\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_378:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2240:2341  if (x & type(uint32).max > 0) {... */\n      jump(tag_379)\n    tag_377:\n        /* \"src/lib/BitMath.sol\":2328:2330  32 */\n      0x20\n        /* \"src/lib/BitMath.sol\":2322:2330  x >>= 32 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2240:2341  if (x & type(uint32).max > 0) {... */\n    tag_379:\n        /* \"src/lib/BitMath.sol\":2377:2378  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":2358:2374  type(uint16).max */\n      0xffff\n        /* \"src/lib/BitMath.sol\":2354:2374  x & type(uint16).max */\n      dup1\n      and\n        /* \"src/lib/BitMath.sol\":2354:2355  x */\n      dup4\n        /* \"src/lib/BitMath.sol\":2354:2374  x & type(uint16).max */\n      and\n        /* \"src/lib/BitMath.sol\":2354:2378  x & type(uint16).max > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2350:2451  if (x & type(uint16).max > 0) {... */\n      iszero\n      tag_380\n      jumpi\n        /* \"src/lib/BitMath.sol\":2399:2401  16 */\n      0x10\n        /* \"src/lib/BitMath.sol\":2394:2401  r -= 16 */\n      dup2\n      tag_381\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_381:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2350:2451  if (x & type(uint16).max > 0) {... */\n      jump(tag_382)\n    tag_380:\n        /* \"src/lib/BitMath.sol\":2438:2440  16 */\n      0x10\n        /* \"src/lib/BitMath.sol\":2432:2440  x >>= 16 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2350:2451  if (x & type(uint16).max > 0) {... */\n    tag_382:\n        /* \"src/lib/BitMath.sol\":2486:2487  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":2468:2483  type(uint8).max */\n      0xff\n        /* \"src/lib/BitMath.sol\":2464:2483  x & type(uint8).max */\n      dup1\n      and\n        /* \"src/lib/BitMath.sol\":2464:2465  x */\n      dup4\n        /* \"src/lib/BitMath.sol\":2464:2483  x & type(uint8).max */\n      and\n        /* \"src/lib/BitMath.sol\":2464:2487  x & type(uint8).max > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2460:2558  if (x & type(uint8).max > 0) {... */\n      iszero\n      tag_383\n      jumpi\n        /* \"src/lib/BitMath.sol\":2508:2509  8 */\n      0x08\n        /* \"src/lib/BitMath.sol\":2503:2509  r -= 8 */\n      dup2\n      tag_384\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_384:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2460:2558  if (x & type(uint8).max > 0) {... */\n      jump(tag_385)\n    tag_383:\n        /* \"src/lib/BitMath.sol\":2546:2547  8 */\n      0x08\n        /* \"src/lib/BitMath.sol\":2540:2547  x >>= 8 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2460:2558  if (x & type(uint8).max > 0) {... */\n    tag_385:\n        /* \"src/lib/BitMath.sol\":2581:2582  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":2575:2578  0xf */\n      0x0f\n        /* \"src/lib/BitMath.sol\":2571:2572  x */\n      dup4\n        /* \"src/lib/BitMath.sol\":2571:2578  x & 0xf */\n      and\n        /* \"src/lib/BitMath.sol\":2571:2582  x & 0xf > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2567:2653  if (x & 0xf > 0) {... */\n      iszero\n      tag_386\n      jumpi\n        /* \"src/lib/BitMath.sol\":2603:2604  4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":2598:2604  r -= 4 */\n      dup2\n      tag_387\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_387:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2567:2653  if (x & 0xf > 0) {... */\n      jump(tag_388)\n    tag_386:\n        /* \"src/lib/BitMath.sol\":2641:2642  4 */\n      0x04\n        /* \"src/lib/BitMath.sol\":2635:2642  x >>= 4 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2567:2653  if (x & 0xf > 0) {... */\n    tag_388:\n        /* \"src/lib/BitMath.sol\":2676:2677  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":2670:2673  0x3 */\n      0x03\n        /* \"src/lib/BitMath.sol\":2666:2667  x */\n      dup4\n        /* \"src/lib/BitMath.sol\":2666:2673  x & 0x3 */\n      and\n        /* \"src/lib/BitMath.sol\":2666:2677  x & 0x3 > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2662:2748  if (x & 0x3 > 0) {... */\n      iszero\n      tag_389\n      jumpi\n        /* \"src/lib/BitMath.sol\":2698:2699  2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":2693:2699  r -= 2 */\n      dup2\n      tag_390\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_390:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2662:2748  if (x & 0x3 > 0) {... */\n      jump(tag_391)\n    tag_389:\n        /* \"src/lib/BitMath.sol\":2736:2737  2 */\n      0x02\n        /* \"src/lib/BitMath.sol\":2730:2737  x >>= 2 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"src/lib/BitMath.sol\":2662:2748  if (x & 0x3 > 0) {... */\n    tag_391:\n        /* \"src/lib/BitMath.sol\":2771:2772  0 */\n      0x00\n        /* \"src/lib/BitMath.sol\":2765:2768  0x1 */\n      0x01\n        /* \"src/lib/BitMath.sol\":2761:2762  x */\n      dup4\n        /* \"src/lib/BitMath.sol\":2761:2768  x & 0x1 */\n      and\n        /* \"src/lib/BitMath.sol\":2761:2772  x & 0x1 > 0 */\n      gt\n        /* \"src/lib/BitMath.sol\":2757:2780  if (x & 0x1 > 0) r -= 1 */\n      iszero\n      tag_392\n      jumpi\n        /* \"src/lib/BitMath.sol\":2779:2780  1 */\n      0x01\n        /* \"src/lib/BitMath.sol\":2774:2780  r -= 1 */\n      dup2\n      tag_393\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_393:\n      swap1\n      pop\n        /* \"src/lib/BitMath.sol\":2757:2780  if (x & 0x1 > 0) r -= 1 */\n    tag_392:\n        /* \"src/lib/BitMath.sol\":1893:2787  function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":1384:1928  function getNextSqrtPriceFromInput(... */\n    tag_312:\n        /* \"src/lib/Math.sol\":1556:1580  uint160 sqrtPriceNextX96 */\n      0x00\n        /* \"src/lib/Math.sol\":1611:1621  zeroForOne */\n      dup2\n        /* \"src/lib/Math.sol\":1611:1921  zeroForOne... */\n      tag_395\n      jumpi\n        /* \"src/lib/Math.sol\":1785:1921  getNextSqrtPriceFromAmount1RoundingDown(... */\n      tag_396\n        /* \"src/lib/Math.sol\":1842:1854  sqrtPriceX96 */\n      dup6\n        /* \"src/lib/Math.sol\":1872:1881  liquidity */\n      dup6\n        /* \"src/lib/Math.sol\":1899:1907  amountIn */\n      dup6\n        /* \"src/lib/Math.sol\":1785:1824  getNextSqrtPriceFromAmount1RoundingDown */\n      tag_397\n        /* \"src/lib/Math.sol\":1785:1921  getNextSqrtPriceFromAmount1RoundingDown(... */\n      jump\t// in\n    tag_396:\n        /* \"src/lib/Math.sol\":1611:1921  zeroForOne... */\n      jump(tag_398)\n    tag_395:\n        /* \"src/lib/Math.sol\":1636:1770  getNextSqrtPriceFromAmount0RoundingUp(... */\n      tag_399\n        /* \"src/lib/Math.sol\":1691:1703  sqrtPriceX96 */\n      dup6\n        /* \"src/lib/Math.sol\":1721:1730  liquidity */\n      dup6\n        /* \"src/lib/Math.sol\":1748:1756  amountIn */\n      dup6\n        /* \"src/lib/Math.sol\":1636:1673  getNextSqrtPriceFromAmount0RoundingUp */\n      tag_400\n        /* \"src/lib/Math.sol\":1636:1770  getNextSqrtPriceFromAmount0RoundingUp(... */\n      jump\t// in\n    tag_399:\n        /* \"src/lib/Math.sol\":1611:1921  zeroForOne... */\n    tag_398:\n        /* \"src/lib/Math.sol\":1592:1921  sqrtPriceNextX96 = zeroForOne... */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":1384:1928  function getNextSqrtPriceFromInput(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/PRBMath.sol\":1169:3554  function mulDiv(... */\n    tag_341:\n        /* \"src/lib/PRBMath.sol\":1285:1299  uint256 result */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1392:1405  uint256 prod0 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1465:1478  uint256 prod1 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1594:1595  0 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1590:1596  not(0) */\n      not\n        /* \"src/lib/PRBMath.sol\":1587:1588  y */\n      dup6\n        /* \"src/lib/PRBMath.sol\":1584:1585  x */\n      dup8\n        /* \"src/lib/PRBMath.sol\":1577:1597  mulmod(x, y, not(0)) */\n      mulmod\n        /* \"src/lib/PRBMath.sol\":1631:1632  y */\n      dup6\n        /* \"src/lib/PRBMath.sol\":1628:1629  x */\n      dup8\n        /* \"src/lib/PRBMath.sol\":1624:1633  mul(x, y) */\n      mul\n        /* \"src/lib/PRBMath.sol\":1615:1633  prod0 := mul(x, y) */\n      swap3\n      pop\n        /* \"src/lib/PRBMath.sol\":1687:1692  prod0 */\n      dup3\n        /* \"src/lib/PRBMath.sol\":1683:1685  mm */\n      dup2\n        /* \"src/lib/PRBMath.sol\":1680:1693  lt(mm, prod0) */\n      lt\n        /* \"src/lib/PRBMath.sol\":1672:1677  prod0 */\n      dup4\n        /* \"src/lib/PRBMath.sol\":1668:1670  mm */\n      dup3\n        /* \"src/lib/PRBMath.sol\":1664:1678  sub(mm, prod0) */\n      sub\n        /* \"src/lib/PRBMath.sol\":1660:1694  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"src/lib/PRBMath.sol\":1651:1694  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"src/lib/PRBMath.sol\":1548:1709  {... */\n      pop\n        /* \"src/lib/PRBMath.sol\":1801:1802  0 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":1792:1797  prod1 */\n      dup2\n        /* \"src/lib/PRBMath.sol\":1792:1802  prod1 == 0 */\n      sub\n        /* \"src/lib/PRBMath.sol\":1788:1865  if (prod1 == 0) {... */\n      tag_402\n      jumpi\n        /* \"src/lib/PRBMath.sol\":1838:1849  denominator */\n      dup4\n        /* \"src/lib/PRBMath.sol\":1830:1835  prod0 */\n      dup3\n        /* \"src/lib/PRBMath.sol\":1830:1849  prod0 / denominator */\n      dup2\n      tag_403\n      jumpi\n      tag_404\n      tag_344\n      jump\t// in\n    tag_404:\n    tag_403:\n      div\n        /* \"src/lib/PRBMath.sol\":1823:1849  return prod0 / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_401)\n        /* \"src/lib/PRBMath.sol\":1788:1865  if (prod1 == 0) {... */\n    tag_402:\n        /* \"src/lib/PRBMath.sol\":1960:1965  prod1 */\n      dup1\n        /* \"src/lib/PRBMath.sol\":1946:1957  denominator */\n      dup5\n        /* \"src/lib/PRBMath.sol\":1946:1965  denominator > prod1 */\n      gt\n        /* \"src/lib/PRBMath.sol\":1938:1987  require(denominator > prod1, \"PRBMath: overflow\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap1\n      tag_407\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_405:\n        /* \"src/lib/PRBMath.sol\":2249:2266  uint256 remainder */\n      0x00\n        /* \"src/lib/PRBMath.sol\":2335:2346  denominator */\n      dup5\n        /* \"src/lib/PRBMath.sol\":2332:2333  y */\n      dup7\n        /* \"src/lib/PRBMath.sol\":2329:2330  x */\n      dup9\n        /* \"src/lib/PRBMath.sol\":2322:2347  mulmod(x, y, denominator) */\n      mulmod\n        /* \"src/lib/PRBMath.sol\":2309:2347  remainder := mulmod(x, y, denominator) */\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":2399:2404  prod0 */\n      dup3\n        /* \"src/lib/PRBMath.sol\":2388:2397  remainder */\n      dup2\n        /* \"src/lib/PRBMath.sol\":2385:2405  gt(remainder, prod0) */\n      gt\n        /* \"src/lib/PRBMath.sol\":2378:2383  prod1 */\n      dup3\n        /* \"src/lib/PRBMath.sol\":2374:2406  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"src/lib/PRBMath.sol\":2365:2406  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"src/lib/PRBMath.sol\":2444:2453  remainder */\n      dup1\n        /* \"src/lib/PRBMath.sol\":2437:2442  prod0 */\n      dup4\n        /* \"src/lib/PRBMath.sol\":2433:2454  sub(prod0, remainder) */\n      sub\n        /* \"src/lib/PRBMath.sol\":2424:2454  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"src/lib/PRBMath.sol\":2582:2597  uint256 lpotdod */\n      0x00\n        /* \"src/lib/PRBMath.sol\":2630:2631  1 */\n      0x01\n        /* \"src/lib/PRBMath.sol\":2616:2627  denominator */\n      dup7\n        /* \"src/lib/PRBMath.sol\":2615:2627  ~denominator */\n      not\n        /* \"src/lib/PRBMath.sol\":2615:2631  ~denominator + 1 */\n      add\n        /* \"src/lib/PRBMath.sol\":2600:2611  denominator */\n      dup7\n        /* \"src/lib/PRBMath.sol\":2600:2632  denominator & (~denominator + 1) */\n      and\n        /* \"src/lib/PRBMath.sol\":2582:2632  uint256 lpotdod = denominator & (~denominator + 1) */\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":2707:2714  lpotdod */\n      dup1\n        /* \"src/lib/PRBMath.sol\":2694:2705  denominator */\n      dup7\n        /* \"src/lib/PRBMath.sol\":2690:2715  div(denominator, lpotdod) */\n      div\n        /* \"src/lib/PRBMath.sol\":2675:2715  denominator := div(denominator, lpotdod) */\n      swap6\n      pop\n        /* \"src/lib/PRBMath.sol\":2753:2760  lpotdod */\n      dup1\n        /* \"src/lib/PRBMath.sol\":2746:2751  prod0 */\n      dup5\n        /* \"src/lib/PRBMath.sol\":2742:2761  div(prod0, lpotdod) */\n      div\n        /* \"src/lib/PRBMath.sol\":2733:2761  prod0 := div(prod0, lpotdod) */\n      swap4\n      pop\n        /* \"src/lib/PRBMath.sol\":2825:2826  1 */\n      0x01\n        /* \"src/lib/PRBMath.sol\":2815:2822  lpotdod */\n      dup2\n        /* \"src/lib/PRBMath.sol\":2805:2812  lpotdod */\n      dup3\n        /* \"src/lib/PRBMath.sol\":2802:2803  0 */\n      0x00\n        /* \"src/lib/PRBMath.sol\":2798:2813  sub(0, lpotdod) */\n      sub\n        /* \"src/lib/PRBMath.sol\":2794:2823  div(sub(0, lpotdod), lpotdod) */\n      div\n        /* \"src/lib/PRBMath.sol\":2790:2827  add(div(sub(0, lpotdod), lpotdod), 1) */\n      add\n        /* \"src/lib/PRBMath.sol\":2779:2827  lpotdod := add(div(sub(0, lpotdod), lpotdod), 1) */\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":2927:2934  lpotdod */\n      dup1\n        /* \"src/lib/PRBMath.sol\":2919:2924  prod1 */\n      dup4\n        /* \"src/lib/PRBMath.sol\":2919:2934  prod1 * lpotdod */\n      mul\n        /* \"src/lib/PRBMath.sol\":2910:2934  prod0 |= prod1 * lpotdod */\n      dup5\n      or\n      swap4\n      pop\n        /* \"src/lib/PRBMath.sol\":3000:3015  uint256 inverse */\n      0x00\n        /* \"src/lib/PRBMath.sol\":3038:3039  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3023:3034  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3019:3020  3 */\n      0x03\n        /* \"src/lib/PRBMath.sol\":3019:3034  3 * denominator */\n      mul\n        /* \"src/lib/PRBMath.sol\":3018:3039  (3 * denominator) ^ 2 */\n      xor\n        /* \"src/lib/PRBMath.sol\":3000:3039  uint256 inverse = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3083:3090  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3069:3080  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3069:3090  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3065:3066  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3065:3090  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3054:3090  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3153:3160  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3139:3150  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3139:3160  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3135:3136  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3135:3160  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3124:3160  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3224:3231  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3210:3221  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3210:3231  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3206:3207  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3206:3231  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3195:3231  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3295:3302  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3281:3292  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3281:3302  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3277:3278  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3277:3302  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3266:3302  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3366:3373  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3352:3363  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3352:3373  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3348:3349  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3348:3373  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3337:3373  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3438:3445  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3424:3435  denominator */\n      dup8\n        /* \"src/lib/PRBMath.sol\":3424:3445  denominator * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3420:3421  2 */\n      0x02\n        /* \"src/lib/PRBMath.sol\":3420:3445  2 - denominator * inverse */\n      sub\n        /* \"src/lib/PRBMath.sol\":3409:3445  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"src/lib/PRBMath.sol\":3500:3507  inverse */\n      dup1\n        /* \"src/lib/PRBMath.sol\":3492:3497  prod0 */\n      dup6\n        /* \"src/lib/PRBMath.sol\":3492:3507  prod0 * inverse */\n      mul\n        /* \"src/lib/PRBMath.sol\":3483:3507  result = prod0 * inverse */\n      swap6\n      pop\n        /* \"src/lib/PRBMath.sol\":3522:3535  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/lib/PRBMath.sol\":1169:3554  function mulDiv(... */\n    tag_401:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":2827:3118  function getNextSqrtPriceFromAmount1RoundingDown(... */\n    tag_397:\n        /* \"src/lib/Math.sol\":2988:2995  uint160 */\n      0x00\n        /* \"src/lib/Math.sol\":3101:3110  liquidity */\n      dup3\n        /* \"src/lib/Math.sol\":3061:3110  (amountIn << FixedPoint96.RESOLUTION) / liquidity */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/FixedPoint96.sol\":135:137  96 */\n      0x60\n        /* \"src/lib/Math.sol\":3062:3097  amountIn << FixedPoint96.RESOLUTION */\n      0xff\n      and\n        /* \"src/lib/Math.sol\":3062:3070  amountIn */\n      dup4\n        /* \"src/lib/Math.sol\":3062:3097  amountIn << FixedPoint96.RESOLUTION */\n      swap1\n      shl\n        /* \"src/lib/Math.sol\":3061:3110  (amountIn << FixedPoint96.RESOLUTION) / liquidity */\n      tag_409\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_409:\n        /* \"src/lib/Math.sol\":3026:3038  sqrtPriceX96 */\n      dup5\n        /* \"src/lib/Math.sol\":3026:3111  sqrtPriceX96 +... */\n      tag_410\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"src/lib/Math.sol\":3007:3111  return... */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":2827:3118  function getNextSqrtPriceFromAmount1RoundingDown(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Math.sol\":1934:2821  function getNextSqrtPriceFromAmount0RoundingUp(... */\n    tag_400:\n        /* \"src/lib/Math.sol\":2093:2100  uint160 */\n      0x00\n        /* \"src/lib/Math.sol\":2112:2129  uint256 numerator */\n      0x00\n        /* \"src/lib/FixedPoint96.sol\":135:137  96 */\n      0x60\n        /* \"src/lib/Math.sol\":2132:2177  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      0xff\n      and\n        /* \"src/lib/Math.sol\":2140:2149  liquidity */\n      dup5\n        /* \"src/lib/Math.sol\":2132:2150  uint256(liquidity) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":2132:2177  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      swap1\n      shl\n        /* \"src/lib/Math.sol\":2112:2177  uint256 numerator = uint256(liquidity) << FixedPoint96.RESOLUTION */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":2187:2202  uint256 product */\n      0x00\n        /* \"src/lib/Math.sol\":2216:2228  sqrtPriceX96 */\n      dup6\n        /* \"src/lib/Math.sol\":2205:2228  amountIn * sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":2205:2213  amountIn */\n      dup5\n        /* \"src/lib/Math.sol\":2205:2228  amountIn * sqrtPriceX96 */\n      tag_413\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_413:\n        /* \"src/lib/Math.sol\":2187:2228  uint256 product = amountIn * sqrtPriceX96 */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":2330:2342  sqrtPriceX96 */\n      dup6\n        /* \"src/lib/Math.sol\":2308:2342  product / amountIn == sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":2318:2326  amountIn */\n      dup5\n        /* \"src/lib/Math.sol\":2308:2315  product */\n      dup3\n        /* \"src/lib/Math.sol\":2308:2326  product / amountIn */\n      tag_414\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_414:\n        /* \"src/lib/Math.sol\":2308:2342  product / amountIn == sqrtPriceX96 */\n      sub\n        /* \"src/lib/Math.sol\":2304:2622  if (product / amountIn == sqrtPriceX96) {... */\n      tag_415\n      jumpi\n        /* \"src/lib/Math.sol\":2358:2377  uint256 denominator */\n      0x00\n        /* \"src/lib/Math.sol\":2392:2399  product */\n      dup2\n        /* \"src/lib/Math.sol\":2380:2389  numerator */\n      dup4\n        /* \"src/lib/Math.sol\":2380:2399  numerator + product */\n      tag_416\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_416:\n        /* \"src/lib/Math.sol\":2358:2399  uint256 denominator = numerator + product */\n      swap1\n      pop\n        /* \"src/lib/Math.sol\":2432:2441  numerator */\n      dup3\n        /* \"src/lib/Math.sol\":2417:2428  denominator */\n      dup2\n        /* \"src/lib/Math.sol\":2417:2441  denominator >= numerator */\n      lt\n        /* \"src/lib/Math.sol\":2413:2612  if (denominator >= numerator) {... */\n      tag_417\n      jumpi\n        /* \"src/lib/Math.sol\":2521:2575  mulDivRoundingUp(numerator, sqrtPriceX96, denominator) */\n      tag_418\n        /* \"src/lib/Math.sol\":2538:2547  numerator */\n      dup4\n        /* \"src/lib/Math.sol\":2549:2561  sqrtPriceX96 */\n      dup9\n        /* \"src/lib/Math.sol\":2521:2575  mulDivRoundingUp(numerator, sqrtPriceX96, denominator) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":2563:2574  denominator */\n      dup4\n        /* \"src/lib/Math.sol\":2521:2537  mulDivRoundingUp */\n      tag_253\n        /* \"src/lib/Math.sol\":2521:2575  mulDivRoundingUp(numerator, sqrtPriceX96, denominator) */\n      jump\t// in\n    tag_418:\n        /* \"src/lib/Math.sol\":2461:2597  return... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_412)\n        /* \"src/lib/Math.sol\":2413:2612  if (denominator >= numerator) {... */\n    tag_417:\n        /* \"src/lib/Math.sol\":2344:2622  {... */\n      pop\n        /* \"src/lib/Math.sol\":2304:2622  if (product / amountIn == sqrtPriceX96) {... */\n    tag_415:\n        /* \"src/lib/Math.sol\":2737:2800  divRoundingUp(numerator, (numerator / sqrtPriceX96) + amountIn) */\n      tag_419\n        /* \"src/lib/Math.sol\":2751:2760  numerator */\n      dup3\n        /* \"src/lib/Math.sol\":2791:2799  amountIn */\n      dup6\n        /* \"src/lib/Math.sol\":2775:2787  sqrtPriceX96 */\n      dup9\n        /* \"src/lib/Math.sol\":2763:2787  numerator / sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Math.sol\":2763:2772  numerator */\n      dup6\n        /* \"src/lib/Math.sol\":2763:2787  numerator / sqrtPriceX96 */\n      tag_420\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_420:\n        /* \"src/lib/Math.sol\":2762:2799  (numerator / sqrtPriceX96) + amountIn */\n      tag_421\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_421:\n        /* \"src/lib/Math.sol\":2737:2750  divRoundingUp */\n      tag_254\n        /* \"src/lib/Math.sol\":2737:2800  divRoundingUp(numerator, (numerator / sqrtPriceX96) + amountIn) */\n      jump\t// in\n    tag_419:\n        /* \"src/lib/Math.sol\":2693:2814  return... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"src/lib/Math.sol\":1934:2821  function getNextSqrtPriceFromAmount0RoundingUp(... */\n    tag_412:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_121:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      signextend(0x02, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_422:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_423:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_484\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_422\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_424:\n        /* \"#utility.yul\":328:352   */\n      tag_486\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_423\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_488\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_424\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:711   */\n    tag_425:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":670:704   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":663:668   */\n      dup3\n        /* \"#utility.yul\":659:705   */\n      and\n        /* \"#utility.yul\":648:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":717:835   */\n    tag_426:\n        /* \"#utility.yul\":804:828   */\n      tag_491\n        /* \"#utility.yul\":822:827   */\n      dup2\n        /* \"#utility.yul\":804:828   */\n      tag_425\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":799:802   */\n      dup3\n        /* \"#utility.yul\":792:829   */\n      mstore\n        /* \"#utility.yul\":717:835   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1063   */\n    tag_20:\n        /* \"#utility.yul\":934:938   */\n      0x00\n        /* \"#utility.yul\":972:974   */\n      0x20\n        /* \"#utility.yul\":961:970   */\n      dup3\n        /* \"#utility.yul\":957:975   */\n      add\n        /* \"#utility.yul\":949:975   */\n      swap1\n      pop\n        /* \"#utility.yul\":985:1056   */\n      tag_493\n        /* \"#utility.yul\":1053:1054   */\n      0x00\n        /* \"#utility.yul\":1042:1051   */\n      dup4\n        /* \"#utility.yul\":1038:1055   */\n      add\n        /* \"#utility.yul\":1029:1035   */\n      dup5\n        /* \"#utility.yul\":985:1056   */\n      tag_426\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":841:1063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1069:1187   */\n    tag_427:\n        /* \"#utility.yul\":1156:1180   */\n      tag_495\n        /* \"#utility.yul\":1174:1179   */\n      dup2\n        /* \"#utility.yul\":1156:1180   */\n      tag_422\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":1151:1154   */\n      dup3\n        /* \"#utility.yul\":1144:1181   */\n      mstore\n        /* \"#utility.yul\":1069:1187   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1283   */\n    tag_428:\n        /* \"#utility.yul\":1228:1235   */\n      0x00\n        /* \"#utility.yul\":1271:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1269   */\n      0x02\n        /* \"#utility.yul\":1257:1277   */\n      signextend\n        /* \"#utility.yul\":1246:1277   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1289:1401   */\n    tag_429:\n        /* \"#utility.yul\":1372:1394   */\n      tag_498\n        /* \"#utility.yul\":1388:1393   */\n      dup2\n        /* \"#utility.yul\":1372:1394   */\n      tag_428\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":1367:1370   */\n      dup3\n        /* \"#utility.yul\":1360:1395   */\n      mstore\n        /* \"#utility.yul\":1289:1401   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1407:1731   */\n    tag_24:\n        /* \"#utility.yul\":1524:1528   */\n      0x00\n        /* \"#utility.yul\":1562:1564   */\n      0x40\n        /* \"#utility.yul\":1551:1560   */\n      dup3\n        /* \"#utility.yul\":1547:1565   */\n      add\n        /* \"#utility.yul\":1539:1565   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1646   */\n      tag_500\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1632:1641   */\n      dup4\n        /* \"#utility.yul\":1628:1645   */\n      add\n        /* \"#utility.yul\":1619:1625   */\n      dup6\n        /* \"#utility.yul\":1575:1646   */\n      tag_427\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":1656:1724   */\n      tag_501\n        /* \"#utility.yul\":1720:1722   */\n      0x20\n        /* \"#utility.yul\":1709:1718   */\n      dup4\n        /* \"#utility.yul\":1705:1723   */\n      add\n        /* \"#utility.yul\":1696:1702   */\n      dup5\n        /* \"#utility.yul\":1656:1724   */\n      tag_429\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":1407:1731   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1818:1935   */\n    tag_431:\n        /* \"#utility.yul\":1927:1928   */\n      0x00\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1917:1929   */\n      revert\n        /* \"#utility.yul\":1941:2058   */\n    tag_432:\n        /* \"#utility.yul\":2050:2051   */\n      0x00\n        /* \"#utility.yul\":2047:2048   */\n      0x00\n        /* \"#utility.yul\":2040:2052   */\n      revert\n        /* \"#utility.yul\":2064:2186   */\n    tag_433:\n        /* \"#utility.yul\":2137:2161   */\n      tag_506\n        /* \"#utility.yul\":2155:2160   */\n      dup2\n        /* \"#utility.yul\":2137:2161   */\n      tag_423\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":2130:2135   */\n      dup2\n        /* \"#utility.yul\":2127:2162   */\n      eq\n        /* \"#utility.yul\":2117:2180   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":2176:2177   */\n      0x00\n        /* \"#utility.yul\":2173:2174   */\n      0x00\n        /* \"#utility.yul\":2166:2178   */\n      revert\n        /* \"#utility.yul\":2117:2180   */\n    tag_507:\n        /* \"#utility.yul\":2064:2186   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2192:2331   */\n    tag_434:\n        /* \"#utility.yul\":2238:2243   */\n      0x00\n        /* \"#utility.yul\":2276:2282   */\n      dup2\n        /* \"#utility.yul\":2263:2283   */\n      calldataload\n        /* \"#utility.yul\":2254:2283   */\n      swap1\n      pop\n        /* \"#utility.yul\":2292:2325   */\n      tag_509\n        /* \"#utility.yul\":2319:2324   */\n      dup2\n        /* \"#utility.yul\":2292:2325   */\n      tag_433\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":2192:2331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2337:2455   */\n    tag_435:\n        /* \"#utility.yul\":2408:2430   */\n      tag_511\n        /* \"#utility.yul\":2424:2429   */\n      dup2\n        /* \"#utility.yul\":2408:2430   */\n      tag_428\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":2401:2406   */\n      dup2\n        /* \"#utility.yul\":2398:2431   */\n      eq\n        /* \"#utility.yul\":2388:2449   */\n      tag_512\n      jumpi\n        /* \"#utility.yul\":2445:2446   */\n      0x00\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2435:2447   */\n      revert\n        /* \"#utility.yul\":2388:2449   */\n    tag_512:\n        /* \"#utility.yul\":2337:2455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2461:2596   */\n    tag_436:\n        /* \"#utility.yul\":2505:2510   */\n      0x00\n        /* \"#utility.yul\":2543:2549   */\n      dup2\n        /* \"#utility.yul\":2530:2550   */\n      calldataload\n        /* \"#utility.yul\":2521:2550   */\n      swap1\n      pop\n        /* \"#utility.yul\":2559:2590   */\n      tag_514\n        /* \"#utility.yul\":2584:2589   */\n      dup2\n        /* \"#utility.yul\":2559:2590   */\n      tag_435\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":2461:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2724   */\n    tag_437:\n        /* \"#utility.yul\":2675:2699   */\n      tag_516\n        /* \"#utility.yul\":2693:2698   */\n      dup2\n        /* \"#utility.yul\":2675:2699   */\n      tag_425\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":2668:2673   */\n      dup2\n        /* \"#utility.yul\":2665:2700   */\n      eq\n        /* \"#utility.yul\":2655:2718   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":2714:2715   */\n      0x00\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2704:2716   */\n      revert\n        /* \"#utility.yul\":2655:2718   */\n    tag_517:\n        /* \"#utility.yul\":2602:2724   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2730:2869   */\n    tag_438:\n        /* \"#utility.yul\":2776:2781   */\n      0x00\n        /* \"#utility.yul\":2814:2820   */\n      dup2\n        /* \"#utility.yul\":2801:2821   */\n      calldataload\n        /* \"#utility.yul\":2792:2821   */\n      swap1\n      pop\n        /* \"#utility.yul\":2830:2863   */\n      tag_519\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2830:2863   */\n      tag_437\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":2730:2869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2875:2992   */\n    tag_439:\n        /* \"#utility.yul\":2984:2985   */\n      0x00\n        /* \"#utility.yul\":2981:2982   */\n      0x00\n        /* \"#utility.yul\":2974:2986   */\n      revert\n        /* \"#utility.yul\":2998:3115   */\n    tag_440:\n        /* \"#utility.yul\":3107:3108   */\n      0x00\n        /* \"#utility.yul\":3104:3105   */\n      0x00\n        /* \"#utility.yul\":3097:3109   */\n      revert\n        /* \"#utility.yul\":3121:3238   */\n    tag_441:\n        /* \"#utility.yul\":3230:3231   */\n      0x00\n        /* \"#utility.yul\":3227:3228   */\n      0x00\n        /* \"#utility.yul\":3220:3232   */\n      revert\n        /* \"#utility.yul\":3257:3809   */\n    tag_442:\n        /* \"#utility.yul\":3314:3322   */\n      0x00\n        /* \"#utility.yul\":3324:3330   */\n      0x00\n        /* \"#utility.yul\":3374:3377   */\n      dup4\n        /* \"#utility.yul\":3367:3371   */\n      0x1f\n        /* \"#utility.yul\":3359:3365   */\n      dup5\n        /* \"#utility.yul\":3355:3372   */\n      add\n        /* \"#utility.yul\":3351:3378   */\n      slt\n        /* \"#utility.yul\":3341:3463   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":3382:3461   */\n      tag_525\n      tag_439\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":3341:3463   */\n    tag_524:\n        /* \"#utility.yul\":3495:3501   */\n      dup3\n        /* \"#utility.yul\":3482:3502   */\n      calldataload\n        /* \"#utility.yul\":3472:3502   */\n      swap1\n      pop\n        /* \"#utility.yul\":3525:3543   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3517:3523   */\n      dup2\n        /* \"#utility.yul\":3514:3544   */\n      gt\n        /* \"#utility.yul\":3511:3628   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":3547:3626   */\n      tag_527\n      tag_440\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":3511:3628   */\n    tag_526:\n        /* \"#utility.yul\":3661:3665   */\n      0x20\n        /* \"#utility.yul\":3653:3659   */\n      dup4\n        /* \"#utility.yul\":3649:3666   */\n      add\n        /* \"#utility.yul\":3637:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3715:3718   */\n      dup4\n        /* \"#utility.yul\":3707:3711   */\n      0x01\n        /* \"#utility.yul\":3699:3705   */\n      dup3\n        /* \"#utility.yul\":3695:3712   */\n      mul\n        /* \"#utility.yul\":3685:3693   */\n      dup4\n        /* \"#utility.yul\":3681:3713   */\n      add\n        /* \"#utility.yul\":3678:3719   */\n      gt\n        /* \"#utility.yul\":3675:3803   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":3722:3801   */\n      tag_529\n      tag_441\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":3675:3803   */\n    tag_528:\n        /* \"#utility.yul\":3257:3809   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4916   */\n    tag_27:\n        /* \"#utility.yul\":3917:3923   */\n      0x00\n        /* \"#utility.yul\":3925:3931   */\n      0x00\n        /* \"#utility.yul\":3933:3939   */\n      0x00\n        /* \"#utility.yul\":3941:3947   */\n      0x00\n        /* \"#utility.yul\":3949:3955   */\n      0x00\n        /* \"#utility.yul\":3957:3963   */\n      0x00\n        /* \"#utility.yul\":4006:4009   */\n      0xa0\n        /* \"#utility.yul\":3994:4003   */\n      dup8\n        /* \"#utility.yul\":3985:3992   */\n      dup10\n        /* \"#utility.yul\":3981:4004   */\n      sub\n        /* \"#utility.yul\":3977:4010   */\n      slt\n        /* \"#utility.yul\":3974:4094   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":4013:4092   */\n      tag_532\n      tag_431\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":3974:4094   */\n    tag_531:\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4158:4211   */\n      tag_533\n        /* \"#utility.yul\":4203:4210   */\n      dup10\n        /* \"#utility.yul\":4194:4200   */\n      dup3\n        /* \"#utility.yul\":4183:4192   */\n      dup11\n        /* \"#utility.yul\":4179:4201   */\n      add\n        /* \"#utility.yul\":4158:4211   */\n      tag_434\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":4148:4211   */\n      swap7\n      pop\n        /* \"#utility.yul\":4104:4221   */\n      pop\n        /* \"#utility.yul\":4260:4262   */\n      0x20\n        /* \"#utility.yul\":4286:4337   */\n      tag_534\n        /* \"#utility.yul\":4329:4336   */\n      dup10\n        /* \"#utility.yul\":4320:4326   */\n      dup3\n        /* \"#utility.yul\":4309:4318   */\n      dup11\n        /* \"#utility.yul\":4305:4327   */\n      add\n        /* \"#utility.yul\":4286:4337   */\n      tag_436\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":4276:4337   */\n      swap6\n      pop\n        /* \"#utility.yul\":4231:4347   */\n      pop\n        /* \"#utility.yul\":4386:4388   */\n      0x40\n        /* \"#utility.yul\":4412:4463   */\n      tag_535\n        /* \"#utility.yul\":4455:4462   */\n      dup10\n        /* \"#utility.yul\":4446:4452   */\n      dup3\n        /* \"#utility.yul\":4435:4444   */\n      dup11\n        /* \"#utility.yul\":4431:4453   */\n      add\n        /* \"#utility.yul\":4412:4463   */\n      tag_436\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":4402:4463   */\n      swap5\n      pop\n        /* \"#utility.yul\":4357:4473   */\n      pop\n        /* \"#utility.yul\":4512:4514   */\n      0x60\n        /* \"#utility.yul\":4538:4591   */\n      tag_536\n        /* \"#utility.yul\":4583:4590   */\n      dup10\n        /* \"#utility.yul\":4574:4580   */\n      dup3\n        /* \"#utility.yul\":4563:4572   */\n      dup11\n        /* \"#utility.yul\":4559:4581   */\n      add\n        /* \"#utility.yul\":4538:4591   */\n      tag_438\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":4528:4591   */\n      swap4\n      pop\n        /* \"#utility.yul\":4483:4601   */\n      pop\n        /* \"#utility.yul\":4668:4671   */\n      0x80\n        /* \"#utility.yul\":4657:4666   */\n      dup8\n        /* \"#utility.yul\":4653:4672   */\n      add\n        /* \"#utility.yul\":4640:4673   */\n      calldataload\n        /* \"#utility.yul\":4700:4718   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4692:4698   */\n      dup2\n        /* \"#utility.yul\":4689:4719   */\n      gt\n        /* \"#utility.yul\":4686:4803   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":4722:4801   */\n      tag_538\n      tag_432\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":4686:4803   */\n    tag_537:\n        /* \"#utility.yul\":4835:4899   */\n      tag_539\n        /* \"#utility.yul\":4891:4898   */\n      dup10\n        /* \"#utility.yul\":4882:4888   */\n      dup3\n        /* \"#utility.yul\":4871:4880   */\n      dup11\n        /* \"#utility.yul\":4867:4889   */\n      add\n        /* \"#utility.yul\":4835:4899   */\n      tag_442\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":4817:4899   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4611:4909   */\n      pop\n        /* \"#utility.yul\":3815:4916   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4922:4999   */\n    tag_443:\n        /* \"#utility.yul\":4959:4966   */\n      0x00\n        /* \"#utility.yul\":4988:4993   */\n      dup2\n        /* \"#utility.yul\":4977:4993   */\n      swap1\n      pop\n        /* \"#utility.yul\":4922:4999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5005:5123   */\n    tag_444:\n        /* \"#utility.yul\":5092:5116   */\n      tag_542\n        /* \"#utility.yul\":5110:5115   */\n      dup2\n        /* \"#utility.yul\":5092:5116   */\n      tag_443\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":5087:5090   */\n      dup3\n        /* \"#utility.yul\":5080:5117   */\n      mstore\n        /* \"#utility.yul\":5005:5123   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5129:5461   */\n    tag_30:\n        /* \"#utility.yul\":5250:5254   */\n      0x00\n        /* \"#utility.yul\":5288:5290   */\n      0x40\n        /* \"#utility.yul\":5277:5286   */\n      dup3\n        /* \"#utility.yul\":5273:5291   */\n      add\n        /* \"#utility.yul\":5265:5291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5301:5372   */\n      tag_544\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5358:5367   */\n      dup4\n        /* \"#utility.yul\":5354:5371   */\n      add\n        /* \"#utility.yul\":5345:5351   */\n      dup6\n        /* \"#utility.yul\":5301:5372   */\n      tag_444\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":5382:5454   */\n      tag_545\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup4\n        /* \"#utility.yul\":5435:5453   */\n      add\n        /* \"#utility.yul\":5426:5432   */\n      dup5\n        /* \"#utility.yul\":5382:5454   */\n      tag_444\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":5129:5461   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5467:5544   */\n    tag_445:\n        /* \"#utility.yul\":5504:5511   */\n      0x00\n        /* \"#utility.yul\":5533:5538   */\n      dup2\n        /* \"#utility.yul\":5522:5538   */\n      swap1\n      pop\n        /* \"#utility.yul\":5467:5544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5550:5672   */\n    tag_446:\n        /* \"#utility.yul\":5623:5647   */\n      tag_548\n        /* \"#utility.yul\":5641:5646   */\n      dup2\n        /* \"#utility.yul\":5623:5647   */\n      tag_445\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":5616:5621   */\n      dup2\n        /* \"#utility.yul\":5613:5648   */\n      eq\n        /* \"#utility.yul\":5603:5666   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":5662:5663   */\n      0x00\n        /* \"#utility.yul\":5659:5660   */\n      0x00\n        /* \"#utility.yul\":5652:5664   */\n      revert\n        /* \"#utility.yul\":5603:5666   */\n    tag_549:\n        /* \"#utility.yul\":5550:5672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:5817   */\n    tag_447:\n        /* \"#utility.yul\":5724:5729   */\n      0x00\n        /* \"#utility.yul\":5762:5768   */\n      dup2\n        /* \"#utility.yul\":5749:5769   */\n      calldataload\n        /* \"#utility.yul\":5740:5769   */\n      swap1\n      pop\n        /* \"#utility.yul\":5778:5811   */\n      tag_551\n        /* \"#utility.yul\":5805:5810   */\n      dup2\n        /* \"#utility.yul\":5778:5811   */\n      tag_446\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":5678:5817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5823:6152   */\n    tag_33:\n        /* \"#utility.yul\":5882:5888   */\n      0x00\n        /* \"#utility.yul\":5931:5933   */\n      0x20\n        /* \"#utility.yul\":5919:5928   */\n      dup3\n        /* \"#utility.yul\":5910:5917   */\n      dup5\n        /* \"#utility.yul\":5906:5929   */\n      sub\n        /* \"#utility.yul\":5902:5934   */\n      slt\n        /* \"#utility.yul\":5899:6018   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":5937:6016   */\n      tag_554\n      tag_431\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":5899:6018   */\n    tag_553:\n        /* \"#utility.yul\":6057:6058   */\n      0x00\n        /* \"#utility.yul\":6082:6135   */\n      tag_555\n        /* \"#utility.yul\":6127:6134   */\n      dup5\n        /* \"#utility.yul\":6118:6124   */\n      dup3\n        /* \"#utility.yul\":6107:6116   */\n      dup6\n        /* \"#utility.yul\":6103:6125   */\n      add\n        /* \"#utility.yul\":6082:6135   */\n      tag_447\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":6072:6135   */\n      swap2\n      pop\n        /* \"#utility.yul\":6028:6145   */\n      pop\n        /* \"#utility.yul\":5823:6152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6158:6248   */\n    tag_448:\n        /* \"#utility.yul\":6193:6200   */\n      0x00\n        /* \"#utility.yul\":6236:6241   */\n      dup2\n        /* \"#utility.yul\":6233:6234   */\n      0x01\n        /* \"#utility.yul\":6222:6242   */\n      signextend\n        /* \"#utility.yul\":6211:6242   */\n      swap1\n      pop\n        /* \"#utility.yul\":6158:6248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6254:6372   */\n    tag_449:\n        /* \"#utility.yul\":6325:6347   */\n      tag_558\n        /* \"#utility.yul\":6341:6346   */\n      dup2\n        /* \"#utility.yul\":6325:6347   */\n      tag_448\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":6318:6323   */\n      dup2\n        /* \"#utility.yul\":6315:6348   */\n      eq\n        /* \"#utility.yul\":6305:6366   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":6362:6363   */\n      0x00\n        /* \"#utility.yul\":6359:6360   */\n      0x00\n        /* \"#utility.yul\":6352:6364   */\n      revert\n        /* \"#utility.yul\":6305:6366   */\n    tag_559:\n        /* \"#utility.yul\":6254:6372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6378:6513   */\n    tag_450:\n        /* \"#utility.yul\":6422:6427   */\n      0x00\n        /* \"#utility.yul\":6460:6466   */\n      dup2\n        /* \"#utility.yul\":6447:6467   */\n      calldataload\n        /* \"#utility.yul\":6438:6467   */\n      swap1\n      pop\n        /* \"#utility.yul\":6476:6507   */\n      tag_561\n        /* \"#utility.yul\":6501:6506   */\n      dup2\n        /* \"#utility.yul\":6476:6507   */\n      tag_449\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":6378:6513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6519:6844   */\n    tag_38:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6625:6627   */\n      0x20\n        /* \"#utility.yul\":6613:6622   */\n      dup3\n        /* \"#utility.yul\":6604:6611   */\n      dup5\n        /* \"#utility.yul\":6600:6623   */\n      sub\n        /* \"#utility.yul\":6596:6628   */\n      slt\n        /* \"#utility.yul\":6593:6712   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":6631:6710   */\n      tag_564\n      tag_431\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":6593:6712   */\n    tag_563:\n        /* \"#utility.yul\":6751:6752   */\n      0x00\n        /* \"#utility.yul\":6776:6827   */\n      tag_565\n        /* \"#utility.yul\":6819:6826   */\n      dup5\n        /* \"#utility.yul\":6810:6816   */\n      dup3\n        /* \"#utility.yul\":6799:6808   */\n      dup6\n        /* \"#utility.yul\":6795:6817   */\n      add\n        /* \"#utility.yul\":6776:6827   */\n      tag_450\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":6766:6827   */\n      swap2\n      pop\n        /* \"#utility.yul\":6722:6837   */\n      pop\n        /* \"#utility.yul\":6519:6844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6850:7072   */\n    tag_41:\n        /* \"#utility.yul\":6943:6947   */\n      0x00\n        /* \"#utility.yul\":6981:6983   */\n      0x20\n        /* \"#utility.yul\":6970:6979   */\n      dup3\n        /* \"#utility.yul\":6966:6984   */\n      add\n        /* \"#utility.yul\":6958:6984   */\n      swap1\n      pop\n        /* \"#utility.yul\":6994:7065   */\n      tag_567\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7051:7060   */\n      dup4\n        /* \"#utility.yul\":7047:7064   */\n      add\n        /* \"#utility.yul\":7038:7044   */\n      dup5\n        /* \"#utility.yul\":6994:7065   */\n      tag_444\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":6850:7072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7078:7168   */\n    tag_451:\n        /* \"#utility.yul\":7112:7119   */\n      0x00\n        /* \"#utility.yul\":7155:7160   */\n      dup2\n        /* \"#utility.yul\":7148:7161   */\n      iszero\n        /* \"#utility.yul\":7141:7162   */\n      iszero\n        /* \"#utility.yul\":7130:7162   */\n      swap1\n      pop\n        /* \"#utility.yul\":7078:7168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7174:7290   */\n    tag_452:\n        /* \"#utility.yul\":7244:7265   */\n      tag_570\n        /* \"#utility.yul\":7259:7264   */\n      dup2\n        /* \"#utility.yul\":7244:7265   */\n      tag_451\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":7237:7242   */\n      dup2\n        /* \"#utility.yul\":7234:7266   */\n      eq\n        /* \"#utility.yul\":7224:7284   */\n      tag_571\n      jumpi\n        /* \"#utility.yul\":7280:7281   */\n      0x00\n        /* \"#utility.yul\":7277:7278   */\n      0x00\n        /* \"#utility.yul\":7270:7282   */\n      revert\n        /* \"#utility.yul\":7224:7284   */\n    tag_571:\n        /* \"#utility.yul\":7174:7290   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7296:7429   */\n    tag_453:\n        /* \"#utility.yul\":7339:7344   */\n      0x00\n        /* \"#utility.yul\":7377:7383   */\n      dup2\n        /* \"#utility.yul\":7364:7384   */\n      calldataload\n        /* \"#utility.yul\":7355:7384   */\n      swap1\n      pop\n        /* \"#utility.yul\":7393:7423   */\n      tag_573\n        /* \"#utility.yul\":7417:7422   */\n      dup2\n        /* \"#utility.yul\":7393:7423   */\n      tag_452\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":7296:7429   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7435:7557   */\n    tag_454:\n        /* \"#utility.yul\":7508:7532   */\n      tag_575\n        /* \"#utility.yul\":7526:7531   */\n      dup2\n        /* \"#utility.yul\":7508:7532   */\n      tag_443\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":7501:7506   */\n      dup2\n        /* \"#utility.yul\":7498:7533   */\n      eq\n        /* \"#utility.yul\":7488:7551   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":7547:7548   */\n      0x00\n        /* \"#utility.yul\":7544:7545   */\n      0x00\n        /* \"#utility.yul\":7537:7549   */\n      revert\n        /* \"#utility.yul\":7488:7551   */\n    tag_576:\n        /* \"#utility.yul\":7435:7557   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7563:7702   */\n    tag_455:\n        /* \"#utility.yul\":7609:7614   */\n      0x00\n        /* \"#utility.yul\":7647:7653   */\n      dup2\n        /* \"#utility.yul\":7634:7654   */\n      calldataload\n        /* \"#utility.yul\":7625:7654   */\n      swap1\n      pop\n        /* \"#utility.yul\":7663:7696   */\n      tag_578\n        /* \"#utility.yul\":7690:7695   */\n      dup2\n        /* \"#utility.yul\":7663:7696   */\n      tag_454\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":7563:7702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7708:8665   */\n    tag_44:\n        /* \"#utility.yul\":7802:7808   */\n      0x00\n        /* \"#utility.yul\":7810:7816   */\n      0x00\n        /* \"#utility.yul\":7818:7824   */\n      0x00\n        /* \"#utility.yul\":7826:7832   */\n      0x00\n        /* \"#utility.yul\":7834:7840   */\n      0x00\n        /* \"#utility.yul\":7883:7886   */\n      0x80\n        /* \"#utility.yul\":7871:7880   */\n      dup7\n        /* \"#utility.yul\":7862:7869   */\n      dup9\n        /* \"#utility.yul\":7858:7881   */\n      sub\n        /* \"#utility.yul\":7854:7887   */\n      slt\n        /* \"#utility.yul\":7851:7971   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":7890:7969   */\n      tag_581\n      tag_431\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":7851:7971   */\n    tag_580:\n        /* \"#utility.yul\":8010:8011   */\n      0x00\n        /* \"#utility.yul\":8035:8088   */\n      tag_582\n        /* \"#utility.yul\":8080:8087   */\n      dup9\n        /* \"#utility.yul\":8071:8077   */\n      dup3\n        /* \"#utility.yul\":8060:8069   */\n      dup10\n        /* \"#utility.yul\":8056:8078   */\n      add\n        /* \"#utility.yul\":8035:8088   */\n      tag_434\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":8025:8088   */\n      swap6\n      pop\n        /* \"#utility.yul\":7981:8098   */\n      pop\n        /* \"#utility.yul\":8137:8139   */\n      0x20\n        /* \"#utility.yul\":8163:8213   */\n      tag_583\n        /* \"#utility.yul\":8205:8212   */\n      dup9\n        /* \"#utility.yul\":8196:8202   */\n      dup3\n        /* \"#utility.yul\":8185:8194   */\n      dup10\n        /* \"#utility.yul\":8181:8203   */\n      add\n        /* \"#utility.yul\":8163:8213   */\n      tag_453\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":8153:8213   */\n      swap5\n      pop\n        /* \"#utility.yul\":8108:8223   */\n      pop\n        /* \"#utility.yul\":8262:8264   */\n      0x40\n        /* \"#utility.yul\":8288:8341   */\n      tag_584\n        /* \"#utility.yul\":8333:8340   */\n      dup9\n        /* \"#utility.yul\":8324:8330   */\n      dup3\n        /* \"#utility.yul\":8313:8322   */\n      dup10\n        /* \"#utility.yul\":8309:8331   */\n      add\n        /* \"#utility.yul\":8288:8341   */\n      tag_455\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":8278:8341   */\n      swap4\n      pop\n        /* \"#utility.yul\":8233:8351   */\n      pop\n        /* \"#utility.yul\":8418:8420   */\n      0x60\n        /* \"#utility.yul\":8407:8416   */\n      dup7\n        /* \"#utility.yul\":8403:8421   */\n      add\n        /* \"#utility.yul\":8390:8422   */\n      calldataload\n        /* \"#utility.yul\":8449:8467   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8441:8447   */\n      dup2\n        /* \"#utility.yul\":8438:8468   */\n      gt\n        /* \"#utility.yul\":8435:8552   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":8471:8550   */\n      tag_586\n      tag_432\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":8435:8552   */\n    tag_585:\n        /* \"#utility.yul\":8584:8648   */\n      tag_587\n        /* \"#utility.yul\":8640:8647   */\n      dup9\n        /* \"#utility.yul\":8631:8637   */\n      dup3\n        /* \"#utility.yul\":8620:8629   */\n      dup10\n        /* \"#utility.yul\":8616:8638   */\n      add\n        /* \"#utility.yul\":8584:8648   */\n      tag_442\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":8566:8648   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":8361:8658   */\n      pop\n        /* \"#utility.yul\":7708:8665   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8671:8747   */\n    tag_456:\n        /* \"#utility.yul\":8707:8714   */\n      0x00\n        /* \"#utility.yul\":8736:8741   */\n      dup2\n        /* \"#utility.yul\":8725:8741   */\n      swap1\n      pop\n        /* \"#utility.yul\":8671:8747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8753:8868   */\n    tag_457:\n        /* \"#utility.yul\":8838:8861   */\n      tag_590\n        /* \"#utility.yul\":8855:8860   */\n      dup2\n        /* \"#utility.yul\":8838:8861   */\n      tag_456\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":8833:8836   */\n      dup3\n        /* \"#utility.yul\":8826:8862   */\n      mstore\n        /* \"#utility.yul\":8753:8868   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8874:9198   */\n    tag_47:\n        /* \"#utility.yul\":8991:8995   */\n      0x00\n        /* \"#utility.yul\":9029:9031   */\n      0x40\n        /* \"#utility.yul\":9018:9027   */\n      dup3\n        /* \"#utility.yul\":9014:9032   */\n      add\n        /* \"#utility.yul\":9006:9032   */\n      swap1\n      pop\n        /* \"#utility.yul\":9042:9111   */\n      tag_592\n        /* \"#utility.yul\":9108:9109   */\n      0x00\n        /* \"#utility.yul\":9097:9106   */\n      dup4\n        /* \"#utility.yul\":9093:9110   */\n      add\n        /* \"#utility.yul\":9084:9090   */\n      dup6\n        /* \"#utility.yul\":9042:9111   */\n      tag_457\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9121:9191   */\n      tag_593\n        /* \"#utility.yul\":9187:9189   */\n      0x20\n        /* \"#utility.yul\":9176:9185   */\n      dup4\n        /* \"#utility.yul\":9172:9190   */\n      add\n        /* \"#utility.yul\":9163:9169   */\n      dup5\n        /* \"#utility.yul\":9121:9191   */\n      tag_457\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":8874:9198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:9529   */\n    tag_53:\n        /* \"#utility.yul\":9261:9267   */\n      0x00\n        /* \"#utility.yul\":9310:9312   */\n      0x20\n        /* \"#utility.yul\":9298:9307   */\n      dup3\n        /* \"#utility.yul\":9289:9296   */\n      dup5\n        /* \"#utility.yul\":9285:9308   */\n      sub\n        /* \"#utility.yul\":9281:9313   */\n      slt\n        /* \"#utility.yul\":9278:9397   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":9316:9395   */\n      tag_596\n      tag_431\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":9278:9397   */\n    tag_595:\n        /* \"#utility.yul\":9436:9437   */\n      0x00\n        /* \"#utility.yul\":9461:9512   */\n      tag_597\n        /* \"#utility.yul\":9504:9511   */\n      dup5\n        /* \"#utility.yul\":9495:9501   */\n      dup3\n        /* \"#utility.yul\":9484:9493   */\n      dup6\n        /* \"#utility.yul\":9480:9502   */\n      add\n        /* \"#utility.yul\":9461:9512   */\n      tag_436\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":9451:9512   */\n      swap2\n      pop\n        /* \"#utility.yul\":9407:9522   */\n      pop\n        /* \"#utility.yul\":9204:9529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9535:9644   */\n    tag_458:\n        /* \"#utility.yul\":9616:9637   */\n      tag_599\n        /* \"#utility.yul\":9631:9636   */\n      dup2\n        /* \"#utility.yul\":9616:9637   */\n      tag_451\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":9611:9614   */\n      dup3\n        /* \"#utility.yul\":9604:9638   */\n      mstore\n        /* \"#utility.yul\":9535:9644   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9650:9970   */\n    tag_56:\n        /* \"#utility.yul\":9765:9769   */\n      0x00\n        /* \"#utility.yul\":9803:9805   */\n      0x40\n        /* \"#utility.yul\":9792:9801   */\n      dup3\n        /* \"#utility.yul\":9788:9806   */\n      add\n        /* \"#utility.yul\":9780:9806   */\n      swap1\n      pop\n        /* \"#utility.yul\":9816:9881   */\n      tag_601\n        /* \"#utility.yul\":9878:9879   */\n      0x00\n        /* \"#utility.yul\":9867:9876   */\n      dup4\n        /* \"#utility.yul\":9863:9880   */\n      add\n        /* \"#utility.yul\":9854:9860   */\n      dup6\n        /* \"#utility.yul\":9816:9881   */\n      tag_458\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":9891:9963   */\n      tag_602\n        /* \"#utility.yul\":9959:9961   */\n      0x20\n        /* \"#utility.yul\":9948:9957   */\n      dup4\n        /* \"#utility.yul\":9944:9962   */\n      add\n        /* \"#utility.yul\":9935:9941   */\n      dup5\n        /* \"#utility.yul\":9891:9963   */\n      tag_426\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":9650:9970   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9976:10156   */\n    tag_459:\n        /* \"#utility.yul\":10024:10101   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10021:10022   */\n      0x00\n        /* \"#utility.yul\":10014:10102   */\n      mstore\n        /* \"#utility.yul\":10121:10125   */\n      0x11\n        /* \"#utility.yul\":10118:10119   */\n      0x04\n        /* \"#utility.yul\":10111:10126   */\n      mstore\n        /* \"#utility.yul\":10145:10149   */\n      0x24\n        /* \"#utility.yul\":10142:10143   */\n      0x00\n        /* \"#utility.yul\":10135:10150   */\n      revert\n        /* \"#utility.yul\":10162:10388   */\n    tag_61:\n        /* \"#utility.yul\":10196:10199   */\n      0x00\n        /* \"#utility.yul\":10219:10241   */\n      tag_605\n        /* \"#utility.yul\":10235:10240   */\n      dup3\n        /* \"#utility.yul\":10219:10241   */\n      tag_428\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":10210:10241   */\n      swap2\n      pop\n        /* \"#utility.yul\":10263:10329   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":10256:10261   */\n      dup3\n        /* \"#utility.yul\":10253:10330   */\n      sub\n        /* \"#utility.yul\":10250:10353   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":10333:10351   */\n      tag_607\n      tag_459\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":10250:10353   */\n    tag_606:\n        /* \"#utility.yul\":10376:10381   */\n      dup2\n        /* \"#utility.yul\":10373:10374   */\n      0x00\n        /* \"#utility.yul\":10369:10382   */\n      sub\n        /* \"#utility.yul\":10362:10382   */\n      swap1\n      pop\n        /* \"#utility.yul\":10162:10388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10394:10618   */\n    tag_90:\n        /* \"#utility.yul\":10434:10437   */\n      0x00\n        /* \"#utility.yul\":10453:10473   */\n      tag_609\n        /* \"#utility.yul\":10471:10472   */\n      dup3\n        /* \"#utility.yul\":10453:10473   */\n      tag_425\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":10448:10473   */\n      swap2\n      pop\n        /* \"#utility.yul\":10487:10507   */\n      tag_610\n        /* \"#utility.yul\":10505:10506   */\n      dup4\n        /* \"#utility.yul\":10487:10507   */\n      tag_425\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":10482:10507   */\n      swap3\n      pop\n        /* \"#utility.yul\":10530:10531   */\n      dup3\n        /* \"#utility.yul\":10527:10528   */\n      dup3\n        /* \"#utility.yul\":10523:10532   */\n      add\n        /* \"#utility.yul\":10516:10532   */\n      swap1\n      pop\n        /* \"#utility.yul\":10553:10587   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10548:10551   */\n      dup2\n        /* \"#utility.yul\":10545:10588   */\n      gt\n        /* \"#utility.yul\":10542:10611   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":10591:10609   */\n      tag_612\n      tag_459\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":10542:10611   */\n    tag_611:\n        /* \"#utility.yul\":10394:10618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10624:10792   */\n    tag_460:\n        /* \"#utility.yul\":10707:10718   */\n      0x00\n        /* \"#utility.yul\":10741:10747   */\n      dup3\n        /* \"#utility.yul\":10736:10739   */\n      dup3\n        /* \"#utility.yul\":10729:10748   */\n      mstore\n        /* \"#utility.yul\":10781:10785   */\n      0x20\n        /* \"#utility.yul\":10776:10779   */\n      dup3\n        /* \"#utility.yul\":10772:10786   */\n      add\n        /* \"#utility.yul\":10757:10786   */\n      swap1\n      pop\n        /* \"#utility.yul\":10624:10792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10798:10946   */\n    tag_461:\n        /* \"#utility.yul\":10896:10902   */\n      dup3\n        /* \"#utility.yul\":10891:10894   */\n      dup2\n        /* \"#utility.yul\":10886:10889   */\n      dup4\n        /* \"#utility.yul\":10873:10903   */\n      calldatacopy\n        /* \"#utility.yul\":10937:10938   */\n      0x00\n        /* \"#utility.yul\":10928:10934   */\n      dup4\n        /* \"#utility.yul\":10923:10926   */\n      dup4\n        /* \"#utility.yul\":10919:10935   */\n      add\n        /* \"#utility.yul\":10912:10939   */\n      mstore\n        /* \"#utility.yul\":10798:10946   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10952:11054   */\n    tag_462:\n        /* \"#utility.yul\":10993:10999   */\n      0x00\n        /* \"#utility.yul\":11044:11046   */\n      0x1f\n        /* \"#utility.yul\":11040:11047   */\n      not\n        /* \"#utility.yul\":11035:11037   */\n      0x1f\n        /* \"#utility.yul\":11028:11033   */\n      dup4\n        /* \"#utility.yul\":11024:11038   */\n      add\n        /* \"#utility.yul\":11020:11048   */\n      and\n        /* \"#utility.yul\":11010:11048   */\n      swap1\n      pop\n        /* \"#utility.yul\":10952:11054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11082:11396   */\n    tag_463:\n        /* \"#utility.yul\":11178:11181   */\n      0x00\n        /* \"#utility.yul\":11199:11269   */\n      tag_617\n        /* \"#utility.yul\":11262:11268   */\n      dup4\n        /* \"#utility.yul\":11257:11260   */\n      dup6\n        /* \"#utility.yul\":11199:11269   */\n      tag_460\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":11192:11269   */\n      swap4\n      pop\n        /* \"#utility.yul\":11279:11335   */\n      tag_618\n        /* \"#utility.yul\":11328:11334   */\n      dup4\n        /* \"#utility.yul\":11323:11326   */\n      dup6\n        /* \"#utility.yul\":11316:11321   */\n      dup5\n        /* \"#utility.yul\":11279:11335   */\n      tag_461\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":11360:11389   */\n      tag_619\n        /* \"#utility.yul\":11382:11388   */\n      dup4\n        /* \"#utility.yul\":11360:11389   */\n      tag_462\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":11355:11358   */\n      dup5\n        /* \"#utility.yul\":11351:11390   */\n      add\n        /* \"#utility.yul\":11344:11390   */\n      swap1\n      pop\n        /* \"#utility.yul\":11082:11396   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11402:11951   */\n    tag_102:\n        /* \"#utility.yul\":11579:11583   */\n      0x00\n        /* \"#utility.yul\":11617:11619   */\n      0x60\n        /* \"#utility.yul\":11606:11615   */\n      dup3\n        /* \"#utility.yul\":11602:11620   */\n      add\n        /* \"#utility.yul\":11594:11620   */\n      swap1\n      pop\n        /* \"#utility.yul\":11630:11701   */\n      tag_621\n        /* \"#utility.yul\":11698:11699   */\n      0x00\n        /* \"#utility.yul\":11687:11696   */\n      dup4\n        /* \"#utility.yul\":11683:11700   */\n      add\n        /* \"#utility.yul\":11674:11680   */\n      dup8\n        /* \"#utility.yul\":11630:11701   */\n      tag_444\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":11711:11783   */\n      tag_622\n        /* \"#utility.yul\":11779:11781   */\n      0x20\n        /* \"#utility.yul\":11768:11777   */\n      dup4\n        /* \"#utility.yul\":11764:11782   */\n      add\n        /* \"#utility.yul\":11755:11761   */\n      dup7\n        /* \"#utility.yul\":11711:11783   */\n      tag_444\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":11830:11839   */\n      dup2\n        /* \"#utility.yul\":11824:11828   */\n      dup2\n        /* \"#utility.yul\":11820:11840   */\n      sub\n        /* \"#utility.yul\":11815:11817   */\n      0x40\n        /* \"#utility.yul\":11804:11813   */\n      dup4\n        /* \"#utility.yul\":11800:11818   */\n      add\n        /* \"#utility.yul\":11793:11841   */\n      mstore\n        /* \"#utility.yul\":11858:11944   */\n      tag_623\n        /* \"#utility.yul\":11939:11943   */\n      dup2\n        /* \"#utility.yul\":11930:11936   */\n      dup5\n        /* \"#utility.yul\":11922:11928   */\n      dup7\n        /* \"#utility.yul\":11858:11944   */\n      tag_463\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":11850:11944   */\n      swap1\n      pop\n        /* \"#utility.yul\":11402:11951   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11957:12148   */\n    tag_109:\n        /* \"#utility.yul\":11997:12000   */\n      0x00\n        /* \"#utility.yul\":12016:12036   */\n      tag_625\n        /* \"#utility.yul\":12034:12035   */\n      dup3\n        /* \"#utility.yul\":12016:12036   */\n      tag_443\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":12011:12036   */\n      swap2\n      pop\n        /* \"#utility.yul\":12050:12070   */\n      tag_626\n        /* \"#utility.yul\":12068:12069   */\n      dup4\n        /* \"#utility.yul\":12050:12070   */\n      tag_443\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":12045:12070   */\n      swap3\n      pop\n        /* \"#utility.yul\":12093:12094   */\n      dup3\n        /* \"#utility.yul\":12090:12091   */\n      dup3\n        /* \"#utility.yul\":12086:12095   */\n      add\n        /* \"#utility.yul\":12079:12095   */\n      swap1\n      pop\n        /* \"#utility.yul\":12114:12117   */\n      dup1\n        /* \"#utility.yul\":12111:12112   */\n      dup3\n        /* \"#utility.yul\":12108:12118   */\n      gt\n        /* \"#utility.yul\":12105:12141   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":12121:12139   */\n      tag_628\n      tag_459\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":12105:12141   */\n    tag_627:\n        /* \"#utility.yul\":11957:12148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12154:12707   */\n    tag_116:\n        /* \"#utility.yul\":12331:12335   */\n      0x00\n        /* \"#utility.yul\":12369:12372   */\n      0x80\n        /* \"#utility.yul\":12358:12367   */\n      dup3\n        /* \"#utility.yul\":12354:12373   */\n      add\n        /* \"#utility.yul\":12346:12373   */\n      swap1\n      pop\n        /* \"#utility.yul\":12383:12454   */\n      tag_630\n        /* \"#utility.yul\":12451:12452   */\n      0x00\n        /* \"#utility.yul\":12440:12449   */\n      dup4\n        /* \"#utility.yul\":12436:12453   */\n      add\n        /* \"#utility.yul\":12427:12433   */\n      dup8\n        /* \"#utility.yul\":12383:12454   */\n      tag_424\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":12464:12536   */\n      tag_631\n        /* \"#utility.yul\":12532:12534   */\n      0x20\n        /* \"#utility.yul\":12521:12530   */\n      dup4\n        /* \"#utility.yul\":12517:12535   */\n      add\n        /* \"#utility.yul\":12508:12514   */\n      dup7\n        /* \"#utility.yul\":12464:12536   */\n      tag_426\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":12546:12618   */\n      tag_632\n        /* \"#utility.yul\":12614:12616   */\n      0x40\n        /* \"#utility.yul\":12603:12612   */\n      dup4\n        /* \"#utility.yul\":12599:12617   */\n      add\n        /* \"#utility.yul\":12590:12596   */\n      dup6\n        /* \"#utility.yul\":12546:12618   */\n      tag_444\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":12628:12700   */\n      tag_633\n        /* \"#utility.yul\":12696:12698   */\n      0x60\n        /* \"#utility.yul\":12685:12694   */\n      dup4\n        /* \"#utility.yul\":12681:12699   */\n      add\n        /* \"#utility.yul\":12672:12678   */\n      dup5\n        /* \"#utility.yul\":12628:12700   */\n      tag_444\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":12154:12707   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12713:12907   */\n    tag_128:\n        /* \"#utility.yul\":12753:12757   */\n      0x00\n        /* \"#utility.yul\":12773:12793   */\n      tag_635\n        /* \"#utility.yul\":12791:12792   */\n      dup3\n        /* \"#utility.yul\":12773:12793   */\n      tag_443\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":12768:12793   */\n      swap2\n      pop\n        /* \"#utility.yul\":12807:12827   */\n      tag_636\n        /* \"#utility.yul\":12825:12826   */\n      dup4\n        /* \"#utility.yul\":12807:12827   */\n      tag_443\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":12802:12827   */\n      swap3\n      pop\n        /* \"#utility.yul\":12851:12852   */\n      dup3\n        /* \"#utility.yul\":12848:12849   */\n      dup3\n        /* \"#utility.yul\":12844:12853   */\n      sub\n        /* \"#utility.yul\":12836:12853   */\n      swap1\n      pop\n        /* \"#utility.yul\":12875:12876   */\n      dup2\n        /* \"#utility.yul\":12869:12873   */\n      dup2\n        /* \"#utility.yul\":12866:12877   */\n      gt\n        /* \"#utility.yul\":12863:12900   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":12880:12898   */\n      tag_638\n      tag_459\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12863:12900   */\n    tag_637:\n        /* \"#utility.yul\":12713:12907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12913:13141   */\n    tag_135:\n        /* \"#utility.yul\":12948:12951   */\n      0x00\n        /* \"#utility.yul\":12971:12994   */\n      tag_640\n        /* \"#utility.yul\":12988:12993   */\n      dup3\n        /* \"#utility.yul\":12971:12994   */\n      tag_456\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":12962:12994   */\n      swap2\n      pop\n        /* \"#utility.yul\":13016:13082   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13009:13014   */\n      dup3\n        /* \"#utility.yul\":13006:13083   */\n      sub\n        /* \"#utility.yul\":13003:13106   */\n      tag_641\n      jumpi\n        /* \"#utility.yul\":13086:13104   */\n      tag_642\n      tag_459\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":13003:13106   */\n    tag_641:\n        /* \"#utility.yul\":13129:13134   */\n      dup2\n        /* \"#utility.yul\":13126:13127   */\n      0x00\n        /* \"#utility.yul\":13122:13135   */\n      sub\n        /* \"#utility.yul\":13115:13135   */\n      swap1\n      pop\n        /* \"#utility.yul\":12913:13141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13147:13479   */\n    tag_143:\n        /* \"#utility.yul\":13268:13272   */\n      0x00\n        /* \"#utility.yul\":13306:13308   */\n      0x40\n        /* \"#utility.yul\":13295:13304   */\n      dup3\n        /* \"#utility.yul\":13291:13309   */\n      add\n        /* \"#utility.yul\":13283:13309   */\n      swap1\n      pop\n        /* \"#utility.yul\":13319:13390   */\n      tag_644\n        /* \"#utility.yul\":13387:13388   */\n      0x00\n        /* \"#utility.yul\":13376:13385   */\n      dup4\n        /* \"#utility.yul\":13372:13389   */\n      add\n        /* \"#utility.yul\":13363:13369   */\n      dup6\n        /* \"#utility.yul\":13319:13390   */\n      tag_424\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":13400:13472   */\n      tag_645\n        /* \"#utility.yul\":13468:13470   */\n      0x20\n        /* \"#utility.yul\":13457:13466   */\n      dup4\n        /* \"#utility.yul\":13453:13471   */\n      add\n        /* \"#utility.yul\":13444:13450   */\n      dup5\n        /* \"#utility.yul\":13400:13472   */\n      tag_444\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":13147:13479   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13485:13622   */\n    tag_464:\n        /* \"#utility.yul\":13539:13544   */\n      0x00\n        /* \"#utility.yul\":13570:13576   */\n      dup2\n        /* \"#utility.yul\":13564:13577   */\n      mload\n        /* \"#utility.yul\":13555:13577   */\n      swap1\n      pop\n        /* \"#utility.yul\":13586:13616   */\n      tag_647\n        /* \"#utility.yul\":13610:13615   */\n      dup2\n        /* \"#utility.yul\":13586:13616   */\n      tag_452\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":13485:13622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13628:13973   */\n    tag_147:\n        /* \"#utility.yul\":13695:13701   */\n      0x00\n        /* \"#utility.yul\":13744:13746   */\n      0x20\n        /* \"#utility.yul\":13732:13741   */\n      dup3\n        /* \"#utility.yul\":13723:13730   */\n      dup5\n        /* \"#utility.yul\":13719:13742   */\n      sub\n        /* \"#utility.yul\":13715:13747   */\n      slt\n        /* \"#utility.yul\":13712:13831   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":13750:13829   */\n      tag_650\n      tag_431\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":13712:13831   */\n    tag_649:\n        /* \"#utility.yul\":13870:13871   */\n      0x00\n        /* \"#utility.yul\":13895:13956   */\n      tag_651\n        /* \"#utility.yul\":13948:13955   */\n      dup5\n        /* \"#utility.yul\":13939:13945   */\n      dup3\n        /* \"#utility.yul\":13928:13937   */\n      dup6\n        /* \"#utility.yul\":13924:13946   */\n      add\n        /* \"#utility.yul\":13895:13956   */\n      tag_464\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":13885:13956   */\n      swap2\n      pop\n        /* \"#utility.yul\":13841:13966   */\n      pop\n        /* \"#utility.yul\":13628:13973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13979:14520   */\n    tag_150:\n        /* \"#utility.yul\":14152:14156   */\n      0x00\n        /* \"#utility.yul\":14190:14192   */\n      0x60\n        /* \"#utility.yul\":14179:14188   */\n      dup3\n        /* \"#utility.yul\":14175:14193   */\n      add\n        /* \"#utility.yul\":14167:14193   */\n      swap1\n      pop\n        /* \"#utility.yul\":14203:14272   */\n      tag_653\n        /* \"#utility.yul\":14269:14270   */\n      0x00\n        /* \"#utility.yul\":14258:14267   */\n      dup4\n        /* \"#utility.yul\":14254:14271   */\n      add\n        /* \"#utility.yul\":14245:14251   */\n      dup8\n        /* \"#utility.yul\":14203:14272   */\n      tag_457\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":14282:14352   */\n      tag_654\n        /* \"#utility.yul\":14348:14350   */\n      0x20\n        /* \"#utility.yul\":14337:14346   */\n      dup4\n        /* \"#utility.yul\":14333:14351   */\n      add\n        /* \"#utility.yul\":14324:14330   */\n      dup7\n        /* \"#utility.yul\":14282:14352   */\n      tag_457\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":14399:14408   */\n      dup2\n        /* \"#utility.yul\":14393:14397   */\n      dup2\n        /* \"#utility.yul\":14389:14409   */\n      sub\n        /* \"#utility.yul\":14384:14386   */\n      0x40\n        /* \"#utility.yul\":14373:14382   */\n      dup4\n        /* \"#utility.yul\":14369:14387   */\n      add\n        /* \"#utility.yul\":14362:14410   */\n      mstore\n        /* \"#utility.yul\":14427:14513   */\n      tag_655\n        /* \"#utility.yul\":14508:14512   */\n      dup2\n        /* \"#utility.yul\":14499:14505   */\n      dup5\n        /* \"#utility.yul\":14491:14497   */\n      dup7\n        /* \"#utility.yul\":14427:14513   */\n      tag_463\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":14419:14513   */\n      swap1\n      pop\n        /* \"#utility.yul\":13979:14520   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14526:15174   */\n    tag_172:\n        /* \"#utility.yul\":14723:14727   */\n      0x00\n        /* \"#utility.yul\":14761:14764   */\n      0xa0\n        /* \"#utility.yul\":14750:14759   */\n      dup3\n        /* \"#utility.yul\":14746:14765   */\n      add\n        /* \"#utility.yul\":14738:14765   */\n      swap1\n      pop\n        /* \"#utility.yul\":14775:14844   */\n      tag_657\n        /* \"#utility.yul\":14841:14842   */\n      0x00\n        /* \"#utility.yul\":14830:14839   */\n      dup4\n        /* \"#utility.yul\":14826:14843   */\n      add\n        /* \"#utility.yul\":14817:14823   */\n      dup9\n        /* \"#utility.yul\":14775:14844   */\n      tag_457\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":14854:14924   */\n      tag_658\n        /* \"#utility.yul\":14920:14922   */\n      0x20\n        /* \"#utility.yul\":14909:14918   */\n      dup4\n        /* \"#utility.yul\":14905:14923   */\n      add\n        /* \"#utility.yul\":14896:14902   */\n      dup8\n        /* \"#utility.yul\":14854:14924   */\n      tag_457\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":14934:15006   */\n      tag_659\n        /* \"#utility.yul\":15002:15004   */\n      0x40\n        /* \"#utility.yul\":14991:15000   */\n      dup4\n        /* \"#utility.yul\":14987:15005   */\n      add\n        /* \"#utility.yul\":14978:14984   */\n      dup7\n        /* \"#utility.yul\":14934:15006   */\n      tag_427\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":15016:15088   */\n      tag_660\n        /* \"#utility.yul\":15084:15086   */\n      0x60\n        /* \"#utility.yul\":15073:15082   */\n      dup4\n        /* \"#utility.yul\":15069:15087   */\n      add\n        /* \"#utility.yul\":15060:15066   */\n      dup6\n        /* \"#utility.yul\":15016:15088   */\n      tag_426\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":15098:15167   */\n      tag_661\n        /* \"#utility.yul\":15162:15165   */\n      0x80\n        /* \"#utility.yul\":15151:15160   */\n      dup4\n        /* \"#utility.yul\":15147:15166   */\n      add\n        /* \"#utility.yul\":15138:15144   */\n      dup5\n        /* \"#utility.yul\":15098:15167   */\n      tag_429\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":14526:15174   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15180:15360   */\n    tag_344:\n        /* \"#utility.yul\":15228:15305   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15225:15226   */\n      0x00\n        /* \"#utility.yul\":15218:15306   */\n      mstore\n        /* \"#utility.yul\":15325:15329   */\n      0x12\n        /* \"#utility.yul\":15322:15323   */\n      0x04\n        /* \"#utility.yul\":15315:15330   */\n      mstore\n        /* \"#utility.yul\":15349:15353   */\n      0x24\n        /* \"#utility.yul\":15346:15347   */\n      0x00\n        /* \"#utility.yul\":15339:15354   */\n      revert\n        /* \"#utility.yul\":15366:15537   */\n    tag_178:\n        /* \"#utility.yul\":15396:15397   */\n      0x00\n        /* \"#utility.yul\":15413:15431   */\n      tag_664\n        /* \"#utility.yul\":15429:15430   */\n      dup3\n        /* \"#utility.yul\":15413:15431   */\n      tag_428\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":15408:15431   */\n      swap2\n      pop\n        /* \"#utility.yul\":15445:15463   */\n      tag_665\n        /* \"#utility.yul\":15461:15462   */\n      dup4\n        /* \"#utility.yul\":15445:15463   */\n      tag_428\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":15440:15463   */\n      swap3\n      pop\n        /* \"#utility.yul\":15482:15483   */\n      dup3\n        /* \"#utility.yul\":15472:15507   */\n      tag_666\n      jumpi\n        /* \"#utility.yul\":15487:15505   */\n      tag_667\n      tag_344\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":15472:15507   */\n    tag_666:\n        /* \"#utility.yul\":15529:15530   */\n      dup3\n        /* \"#utility.yul\":15526:15527   */\n      dup3\n        /* \"#utility.yul\":15521:15531   */\n      smod\n        /* \"#utility.yul\":15516:15531   */\n      swap1\n      pop\n        /* \"#utility.yul\":15366:15537   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15543:15925   */\n    tag_182:\n        /* \"#utility.yul\":15581:15582   */\n      0x00\n        /* \"#utility.yul\":15598:15616   */\n      tag_669\n        /* \"#utility.yul\":15614:15615   */\n      dup3\n        /* \"#utility.yul\":15598:15616   */\n      tag_428\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":15593:15616   */\n      swap2\n      pop\n        /* \"#utility.yul\":15630:15648   */\n      tag_670\n        /* \"#utility.yul\":15646:15647   */\n      dup4\n        /* \"#utility.yul\":15630:15648   */\n      tag_428\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":15625:15648   */\n      swap3\n      pop\n        /* \"#utility.yul\":15667:15668   */\n      dup3\n        /* \"#utility.yul\":15657:15692   */\n      tag_671\n      jumpi\n        /* \"#utility.yul\":15672:15690   */\n      tag_672\n      tag_344\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":15657:15692   */\n    tag_671:\n        /* \"#utility.yul\":15858:15859   */\n      0x01\n        /* \"#utility.yul\":15855:15856   */\n      0x00\n        /* \"#utility.yul\":15851:15860   */\n      sub\n        /* \"#utility.yul\":15848:15849   */\n      dup4\n        /* \"#utility.yul\":15845:15861   */\n      eq\n        /* \"#utility.yul\":15764:15830   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":15761:15762   */\n      dup4\n        /* \"#utility.yul\":15758:15831   */\n      eq\n        /* \"#utility.yul\":15741:15871   */\n      and\n        /* \"#utility.yul\":15738:15894   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":15874:15892   */\n      tag_674\n      tag_459\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":15738:15894   */\n    tag_673:\n        /* \"#utility.yul\":15917:15918   */\n      dup3\n        /* \"#utility.yul\":15914:15915   */\n      dup3\n        /* \"#utility.yul\":15909:15919   */\n      sdiv\n        /* \"#utility.yul\":15904:15919   */\n      swap1\n      pop\n        /* \"#utility.yul\":15543:15925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15931:16025   */\n    tag_465:\n        /* \"#utility.yul\":15964:15972   */\n      0x00\n        /* \"#utility.yul\":16012:16017   */\n      dup2\n        /* \"#utility.yul\":16008:16010   */\n      0x60\n        /* \"#utility.yul\":16004:16018   */\n      shl\n        /* \"#utility.yul\":15983:16018   */\n      swap1\n      pop\n        /* \"#utility.yul\":15931:16025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16031:16125   */\n    tag_466:\n        /* \"#utility.yul\":16070:16077   */\n      0x00\n        /* \"#utility.yul\":16099:16119   */\n      tag_677\n        /* \"#utility.yul\":16113:16118   */\n      dup3\n        /* \"#utility.yul\":16099:16119   */\n      tag_465\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":16088:16119   */\n      swap1\n      pop\n        /* \"#utility.yul\":16031:16125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16131:16231   */\n    tag_467:\n        /* \"#utility.yul\":16170:16177   */\n      0x00\n        /* \"#utility.yul\":16199:16225   */\n      tag_679\n        /* \"#utility.yul\":16219:16224   */\n      dup3\n        /* \"#utility.yul\":16199:16225   */\n      tag_466\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":16188:16225   */\n      swap1\n      pop\n        /* \"#utility.yul\":16131:16231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16237:16394   */\n    tag_468:\n        /* \"#utility.yul\":16342:16387   */\n      tag_681\n        /* \"#utility.yul\":16362:16386   */\n      tag_682\n        /* \"#utility.yul\":16380:16385   */\n      dup3\n        /* \"#utility.yul\":16362:16386   */\n      tag_423\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":16342:16387   */\n      tag_467\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":16337:16340   */\n      dup3\n        /* \"#utility.yul\":16330:16388   */\n      mstore\n        /* \"#utility.yul\":16237:16394   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16400:16496   */\n    tag_469:\n        /* \"#utility.yul\":16434:16442   */\n      0x00\n        /* \"#utility.yul\":16483:16488   */\n      dup2\n        /* \"#utility.yul\":16478:16481   */\n      0xe8\n        /* \"#utility.yul\":16474:16489   */\n      shl\n        /* \"#utility.yul\":16453:16489   */\n      swap1\n      pop\n        /* \"#utility.yul\":16400:16496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16502:16595   */\n    tag_470:\n        /* \"#utility.yul\":16539:16546   */\n      0x00\n        /* \"#utility.yul\":16568:16589   */\n      tag_685\n        /* \"#utility.yul\":16583:16588   */\n      dup3\n        /* \"#utility.yul\":16568:16589   */\n      tag_469\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":16557:16589   */\n      swap1\n      pop\n        /* \"#utility.yul\":16502:16595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16601:16750   */\n    tag_471:\n        /* \"#utility.yul\":16702:16743   */\n      tag_687\n        /* \"#utility.yul\":16720:16742   */\n      tag_688\n        /* \"#utility.yul\":16736:16741   */\n      dup3\n        /* \"#utility.yul\":16720:16742   */\n      tag_428\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":16702:16743   */\n      tag_470\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":16697:16700   */\n      dup3\n        /* \"#utility.yul\":16690:16744   */\n      mstore\n        /* \"#utility.yul\":16601:16750   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16756:17276   */\n    tag_186:\n        /* \"#utility.yul\":16916:16919   */\n      0x00\n        /* \"#utility.yul\":16931:17006   */\n      tag_690\n        /* \"#utility.yul\":17002:17005   */\n      dup3\n        /* \"#utility.yul\":16993:16999   */\n      dup7\n        /* \"#utility.yul\":16931:17006   */\n      tag_468\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":17031:17033   */\n      0x14\n        /* \"#utility.yul\":17026:17029   */\n      dup3\n        /* \"#utility.yul\":17022:17034   */\n      add\n        /* \"#utility.yul\":17015:17034   */\n      swap2\n      pop\n        /* \"#utility.yul\":17044:17115   */\n      tag_691\n        /* \"#utility.yul\":17111:17114   */\n      dup3\n        /* \"#utility.yul\":17102:17108   */\n      dup6\n        /* \"#utility.yul\":17044:17115   */\n      tag_471\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":17140:17141   */\n      0x03\n        /* \"#utility.yul\":17135:17138   */\n      dup3\n        /* \"#utility.yul\":17131:17142   */\n      add\n        /* \"#utility.yul\":17124:17142   */\n      swap2\n      pop\n        /* \"#utility.yul\":17152:17223   */\n      tag_692\n        /* \"#utility.yul\":17219:17222   */\n      dup3\n        /* \"#utility.yul\":17210:17216   */\n      dup5\n        /* \"#utility.yul\":17152:17223   */\n      tag_471\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":17248:17249   */\n      0x03\n        /* \"#utility.yul\":17243:17246   */\n      dup3\n        /* \"#utility.yul\":17239:17250   */\n      add\n        /* \"#utility.yul\":17232:17250   */\n      swap2\n      pop\n        /* \"#utility.yul\":17267:17270   */\n      dup2\n        /* \"#utility.yul\":17260:17270   */\n      swap1\n      pop\n        /* \"#utility.yul\":16756:17276   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17282:17451   */\n    tag_472:\n        /* \"#utility.yul\":17366:17377   */\n      0x00\n        /* \"#utility.yul\":17400:17406   */\n      dup3\n        /* \"#utility.yul\":17395:17398   */\n      dup3\n        /* \"#utility.yul\":17388:17407   */\n      mstore\n        /* \"#utility.yul\":17440:17444   */\n      0x20\n        /* \"#utility.yul\":17435:17438   */\n      dup3\n        /* \"#utility.yul\":17431:17445   */\n      add\n        /* \"#utility.yul\":17416:17445   */\n      swap1\n      pop\n        /* \"#utility.yul\":17282:17451   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17457:17608   */\n    tag_473:\n        /* \"#utility.yul\":17597:17600   */\n      0x5400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17593:17594   */\n      0x00\n        /* \"#utility.yul\":17585:17591   */\n      dup3\n        /* \"#utility.yul\":17581:17595   */\n      add\n        /* \"#utility.yul\":17574:17601   */\n      mstore\n        /* \"#utility.yul\":17457:17608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17614:17979   */\n    tag_474:\n        /* \"#utility.yul\":17756:17759   */\n      0x00\n        /* \"#utility.yul\":17777:17843   */\n      tag_696\n        /* \"#utility.yul\":17841:17842   */\n      0x01\n        /* \"#utility.yul\":17836:17839   */\n      dup4\n        /* \"#utility.yul\":17777:17843   */\n      tag_472\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":17770:17843   */\n      swap2\n      pop\n        /* \"#utility.yul\":17852:17945   */\n      tag_697\n        /* \"#utility.yul\":17941:17944   */\n      dup3\n        /* \"#utility.yul\":17852:17945   */\n      tag_473\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":17970:17972   */\n      0x20\n        /* \"#utility.yul\":17965:17968   */\n      dup3\n        /* \"#utility.yul\":17961:17973   */\n      add\n        /* \"#utility.yul\":17954:17973   */\n      swap1\n      pop\n        /* \"#utility.yul\":17614:17979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17985:18404   */\n    tag_196:\n        /* \"#utility.yul\":18151:18155   */\n      0x00\n        /* \"#utility.yul\":18189:18191   */\n      0x20\n        /* \"#utility.yul\":18178:18187   */\n      dup3\n        /* \"#utility.yul\":18174:18192   */\n      add\n        /* \"#utility.yul\":18166:18192   */\n      swap1\n      pop\n        /* \"#utility.yul\":18238:18247   */\n      dup2\n        /* \"#utility.yul\":18232:18236   */\n      dup2\n        /* \"#utility.yul\":18228:18248   */\n      sub\n        /* \"#utility.yul\":18224:18225   */\n      0x00\n        /* \"#utility.yul\":18213:18222   */\n      dup4\n        /* \"#utility.yul\":18209:18226   */\n      add\n        /* \"#utility.yul\":18202:18249   */\n      mstore\n        /* \"#utility.yul\":18266:18397   */\n      tag_699\n        /* \"#utility.yul\":18392:18396   */\n      dup2\n        /* \"#utility.yul\":18266:18397   */\n      tag_474\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":18258:18397   */\n      swap1\n      pop\n        /* \"#utility.yul\":17985:18404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18410:18820   */\n    tag_201:\n        /* \"#utility.yul\":18450:18457   */\n      0x00\n        /* \"#utility.yul\":18473:18493   */\n      tag_701\n        /* \"#utility.yul\":18491:18492   */\n      dup3\n        /* \"#utility.yul\":18473:18493   */\n      tag_443\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":18468:18493   */\n      swap2\n      pop\n        /* \"#utility.yul\":18507:18527   */\n      tag_702\n        /* \"#utility.yul\":18525:18526   */\n      dup4\n        /* \"#utility.yul\":18507:18527   */\n      tag_443\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":18502:18527   */\n      swap3\n      pop\n        /* \"#utility.yul\":18562:18563   */\n      dup3\n        /* \"#utility.yul\":18559:18560   */\n      dup3\n        /* \"#utility.yul\":18555:18564   */\n      mul\n        /* \"#utility.yul\":18584:18614   */\n      tag_703\n        /* \"#utility.yul\":18602:18613   */\n      dup2\n        /* \"#utility.yul\":18584:18614   */\n      tag_443\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":18573:18614   */\n      swap2\n      pop\n        /* \"#utility.yul\":18763:18764   */\n      dup3\n        /* \"#utility.yul\":18754:18761   */\n      dup3\n        /* \"#utility.yul\":18750:18765   */\n      div\n        /* \"#utility.yul\":18747:18748   */\n      dup5\n        /* \"#utility.yul\":18744:18766   */\n      eq\n        /* \"#utility.yul\":18724:18725   */\n      dup4\n        /* \"#utility.yul\":18717:18726   */\n      iszero\n        /* \"#utility.yul\":18697:18780   */\n      or\n        /* \"#utility.yul\":18674:18813   */\n      tag_704\n      jumpi\n        /* \"#utility.yul\":18793:18811   */\n      tag_705\n      tag_459\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":18674:18813   */\n    tag_704:\n        /* \"#utility.yul\":18458:18820   */\n      pop\n        /* \"#utility.yul\":18410:18820   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18826:19011   */\n    tag_240:\n        /* \"#utility.yul\":18866:18867   */\n      0x00\n        /* \"#utility.yul\":18883:18903   */\n      tag_707\n        /* \"#utility.yul\":18901:18902   */\n      dup3\n        /* \"#utility.yul\":18883:18903   */\n      tag_443\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":18878:18903   */\n      swap2\n      pop\n        /* \"#utility.yul\":18917:18937   */\n      tag_708\n        /* \"#utility.yul\":18935:18936   */\n      dup4\n        /* \"#utility.yul\":18917:18937   */\n      tag_443\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":18912:18937   */\n      swap3\n      pop\n        /* \"#utility.yul\":18956:18957   */\n      dup3\n        /* \"#utility.yul\":18946:18981   */\n      tag_709\n      jumpi\n        /* \"#utility.yul\":18961:18979   */\n      tag_710\n      tag_344\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":18946:18981   */\n    tag_709:\n        /* \"#utility.yul\":19003:19004   */\n      dup3\n        /* \"#utility.yul\":19000:19001   */\n      dup3\n        /* \"#utility.yul\":18996:19005   */\n      div\n        /* \"#utility.yul\":18991:19005   */\n      swap1\n      pop\n        /* \"#utility.yul\":18826:19011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19017:19193   */\n    tag_242:\n        /* \"#utility.yul\":19049:19050   */\n      0x00\n        /* \"#utility.yul\":19066:19086   */\n      tag_712\n        /* \"#utility.yul\":19084:19085   */\n      dup3\n        /* \"#utility.yul\":19066:19086   */\n      tag_443\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":19061:19086   */\n      swap2\n      pop\n        /* \"#utility.yul\":19100:19120   */\n      tag_713\n        /* \"#utility.yul\":19118:19119   */\n      dup4\n        /* \"#utility.yul\":19100:19120   */\n      tag_443\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":19095:19120   */\n      swap3\n      pop\n        /* \"#utility.yul\":19139:19140   */\n      dup3\n        /* \"#utility.yul\":19129:19164   */\n      tag_714\n      jumpi\n        /* \"#utility.yul\":19144:19162   */\n      tag_715\n      tag_344\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":19129:19164   */\n    tag_714:\n        /* \"#utility.yul\":19185:19186   */\n      dup3\n        /* \"#utility.yul\":19182:19183   */\n      dup3\n        /* \"#utility.yul\":19178:19187   */\n      mod\n        /* \"#utility.yul\":19173:19187   */\n      swap1\n      pop\n        /* \"#utility.yul\":19017:19193   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19199:19434   */\n    tag_252:\n        /* \"#utility.yul\":19239:19243   */\n      0x00\n        /* \"#utility.yul\":19259:19279   */\n      tag_717\n        /* \"#utility.yul\":19277:19278   */\n      dup3\n        /* \"#utility.yul\":19259:19279   */\n      tag_422\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":19254:19279   */\n      swap2\n      pop\n        /* \"#utility.yul\":19293:19313   */\n      tag_718\n        /* \"#utility.yul\":19311:19312   */\n      dup4\n        /* \"#utility.yul\":19293:19313   */\n      tag_422\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":19288:19313   */\n      swap3\n      pop\n        /* \"#utility.yul\":19337:19338   */\n      dup3\n        /* \"#utility.yul\":19334:19335   */\n      dup3\n        /* \"#utility.yul\":19330:19339   */\n      sub\n        /* \"#utility.yul\":19322:19339   */\n      swap1\n      pop\n        /* \"#utility.yul\":19361:19403   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19355:19359   */\n      dup2\n        /* \"#utility.yul\":19352:19404   */\n      gt\n        /* \"#utility.yul\":19349:19427   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":19407:19425   */\n      tag_720\n      tag_459\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":19349:19427   */\n    tag_719:\n        /* \"#utility.yul\":19199:19434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19440:19583   */\n    tag_475:\n        /* \"#utility.yul\":19497:19502   */\n      0x00\n        /* \"#utility.yul\":19528:19534   */\n      dup2\n        /* \"#utility.yul\":19522:19535   */\n      mload\n        /* \"#utility.yul\":19513:19535   */\n      swap1\n      pop\n        /* \"#utility.yul\":19544:19577   */\n      tag_722\n        /* \"#utility.yul\":19571:19576   */\n      dup2\n        /* \"#utility.yul\":19544:19577   */\n      tag_454\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":19440:19583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19589:19940   */\n    tag_264:\n        /* \"#utility.yul\":19659:19665   */\n      0x00\n        /* \"#utility.yul\":19708:19710   */\n      0x20\n        /* \"#utility.yul\":19696:19705   */\n      dup3\n        /* \"#utility.yul\":19687:19694   */\n      dup5\n        /* \"#utility.yul\":19683:19706   */\n      sub\n        /* \"#utility.yul\":19679:19711   */\n      slt\n        /* \"#utility.yul\":19676:19795   */\n      iszero\n      tag_724\n      jumpi\n        /* \"#utility.yul\":19714:19793   */\n      tag_725\n      tag_431\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":19676:19795   */\n    tag_724:\n        /* \"#utility.yul\":19834:19835   */\n      0x00\n        /* \"#utility.yul\":19859:19923   */\n      tag_726\n        /* \"#utility.yul\":19915:19922   */\n      dup5\n        /* \"#utility.yul\":19906:19912   */\n      dup3\n        /* \"#utility.yul\":19895:19904   */\n      dup6\n        /* \"#utility.yul\":19891:19913   */\n      add\n        /* \"#utility.yul\":19859:19923   */\n      tag_475\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":19849:19923   */\n      swap2\n      pop\n        /* \"#utility.yul\":19805:19933   */\n      pop\n        /* \"#utility.yul\":19589:19940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19946:20175   */\n    tag_276:\n        /* \"#utility.yul\":19983:19986   */\n      0x00\n        /* \"#utility.yul\":20006:20028   */\n      tag_728\n        /* \"#utility.yul\":20022:20027   */\n      dup3\n        /* \"#utility.yul\":20006:20028   */\n      tag_428\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":19997:20028   */\n      swap2\n      pop\n        /* \"#utility.yul\":20050:20116   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":20043:20048   */\n      dup3\n        /* \"#utility.yul\":20040:20117   */\n      sub\n        /* \"#utility.yul\":20037:20140   */\n      tag_729\n      jumpi\n        /* \"#utility.yul\":20120:20138   */\n      tag_730\n      tag_459\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":20037:20140   */\n    tag_729:\n        /* \"#utility.yul\":20167:20168   */\n      0x01\n        /* \"#utility.yul\":20160:20165   */\n      dup3\n        /* \"#utility.yul\":20156:20169   */\n      sub\n        /* \"#utility.yul\":20149:20169   */\n      swap1\n      pop\n        /* \"#utility.yul\":19946:20175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20181:20494   */\n    tag_283:\n        /* \"#utility.yul\":20219:20223   */\n      0x00\n        /* \"#utility.yul\":20239:20257   */\n      tag_732\n        /* \"#utility.yul\":20255:20256   */\n      dup3\n        /* \"#utility.yul\":20239:20257   */\n      tag_428\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":20234:20257   */\n      swap2\n      pop\n        /* \"#utility.yul\":20271:20289   */\n      tag_733\n        /* \"#utility.yul\":20287:20288   */\n      dup4\n        /* \"#utility.yul\":20271:20289   */\n      tag_428\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":20266:20289   */\n      swap3\n      pop\n        /* \"#utility.yul\":20313:20314   */\n      dup3\n        /* \"#utility.yul\":20310:20311   */\n      dup3\n        /* \"#utility.yul\":20306:20315   */\n      sub\n        /* \"#utility.yul\":20298:20315   */\n      swap1\n      pop\n        /* \"#utility.yul\":20445:20453   */\n      0x7fffff\n        /* \"#utility.yul\":20439:20443   */\n      dup2\n        /* \"#utility.yul\":20435:20454   */\n      sgt\n        /* \"#utility.yul\":20354:20420   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":20348:20352   */\n      dup3\n        /* \"#utility.yul\":20344:20421   */\n      slt\n        /* \"#utility.yul\":20328:20464   */\n      or\n        /* \"#utility.yul\":20325:20487   */\n      iszero\n      tag_734\n      jumpi\n        /* \"#utility.yul\":20467:20485   */\n      tag_735\n      tag_459\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":20325:20487   */\n    tag_734:\n        /* \"#utility.yul\":20181:20494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20500:20771   */\n    tag_285:\n        /* \"#utility.yul\":20538:20545   */\n      0x00\n        /* \"#utility.yul\":20561:20579   */\n      tag_737\n        /* \"#utility.yul\":20577:20578   */\n      dup3\n        /* \"#utility.yul\":20561:20579   */\n      tag_428\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":20556:20579   */\n      swap2\n      pop\n        /* \"#utility.yul\":20593:20611   */\n      tag_738\n        /* \"#utility.yul\":20609:20610   */\n      dup4\n        /* \"#utility.yul\":20593:20611   */\n      tag_428\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":20588:20611   */\n      swap3\n      pop\n        /* \"#utility.yul\":20646:20647   */\n      dup3\n        /* \"#utility.yul\":20643:20644   */\n      dup3\n        /* \"#utility.yul\":20639:20648   */\n      mul\n        /* \"#utility.yul\":20668:20696   */\n      tag_739\n        /* \"#utility.yul\":20684:20695   */\n      dup2\n        /* \"#utility.yul\":20668:20696   */\n      tag_428\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":20657:20696   */\n      swap2\n      pop\n        /* \"#utility.yul\":20728:20739   */\n      dup1\n        /* \"#utility.yul\":20719:20726   */\n      dup3\n        /* \"#utility.yul\":20716:20740   */\n      eq\n        /* \"#utility.yul\":20706:20764   */\n      tag_740\n      jumpi\n        /* \"#utility.yul\":20744:20762   */\n      tag_741\n      tag_459\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":20706:20764   */\n    tag_740:\n        /* \"#utility.yul\":20546:20771   */\n      pop\n        /* \"#utility.yul\":20500:20771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20777:20863   */\n    tag_476:\n        /* \"#utility.yul\":20812:20819   */\n      0x00\n        /* \"#utility.yul\":20852:20856   */\n      0xff\n        /* \"#utility.yul\":20845:20850   */\n      dup3\n        /* \"#utility.yul\":20841:20857   */\n      and\n        /* \"#utility.yul\":20830:20857   */\n      swap1\n      pop\n        /* \"#utility.yul\":20777:20863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20869:21060   */\n    tag_290:\n        /* \"#utility.yul\":20907:20911   */\n      0x00\n        /* \"#utility.yul\":20927:20945   */\n      tag_744\n        /* \"#utility.yul\":20943:20944   */\n      dup3\n        /* \"#utility.yul\":20927:20945   */\n      tag_476\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":20922:20945   */\n      swap2\n      pop\n        /* \"#utility.yul\":20959:20977   */\n      tag_745\n        /* \"#utility.yul\":20975:20976   */\n      dup4\n        /* \"#utility.yul\":20959:20977   */\n      tag_476\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":20954:20977   */\n      swap3\n      pop\n        /* \"#utility.yul\":21001:21002   */\n      dup3\n        /* \"#utility.yul\":20998:20999   */\n      dup3\n        /* \"#utility.yul\":20994:21003   */\n      sub\n        /* \"#utility.yul\":20986:21003   */\n      swap1\n      pop\n        /* \"#utility.yul\":21025:21029   */\n      0xff\n        /* \"#utility.yul\":21019:21023   */\n      dup2\n        /* \"#utility.yul\":21016:21030   */\n      gt\n        /* \"#utility.yul\":21013:21053   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":21033:21051   */\n      tag_747\n      tag_459\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":21013:21053   */\n    tag_746:\n        /* \"#utility.yul\":20869:21060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21066:21375   */\n    tag_296:\n        /* \"#utility.yul\":21104:21107   */\n      0x00\n        /* \"#utility.yul\":21123:21141   */\n      tag_749\n        /* \"#utility.yul\":21139:21140   */\n      dup3\n        /* \"#utility.yul\":21123:21141   */\n      tag_428\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":21118:21141   */\n      swap2\n      pop\n        /* \"#utility.yul\":21155:21173   */\n      tag_750\n        /* \"#utility.yul\":21171:21172   */\n      dup4\n        /* \"#utility.yul\":21155:21173   */\n      tag_428\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":21150:21173   */\n      swap3\n      pop\n        /* \"#utility.yul\":21196:21197   */\n      dup3\n        /* \"#utility.yul\":21193:21194   */\n      dup3\n        /* \"#utility.yul\":21189:21198   */\n      add\n        /* \"#utility.yul\":21182:21198   */\n      swap1\n      pop\n        /* \"#utility.yul\":21268:21334   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":21263:21266   */\n      dup2\n        /* \"#utility.yul\":21259:21335   */\n      slt\n        /* \"#utility.yul\":21236:21244   */\n      0x7fffff\n        /* \"#utility.yul\":21231:21234   */\n      dup3\n        /* \"#utility.yul\":21227:21245   */\n      sgt\n        /* \"#utility.yul\":21211:21345   */\n      or\n        /* \"#utility.yul\":21208:21368   */\n      iszero\n      tag_751\n      jumpi\n        /* \"#utility.yul\":21348:21366   */\n      tag_752\n      tag_459\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":21208:21368   */\n    tag_751:\n        /* \"#utility.yul\":21066:21375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21381:21532   */\n    tag_477:\n        /* \"#utility.yul\":21521:21524   */\n      0x5200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21517:21518   */\n      0x00\n        /* \"#utility.yul\":21509:21515   */\n      dup3\n        /* \"#utility.yul\":21505:21519   */\n      add\n        /* \"#utility.yul\":21498:21525   */\n      mstore\n        /* \"#utility.yul\":21381:21532   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21538:21903   */\n    tag_478:\n        /* \"#utility.yul\":21680:21683   */\n      0x00\n        /* \"#utility.yul\":21701:21767   */\n      tag_755\n        /* \"#utility.yul\":21765:21766   */\n      0x01\n        /* \"#utility.yul\":21760:21763   */\n      dup4\n        /* \"#utility.yul\":21701:21767   */\n      tag_472\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":21694:21767   */\n      swap2\n      pop\n        /* \"#utility.yul\":21776:21869   */\n      tag_756\n        /* \"#utility.yul\":21865:21868   */\n      dup3\n        /* \"#utility.yul\":21776:21869   */\n      tag_477\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":21894:21896   */\n      0x20\n        /* \"#utility.yul\":21889:21892   */\n      dup3\n        /* \"#utility.yul\":21885:21897   */\n      add\n        /* \"#utility.yul\":21878:21897   */\n      swap1\n      pop\n        /* \"#utility.yul\":21538:21903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21909:22328   */\n    tag_320:\n        /* \"#utility.yul\":22075:22079   */\n      0x00\n        /* \"#utility.yul\":22113:22115   */\n      0x20\n        /* \"#utility.yul\":22102:22111   */\n      dup3\n        /* \"#utility.yul\":22098:22116   */\n      add\n        /* \"#utility.yul\":22090:22116   */\n      swap1\n      pop\n        /* \"#utility.yul\":22162:22171   */\n      dup2\n        /* \"#utility.yul\":22156:22160   */\n      dup2\n        /* \"#utility.yul\":22152:22172   */\n      sub\n        /* \"#utility.yul\":22148:22149   */\n      0x00\n        /* \"#utility.yul\":22137:22146   */\n      dup4\n        /* \"#utility.yul\":22133:22150   */\n      add\n        /* \"#utility.yul\":22126:22173   */\n      mstore\n        /* \"#utility.yul\":22190:22321   */\n      tag_758\n        /* \"#utility.yul\":22316:22320   */\n      dup2\n        /* \"#utility.yul\":22190:22321   */\n      tag_478\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":22182:22321   */\n      swap1\n      pop\n        /* \"#utility.yul\":21909:22328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22334:22706   */\n    tag_326:\n        /* \"#utility.yul\":22373:22377   */\n      0x00\n        /* \"#utility.yul\":22393:22412   */\n      tag_760\n        /* \"#utility.yul\":22410:22411   */\n      dup3\n        /* \"#utility.yul\":22393:22412   */\n      tag_456\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":22388:22412   */\n      swap2\n      pop\n        /* \"#utility.yul\":22426:22445   */\n      tag_761\n        /* \"#utility.yul\":22443:22444   */\n      dup4\n        /* \"#utility.yul\":22426:22445   */\n      tag_456\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":22421:22445   */\n      swap3\n      pop\n        /* \"#utility.yul\":22469:22470   */\n      dup3\n        /* \"#utility.yul\":22466:22467   */\n      dup3\n        /* \"#utility.yul\":22462:22471   */\n      sub\n        /* \"#utility.yul\":22454:22471   */\n      swap1\n      pop\n        /* \"#utility.yul\":22663:22664   */\n      dup2\n        /* \"#utility.yul\":22657:22661   */\n      dup2\n        /* \"#utility.yul\":22653:22665   */\n      slt\n        /* \"#utility.yul\":22649:22650   */\n      0x00\n        /* \"#utility.yul\":22646:22647   */\n      dup5\n        /* \"#utility.yul\":22642:22651   */\n      slt\n        /* \"#utility.yul\":22638:22666   */\n      and\n        /* \"#utility.yul\":22621:22622   */\n      dup3\n        /* \"#utility.yul\":22615:22619   */\n      dup3\n        /* \"#utility.yul\":22611:22623   */\n      sgt\n        /* \"#utility.yul\":22606:22607   */\n      0x00\n        /* \"#utility.yul\":22603:22604   */\n      dup6\n        /* \"#utility.yul\":22599:22608   */\n      slt\n        /* \"#utility.yul\":22592:22609   */\n      iszero\n        /* \"#utility.yul\":22588:22624   */\n      and\n        /* \"#utility.yul\":22572:22676   */\n      or\n        /* \"#utility.yul\":22569:22699   */\n      iszero\n      tag_762\n      jumpi\n        /* \"#utility.yul\":22679:22697   */\n      tag_763\n      tag_459\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":22569:22699   */\n    tag_762:\n        /* \"#utility.yul\":22334:22706   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22712:23268   */\n    tag_328:\n        /* \"#utility.yul\":22751:22758   */\n      0x00\n        /* \"#utility.yul\":22774:22793   */\n      tag_765\n        /* \"#utility.yul\":22791:22792   */\n      dup3\n        /* \"#utility.yul\":22774:22793   */\n      tag_456\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":22769:22793   */\n      swap2\n      pop\n        /* \"#utility.yul\":22807:22826   */\n      tag_766\n        /* \"#utility.yul\":22824:22825   */\n      dup4\n        /* \"#utility.yul\":22807:22826   */\n      tag_456\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":22802:22826   */\n      swap3\n      pop\n        /* \"#utility.yul\":22861:22862   */\n      dup3\n        /* \"#utility.yul\":22858:22859   */\n      dup3\n        /* \"#utility.yul\":22854:22863   */\n      mul\n        /* \"#utility.yul\":22883:22912   */\n      tag_767\n        /* \"#utility.yul\":22900:22911   */\n      dup2\n        /* \"#utility.yul\":22883:22912   */\n      tag_456\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":22872:22912   */\n      swap2\n      pop\n        /* \"#utility.yul\":22970:23036   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22967:22968   */\n      dup5\n        /* \"#utility.yul\":22964:23037   */\n      eq\n        /* \"#utility.yul\":22960:22961   */\n      0x00\n        /* \"#utility.yul\":22957:22958   */\n      dup5\n        /* \"#utility.yul\":22953:22962   */\n      slt\n        /* \"#utility.yul\":22949:23038   */\n      and\n        /* \"#utility.yul\":22946:23061   */\n      iszero\n      tag_768\n      jumpi\n        /* \"#utility.yul\":23041:23059   */\n      tag_769\n      tag_459\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":22946:23061   */\n    tag_768:\n        /* \"#utility.yul\":23211:23212   */\n      dup3\n        /* \"#utility.yul\":23202:23209   */\n      dup3\n        /* \"#utility.yul\":23197:23213   */\n      sdiv\n        /* \"#utility.yul\":23194:23195   */\n      dup5\n        /* \"#utility.yul\":23191:23214   */\n      eq\n        /* \"#utility.yul\":23171:23172   */\n      dup4\n        /* \"#utility.yul\":23164:23173   */\n      iszero\n        /* \"#utility.yul\":23144:23228   */\n      or\n        /* \"#utility.yul\":23121:23261   */\n      tag_770\n      jumpi\n        /* \"#utility.yul\":23241:23259   */\n      tag_771\n      tag_459\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":23121:23261   */\n    tag_770:\n        /* \"#utility.yul\":22759:23268   */\n      pop\n        /* \"#utility.yul\":22712:23268   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23274:23649   */\n    tag_331:\n        /* \"#utility.yul\":23313:23316   */\n      0x00\n        /* \"#utility.yul\":23332:23351   */\n      tag_773\n        /* \"#utility.yul\":23349:23350   */\n      dup3\n        /* \"#utility.yul\":23332:23351   */\n      tag_456\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":23327:23351   */\n      swap2\n      pop\n        /* \"#utility.yul\":23365:23384   */\n      tag_774\n        /* \"#utility.yul\":23382:23383   */\n      dup4\n        /* \"#utility.yul\":23365:23384   */\n      tag_456\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":23360:23384   */\n      swap3\n      pop\n        /* \"#utility.yul\":23407:23408   */\n      dup3\n        /* \"#utility.yul\":23404:23405   */\n      dup3\n        /* \"#utility.yul\":23400:23409   */\n      add\n        /* \"#utility.yul\":23393:23409   */\n      swap1\n      pop\n        /* \"#utility.yul\":23605:23606   */\n      dup3\n        /* \"#utility.yul\":23600:23603   */\n      dup2\n        /* \"#utility.yul\":23596:23607   */\n      slt\n        /* \"#utility.yul\":23589:23608   */\n      iszero\n        /* \"#utility.yul\":23585:23586   */\n      0x00\n        /* \"#utility.yul\":23582:23583   */\n      dup4\n        /* \"#utility.yul\":23578:23587   */\n      slt\n        /* \"#utility.yul\":23574:23609   */\n      and\n        /* \"#utility.yul\":23557:23558   */\n      dup4\n        /* \"#utility.yul\":23552:23555   */\n      dup3\n        /* \"#utility.yul\":23548:23559   */\n      slt\n        /* \"#utility.yul\":23543:23544   */\n      0x00\n        /* \"#utility.yul\":23540:23541   */\n      dup5\n        /* \"#utility.yul\":23536:23545   */\n      slt\n        /* \"#utility.yul\":23529:23546   */\n      iszero\n        /* \"#utility.yul\":23525:23560   */\n      and\n        /* \"#utility.yul\":23509:23619   */\n      or\n        /* \"#utility.yul\":23506:23642   */\n      iszero\n      tag_775\n      jumpi\n        /* \"#utility.yul\":23622:23640   */\n      tag_776\n      tag_459\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":23506:23642   */\n    tag_775:\n        /* \"#utility.yul\":23274:23649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23655:23888   */\n    tag_348:\n        /* \"#utility.yul\":23694:23697   */\n      0x00\n        /* \"#utility.yul\":23717:23741   */\n      tag_778\n        /* \"#utility.yul\":23735:23740   */\n      dup3\n        /* \"#utility.yul\":23717:23741   */\n      tag_443\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":23708:23741   */\n      swap2\n      pop\n        /* \"#utility.yul\":23763:23829   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23756:23761   */\n      dup3\n        /* \"#utility.yul\":23753:23830   */\n      sub\n        /* \"#utility.yul\":23750:23853   */\n      tag_779\n      jumpi\n        /* \"#utility.yul\":23833:23851   */\n      tag_780\n      tag_459\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":23750:23853   */\n    tag_779:\n        /* \"#utility.yul\":23880:23881   */\n      0x01\n        /* \"#utility.yul\":23873:23878   */\n      dup3\n        /* \"#utility.yul\":23869:23882   */\n      add\n        /* \"#utility.yul\":23862:23882   */\n      swap1\n      pop\n        /* \"#utility.yul\":23655:23888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23894:24082   */\n    tag_354:\n        /* \"#utility.yul\":23932:23935   */\n      0x00\n        /* \"#utility.yul\":23951:23969   */\n      tag_782\n        /* \"#utility.yul\":23967:23968   */\n      dup3\n        /* \"#utility.yul\":23951:23969   */\n      tag_476\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":23946:23969   */\n      swap2\n      pop\n        /* \"#utility.yul\":23983:24001   */\n      tag_783\n        /* \"#utility.yul\":23999:24000   */\n      dup4\n        /* \"#utility.yul\":23983:24001   */\n      tag_476\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":23978:24001   */\n      swap3\n      pop\n        /* \"#utility.yul\":24024:24025   */\n      dup3\n        /* \"#utility.yul\":24021:24022   */\n      dup3\n        /* \"#utility.yul\":24017:24026   */\n      add\n        /* \"#utility.yul\":24010:24026   */\n      swap1\n      pop\n        /* \"#utility.yul\":24047:24051   */\n      0xff\n        /* \"#utility.yul\":24042:24045   */\n      dup2\n        /* \"#utility.yul\":24039:24052   */\n      gt\n        /* \"#utility.yul\":24036:24075   */\n      iszero\n      tag_784\n      jumpi\n        /* \"#utility.yul\":24055:24073   */\n      tag_785\n      tag_459\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":24036:24075   */\n    tag_784:\n        /* \"#utility.yul\":23894:24082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24088:24255   */\n    tag_479:\n        /* \"#utility.yul\":24228:24247   */\n      0x5052424d6174683a206f766572666c6f77000000000000000000000000000000\n        /* \"#utility.yul\":24224:24225   */\n      0x00\n        /* \"#utility.yul\":24216:24222   */\n      dup3\n        /* \"#utility.yul\":24212:24226   */\n      add\n        /* \"#utility.yul\":24205:24248   */\n      mstore\n        /* \"#utility.yul\":24088:24255   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24261:24627   */\n    tag_480:\n        /* \"#utility.yul\":24403:24406   */\n      0x00\n        /* \"#utility.yul\":24424:24491   */\n      tag_788\n        /* \"#utility.yul\":24488:24490   */\n      0x11\n        /* \"#utility.yul\":24483:24486   */\n      dup4\n        /* \"#utility.yul\":24424:24491   */\n      tag_472\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":24417:24491   */\n      swap2\n      pop\n        /* \"#utility.yul\":24500:24593   */\n      tag_789\n        /* \"#utility.yul\":24589:24592   */\n      dup3\n        /* \"#utility.yul\":24500:24593   */\n      tag_479\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":24618:24620   */\n      0x20\n        /* \"#utility.yul\":24613:24616   */\n      dup3\n        /* \"#utility.yul\":24609:24621   */\n      add\n        /* \"#utility.yul\":24602:24621   */\n      swap1\n      pop\n        /* \"#utility.yul\":24261:24627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24633:25052   */\n    tag_407:\n        /* \"#utility.yul\":24799:24803   */\n      0x00\n        /* \"#utility.yul\":24837:24839   */\n      0x20\n        /* \"#utility.yul\":24826:24835   */\n      dup3\n        /* \"#utility.yul\":24822:24840   */\n      add\n        /* \"#utility.yul\":24814:24840   */\n      swap1\n      pop\n        /* \"#utility.yul\":24886:24895   */\n      dup2\n        /* \"#utility.yul\":24880:24884   */\n      dup2\n        /* \"#utility.yul\":24876:24896   */\n      sub\n        /* \"#utility.yul\":24872:24873   */\n      0x00\n        /* \"#utility.yul\":24861:24870   */\n      dup4\n        /* \"#utility.yul\":24857:24874   */\n      add\n        /* \"#utility.yul\":24850:24897   */\n      mstore\n        /* \"#utility.yul\":24914:25045   */\n      tag_791\n        /* \"#utility.yul\":25040:25044   */\n      dup2\n        /* \"#utility.yul\":24914:25045   */\n      tag_480\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":24906:25045   */\n      swap1\n      pop\n        /* \"#utility.yul\":24633:25052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25058:25290   */\n    tag_411:\n        /* \"#utility.yul\":25098:25101   */\n      0x00\n        /* \"#utility.yul\":25117:25137   */\n      tag_793\n        /* \"#utility.yul\":25135:25136   */\n      dup3\n        /* \"#utility.yul\":25117:25137   */\n      tag_422\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":25112:25137   */\n      swap2\n      pop\n        /* \"#utility.yul\":25151:25171   */\n      tag_794\n        /* \"#utility.yul\":25169:25170   */\n      dup4\n        /* \"#utility.yul\":25151:25171   */\n      tag_422\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":25146:25171   */\n      swap3\n      pop\n        /* \"#utility.yul\":25194:25195   */\n      dup3\n        /* \"#utility.yul\":25191:25192   */\n      dup3\n        /* \"#utility.yul\":25187:25196   */\n      add\n        /* \"#utility.yul\":25180:25196   */\n      swap1\n      pop\n        /* \"#utility.yul\":25217:25259   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25212:25215   */\n      dup2\n        /* \"#utility.yul\":25209:25260   */\n      gt\n        /* \"#utility.yul\":25206:25283   */\n      iszero\n      tag_795\n      jumpi\n        /* \"#utility.yul\":25263:25281   */\n      tag_796\n      tag_459\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":25206:25283   */\n    tag_795:\n        /* \"#utility.yul\":25058:25290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122001f569d86aa03a33d1bd9400bc0ad1a8f02305822c506f18c435f7ffe893569a64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_123": {
									"entryPoint": null,
									"id": 123,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2306:14",
										"nodeType": "YulBlock",
										"src": "0:2306:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "759:80:14",
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nativeSrc": "769:22:14",
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nativeSrc": "778:13:14",
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nativeSrc": "800:33:14",
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nativeSrc": "800:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:14",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:14",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:14",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nativeSrc": "888:79:14",
													"nodeType": "YulBlock",
													"src": "888:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "945:16:14",
																"nodeType": "YulBlock",
																"src": "945:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:14",
																					"nodeType": "YulLiteral",
																					"src": "954:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "957:1:14",
																					"nodeType": "YulLiteral",
																					"src": "957:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "947:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:14"
																			},
																			"nativeSrc": "947:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "947:12:14"
																		},
																		"nativeSrc": "947:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "947:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "911:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "911:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "936:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "936:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "918:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "918:17:14"
																				},
																				"nativeSrc": "918:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "918:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "908:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "908:2:14"
																		},
																		"nativeSrc": "908:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "908:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "901:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:14"
																},
																"nativeSrc": "901:43:14",
																"nodeType": "YulFunctionCall",
																"src": "901:43:14"
															},
															"nativeSrc": "898:63:14",
															"nodeType": "YulIf",
															"src": "898:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "845:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "881:5:14",
														"nodeType": "YulTypedName",
														"src": "881:5:14",
														"type": ""
													}
												],
												"src": "845:122:14"
											},
											{
												"body": {
													"nativeSrc": "1036:80:14",
													"nodeType": "YulBlock",
													"src": "1036:80:14",
													"statements": [
														{
															"nativeSrc": "1046:22:14",
															"nodeType": "YulAssignment",
															"src": "1046:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1061:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1061:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1055:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1055:5:14"
																},
																"nativeSrc": "1055:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1055:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1046:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1046:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1104:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1104:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "1077:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "1077:26:14"
																},
																"nativeSrc": "1077:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1077:33:14"
															},
															"nativeSrc": "1077:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1077:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "973:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1014:6:14",
														"nodeType": "YulTypedName",
														"src": "1014:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1022:3:14",
														"nodeType": "YulTypedName",
														"src": "1022:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1030:5:14",
														"nodeType": "YulTypedName",
														"src": "1030:5:14",
														"type": ""
													}
												],
												"src": "973:143:14"
											},
											{
												"body": {
													"nativeSrc": "1165:47:14",
													"nodeType": "YulBlock",
													"src": "1165:47:14",
													"statements": [
														{
															"nativeSrc": "1175:31:14",
															"nodeType": "YulAssignment",
															"src": "1175:31:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1197:1:14",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1200:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1200:5:14"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1186:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "1186:10:14"
																},
																"nativeSrc": "1186:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1186:20:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1175:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1175:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "1122:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1147:5:14",
														"nodeType": "YulTypedName",
														"src": "1147:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1157:7:14",
														"nodeType": "YulTypedName",
														"src": "1157:7:14",
														"type": ""
													}
												],
												"src": "1122:90:14"
											},
											{
												"body": {
													"nativeSrc": "1259:77:14",
													"nodeType": "YulBlock",
													"src": "1259:77:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1314:16:14",
																"nodeType": "YulBlock",
																"src": "1314:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1323:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1323:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1326:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1326:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1316:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1316:6:14"
																			},
																			"nativeSrc": "1316:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1316:12:14"
																		},
																		"nativeSrc": "1316:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1316:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1282:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1282:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1305:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1305:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "1289:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "1289:15:14"
																				},
																				"nativeSrc": "1289:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1289:22:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1279:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1279:2:14"
																		},
																		"nativeSrc": "1279:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1279:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1272:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:14"
																},
																"nativeSrc": "1272:41:14",
																"nodeType": "YulFunctionCall",
																"src": "1272:41:14"
															},
															"nativeSrc": "1269:61:14",
															"nodeType": "YulIf",
															"src": "1269:61:14"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "1218:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1252:5:14",
														"nodeType": "YulTypedName",
														"src": "1252:5:14",
														"type": ""
													}
												],
												"src": "1218:118:14"
											},
											{
												"body": {
													"nativeSrc": "1403:78:14",
													"nodeType": "YulBlock",
													"src": "1403:78:14",
													"statements": [
														{
															"nativeSrc": "1413:22:14",
															"nodeType": "YulAssignment",
															"src": "1413:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1428:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1428:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1422:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1422:5:14"
																},
																"nativeSrc": "1422:13:14",
																"nodeType": "YulFunctionCall",
																"src": "1422:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1413:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1413:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1469:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1469:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "1444:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "1444:24:14"
																},
																"nativeSrc": "1444:31:14",
																"nodeType": "YulFunctionCall",
																"src": "1444:31:14"
															},
															"nativeSrc": "1444:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "1444:31:14"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "1342:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1381:6:14",
														"nodeType": "YulTypedName",
														"src": "1381:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1389:3:14",
														"nodeType": "YulTypedName",
														"src": "1389:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1397:5:14",
														"nodeType": "YulTypedName",
														"src": "1397:5:14",
														"type": ""
													}
												],
												"src": "1342:139:14"
											},
											{
												"body": {
													"nativeSrc": "1613:690:14",
													"nodeType": "YulBlock",
													"src": "1613:690:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1660:83:14",
																"nodeType": "YulBlock",
																"src": "1660:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1662:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1662:77:14"
																			},
																			"nativeSrc": "1662:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1662:79:14"
																		},
																		"nativeSrc": "1662:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1634:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1634:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1643:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1643:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1630:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:14"
																		},
																		"nativeSrc": "1630:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1655:3:14",
																		"nodeType": "YulLiteral",
																		"src": "1655:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1626:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1626:3:14"
																},
																"nativeSrc": "1626:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1626:33:14"
															},
															"nativeSrc": "1623:120:14",
															"nodeType": "YulIf",
															"src": "1623:120:14"
														},
														{
															"nativeSrc": "1753:128:14",
															"nodeType": "YulBlock",
															"src": "1753:128:14",
															"statements": [
																{
																	"nativeSrc": "1768:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1768:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1782:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1772:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1772:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1797:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1797:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1843:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1843:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1854:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1854:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1839:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1839:3:14"
																				},
																				"nativeSrc": "1839:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1839:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1863:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1863:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1807:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1807:31:14"
																		},
																		"nativeSrc": "1807:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1807:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1797:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1797:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1891:129:14",
															"nodeType": "YulBlock",
															"src": "1891:129:14",
															"statements": [
																{
																	"nativeSrc": "1906:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1906:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1920:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1920:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1910:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1910:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1936:74:14",
																	"nodeType": "YulAssignment",
																	"src": "1936:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1982:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1982:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1993:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1993:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1978:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1978:3:14"
																				},
																				"nativeSrc": "1978:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1978:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2002:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2002:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1946:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "1946:31:14"
																		},
																		"nativeSrc": "1946:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1946:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1936:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1936:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2030:129:14",
															"nodeType": "YulBlock",
															"src": "2030:129:14",
															"statements": [
																{
																	"nativeSrc": "2045:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2045:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2059:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2049:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2049:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2075:74:14",
																	"nodeType": "YulAssignment",
																	"src": "2075:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2121:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2121:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2132:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2132:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2117:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2117:3:14"
																				},
																				"nativeSrc": "2117:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2117:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2141:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2141:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "2085:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "2085:31:14"
																		},
																		"nativeSrc": "2085:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2075:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2075:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2169:127:14",
															"nodeType": "YulBlock",
															"src": "2169:127:14",
															"statements": [
																{
																	"nativeSrc": "2184:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2184:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2198:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2188:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2188:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2214:72:14",
																	"nodeType": "YulAssignment",
																	"src": "2214:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2258:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2258:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2269:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2269:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2254:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2254:3:14"
																				},
																				"nativeSrc": "2254:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2254:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2278:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2278:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "2224:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "2224:29:14"
																		},
																		"nativeSrc": "2224:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2224:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2214:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2214:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory",
												"nativeSrc": "1487:816:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1559:9:14",
														"nodeType": "YulTypedName",
														"src": "1559:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1570:7:14",
														"nodeType": "YulTypedName",
														"src": "1570:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1582:6:14",
														"nodeType": "YulTypedName",
														"src": "1582:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1590:6:14",
														"nodeType": "YulTypedName",
														"src": "1590:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1598:6:14",
														"nodeType": "YulTypedName",
														"src": "1598:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1606:6:14",
														"nodeType": "YulTypedName",
														"src": "1606:6:14",
														"type": ""
													}
												],
												"src": "1487:816:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051613697380380613697833981810160405281019061003191906101fd565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260020b8152505f5f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548162ffffff021916908360020b62ffffff16021790555090505050505050610261565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61016c82610143565b9050919050565b61017c81610162565b8114610186575f5ffd5b50565b5f8151905061019781610173565b92915050565b6101a681610143565b81146101b0575f5ffd5b50565b5f815190506101c18161019d565b92915050565b5f8160020b9050919050565b6101dc816101c7565b81146101e6575f5ffd5b50565b5f815190506101f7816101d3565b92915050565b5f5f5f5f608085870312156102155761021461013f565b5b5f61022287828801610189565b945050602061023387828801610189565b9350506040610244878288016101b3565b9250506060610255878288016101e9565b91505092959194509250565b60805160a0516133f961029e5f395f8181610ac401528181610e6401526117af01525f818161020301528181610c32015261171101526133f95ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063514ea4bf11610064578063514ea4bf146101215780635339c2961461015157806380c2c6ef14610181578063d21220a7146101b2578063f30dba93146101d057610091565b80630dfe1681146100955780631a686502146100b35780633850c7bd146100d15780633c8a7d8d146100f0575b5f5ffd5b61009d610201565b6040516100aa91906124b4565b60405180910390f35b6100bb610225565b6040516100c891906124f7565b60405180910390f35b6100d9610246565b6040516100e792919061253a565b60405180910390f35b61010a60048036038101906101059190612648565b610281565b6040516101189291906126f6565b60405180910390f35b61013b60048036038101906101369190612750565b61073e565b60405161014891906124f7565b60405180910390f35b61016b600480360381019061016691906127b1565b610773565b60405161017891906127dc565b60405180910390f35b61019b60048036038101906101969190612854565b610788565b6040516101a99291906128f0565b60405180910390f35b6101ba610e62565b6040516101c791906124b4565b60405180910390f35b6101ea60048036038101906101e59190612917565b610e86565b6040516101f8929190612951565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60015f9054906101000a90046fffffffffffffffffffffffffffffffff1681565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460020b905082565b5f5f8560020b8760020b1215806102bd57507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8760020b125b806102f657507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186102ed906129a5565b60020b8660020b135b1561032d576040517f064847d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f856fffffffffffffffffffffffffffffffff1603610378576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61038f88876002610ecd9092919063ffffffff16565b90505f6103a888886002610ecd9092919063ffffffff16565b905081156103c8576103c78960016003610fc49092919063ffffffff16565b5b80156103e6576103e58860016003610fc49092919063ffffffff16565b5b5f6103ff8b8b8b600461102d909392919063ffffffff16565b9050610414888261107290919063ffffffff16565b5f5f6040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460020b60020b60020b8152505090508a60020b816020015160020b12156104c7576104c06104b18c6110e2565b6104ba8c6110e2565b8b611596565b955061058f565b8960020b816020015160020b1215610570576104ef815f01516104e98c6110e2565b8b611596565b9550610507815f01516105018d6110e2565b8b61167a565b94508860015f8282829054906101000a90046fffffffffffffffffffffffffffffffff1661053591906129eb565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555061058e565b61058b61057c8c6110e2565b6105858c6110e2565b8b61167a565b94505b5b5f5f5f8811156105a4576105a161170e565b91505b5f8711156105b7576105b46117ac565b90505b3373ffffffffffffffffffffffffffffffffffffffff1663d348799789898d8d6040518563ffffffff1660e01b81526004016105f69493929190612a88565b5f604051808303815f87803b15801561060d575f5ffd5b505af115801561061f573d5f5f3e3d5ffd5b505050505f88118015610643575061063561170e565b88836106419190612ac6565b115b1561067a576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8711801561069a575061068c6117ac565b87826106989190612ac6565b115b156106d1576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8b60020b8d60020b8f73ffffffffffffffffffffffffffffffffffffffff167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338f8d8d6040516107259493929190612af9565b60405180910390a4505050505050965096945050505050565b6004602052805f5260405f205f91509050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff16905081565b6003602052805f5260405f205f915090505481565b5f5f5f5f6040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020015f820160149054906101000a900460020b60020b60020b8152505090505f60405180608001604052808881526020015f8152602001835f015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015160020b81525090505b5f815f015111156109e55761086161241c565b8160400151815f019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506108b9826060015160018b600361184a909392919063ffffffff16565b50816020018160020b60020b815250506108d681602001516110e2565b816040019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506109418260400151826040015160015f9054906101000a90046fffffffffffffffffffffffffffffffff16855f0151611a28565b84604001846060018560800183815250838152508373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505050508060600151825f0181815161099d9190612b3c565b915081815250508060800151826020018181516109ba9190612ac6565b915081815250506109ce8260400151611aa1565b826060019060020b908160020b815250505061084e565b816020015160020b816060015160020b14610a6f57806040015181606001515f5f015f5f5f0160148491906101000a81548162ffffff021916908360020b62ffffff1602179055508391906101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b87610a96578060200151610a8290612b6f565b815f015188610a919190612b3c565b610ab4565b805f015187610aa59190612b3c565b8160200151610ab390612b6f565b5b80945081955050508715610c30577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a85610b0990612b6f565b6040518363ffffffff1660e01b8152600401610b26929190612bb5565b6020604051808303815f875af1158015610b42573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b669190612bf0565b505f610b7061170e565b90503373ffffffffffffffffffffffffffffffffffffffff1663fa461e3386868a8a6040518563ffffffff1660e01b8152600401610bb19493929190612c1b565b5f604051808303815f87803b158015610bc8575f5ffd5b505af1158015610bda573d5f5f3e3d5ffd5b50505050610be661170e565b8582610bf29190612ac6565b1115610c2a576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50610d9a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8a86610c7790612b6f565b6040518363ffffffff1660e01b8152600401610c94929190612bb5565b6020604051808303815f875af1158015610cb0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd49190612bf0565b505f610cde6117ac565b90503373ffffffffffffffffffffffffffffffffffffffff1663fa461e3386868a8a6040518563ffffffff1660e01b8152600401610d1f9493929190612c1b565b5f604051808303815f87803b158015610d36575f5ffd5b505af1158015610d48573d5f5f3e3d5ffd5b50505050610d546117ac565b8482610d609190612ac6565b1115610d98576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca6786865f5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a90046fffffffffffffffffffffffffffffffff165f5f0160149054906101000a900460020b604051610e4e959493929190612c59565b60405180910390a350509550959350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a90046fffffffffffffffffffffffffffffffff16905082565b5f5f845f8560020b60020b81526020019081526020015f2090505f815f0160019054906101000a90046fffffffffffffffffffffffffffffffff1690505f8482610f1791906129eb565b90505f826fffffffffffffffffffffffffffffffff161415155f826fffffffffffffffffffffffffffffffff16141515141593505f826fffffffffffffffffffffffffffffffff1603610f80576001835f015f6101000a81548160ff0219169083151502179055505b80835f0160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505050509392505050565b5f8183610fd19190612cd7565b60020b14610fdd575f5ffd5b5f5f610ff38385610fee9190612d07565b611e9b565b915091505f8160ff166001901b905080865f8560010b60010b81526020019081526020015f205f8282541892505081905550505050505050565b5f845f85858560405160200161104593929190612de8565b6040516020818303038152906040528051906020012081526020019081526020015f209050949350505050565b5f825f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690505f82826110a191906129eb565b905080845f015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050565b5f5f5f8360020b126110f7578260020b611105565b8260020b61110490612b6f565b5b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618611131906129a5565b62ffffff16811115611178576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116f90612e7e565b60405180910390fd5b5f5f600183160361119a577001000000000000000000000000000000006111ac565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff1690505f60028316146111ee5760806ffff97272373d413259a46990580e213a826111e99190612e9c565b901c90505b5f600483161461121b5760806ffff2e50f5f656932ef12357cf3c7fdcc826112169190612e9c565b901c90505b5f60088316146112485760806fffe5caca7e10e4e61c3624eaa0941cd0826112439190612e9c565b901c90505b5f60108316146112755760806fffcb9843d60f6159c9db58835c926644826112709190612e9c565b901c90505b5f60208316146112a25760806fff973b41fa98c081472e6896dfb254c08261129d9190612e9c565b901c90505b5f60408316146112cf5760806fff2ea16466c96a3843ec78b326b52861826112ca9190612e9c565b901c90505b5f60808316146112fc5760806ffe5dee046a99a2a811c461f1969c3053826112f79190612e9c565b901c90505b5f61010083161461132a5760806ffcbe86c7900a88aedcffc83b479aa3a4826113259190612e9c565b901c90505b5f6102008316146113585760806ff987a7253ac413176f2b074cf7815e54826113539190612e9c565b901c90505b5f6104008316146113865760806ff3392b0822b70005940c7a398e4b70f3826113819190612e9c565b901c90505b5f6108008316146113b45760806fe7159475a2c29b7443b29c7fa6e889d9826113af9190612e9c565b901c90505b5f6110008316146113e25760806fd097f3bdfd2022b8845ad8f792aa5825826113dd9190612e9c565b901c90505b5f6120008316146114105760806fa9f746462d870fdf8a65dc1f90e061e58261140b9190612e9c565b901c90505b5f61400083161461143e5760806f70d869a156d2a1b890bb3df62baf32f7826114399190612e9c565b901c90505b5f61800083161461146c5760806f31be135f97d08fd981231505542fcfa6826114679190612e9c565b901c90505b5f6201000083161461149b5760806f09aa508b5b7a84e1c677de54f3e99bc9826114969190612e9c565b901c90505b5f620200008316146114c95760806e5d6af8dedb81196699c329225ee604826114c49190612e9c565b901c90505b5f620400008316146114f65760806d2216e584f5fa1ea926041bedfe98826114f19190612e9c565b901c90505b5f620800008316146115215760806b048a170391f7dc42444e8fa28261151c9190612e9c565b901c90505b5f8460020b131561155b57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6115589190612edd565b90505b5f6401000000008261156d9190612f0d565b1461157957600161157b565b5f5b60ff16602082901c61158d9190612ac6565b92505050919050565b5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1611156115d657828480945081955050505b5f8473ffffffffffffffffffffffffffffffffffffffff16116115f7575f5ffd5b611671611655606060ff16846fffffffffffffffffffffffffffffffff16901b86866116239190612f3d565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16611ebc565b8573ffffffffffffffffffffffffffffffffffffffff16611f24565b90509392505050565b5f8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1611156116ba57828480945081955050505b611705826fffffffffffffffffffffffffffffffff1685856116dc9190612f3d565b73ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000611ebc565b90509392505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161176891906124b4565b602060405180830381865afa158015611783573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117a79190612f98565b905090565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161180691906124b4565b602060405180830381865afa158015611821573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118459190612f98565b905090565b5f5f5f84866118599190612d07565b90505f8660020b12801561187b57505f85876118759190612cd7565b60020b14155b1561188f57808061188b90612fc3565b9150505b831561194c575f5f6118a083611e9b565b915091505f8160ff166001901b60018360ff166001901b6118c19190612b3c565b6118cb9190612ac6565b90505f818b5f8660010b60010b81526020019081526020015f20541690505f81141595508561191357888360ff1686611904919061300a565b61190e9190613064565b611941565b8861191d82611f36565b8461192891906130ac565b60ff1686611936919061300a565b6119409190613064565b5b965050505050611a1e565b5f5f61196360018461195e91906130e0565b611e9b565b915091505f60018260ff166001901b61197c9190612b3c565b1990505f818b5f8660010b60010b81526020019081526020015f20541690505f8114159550856119dd57888360ff6119b491906130ac565b60ff166001876119c491906130e0565b6119ce91906130e0565b6119d89190613064565b611a17565b88836119e883612057565b6119f291906130ac565b60ff16600187611a0291906130e0565b611a0c91906130e0565b611a169190613064565b5b9650505050505b5094509492505050565b5f5f5f5f8673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1610159050611a6a888787846121bc565b9350611a77888588611596565b9250611a8488858861167a565b915080611a9657818380935081945050505b509450945094915050565b5f6401000276a373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1610158015611b22575073fffd8963efd1fc6a506488495d951d5263988d2673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16105b611b61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5890613184565b60405180910390fd5b5f60208373ffffffffffffffffffffffffffffffffffffffff16901b90505f8190505f5f90506fffffffffffffffffffffffffffffffff821160071b808217915082811c92505067ffffffffffffffff821160061b808217915082811c92505063ffffffff821160051b808217915082811c92505061ffff821160041b808217915082811c92505060ff821160031b808217915082811c925050600f821160021b808217915082811c9250506003821160011b808217915082811c9250506001821180821791505060808110611c4857607f81611c3e9190612b3c565b83901c9150611c5b565b80607f611c559190612b3c565b83901b91505b5f6040608083611c6b91906131a2565b901b9050828302607f1c92508260801c80603f1b8217915083811c935050828302607f1c92508260801c80603e1b8217915083811c935050828302607f1c92508260801c80603d1b8217915083811c935050828302607f1c92508260801c80603c1b8217915083811c935050828302607f1c92508260801c80603b1b8217915083811c935050828302607f1c92508260801c80603a1b8217915083811c935050828302607f1c92508260801c8060391b8217915083811c935050828302607f1c92508260801c8060381b8217915083811c935050828302607f1c92508260801c8060371b8217915083811c935050828302607f1c92508260801c8060361b8217915083811c935050828302607f1c92508260801c8060351b8217915083811c935050828302607f1c92508260801c8060341b8217915083811c935050828302607f1c92508260801c8060331b8217915083811c935050828302607f1c92508260801c8060321b82179150505f693627a301d71055774c8582611ded91906131e2565b90505f60806f028f6481ab7f045a5af012a19d003aaa83611e0e91906131a2565b901d90505f60806fdb2df09e81959a81455e260799a0632f84611e319190613258565b901d90508060020b8260020b14611e8b578873ffffffffffffffffffffffffffffffffffffffff16611e62826110e2565b73ffffffffffffffffffffffffffffffffffffffff161115611e845781611e86565b805b611e8d565b815b975050505050505050919050565b5f5f60088360020b901d915061010083611eb59190612cd7565b9050915091565b5f611ec88484846121e8565b90505f8280611eda57611ed9612caa565b5b8486091115611f1d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110611f0e575f5ffd5b8080611f1990613299565b9150505b9392505050565b5f5f8284061182840401905092915050565b5f5f8211611f42575f5ffd5b7001000000000000000000000000000000008210611f7157608082901c9150608081611f6e91906132e0565b90505b680100000000000000008210611f9857604082901c9150604081611f9591906132e0565b90505b6401000000008210611fbb57602082901c9150602081611fb891906132e0565b90505b620100008210611fdc57601082901c9150601081611fd991906132e0565b90505b6101008210611ffc57600882901c9150600881611ff991906132e0565b90505b6010821061201b57600482901c915060048161201891906132e0565b90505b6004821061203a57600282901c915060028161203791906132e0565b90505b600282106120525760018161204f91906132e0565b90505b919050565b5f5f8211612063575f5ffd5b60ff90505f6fffffffffffffffffffffffffffffffff8016831611156120975760808161209091906130ac565b905061209f565b608082901c91505b5f67ffffffffffffffff8016831611156120c7576040816120c091906130ac565b90506120cf565b604082901c91505b5f63ffffffff8016831611156120f3576020816120ec91906130ac565b90506120fb565b602082901c91505b5f61ffff80168316111561211d5760108161211691906130ac565b9050612125565b601082901c91505b5f60ff8016831611156121465760088161213f91906130ac565b905061214e565b600882901c91505b5f600f8316111561216d5760048161216691906130ac565b9050612175565b600482901c91505b5f6003831611156121945760028161218d91906130ac565b905061219c565b600282901c91505b5f6001831611156121b7576001816121b491906130ac565b90505b919050565b5f816121d2576121cd8585856122f2565b6121de565b6121dd85858561232c565b5b9050949350505050565b5f5f5f5f198587098587029250828110838203039150505f81036122205783828161221657612215612caa565b5b04925050506122eb565b808411612262576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122599061335e565b60405180910390fd5b5f8486880990508281118203915080830392505f60018619018616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f826fffffffffffffffffffffffffffffffff16606060ff1683901b6123189190612edd565b84612323919061337c565b90509392505050565b5f5f606060ff16846fffffffffffffffffffffffffffffffff16901b90505f8573ffffffffffffffffffffffffffffffffffffffff168461236d9190612e9c565b90508573ffffffffffffffffffffffffffffffffffffffff1684826123929190612edd565b036123da575f81836123a49190612ac6565b90508281106123d8576123ce838873ffffffffffffffffffffffffffffffffffffffff1683611ebc565b9350505050612415565b505b61241082858873ffffffffffffffffffffffffffffffffffffffff16856124019190612edd565b61240b9190612ac6565b611f24565b925050505b9392505050565b6040518060a001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f60020b81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81525090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61249e82612475565b9050919050565b6124ae81612494565b82525050565b5f6020820190506124c75f8301846124a5565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b6124f1816124cd565b82525050565b5f60208201905061250a5f8301846124e8565b92915050565b61251981612475565b82525050565b5f8160020b9050919050565b6125348161251f565b82525050565b5f60408201905061254d5f830185612510565b61255a602083018461252b565b9392505050565b5f5ffd5b5f5ffd5b61257281612494565b811461257c575f5ffd5b50565b5f8135905061258d81612569565b92915050565b61259c8161251f565b81146125a6575f5ffd5b50565b5f813590506125b781612593565b92915050565b6125c6816124cd565b81146125d0575f5ffd5b50565b5f813590506125e1816125bd565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112612608576126076125e7565b5b8235905067ffffffffffffffff811115612625576126246125eb565b5b602083019150836001820283011115612641576126406125ef565b5b9250929050565b5f5f5f5f5f5f60a0878903121561266257612661612561565b5b5f61266f89828a0161257f565b965050602061268089828a016125a9565b955050604061269189828a016125a9565b94505060606126a289828a016125d3565b935050608087013567ffffffffffffffff8111156126c3576126c2612565565b5b6126cf89828a016125f3565b92509250509295509295509295565b5f819050919050565b6126f0816126de565b82525050565b5f6040820190506127095f8301856126e7565b61271660208301846126e7565b9392505050565b5f819050919050565b61272f8161271d565b8114612739575f5ffd5b50565b5f8135905061274a81612726565b92915050565b5f6020828403121561276557612764612561565b5b5f6127728482850161273c565b91505092915050565b5f8160010b9050919050565b6127908161277b565b811461279a575f5ffd5b50565b5f813590506127ab81612787565b92915050565b5f602082840312156127c6576127c5612561565b5b5f6127d38482850161279d565b91505092915050565b5f6020820190506127ef5f8301846126e7565b92915050565b5f8115159050919050565b612809816127f5565b8114612813575f5ffd5b50565b5f8135905061282481612800565b92915050565b612833816126de565b811461283d575f5ffd5b50565b5f8135905061284e8161282a565b92915050565b5f5f5f5f5f6080868803121561286d5761286c612561565b5b5f61287a8882890161257f565b955050602061288b88828901612816565b945050604061289c88828901612840565b935050606086013567ffffffffffffffff8111156128bd576128bc612565565b5b6128c9888289016125f3565b92509250509295509295909350565b5f819050919050565b6128ea816128d8565b82525050565b5f6040820190506129035f8301856128e1565b61291060208301846128e1565b9392505050565b5f6020828403121561292c5761292b612561565b5b5f612939848285016125a9565b91505092915050565b61294b816127f5565b82525050565b5f6040820190506129645f830185612942565b61297160208301846124e8565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6129af8261251f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000082036129e1576129e0612978565b5b815f039050919050565b5f6129f5826124cd565b9150612a00836124cd565b925082820190506fffffffffffffffffffffffffffffffff811115612a2857612a27612978565b5b92915050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f612a678385612a2e565b9350612a74838584612a3e565b612a7d83612a4c565b840190509392505050565b5f606082019050612a9b5f8301876126e7565b612aa860208301866126e7565b8181036040830152612abb818486612a5c565b905095945050505050565b5f612ad0826126de565b9150612adb836126de565b9250828201905080821115612af357612af2612978565b5b92915050565b5f608082019050612b0c5f8301876124a5565b612b1960208301866124e8565b612b2660408301856126e7565b612b3360608301846126e7565b95945050505050565b5f612b46826126de565b9150612b51836126de565b9250828203905081811115612b6957612b68612978565b5b92915050565b5f612b79826128d8565b91507f80000000000000000000000000000000000000000000000000000000000000008203612bab57612baa612978565b5b815f039050919050565b5f604082019050612bc85f8301856124a5565b612bd560208301846126e7565b9392505050565b5f81519050612bea81612800565b92915050565b5f60208284031215612c0557612c04612561565b5b5f612c1284828501612bdc565b91505092915050565b5f606082019050612c2e5f8301876128e1565b612c3b60208301866128e1565b8181036040830152612c4e818486612a5c565b905095945050505050565b5f60a082019050612c6c5f8301886128e1565b612c7960208301876128e1565b612c866040830186612510565b612c9360608301856124e8565b612ca0608083018461252b565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612ce18261251f565b9150612cec8361251f565b925082612cfc57612cfb612caa565b5b828207905092915050565b5f612d118261251f565b9150612d1c8361251f565b925082612d2c57612d2b612caa565b5b60015f0383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000083141615612d6457612d63612978565b5b828205905092915050565b5f8160601b9050919050565b5f612d8582612d6f565b9050919050565b5f612d9682612d7b565b9050919050565b612dae612da982612494565b612d8c565b82525050565b5f8160e81b9050919050565b5f612dca82612db4565b9050919050565b612de2612ddd8261251f565b612dc0565b82525050565b5f612df38286612d9d565b601482019150612e038285612dd1565b600382019150612e138284612dd1565b600382019150819050949350505050565b5f82825260208201905092915050565b7f54000000000000000000000000000000000000000000000000000000000000005f82015250565b5f612e68600183612e24565b9150612e7382612e34565b602082019050919050565b5f6020820190508181035f830152612e9581612e5c565b9050919050565b5f612ea6826126de565b9150612eb1836126de565b9250828202612ebf816126de565b91508282048414831517612ed657612ed5612978565b5b5092915050565b5f612ee7826126de565b9150612ef2836126de565b925082612f0257612f01612caa565b5b828204905092915050565b5f612f17826126de565b9150612f22836126de565b925082612f3257612f31612caa565b5b828206905092915050565b5f612f4782612475565b9150612f5283612475565b9250828203905073ffffffffffffffffffffffffffffffffffffffff811115612f7e57612f7d612978565b5b92915050565b5f81519050612f928161282a565b92915050565b5f60208284031215612fad57612fac612561565b5b5f612fba84828501612f84565b91505092915050565b5f612fcd8261251f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008203612fff57612ffe612978565b5b600182039050919050565b5f6130148261251f565b915061301f8361251f565b92508282039050627fffff81137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008212171561305e5761305d612978565b5b92915050565b5f61306e8261251f565b91506130798361251f565b92508282026130878161251f565b915080821461309957613098612978565b5b5092915050565b5f60ff82169050919050565b5f6130b6826130a0565b91506130c1836130a0565b9250828203905060ff8111156130da576130d9612978565b5b92915050565b5f6130ea8261251f565b91506130f58361251f565b925082820190507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008112627fffff8213171561313457613133612978565b5b92915050565b7f52000000000000000000000000000000000000000000000000000000000000005f82015250565b5f61316e600183612e24565b91506131798261313a565b602082019050919050565b5f6020820190508181035f83015261319b81613162565b9050919050565b5f6131ac826128d8565b91506131b7836128d8565b925082820390508181125f8412168282135f8512151617156131dc576131db612978565b5b92915050565b5f6131ec826128d8565b91506131f7836128d8565b9250828202613205816128d8565b91507f800000000000000000000000000000000000000000000000000000000000000084145f8412161561323c5761323b612978565b5b828205841483151761325157613250612978565b5b5092915050565b5f613262826128d8565b915061326d836128d8565b92508282019050828112155f8312168382125f84121516171561329357613292612978565b5b92915050565b5f6132a3826126de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036132d5576132d4612978565b5b600182019050919050565b5f6132ea826130a0565b91506132f5836130a0565b9250828201905060ff81111561330e5761330d612978565b5b92915050565b7f5052424d6174683a206f766572666c6f770000000000000000000000000000005f82015250565b5f613348601183612e24565b915061335382613314565b602082019050919050565b5f6020820190508181035f8301526133758161333c565b9050919050565b5f61338682612475565b915061339183612475565b9250828201905073ffffffffffffffffffffffffffffffffffffffff8111156133bd576133bc612978565b5b9291505056fea264697066735822122001f569d86aa03a33d1bd9400bc0ad1a8f02305822c506f18c435f7ffe893569a64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3697 CODESIZE SUB DUP1 PUSH2 0x3697 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1FD JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP PUSH0 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP PUSH2 0x261 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C DUP3 PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x162 JUMP JUMPDEST DUP2 EQ PUSH2 0x186 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x197 DUP2 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x143 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C1 DUP2 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x1C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F7 DUP2 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x215 JUMPI PUSH2 0x214 PUSH2 0x13F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222 DUP8 DUP3 DUP9 ADD PUSH2 0x189 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x233 DUP8 DUP3 DUP9 ADD PUSH2 0x189 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x244 DUP8 DUP3 DUP9 ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x255 DUP8 DUP3 DUP9 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x33F9 PUSH2 0x29E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xAC4 ADD MSTORE DUP2 DUP2 PUSH2 0xE64 ADD MSTORE PUSH2 0x17AF ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x203 ADD MSTORE DUP2 DUP2 PUSH2 0xC32 ADD MSTORE PUSH2 0x1711 ADD MSTORE PUSH2 0x33F9 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x514EA4BF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x514EA4BF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x5339C296 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x80C2C6EF EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xF30DBA93 EQ PUSH2 0x1D0 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x3850C7BD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3C8A7D8D EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP3 SWAP2 SWAP1 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP3 SWAP2 SWAP1 PUSH2 0x26F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x2750 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x2854 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP3 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP3 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT ISZERO DUP1 PUSH2 0x2BD JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST DUP1 PUSH2 0x2F6 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x2ED SWAP1 PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH32 0x64847D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1007454800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x38F DUP9 DUP8 PUSH1 0x2 PUSH2 0xECD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3A8 DUP9 DUP9 PUSH1 0x2 PUSH2 0xECD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C7 DUP10 PUSH1 0x1 PUSH1 0x3 PUSH2 0xFC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E5 DUP9 PUSH1 0x1 PUSH1 0x3 PUSH2 0xFC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FF DUP12 DUP12 DUP12 PUSH1 0x4 PUSH2 0x102D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP9 DUP3 PUSH2 0x1072 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP SWAP1 POP DUP11 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x4C7 JUMPI PUSH2 0x4C0 PUSH2 0x4B1 DUP13 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x4BA DUP13 PUSH2 0x10E2 JUMP JUMPDEST DUP12 PUSH2 0x1596 JUMP JUMPDEST SWAP6 POP PUSH2 0x58F JUMP JUMPDEST DUP10 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x570 JUMPI PUSH2 0x4EF DUP2 PUSH0 ADD MLOAD PUSH2 0x4E9 DUP13 PUSH2 0x10E2 JUMP JUMPDEST DUP12 PUSH2 0x1596 JUMP JUMPDEST SWAP6 POP PUSH2 0x507 DUP2 PUSH0 ADD MLOAD PUSH2 0x501 DUP14 PUSH2 0x10E2 JUMP JUMPDEST DUP12 PUSH2 0x167A JUMP JUMPDEST SWAP5 POP DUP9 PUSH1 0x1 PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x29EB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x58E JUMP JUMPDEST PUSH2 0x58B PUSH2 0x57C DUP13 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x585 DUP13 PUSH2 0x10E2 JUMP JUMPDEST DUP12 PUSH2 0x167A JUMP JUMPDEST SWAP5 POP JUMPDEST JUMPDEST PUSH0 PUSH0 PUSH0 DUP9 GT ISZERO PUSH2 0x5A4 JUMPI PUSH2 0x5A1 PUSH2 0x170E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP8 GT ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x5B4 PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD3487997 DUP10 DUP10 DUP14 DUP14 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP9 GT DUP1 ISZERO PUSH2 0x643 JUMPI POP PUSH2 0x635 PUSH2 0x170E JUMP JUMPDEST DUP9 DUP4 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP8 GT DUP1 ISZERO PUSH2 0x69A JUMPI POP PUSH2 0x68C PUSH2 0x17AC JUMP JUMPDEST DUP8 DUP3 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE CALLER DUP16 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x725 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP SWAP1 POP JUMPDEST PUSH0 DUP2 PUSH0 ADD MLOAD GT ISZERO PUSH2 0x9E5 JUMPI PUSH2 0x861 PUSH2 0x241C JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP2 PUSH0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x8B9 DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP12 PUSH1 0x3 PUSH2 0x184A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP2 PUSH1 0x20 ADD DUP2 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP PUSH2 0x8D6 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x10E2 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x941 DUP3 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH0 ADD MLOAD PUSH2 0x1A28 JUMP JUMPDEST DUP5 PUSH1 0x40 ADD DUP5 PUSH1 0x60 ADD DUP6 PUSH1 0x80 ADD DUP4 DUP2 MSTORE POP DUP4 DUP2 MSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP DUP1 PUSH1 0x60 ADD MLOAD DUP3 PUSH0 ADD DUP2 DUP2 MLOAD PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH2 0x9CE DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1AA1 JUMP JUMPDEST DUP3 PUSH1 0x60 ADD SWAP1 PUSH1 0x2 SIGNEXTEND SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP POP PUSH2 0x84E JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x2 SIGNEXTEND EQ PUSH2 0xA6F JUMPI DUP1 PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD PUSH0 PUSH0 ADD PUSH0 PUSH0 PUSH0 ADD PUSH1 0x14 DUP5 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP8 PUSH2 0xA96 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0xA82 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST DUP2 PUSH0 ADD MLOAD DUP9 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST DUP1 PUSH0 ADD MLOAD DUP8 PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0xAB3 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP DUP8 ISZERO PUSH2 0xC30 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP6 PUSH2 0xB09 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB42 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB66 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST POP PUSH0 PUSH2 0xB70 PUSH2 0x170E JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFA461E33 DUP7 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBC8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBDA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xBE6 PUSH2 0x170E JUMP JUMPDEST DUP6 DUP3 PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST GT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xD9A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP7 PUSH2 0xC77 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC94 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST POP PUSH0 PUSH2 0xCDE PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFA461E33 DUP7 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD36 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD54 PUSH2 0x17AC JUMP JUMPDEST DUP5 DUP3 PUSH2 0xD60 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST GT ISZERO PUSH2 0xD98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67 DUP7 DUP7 PUSH0 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x40 MLOAD PUSH2 0xE4E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP5 DUP3 PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x29EB JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO EQ ISZERO SWAP4 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF80 JUMPI PUSH1 0x1 DUP4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP4 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x2CD7 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND EQ PUSH2 0xFDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH2 0xFF3 DUP4 DUP6 PUSH2 0xFEE SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL SWAP1 POP DUP1 DUP7 PUSH0 DUP6 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD XOR SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1045 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0x10A1 SWAP2 SWAP1 PUSH2 0x29EB JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x10F7 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1105 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1104 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x1131 SWAP1 PUSH2 0x29A5 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0x1178 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116F SWAP1 PUSH2 0x2E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x1 DUP4 AND SUB PUSH2 0x119A JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x11AC JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x11EE JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 PUSH2 0x11E9 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x121B JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x1248 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 PUSH2 0x1243 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x1275 JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x12A2 JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x12CF JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x12FC JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 PUSH2 0x12F7 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x100 DUP4 AND EQ PUSH2 0x132A JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x200 DUP4 AND EQ PUSH2 0x1358 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 PUSH2 0x1353 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x400 DUP4 AND EQ PUSH2 0x1386 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x800 DUP4 AND EQ PUSH2 0x13B4 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 PUSH2 0x13AF SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0x13E2 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 PUSH2 0x13DD SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0x1410 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 PUSH2 0x140B SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0x143E JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0x146C JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0x149B JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 PUSH2 0x1496 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0x14C9 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 PUSH2 0x14C4 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0x14F6 JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0x1521 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 PUSH2 0x151C SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x155B JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH5 0x100000000 DUP3 PUSH2 0x156D SWAP2 SWAP1 PUSH2 0x2F0D JUMP JUMPDEST EQ PUSH2 0x1579 JUMPI PUSH1 0x1 PUSH2 0x157B JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0x158D SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x15D6 JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x15F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1671 PUSH2 0x1655 PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL DUP7 DUP7 PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x2F3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EBC JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x16BA JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH2 0x1705 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH2 0x16DC SWAP2 SWAP1 PUSH2 0x2F3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH2 0x1EBC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1768 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1783 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A7 SWAP2 SWAP1 PUSH2 0x2F98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1806 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1821 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1845 SWAP2 SWAP1 PUSH2 0x2F98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP7 PUSH2 0x1859 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x187B JUMPI POP PUSH0 DUP6 DUP8 PUSH2 0x1875 SWAP2 SWAP1 PUSH2 0x2CD7 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0x188F JUMPI DUP1 DUP1 PUSH2 0x188B SWAP1 PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP4 ISZERO PUSH2 0x194C JUMPI PUSH0 PUSH0 PUSH2 0x18A0 DUP4 PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL PUSH1 0x1 DUP4 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL PUSH2 0x18C1 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP12 PUSH0 DUP7 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD AND SWAP1 POP PUSH0 DUP2 EQ ISZERO SWAP6 POP DUP6 PUSH2 0x1913 JUMPI DUP9 DUP4 PUSH1 0xFF AND DUP7 PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x300A JUMP JUMPDEST PUSH2 0x190E SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0x1941 JUMP JUMPDEST DUP9 PUSH2 0x191D DUP3 PUSH2 0x1F36 JUMP JUMPDEST DUP5 PUSH2 0x1928 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST PUSH1 0xFF AND DUP7 PUSH2 0x1936 SWAP2 SWAP1 PUSH2 0x300A JUMP JUMPDEST PUSH2 0x1940 SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x1A1E JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1963 PUSH1 0x1 DUP5 PUSH2 0x195E SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH1 0x1 DUP3 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL PUSH2 0x197C SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST NOT SWAP1 POP PUSH0 DUP2 DUP12 PUSH0 DUP7 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD AND SWAP1 POP PUSH0 DUP2 EQ ISZERO SWAP6 POP DUP6 PUSH2 0x19DD JUMPI DUP9 DUP4 PUSH1 0xFF PUSH2 0x19B4 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 DUP8 PUSH2 0x19C4 SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x19D8 SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0x1A17 JUMP JUMPDEST DUP9 DUP4 PUSH2 0x19E8 DUP4 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x19F2 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 DUP8 PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x1A0C SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO SWAP1 POP PUSH2 0x1A6A DUP9 DUP8 DUP8 DUP5 PUSH2 0x21BC JUMP JUMPDEST SWAP4 POP PUSH2 0x1A77 DUP9 DUP6 DUP9 PUSH2 0x1596 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A84 DUP9 DUP6 DUP9 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1A96 JUMPI DUP2 DUP4 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP JUMPDEST POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH5 0x1000276A3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x1B22 JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST PUSH2 0x1B61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B58 SWAP1 PUSH2 0x3184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL SWAP1 POP PUSH0 DUP2 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x7 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x6 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH4 0xFFFFFFFF DUP3 GT PUSH1 0x5 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH2 0xFFFF DUP3 GT PUSH1 0x4 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0xFF DUP3 GT PUSH1 0x3 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0xF DUP3 GT PUSH1 0x2 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0x3 DUP3 GT PUSH1 0x1 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0x1 DUP3 GT DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x80 DUP2 LT PUSH2 0x1C48 JUMPI PUSH1 0x7F DUP2 PUSH2 0x1C3E SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x1C5B JUMP JUMPDEST DUP1 PUSH1 0x7F PUSH2 0x1C55 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST DUP4 SWAP1 SHL SWAP2 POP JUMPDEST PUSH0 PUSH1 0x40 PUSH1 0x80 DUP4 PUSH2 0x1C6B SWAP2 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST SWAP1 SHL SWAP1 POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3F SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3E SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3D SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3C SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3B SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3A SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x39 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x38 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x37 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x36 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x35 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x34 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x33 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x32 SHL DUP3 OR SWAP2 POP POP PUSH0 PUSH10 0x3627A301D71055774C85 DUP3 PUSH2 0x1DED SWAP2 SWAP1 PUSH2 0x31E2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x80 PUSH16 0x28F6481AB7F045A5AF012A19D003AAA DUP4 PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST SWAP1 SAR SWAP1 POP PUSH0 PUSH1 0x80 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP5 PUSH2 0x1E31 SWAP2 SWAP1 PUSH2 0x3258 JUMP JUMPDEST SWAP1 SAR SWAP1 POP DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND EQ PUSH2 0x1E8B JUMPI DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E62 DUP3 PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1E84 JUMPI DUP2 PUSH2 0x1E86 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x1E8D JUMP JUMPDEST DUP2 JUMPDEST SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 DUP4 PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP2 POP PUSH2 0x100 DUP4 PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x2CD7 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x1EC8 DUP5 DUP5 DUP5 PUSH2 0x21E8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP1 PUSH2 0x1EDA JUMPI PUSH2 0x1ED9 PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x1F1D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT PUSH2 0x1F0E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1F19 SWAP1 PUSH2 0x3299 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP5 MOD GT DUP3 DUP5 DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 GT PUSH2 0x1F42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x1F71 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x80 DUP2 PUSH2 0x1F6E SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1F98 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 PUSH2 0x1F95 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1FBB JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0x1FB8 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1FDC JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 PUSH2 0x1FD9 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x1FFC JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 PUSH2 0x1FF9 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x201B JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 PUSH2 0x2018 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x203A JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x2037 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2052 JUMPI PUSH1 0x1 DUP2 PUSH2 0x204F SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 GT PUSH2 0x2063 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0xFF SWAP1 POP PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x2097 JUMPI PUSH1 0x80 DUP2 PUSH2 0x2090 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x209F JUMP JUMPDEST PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x20C7 JUMPI PUSH1 0x40 DUP2 PUSH2 0x20C0 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x20CF JUMP JUMPDEST PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x20F3 JUMPI PUSH1 0x20 DUP2 PUSH2 0x20EC SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH2 0xFFFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x211D JUMPI PUSH1 0x10 DUP2 PUSH2 0x2116 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH1 0xFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x2146 JUMPI PUSH1 0x8 DUP2 PUSH2 0x213F SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x214E JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH1 0xF DUP4 AND GT ISZERO PUSH2 0x216D JUMPI PUSH1 0x4 DUP2 PUSH2 0x2166 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH1 0x3 DUP4 AND GT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x2 DUP2 PUSH2 0x218D SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x219C JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH1 0x1 DUP4 AND GT ISZERO PUSH2 0x21B7 JUMPI PUSH1 0x1 DUP2 PUSH2 0x21B4 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x21D2 JUMPI PUSH2 0x21CD DUP6 DUP6 DUP6 PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x21DE JUMP JUMPDEST PUSH2 0x21DD DUP6 DUP6 DUP6 PUSH2 0x232C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH0 DUP2 SUB PUSH2 0x2220 JUMPI DUP4 DUP3 DUP2 PUSH2 0x2216 JUMPI PUSH2 0x2215 PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x22EB JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x2262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2259 SWAP1 PUSH2 0x335E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 PUSH1 0xFF AND DUP4 SWAP1 SHL PUSH2 0x2318 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST DUP5 PUSH2 0x2323 SWAP2 SWAP1 PUSH2 0x337C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL SWAP1 POP PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x236D SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP3 PUSH2 0x2392 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST SUB PUSH2 0x23DA JUMPI PUSH0 DUP2 DUP4 PUSH2 0x23A4 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT PUSH2 0x23D8 JUMPI PUSH2 0x23CE DUP4 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1EBC JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x2415 JUMP JUMPDEST POP JUMPDEST PUSH2 0x2410 DUP3 DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x2401 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH2 0x240B SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x1F24 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249E DUP3 PUSH2 0x2475 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AE DUP2 PUSH2 0x2494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F1 DUP2 PUSH2 0x24CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH0 DUP4 ADD DUP5 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2519 DUP2 PUSH2 0x2475 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2534 DUP2 PUSH2 0x251F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x254D PUSH0 DUP4 ADD DUP6 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x255A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x252B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2572 DUP2 PUSH2 0x2494 JUMP JUMPDEST DUP2 EQ PUSH2 0x257C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258D DUP2 PUSH2 0x2569 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x259C DUP2 PUSH2 0x251F JUMP JUMPDEST DUP2 EQ PUSH2 0x25A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B7 DUP2 PUSH2 0x2593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25C6 DUP2 PUSH2 0x24CD JUMP JUMPDEST DUP2 EQ PUSH2 0x25D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25E1 DUP2 PUSH2 0x25BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x25E7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2625 JUMPI PUSH2 0x2624 PUSH2 0x25EB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2641 JUMPI PUSH2 0x2640 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2662 JUMPI PUSH2 0x2661 PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x266F DUP10 DUP3 DUP11 ADD PUSH2 0x257F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2680 DUP10 DUP3 DUP11 ADD PUSH2 0x25A9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2691 DUP10 DUP3 DUP11 ADD PUSH2 0x25A9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x26A2 DUP10 DUP3 DUP11 ADD PUSH2 0x25D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26C3 JUMPI PUSH2 0x26C2 PUSH2 0x2565 JUMP JUMPDEST JUMPDEST PUSH2 0x26CF DUP10 DUP3 DUP11 ADD PUSH2 0x25F3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F0 DUP2 PUSH2 0x26DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2709 PUSH0 DUP4 ADD DUP6 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x2716 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272F DUP2 PUSH2 0x271D JUMP JUMPDEST DUP2 EQ PUSH2 0x2739 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x274A DUP2 PUSH2 0x2726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2772 DUP5 DUP3 DUP6 ADD PUSH2 0x273C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2790 DUP2 PUSH2 0x277B JUMP JUMPDEST DUP2 EQ PUSH2 0x279A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27AB DUP2 PUSH2 0x2787 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C6 JUMPI PUSH2 0x27C5 PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27D3 DUP5 DUP3 DUP6 ADD PUSH2 0x279D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27EF PUSH0 DUP4 ADD DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2809 DUP2 PUSH2 0x27F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2813 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2824 DUP2 PUSH2 0x2800 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2833 DUP2 PUSH2 0x26DE JUMP JUMPDEST DUP2 EQ PUSH2 0x283D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x284E DUP2 PUSH2 0x282A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x286D JUMPI PUSH2 0x286C PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287A DUP9 DUP3 DUP10 ADD PUSH2 0x257F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x288B DUP9 DUP3 DUP10 ADD PUSH2 0x2816 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x289C DUP9 DUP3 DUP10 ADD PUSH2 0x2840 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28BD JUMPI PUSH2 0x28BC PUSH2 0x2565 JUMP JUMPDEST JUMPDEST PUSH2 0x28C9 DUP9 DUP3 DUP10 ADD PUSH2 0x25F3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28EA DUP2 PUSH2 0x28D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2903 PUSH0 DUP4 ADD DUP6 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x2910 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292C JUMPI PUSH2 0x292B PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2939 DUP5 DUP3 DUP6 ADD PUSH2 0x25A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294B DUP2 PUSH2 0x27F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2964 PUSH0 DUP4 ADD DUP6 PUSH2 0x2942 JUMP JUMPDEST PUSH2 0x2971 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x29AF DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x29E1 JUMPI PUSH2 0x29E0 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29F5 DUP3 PUSH2 0x24CD JUMP JUMPDEST SWAP2 POP PUSH2 0x2A00 DUP4 PUSH2 0x24CD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A28 JUMPI PUSH2 0x2A27 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A67 DUP4 DUP6 PUSH2 0x2A2E JUMP JUMPDEST SWAP4 POP PUSH2 0x2A74 DUP4 DUP6 DUP5 PUSH2 0x2A3E JUMP JUMPDEST PUSH2 0x2A7D DUP4 PUSH2 0x2A4C JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A9B PUSH0 DUP4 ADD DUP8 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x2AA8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x26E7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2ABB DUP2 DUP5 DUP7 PUSH2 0x2A5C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD0 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADB DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AF3 JUMPI PUSH2 0x2AF2 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B0C PUSH0 DUP4 ADD DUP8 PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x2B19 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x2B26 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x2B33 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B46 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B51 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2B69 JUMPI PUSH2 0x2B68 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B79 DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x2BAB JUMPI PUSH2 0x2BAA PUSH2 0x2978 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BC8 PUSH0 DUP4 ADD DUP6 PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x2BD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BEA DUP2 PUSH2 0x2800 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C05 JUMPI PUSH2 0x2C04 PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C12 DUP5 DUP3 DUP6 ADD PUSH2 0x2BDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C2E PUSH0 DUP4 ADD DUP8 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x2C3B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x28E1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2C4E DUP2 DUP5 DUP7 PUSH2 0x2A5C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2C6C PUSH0 DUP4 ADD DUP9 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x2C79 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x2C86 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x2C93 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x2CA0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x252B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CE1 DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEC DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2CFC JUMPI PUSH2 0x2CFB PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SMOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D11 DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1C DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2D2C JUMPI PUSH2 0x2D2B PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP4 EQ AND ISZERO PUSH2 0x2D64 JUMPI PUSH2 0x2D63 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D85 DUP3 PUSH2 0x2D6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D96 DUP3 PUSH2 0x2D7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DAE PUSH2 0x2DA9 DUP3 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x2D8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2DCA DUP3 PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DE2 PUSH2 0x2DDD DUP3 PUSH2 0x251F JUMP JUMPDEST PUSH2 0x2DC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DF3 DUP3 DUP7 PUSH2 0x2D9D JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2E03 DUP3 DUP6 PUSH2 0x2DD1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x2E13 DUP3 DUP5 PUSH2 0x2DD1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E68 PUSH1 0x1 DUP4 PUSH2 0x2E24 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E73 DUP3 PUSH2 0x2E34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E95 DUP2 PUSH2 0x2E5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2EA6 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2EB1 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2EBF DUP2 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2ED6 JUMPI PUSH2 0x2ED5 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE7 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF2 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F02 JUMPI PUSH2 0x2F01 PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F17 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F22 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F32 JUMPI PUSH2 0x2F31 PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F47 DUP3 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F52 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F7E JUMPI PUSH2 0x2F7D PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F92 DUP2 PUSH2 0x282A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FAD JUMPI PUSH2 0x2FAC PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FBA DUP5 DUP3 DUP6 ADD PUSH2 0x2F84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FCD DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x2FFF JUMPI PUSH2 0x2FFE PUSH2 0x2978 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3014 DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x301F DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH3 0x7FFFFF DUP2 SGT PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SLT OR ISZERO PUSH2 0x305E JUMPI PUSH2 0x305D PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x306E DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x3079 DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3087 DUP2 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x3099 JUMPI PUSH2 0x3098 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30B6 DUP3 PUSH2 0x30A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C1 DUP4 PUSH2 0x30A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x30DA JUMPI PUSH2 0x30D9 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30EA DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x30F5 DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP2 SLT PUSH3 0x7FFFFF DUP3 SGT OR ISZERO PUSH2 0x3134 JUMPI PUSH2 0x3133 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5200000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x316E PUSH1 0x1 DUP4 PUSH2 0x2E24 JUMP JUMPDEST SWAP2 POP PUSH2 0x3179 DUP3 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x319B DUP2 PUSH2 0x3162 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x31AC DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B7 DUP4 PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH0 DUP5 SLT AND DUP3 DUP3 SGT PUSH0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x31DC JUMPI PUSH2 0x31DB PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31EC DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x31F7 DUP4 PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3205 DUP2 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x323C JUMPI PUSH2 0x323B PUSH2 0x2978 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3251 JUMPI PUSH2 0x3250 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3262 DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x326D DUP4 PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH0 DUP4 SLT AND DUP4 DUP3 SLT PUSH0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x3293 JUMPI PUSH2 0x3292 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x32A3 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x32D5 JUMPI PUSH2 0x32D4 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32EA DUP3 PUSH2 0x30A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F5 DUP4 PUSH2 0x30A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x330E JUMPI PUSH2 0x330D PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5052424D6174683A206F766572666C6F77000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3348 PUSH1 0x11 DUP4 PUSH2 0x2E24 JUMP JUMPDEST SWAP2 POP PUSH2 0x3353 DUP3 PUSH2 0x3314 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3375 DUP2 PUSH2 0x333C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3386 DUP3 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x3391 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33BD JUMPI PUSH2 0x33BC PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD CREATE2 PUSH10 0xD86AA03A33D1BD9400BC EXP DATALOADN 0xA8F0 0x23 SDIV DUP3 0x2C POP PUSH16 0x18C435F7FFE893569A64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "446:7724:0:-:0;;;1864:273;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:7;2020:16;;;;;;;;;;2056:7;2047:16;;;;;;;;;;2082:47;;;;;;;;2103:12;2082:47;;;;;;2123:4;2082:47;;;;;2074:5;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1864:273;;;;446:7724;;88:117:14;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:122::-;918:24;936:5;918:24;:::i;:::-;911:5;908:35;898:63;;957:1;954;947:12;898:63;845:122;:::o;973:143::-;1030:5;1061:6;1055:13;1046:22;;1077:33;1104:5;1077:33;:::i;:::-;973:143;;;;:::o;1122:90::-;1157:7;1200:5;1197:1;1186:20;1175:31;;1122:90;;;:::o;1218:118::-;1289:22;1305:5;1289:22;:::i;:::-;1282:5;1279:33;1269:61;;1326:1;1323;1316:12;1269:61;1218:118;:::o;1342:139::-;1397:5;1428:6;1422:13;1413:22;;1444:31;1469:5;1444:31;:::i;:::-;1342:139;;;;:::o;1487:816::-;1582:6;1590;1598;1606;1655:3;1643:9;1634:7;1630:23;1626:33;1623:120;;;1662:79;;:::i;:::-;1623:120;1782:1;1807:64;1863:7;1854:6;1843:9;1839:22;1807:64;:::i;:::-;1797:74;;1753:128;1920:2;1946:64;2002:7;1993:6;1982:9;1978:22;1946:64;:::i;:::-;1936:74;;1891:129;2059:2;2085:64;2141:7;2132:6;2121:9;2117:22;2085:64;:::i;:::-;2075:74;;2030:129;2198:2;2224:62;2278:7;2269:6;2258:9;2254:22;2224:62;:::i;:::-;2214:72;;2169:127;1487:816;;;;;;;:::o;446:7724:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balance0_658": {
									"entryPoint": 5902,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balance1_676": {
									"entryPoint": 6060,
									"id": 676,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calcAmount0Delta_1242": {
									"entryPoint": 5526,
									"id": 1242,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@calcAmount1Delta_1279": {
									"entryPoint": 5754,
									"id": 1279,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@computeSwapStep_1773": {
									"entryPoint": 6696,
									"id": 1773,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@divRoundingUp_1455": {
									"entryPoint": 7972,
									"id": 1455,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@flipTick_1925": {
									"entryPoint": 4036,
									"id": 1925,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getNextSqrtPriceFromAmount0RoundingUp_1376": {
									"entryPoint": 9004,
									"id": 1376,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNextSqrtPriceFromAmount1RoundingDown_1401": {
									"entryPoint": 8946,
									"id": 1401,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNextSqrtPriceFromInput_1308": {
									"entryPoint": 8636,
									"id": 1308,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@getSqrtRatioAtTick_2517": {
									"entryPoint": 4322,
									"id": 2517,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTickAtSqrtRatio_2656": {
									"entryPoint": 6817,
									"id": 2656,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_1679": {
									"entryPoint": 4141,
									"id": 1679,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@leastSignificantBit_1174": {
									"entryPoint": 8279,
									"id": 1174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@liquidity_62": {
									"entryPoint": 549,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_371": {
									"entryPoint": 641,
									"id": 371,
									"parameterSlots": 6,
									"returnSlots": 2
								},
								"@mostSignificantBit_1013": {
									"entryPoint": 7990,
									"id": 1013,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mulDivRoundingUp_1444": {
									"entryPoint": 7868,
									"id": 1444,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@mulDiv_1605": {
									"entryPoint": 8680,
									"id": 1605,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@nextInitializedTickWithinOneWord_2118": {
									"entryPoint": 6218,
									"id": 2118,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@position_1882": {
									"entryPoint": 7835,
									"id": 1882,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@positions_76": {
									"entryPoint": 1854,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@slot0_60": {
									"entryPoint": 582,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_640": {
									"entryPoint": 1928,
									"id": 640,
									"parameterSlots": 5,
									"returnSlots": 2
								},
								"@tickBitmap_71": {
									"entryPoint": 1907,
									"id": 71,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ticks_67": {
									"entryPoint": 3718,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token0_50": {
									"entryPoint": 513,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_52": {
									"entryPoint": 3682,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@update_1705": {
									"entryPoint": 4210,
									"id": 1705,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@update_1845": {
									"entryPoint": 3789,
									"id": 1845,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 10044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 9715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_int16": {
									"entryPoint": 10141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24": {
									"entryPoint": 9641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128": {
									"entryPoint": 9683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 12164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_boolt_uint256t_bytes_calldata_ptr": {
									"entryPoint": 10324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr": {
									"entryPoint": 9800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 10064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int16": {
									"entryPoint": 10161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int24": {
									"entryPoint": 10519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 12184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 11677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10844,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_int24_to_t_int24_fromStack": {
									"entryPoint": 9515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack": {
									"entryPoint": 11729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 10465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint128_to_t_uint128_fromStack": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 9488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11752,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11001,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11189,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed": {
									"entryPoint": 10577,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed": {
									"entryPoint": 10480,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11291,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed": {
									"entryPoint": 11353,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": 9463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed": {
									"entryPoint": 9530,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9974,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10888,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_int24": {
									"entryPoint": 12512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 12888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint128": {
									"entryPoint": 10731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint160": {
									"entryPoint": 13180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 13024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int24": {
									"entryPoint": 11527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int24": {
									"entryPoint": 12388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 12770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int24": {
									"entryPoint": 12298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 12706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint160": {
									"entryPoint": 12093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 12460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 10013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int16": {
									"entryPoint": 10107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 9503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 10456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 9421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 12448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 10814,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_int24": {
									"entryPoint": 12227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 12953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 11660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_int24": {
									"entryPoint": 11712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 11643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_int24": {
									"entryPoint": 11479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 12045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"negate_t_int24": {
									"entryPoint": 10661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 11119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11434,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 9707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9703,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 9711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9569,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_232": {
									"entryPoint": 11700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 11631,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc": {
									"entryPoint": 11828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238": {
									"entryPoint": 13076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2": {
									"entryPoint": 12602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 10022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int16": {
									"entryPoint": 10119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 9619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 9661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25293:14",
										"nodeType": "YulBlock",
										"src": "0:25293:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:14",
													"nodeType": "YulBlock",
													"src": "52:81:14",
													"statements": [
														{
															"nativeSrc": "62:65:14",
															"nodeType": "YulAssignment",
															"src": "62:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:14",
																		"nodeType": "YulLiteral",
																		"src": "84:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:14"
																},
																"nativeSrc": "73:54:14",
																"nodeType": "YulFunctionCall",
																"src": "73:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:14",
														"nodeType": "YulTypedName",
														"src": "34:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:14",
														"nodeType": "YulTypedName",
														"src": "44:7:14",
														"type": ""
													}
												],
												"src": "7:126:14"
											},
											{
												"body": {
													"nativeSrc": "184:51:14",
													"nodeType": "YulBlock",
													"src": "184:51:14",
													"statements": [
														{
															"nativeSrc": "194:35:14",
															"nodeType": "YulAssignment",
															"src": "194:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:14"
																},
																"nativeSrc": "205:24:14",
																"nodeType": "YulFunctionCall",
																"src": "205:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:14",
														"nodeType": "YulTypedName",
														"src": "166:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:14",
														"nodeType": "YulTypedName",
														"src": "176:7:14",
														"type": ""
													}
												],
												"src": "139:96:14"
											},
											{
												"body": {
													"nativeSrc": "306:53:14",
													"nodeType": "YulBlock",
													"src": "306:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:14"
																		},
																		"nativeSrc": "328:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:14"
																},
																"nativeSrc": "316:37:14",
																"nodeType": "YulFunctionCall",
																"src": "316:37:14"
															},
															"nativeSrc": "316:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:14",
														"nodeType": "YulTypedName",
														"src": "294:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:14",
														"nodeType": "YulTypedName",
														"src": "301:3:14",
														"type": ""
													}
												],
												"src": "241:118:14"
											},
											{
												"body": {
													"nativeSrc": "463:124:14",
													"nodeType": "YulBlock",
													"src": "463:124:14",
													"statements": [
														{
															"nativeSrc": "473:26:14",
															"nodeType": "YulAssignment",
															"src": "473:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:14",
																		"nodeType": "YulLiteral",
																		"src": "496:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:14"
																},
																"nativeSrc": "481:18:14",
																"nodeType": "YulFunctionCall",
																"src": "481:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:14",
																				"nodeType": "YulLiteral",
																				"src": "577:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:14"
																		},
																		"nativeSrc": "562:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:14"
																},
																"nativeSrc": "509:71:14",
																"nodeType": "YulFunctionCall",
																"src": "509:71:14"
															},
															"nativeSrc": "509:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:14",
														"nodeType": "YulTypedName",
														"src": "435:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:14",
														"nodeType": "YulTypedName",
														"src": "447:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:14",
														"nodeType": "YulTypedName",
														"src": "458:4:14",
														"type": ""
													}
												],
												"src": "365:222:14"
											},
											{
												"body": {
													"nativeSrc": "638:73:14",
													"nodeType": "YulBlock",
													"src": "638:73:14",
													"statements": [
														{
															"nativeSrc": "648:57:14",
															"nodeType": "YulAssignment",
															"src": "648:57:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "663:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "663:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:34:14",
																		"nodeType": "YulLiteral",
																		"src": "670:34:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "659:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:14"
																},
																"nativeSrc": "659:46:14",
																"nodeType": "YulFunctionCall",
																"src": "659:46:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "593:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:14",
														"nodeType": "YulTypedName",
														"src": "620:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:14",
														"nodeType": "YulTypedName",
														"src": "630:7:14",
														"type": ""
													}
												],
												"src": "593:118:14"
											},
											{
												"body": {
													"nativeSrc": "782:53:14",
													"nodeType": "YulBlock",
													"src": "782:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "799:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "799:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "822:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "822:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nativeSrc": "804:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "804:17:14"
																		},
																		"nativeSrc": "804:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "804:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "792:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "792:6:14"
																},
																"nativeSrc": "792:37:14",
																"nodeType": "YulFunctionCall",
																"src": "792:37:14"
															},
															"nativeSrc": "792:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "792:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nativeSrc": "717:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "770:5:14",
														"nodeType": "YulTypedName",
														"src": "770:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "777:3:14",
														"nodeType": "YulTypedName",
														"src": "777:3:14",
														"type": ""
													}
												],
												"src": "717:118:14"
											},
											{
												"body": {
													"nativeSrc": "939:124:14",
													"nodeType": "YulBlock",
													"src": "939:124:14",
													"statements": [
														{
															"nativeSrc": "949:26:14",
															"nodeType": "YulAssignment",
															"src": "949:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "961:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "961:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "972:2:14",
																		"nodeType": "YulLiteral",
																		"src": "972:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "957:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "957:3:14"
																},
																"nativeSrc": "957:18:14",
																"nodeType": "YulFunctionCall",
																"src": "957:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "949:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "949:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1029:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1029:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1042:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1042:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1053:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1053:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1038:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:14"
																		},
																		"nativeSrc": "1038:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1038:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "985:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "985:43:14"
																},
																"nativeSrc": "985:71:14",
																"nodeType": "YulFunctionCall",
																"src": "985:71:14"
															},
															"nativeSrc": "985:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "985:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "841:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "911:9:14",
														"nodeType": "YulTypedName",
														"src": "911:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "923:6:14",
														"nodeType": "YulTypedName",
														"src": "923:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "934:4:14",
														"nodeType": "YulTypedName",
														"src": "934:4:14",
														"type": ""
													}
												],
												"src": "841:222:14"
											},
											{
												"body": {
													"nativeSrc": "1134:53:14",
													"nodeType": "YulBlock",
													"src": "1134:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1151:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1151:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1174:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1174:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "1156:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "1156:17:14"
																		},
																		"nativeSrc": "1156:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1156:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:14"
																},
																"nativeSrc": "1144:37:14",
																"nodeType": "YulFunctionCall",
																"src": "1144:37:14"
															},
															"nativeSrc": "1144:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "1144:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nativeSrc": "1069:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:14",
														"nodeType": "YulTypedName",
														"src": "1122:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1129:3:14",
														"nodeType": "YulTypedName",
														"src": "1129:3:14",
														"type": ""
													}
												],
												"src": "1069:118:14"
											},
											{
												"body": {
													"nativeSrc": "1236:47:14",
													"nodeType": "YulBlock",
													"src": "1236:47:14",
													"statements": [
														{
															"nativeSrc": "1246:31:14",
															"nodeType": "YulAssignment",
															"src": "1246:31:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1268:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1268:1:14",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1271:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1271:5:14"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1257:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "1257:10:14"
																},
																"nativeSrc": "1257:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1257:20:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1246:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1246:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "1193:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1218:5:14",
														"nodeType": "YulTypedName",
														"src": "1218:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1228:7:14",
														"nodeType": "YulTypedName",
														"src": "1228:7:14",
														"type": ""
													}
												],
												"src": "1193:90:14"
											},
											{
												"body": {
													"nativeSrc": "1350:51:14",
													"nodeType": "YulBlock",
													"src": "1350:51:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1367:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1388:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1388:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int24",
																			"nativeSrc": "1372:15:14",
																			"nodeType": "YulIdentifier",
																			"src": "1372:15:14"
																		},
																		"nativeSrc": "1372:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1372:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:14"
																},
																"nativeSrc": "1360:35:14",
																"nodeType": "YulFunctionCall",
																"src": "1360:35:14"
															},
															"nativeSrc": "1360:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "1360:35:14"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24_fromStack",
												"nativeSrc": "1289:112:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1338:5:14",
														"nodeType": "YulTypedName",
														"src": "1338:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1345:3:14",
														"nodeType": "YulTypedName",
														"src": "1345:3:14",
														"type": ""
													}
												],
												"src": "1289:112:14"
											},
											{
												"body": {
													"nativeSrc": "1529:202:14",
													"nodeType": "YulBlock",
													"src": "1529:202:14",
													"statements": [
														{
															"nativeSrc": "1539:26:14",
															"nodeType": "YulAssignment",
															"src": "1539:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1551:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1551:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1562:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1562:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1547:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1547:3:14"
																},
																"nativeSrc": "1547:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1547:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1539:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1539:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1619:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1619:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1632:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1632:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1643:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1643:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1628:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:14"
																		},
																		"nativeSrc": "1628:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "1575:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "1575:43:14"
																},
																"nativeSrc": "1575:71:14",
																"nodeType": "YulFunctionCall",
																"src": "1575:71:14"
															},
															"nativeSrc": "1575:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "1575:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1696:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1696:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1709:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1709:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1720:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1720:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1705:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1705:3:14"
																		},
																		"nativeSrc": "1705:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1705:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "1656:39:14",
																	"nodeType": "YulIdentifier",
																	"src": "1656:39:14"
																},
																"nativeSrc": "1656:68:14",
																"nodeType": "YulFunctionCall",
																"src": "1656:68:14"
															},
															"nativeSrc": "1656:68:14",
															"nodeType": "YulExpressionStatement",
															"src": "1656:68:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed",
												"nativeSrc": "1407:324:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1493:9:14",
														"nodeType": "YulTypedName",
														"src": "1493:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1505:6:14",
														"nodeType": "YulTypedName",
														"src": "1505:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1513:6:14",
														"nodeType": "YulTypedName",
														"src": "1513:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1524:4:14",
														"nodeType": "YulTypedName",
														"src": "1524:4:14",
														"type": ""
													}
												],
												"src": "1407:324:14"
											},
											{
												"body": {
													"nativeSrc": "1777:35:14",
													"nodeType": "YulBlock",
													"src": "1777:35:14",
													"statements": [
														{
															"nativeSrc": "1787:19:14",
															"nodeType": "YulAssignment",
															"src": "1787:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1797:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1797:5:14"
																},
																"nativeSrc": "1797:9:14",
																"nodeType": "YulFunctionCall",
																"src": "1797:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1787:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1787:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1737:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1770:6:14",
														"nodeType": "YulTypedName",
														"src": "1770:6:14",
														"type": ""
													}
												],
												"src": "1737:75:14"
											},
											{
												"body": {
													"nativeSrc": "1907:28:14",
													"nodeType": "YulBlock",
													"src": "1907:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1924:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1924:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1927:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1927:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1917:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1917:6:14"
																},
																"nativeSrc": "1917:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1917:12:14"
															},
															"nativeSrc": "1917:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "1917:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1818:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1818:117:14"
											},
											{
												"body": {
													"nativeSrc": "2030:28:14",
													"nodeType": "YulBlock",
													"src": "2030:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2047:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2047:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2050:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2040:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:14"
																},
																"nativeSrc": "2040:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2040:12:14"
															},
															"nativeSrc": "2040:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2040:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1941:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1941:117:14"
											},
											{
												"body": {
													"nativeSrc": "2107:79:14",
													"nodeType": "YulBlock",
													"src": "2107:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2164:16:14",
																"nodeType": "YulBlock",
																"src": "2164:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2173:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2173:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2176:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2176:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2166:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2166:6:14"
																			},
																			"nativeSrc": "2166:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2166:12:14"
																		},
																		"nativeSrc": "2166:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2166:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2130:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2130:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2155:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2155:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2137:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2137:17:14"
																				},
																				"nativeSrc": "2137:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2137:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2127:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2127:2:14"
																		},
																		"nativeSrc": "2127:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2127:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2120:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:14"
																},
																"nativeSrc": "2120:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2120:43:14"
															},
															"nativeSrc": "2117:63:14",
															"nodeType": "YulIf",
															"src": "2117:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2064:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2100:5:14",
														"nodeType": "YulTypedName",
														"src": "2100:5:14",
														"type": ""
													}
												],
												"src": "2064:122:14"
											},
											{
												"body": {
													"nativeSrc": "2244:87:14",
													"nodeType": "YulBlock",
													"src": "2244:87:14",
													"statements": [
														{
															"nativeSrc": "2254:29:14",
															"nodeType": "YulAssignment",
															"src": "2254:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2276:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2276:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2263:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2263:12:14"
																},
																"nativeSrc": "2263:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2263:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2254:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2254:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2319:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2319:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2292:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2292:26:14"
																},
																"nativeSrc": "2292:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2292:33:14"
															},
															"nativeSrc": "2292:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2292:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2192:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2222:6:14",
														"nodeType": "YulTypedName",
														"src": "2222:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2230:3:14",
														"nodeType": "YulTypedName",
														"src": "2230:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2238:5:14",
														"nodeType": "YulTypedName",
														"src": "2238:5:14",
														"type": ""
													}
												],
												"src": "2192:139:14"
											},
											{
												"body": {
													"nativeSrc": "2378:77:14",
													"nodeType": "YulBlock",
													"src": "2378:77:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2433:16:14",
																"nodeType": "YulBlock",
																"src": "2433:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2442:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2442:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2445:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2445:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2435:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:14"
																			},
																			"nativeSrc": "2435:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2435:12:14"
																		},
																		"nativeSrc": "2435:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2435:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2401:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2401:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2424:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2424:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "2408:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "2408:15:14"
																				},
																				"nativeSrc": "2408:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2408:22:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2398:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2398:2:14"
																		},
																		"nativeSrc": "2398:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2398:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2391:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:14"
																},
																"nativeSrc": "2391:41:14",
																"nodeType": "YulFunctionCall",
																"src": "2391:41:14"
															},
															"nativeSrc": "2388:61:14",
															"nodeType": "YulIf",
															"src": "2388:61:14"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "2337:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2371:5:14",
														"nodeType": "YulTypedName",
														"src": "2371:5:14",
														"type": ""
													}
												],
												"src": "2337:118:14"
											},
											{
												"body": {
													"nativeSrc": "2511:85:14",
													"nodeType": "YulBlock",
													"src": "2511:85:14",
													"statements": [
														{
															"nativeSrc": "2521:29:14",
															"nodeType": "YulAssignment",
															"src": "2521:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2543:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2543:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2530:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2530:12:14"
																},
																"nativeSrc": "2530:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2530:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2584:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2584:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "2559:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "2559:24:14"
																},
																"nativeSrc": "2559:31:14",
																"nodeType": "YulFunctionCall",
																"src": "2559:31:14"
															},
															"nativeSrc": "2559:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "2559:31:14"
														}
													]
												},
												"name": "abi_decode_t_int24",
												"nativeSrc": "2461:135:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2489:6:14",
														"nodeType": "YulTypedName",
														"src": "2489:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2497:3:14",
														"nodeType": "YulTypedName",
														"src": "2497:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2505:5:14",
														"nodeType": "YulTypedName",
														"src": "2505:5:14",
														"type": ""
													}
												],
												"src": "2461:135:14"
											},
											{
												"body": {
													"nativeSrc": "2645:79:14",
													"nodeType": "YulBlock",
													"src": "2645:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2702:16:14",
																"nodeType": "YulBlock",
																"src": "2702:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2711:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2711:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2714:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2714:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2704:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2704:6:14"
																			},
																			"nativeSrc": "2704:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2704:12:14"
																		},
																		"nativeSrc": "2704:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2704:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2668:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2668:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2693:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2693:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nativeSrc": "2675:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2675:17:14"
																				},
																				"nativeSrc": "2675:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2675:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2665:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2665:2:14"
																		},
																		"nativeSrc": "2665:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2658:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:14"
																},
																"nativeSrc": "2658:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2658:43:14"
															},
															"nativeSrc": "2655:63:14",
															"nodeType": "YulIf",
															"src": "2655:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nativeSrc": "2602:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2638:5:14",
														"nodeType": "YulTypedName",
														"src": "2638:5:14",
														"type": ""
													}
												],
												"src": "2602:122:14"
											},
											{
												"body": {
													"nativeSrc": "2782:87:14",
													"nodeType": "YulBlock",
													"src": "2782:87:14",
													"statements": [
														{
															"nativeSrc": "2792:29:14",
															"nodeType": "YulAssignment",
															"src": "2792:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2814:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2801:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2801:12:14"
																},
																"nativeSrc": "2801:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2801:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2792:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2792:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2857:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2857:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nativeSrc": "2830:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2830:26:14"
																},
																"nativeSrc": "2830:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2830:33:14"
															},
															"nativeSrc": "2830:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2830:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint128",
												"nativeSrc": "2730:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2760:6:14",
														"nodeType": "YulTypedName",
														"src": "2760:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2768:3:14",
														"nodeType": "YulTypedName",
														"src": "2768:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2776:5:14",
														"nodeType": "YulTypedName",
														"src": "2776:5:14",
														"type": ""
													}
												],
												"src": "2730:139:14"
											},
											{
												"body": {
													"nativeSrc": "2964:28:14",
													"nodeType": "YulBlock",
													"src": "2964:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2981:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2981:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2984:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2984:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2974:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:14"
																},
																"nativeSrc": "2974:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2974:12:14"
															},
															"nativeSrc": "2974:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2974:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2875:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2875:117:14"
											},
											{
												"body": {
													"nativeSrc": "3087:28:14",
													"nodeType": "YulBlock",
													"src": "3087:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3104:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3104:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3107:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3107:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3097:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3097:6:14"
																},
																"nativeSrc": "3097:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3097:12:14"
															},
															"nativeSrc": "3097:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "3097:12:14"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2998:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2998:117:14"
											},
											{
												"body": {
													"nativeSrc": "3210:28:14",
													"nodeType": "YulBlock",
													"src": "3210:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3227:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3230:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3230:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3220:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:14"
																},
																"nativeSrc": "3220:12:14",
																"nodeType": "YulFunctionCall",
																"src": "3220:12:14"
															},
															"nativeSrc": "3220:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "3220:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "3121:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "3121:117:14"
											},
											{
												"body": {
													"nativeSrc": "3331:478:14",
													"nodeType": "YulBlock",
													"src": "3331:478:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3380:83:14",
																"nodeType": "YulBlock",
																"src": "3380:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3382:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3382:77:14"
																			},
																			"nativeSrc": "3382:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3382:79:14"
																		},
																		"nativeSrc": "3382:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3382:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3359:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3359:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3367:4:14",
																						"nodeType": "YulLiteral",
																						"src": "3367:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3355:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3355:3:14"
																				},
																				"nativeSrc": "3355:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3355:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3374:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "3374:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3351:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:14"
																		},
																		"nativeSrc": "3351:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3351:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3344:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:14"
																},
																"nativeSrc": "3344:35:14",
																"nodeType": "YulFunctionCall",
																"src": "3344:35:14"
															},
															"nativeSrc": "3341:122:14",
															"nodeType": "YulIf",
															"src": "3341:122:14"
														},
														{
															"nativeSrc": "3472:30:14",
															"nodeType": "YulAssignment",
															"src": "3472:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3495:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3495:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3482:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3482:12:14"
																},
																"nativeSrc": "3482:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3482:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3472:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3472:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3545:83:14",
																"nodeType": "YulBlock",
																"src": "3545:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "3547:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3547:77:14"
																			},
																			"nativeSrc": "3547:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:79:14"
																		},
																		"nativeSrc": "3547:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3517:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3517:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3525:18:14",
																		"nodeType": "YulLiteral",
																		"src": "3525:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3514:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3514:2:14"
																},
																"nativeSrc": "3514:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3514:30:14"
															},
															"nativeSrc": "3511:117:14",
															"nodeType": "YulIf",
															"src": "3511:117:14"
														},
														{
															"nativeSrc": "3637:29:14",
															"nodeType": "YulAssignment",
															"src": "3637:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3653:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3653:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3661:4:14",
																		"nodeType": "YulLiteral",
																		"src": "3661:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3649:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3649:3:14"
																},
																"nativeSrc": "3649:17:14",
																"nodeType": "YulFunctionCall",
																"src": "3649:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3637:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "3637:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3720:83:14",
																"nodeType": "YulBlock",
																"src": "3720:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3722:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3722:77:14"
																			},
																			"nativeSrc": "3722:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3722:79:14"
																		},
																		"nativeSrc": "3722:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3722:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3685:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "3685:8:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3699:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3699:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3707:4:14",
																						"nodeType": "YulLiteral",
																						"src": "3707:4:14",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3695:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3695:3:14"
																				},
																				"nativeSrc": "3695:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3695:17:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3681:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3681:3:14"
																		},
																		"nativeSrc": "3681:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:32:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3715:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3715:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3678:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3678:2:14"
																},
																"nativeSrc": "3678:41:14",
																"nodeType": "YulFunctionCall",
																"src": "3678:41:14"
															},
															"nativeSrc": "3675:128:14",
															"nodeType": "YulIf",
															"src": "3675:128:14"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "3257:552:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3298:6:14",
														"nodeType": "YulTypedName",
														"src": "3298:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3306:3:14",
														"nodeType": "YulTypedName",
														"src": "3306:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3314:8:14",
														"nodeType": "YulTypedName",
														"src": "3314:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3324:6:14",
														"nodeType": "YulTypedName",
														"src": "3324:6:14",
														"type": ""
													}
												],
												"src": "3257:552:14"
											},
											{
												"body": {
													"nativeSrc": "3964:952:14",
													"nodeType": "YulBlock",
													"src": "3964:952:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4011:83:14",
																"nodeType": "YulBlock",
																"src": "4011:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4013:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4013:77:14"
																			},
																			"nativeSrc": "4013:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4013:79:14"
																		},
																		"nativeSrc": "4013:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4013:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3985:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3985:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3994:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3994:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3981:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:14"
																		},
																		"nativeSrc": "3981:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3981:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4006:3:14",
																		"nodeType": "YulLiteral",
																		"src": "4006:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3977:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:14"
																},
																"nativeSrc": "3977:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3977:33:14"
															},
															"nativeSrc": "3974:120:14",
															"nodeType": "YulIf",
															"src": "3974:120:14"
														},
														{
															"nativeSrc": "4104:117:14",
															"nodeType": "YulBlock",
															"src": "4104:117:14",
															"statements": [
																{
																	"nativeSrc": "4119:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4119:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4133:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4133:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4123:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4123:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4148:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4148:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4183:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4183:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4194:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4194:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4179:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4179:3:14"
																				},
																				"nativeSrc": "4179:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4179:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4203:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4203:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4158:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4158:20:14"
																		},
																		"nativeSrc": "4158:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4148:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4148:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4231:116:14",
															"nodeType": "YulBlock",
															"src": "4231:116:14",
															"statements": [
																{
																	"nativeSrc": "4246:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4246:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4260:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4260:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4250:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4250:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4276:61:14",
																	"nodeType": "YulAssignment",
																	"src": "4276:61:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4309:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4309:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4320:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4320:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4305:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4305:3:14"
																				},
																				"nativeSrc": "4305:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4305:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4329:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4329:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "4286:18:14",
																			"nodeType": "YulIdentifier",
																			"src": "4286:18:14"
																		},
																		"nativeSrc": "4286:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:51:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4276:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4276:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4357:116:14",
															"nodeType": "YulBlock",
															"src": "4357:116:14",
															"statements": [
																{
																	"nativeSrc": "4372:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4372:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4386:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4376:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4376:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4402:61:14",
																	"nodeType": "YulAssignment",
																	"src": "4402:61:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4435:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4435:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4446:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4446:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4431:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4431:3:14"
																				},
																				"nativeSrc": "4431:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4431:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4455:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4455:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "4412:18:14",
																			"nodeType": "YulIdentifier",
																			"src": "4412:18:14"
																		},
																		"nativeSrc": "4412:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4412:51:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4402:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4402:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4483:118:14",
															"nodeType": "YulBlock",
															"src": "4483:118:14",
															"statements": [
																{
																	"nativeSrc": "4498:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4498:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4512:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4512:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4502:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4502:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4528:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4528:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4563:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4563:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4574:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4574:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4559:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4559:3:14"
																				},
																				"nativeSrc": "4559:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4559:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4583:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4583:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nativeSrc": "4538:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4538:20:14"
																		},
																		"nativeSrc": "4538:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4538:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4528:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4528:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4611:298:14",
															"nodeType": "YulBlock",
															"src": "4611:298:14",
															"statements": [
																{
																	"nativeSrc": "4626:47:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4626:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4657:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4657:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4668:3:14",
																						"nodeType": "YulLiteral",
																						"src": "4668:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4653:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4653:3:14"
																				},
																				"nativeSrc": "4653:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4653:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4640:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "4640:12:14"
																		},
																		"nativeSrc": "4640:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4640:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4630:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4630:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4720:83:14",
																		"nodeType": "YulBlock",
																		"src": "4720:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4722:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "4722:77:14"
																					},
																					"nativeSrc": "4722:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "4722:79:14"
																				},
																				"nativeSrc": "4722:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "4722:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4692:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4692:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4700:18:14",
																				"nodeType": "YulLiteral",
																				"src": "4700:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4689:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "4689:2:14"
																		},
																		"nativeSrc": "4689:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4689:30:14"
																	},
																	"nativeSrc": "4686:117:14",
																	"nodeType": "YulIf",
																	"src": "4686:117:14"
																},
																{
																	"nativeSrc": "4817:82:14",
																	"nodeType": "YulAssignment",
																	"src": "4817:82:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4871:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4871:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4882:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4882:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4867:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4867:3:14"
																				},
																				"nativeSrc": "4867:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4867:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4891:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4891:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "4835:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "4835:31:14"
																		},
																		"nativeSrc": "4835:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4835:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4817:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4817:6:14"
																		},
																		{
																			"name": "value5",
																			"nativeSrc": "4825:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4825:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr",
												"nativeSrc": "3815:1101:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3894:9:14",
														"nodeType": "YulTypedName",
														"src": "3894:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3905:7:14",
														"nodeType": "YulTypedName",
														"src": "3905:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3917:6:14",
														"nodeType": "YulTypedName",
														"src": "3917:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3925:6:14",
														"nodeType": "YulTypedName",
														"src": "3925:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3933:6:14",
														"nodeType": "YulTypedName",
														"src": "3933:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3941:6:14",
														"nodeType": "YulTypedName",
														"src": "3941:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3949:6:14",
														"nodeType": "YulTypedName",
														"src": "3949:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3957:6:14",
														"nodeType": "YulTypedName",
														"src": "3957:6:14",
														"type": ""
													}
												],
												"src": "3815:1101:14"
											},
											{
												"body": {
													"nativeSrc": "4967:32:14",
													"nodeType": "YulBlock",
													"src": "4967:32:14",
													"statements": [
														{
															"nativeSrc": "4977:16:14",
															"nodeType": "YulAssignment",
															"src": "4977:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "4988:5:14",
																"nodeType": "YulIdentifier",
																"src": "4988:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4977:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "4977:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4922:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4949:5:14",
														"nodeType": "YulTypedName",
														"src": "4949:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4959:7:14",
														"nodeType": "YulTypedName",
														"src": "4959:7:14",
														"type": ""
													}
												],
												"src": "4922:77:14"
											},
											{
												"body": {
													"nativeSrc": "5070:53:14",
													"nodeType": "YulBlock",
													"src": "5070:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5087:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5087:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5110:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5110:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5092:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "5092:17:14"
																		},
																		"nativeSrc": "5092:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5092:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5080:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5080:6:14"
																},
																"nativeSrc": "5080:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5080:37:14"
															},
															"nativeSrc": "5080:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "5080:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5005:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5058:5:14",
														"nodeType": "YulTypedName",
														"src": "5058:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5065:3:14",
														"nodeType": "YulTypedName",
														"src": "5065:3:14",
														"type": ""
													}
												],
												"src": "5005:118:14"
											},
											{
												"body": {
													"nativeSrc": "5255:206:14",
													"nodeType": "YulBlock",
													"src": "5255:206:14",
													"statements": [
														{
															"nativeSrc": "5265:26:14",
															"nodeType": "YulAssignment",
															"src": "5265:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5277:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5288:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5288:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5273:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:14"
																},
																"nativeSrc": "5273:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5273:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5265:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5265:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5345:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5345:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5358:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5358:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5369:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5369:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5354:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:14"
																		},
																		"nativeSrc": "5354:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5354:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5301:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "5301:43:14"
																},
																"nativeSrc": "5301:71:14",
																"nodeType": "YulFunctionCall",
																"src": "5301:71:14"
															},
															"nativeSrc": "5301:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "5301:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5426:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5426:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5439:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5450:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5450:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5435:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:14"
																		},
																		"nativeSrc": "5435:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5435:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5382:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "5382:43:14"
																},
																"nativeSrc": "5382:72:14",
																"nodeType": "YulFunctionCall",
																"src": "5382:72:14"
															},
															"nativeSrc": "5382:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "5382:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5129:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5219:9:14",
														"nodeType": "YulTypedName",
														"src": "5219:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5231:6:14",
														"nodeType": "YulTypedName",
														"src": "5231:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5239:6:14",
														"nodeType": "YulTypedName",
														"src": "5239:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5250:4:14",
														"nodeType": "YulTypedName",
														"src": "5250:4:14",
														"type": ""
													}
												],
												"src": "5129:332:14"
											},
											{
												"body": {
													"nativeSrc": "5512:32:14",
													"nodeType": "YulBlock",
													"src": "5512:32:14",
													"statements": [
														{
															"nativeSrc": "5522:16:14",
															"nodeType": "YulAssignment",
															"src": "5522:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "5533:5:14",
																"nodeType": "YulIdentifier",
																"src": "5533:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5522:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5522:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5467:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5494:5:14",
														"nodeType": "YulTypedName",
														"src": "5494:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5504:7:14",
														"nodeType": "YulTypedName",
														"src": "5504:7:14",
														"type": ""
													}
												],
												"src": "5467:77:14"
											},
											{
												"body": {
													"nativeSrc": "5593:79:14",
													"nodeType": "YulBlock",
													"src": "5593:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5650:16:14",
																"nodeType": "YulBlock",
																"src": "5650:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5659:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5659:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5662:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5662:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5652:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5652:6:14"
																			},
																			"nativeSrc": "5652:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5652:12:14"
																		},
																		"nativeSrc": "5652:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5652:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5616:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5616:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5641:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5641:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5623:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "5623:17:14"
																				},
																				"nativeSrc": "5623:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5623:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5613:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5613:2:14"
																		},
																		"nativeSrc": "5613:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5613:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5606:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:14"
																},
																"nativeSrc": "5606:43:14",
																"nodeType": "YulFunctionCall",
																"src": "5606:43:14"
															},
															"nativeSrc": "5603:63:14",
															"nodeType": "YulIf",
															"src": "5603:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5550:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5586:5:14",
														"nodeType": "YulTypedName",
														"src": "5586:5:14",
														"type": ""
													}
												],
												"src": "5550:122:14"
											},
											{
												"body": {
													"nativeSrc": "5730:87:14",
													"nodeType": "YulBlock",
													"src": "5730:87:14",
													"statements": [
														{
															"nativeSrc": "5740:29:14",
															"nodeType": "YulAssignment",
															"src": "5740:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5762:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5749:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5749:12:14"
																},
																"nativeSrc": "5749:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5749:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5740:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5740:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5805:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5805:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5778:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "5778:26:14"
																},
																"nativeSrc": "5778:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5778:33:14"
															},
															"nativeSrc": "5778:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "5778:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5678:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5708:6:14",
														"nodeType": "YulTypedName",
														"src": "5708:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5716:3:14",
														"nodeType": "YulTypedName",
														"src": "5716:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5724:5:14",
														"nodeType": "YulTypedName",
														"src": "5724:5:14",
														"type": ""
													}
												],
												"src": "5678:139:14"
											},
											{
												"body": {
													"nativeSrc": "5889:263:14",
													"nodeType": "YulBlock",
													"src": "5889:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5935:83:14",
																"nodeType": "YulBlock",
																"src": "5935:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5937:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "5937:77:14"
																			},
																			"nativeSrc": "5937:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5937:79:14"
																		},
																		"nativeSrc": "5937:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5937:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5910:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5910:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5919:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5919:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5906:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:14"
																		},
																		"nativeSrc": "5906:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5906:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5931:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5902:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5902:3:14"
																},
																"nativeSrc": "5902:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5902:32:14"
															},
															"nativeSrc": "5899:119:14",
															"nodeType": "YulIf",
															"src": "5899:119:14"
														},
														{
															"nativeSrc": "6028:117:14",
															"nodeType": "YulBlock",
															"src": "6028:117:14",
															"statements": [
																{
																	"nativeSrc": "6043:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6043:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6057:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6057:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6047:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6047:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6072:63:14",
																	"nodeType": "YulAssignment",
																	"src": "6072:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6107:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6107:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6118:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6118:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6103:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6103:3:14"
																				},
																				"nativeSrc": "6103:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6103:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6127:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6127:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6082:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "6082:20:14"
																		},
																		"nativeSrc": "6082:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6072:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6072:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5823:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5859:9:14",
														"nodeType": "YulTypedName",
														"src": "5859:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5870:7:14",
														"nodeType": "YulTypedName",
														"src": "5870:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5882:6:14",
														"nodeType": "YulTypedName",
														"src": "5882:6:14",
														"type": ""
													}
												],
												"src": "5823:329:14"
											},
											{
												"body": {
													"nativeSrc": "6201:47:14",
													"nodeType": "YulBlock",
													"src": "6201:47:14",
													"statements": [
														{
															"nativeSrc": "6211:31:14",
															"nodeType": "YulAssignment",
															"src": "6211:31:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6233:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6233:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6236:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6236:5:14"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "6222:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "6222:10:14"
																},
																"nativeSrc": "6222:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6222:20:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6211:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "6211:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int16",
												"nativeSrc": "6158:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6183:5:14",
														"nodeType": "YulTypedName",
														"src": "6183:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6193:7:14",
														"nodeType": "YulTypedName",
														"src": "6193:7:14",
														"type": ""
													}
												],
												"src": "6158:90:14"
											},
											{
												"body": {
													"nativeSrc": "6295:77:14",
													"nodeType": "YulBlock",
													"src": "6295:77:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6350:16:14",
																"nodeType": "YulBlock",
																"src": "6350:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6359:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6359:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6362:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6362:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6352:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6352:6:14"
																			},
																			"nativeSrc": "6352:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6352:12:14"
																		},
																		"nativeSrc": "6352:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6352:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6318:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6318:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6341:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "6341:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int16",
																					"nativeSrc": "6325:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "6325:15:14"
																				},
																				"nativeSrc": "6325:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6325:22:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6315:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6315:2:14"
																		},
																		"nativeSrc": "6315:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6308:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6308:6:14"
																},
																"nativeSrc": "6308:41:14",
																"nodeType": "YulFunctionCall",
																"src": "6308:41:14"
															},
															"nativeSrc": "6305:61:14",
															"nodeType": "YulIf",
															"src": "6305:61:14"
														}
													]
												},
												"name": "validator_revert_t_int16",
												"nativeSrc": "6254:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6288:5:14",
														"nodeType": "YulTypedName",
														"src": "6288:5:14",
														"type": ""
													}
												],
												"src": "6254:118:14"
											},
											{
												"body": {
													"nativeSrc": "6428:85:14",
													"nodeType": "YulBlock",
													"src": "6428:85:14",
													"statements": [
														{
															"nativeSrc": "6438:29:14",
															"nodeType": "YulAssignment",
															"src": "6438:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6460:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6460:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6447:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6447:12:14"
																},
																"nativeSrc": "6447:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6447:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6438:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6438:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6501:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6501:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int16",
																	"nativeSrc": "6476:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "6476:24:14"
																},
																"nativeSrc": "6476:31:14",
																"nodeType": "YulFunctionCall",
																"src": "6476:31:14"
															},
															"nativeSrc": "6476:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "6476:31:14"
														}
													]
												},
												"name": "abi_decode_t_int16",
												"nativeSrc": "6378:135:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6406:6:14",
														"nodeType": "YulTypedName",
														"src": "6406:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6414:3:14",
														"nodeType": "YulTypedName",
														"src": "6414:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6422:5:14",
														"nodeType": "YulTypedName",
														"src": "6422:5:14",
														"type": ""
													}
												],
												"src": "6378:135:14"
											},
											{
												"body": {
													"nativeSrc": "6583:261:14",
													"nodeType": "YulBlock",
													"src": "6583:261:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6629:83:14",
																"nodeType": "YulBlock",
																"src": "6629:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6631:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6631:77:14"
																			},
																			"nativeSrc": "6631:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6631:79:14"
																		},
																		"nativeSrc": "6631:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6604:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6604:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6613:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6613:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6600:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:14"
																		},
																		"nativeSrc": "6600:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6625:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6596:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:14"
																},
																"nativeSrc": "6596:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6596:32:14"
															},
															"nativeSrc": "6593:119:14",
															"nodeType": "YulIf",
															"src": "6593:119:14"
														},
														{
															"nativeSrc": "6722:115:14",
															"nodeType": "YulBlock",
															"src": "6722:115:14",
															"statements": [
																{
																	"nativeSrc": "6737:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6737:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6751:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6751:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6741:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6741:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6766:61:14",
																	"nodeType": "YulAssignment",
																	"src": "6766:61:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6799:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6799:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6810:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6810:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6795:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6795:3:14"
																				},
																				"nativeSrc": "6795:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6795:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6819:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6819:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int16",
																			"nativeSrc": "6776:18:14",
																			"nodeType": "YulIdentifier",
																			"src": "6776:18:14"
																		},
																		"nativeSrc": "6776:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6776:51:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6766:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6766:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int16",
												"nativeSrc": "6519:325:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6553:9:14",
														"nodeType": "YulTypedName",
														"src": "6553:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6564:7:14",
														"nodeType": "YulTypedName",
														"src": "6564:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6576:6:14",
														"nodeType": "YulTypedName",
														"src": "6576:6:14",
														"type": ""
													}
												],
												"src": "6519:325:14"
											},
											{
												"body": {
													"nativeSrc": "6948:124:14",
													"nodeType": "YulBlock",
													"src": "6948:124:14",
													"statements": [
														{
															"nativeSrc": "6958:26:14",
															"nodeType": "YulAssignment",
															"src": "6958:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6970:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6970:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6981:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6981:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6966:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6966:3:14"
																},
																"nativeSrc": "6966:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6966:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6958:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6958:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7038:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7038:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7051:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7051:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7062:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7062:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7047:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:14"
																		},
																		"nativeSrc": "7047:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7047:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6994:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6994:43:14"
																},
																"nativeSrc": "6994:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6994:71:14"
															},
															"nativeSrc": "6994:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "6994:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6850:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6920:9:14",
														"nodeType": "YulTypedName",
														"src": "6920:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6932:6:14",
														"nodeType": "YulTypedName",
														"src": "6932:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6943:4:14",
														"nodeType": "YulTypedName",
														"src": "6943:4:14",
														"type": ""
													}
												],
												"src": "6850:222:14"
											},
											{
												"body": {
													"nativeSrc": "7120:48:14",
													"nodeType": "YulBlock",
													"src": "7120:48:14",
													"statements": [
														{
															"nativeSrc": "7130:32:14",
															"nodeType": "YulAssignment",
															"src": "7130:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7155:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7155:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7148:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7148:6:14"
																		},
																		"nativeSrc": "7148:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7148:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7141:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7141:6:14"
																},
																"nativeSrc": "7141:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7141:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7130:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "7130:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7078:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7102:5:14",
														"nodeType": "YulTypedName",
														"src": "7102:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7112:7:14",
														"nodeType": "YulTypedName",
														"src": "7112:7:14",
														"type": ""
													}
												],
												"src": "7078:90:14"
											},
											{
												"body": {
													"nativeSrc": "7214:76:14",
													"nodeType": "YulBlock",
													"src": "7214:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7268:16:14",
																"nodeType": "YulBlock",
																"src": "7268:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7277:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7277:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7280:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7280:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7270:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7270:6:14"
																			},
																			"nativeSrc": "7270:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7270:12:14"
																		},
																		"nativeSrc": "7270:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7270:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7237:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7237:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7259:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7259:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7244:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "7244:14:14"
																				},
																				"nativeSrc": "7244:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7244:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7234:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7234:2:14"
																		},
																		"nativeSrc": "7234:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7234:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7227:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7227:6:14"
																},
																"nativeSrc": "7227:40:14",
																"nodeType": "YulFunctionCall",
																"src": "7227:40:14"
															},
															"nativeSrc": "7224:60:14",
															"nodeType": "YulIf",
															"src": "7224:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7174:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7207:5:14",
														"nodeType": "YulTypedName",
														"src": "7207:5:14",
														"type": ""
													}
												],
												"src": "7174:116:14"
											},
											{
												"body": {
													"nativeSrc": "7345:84:14",
													"nodeType": "YulBlock",
													"src": "7345:84:14",
													"statements": [
														{
															"nativeSrc": "7355:29:14",
															"nodeType": "YulAssignment",
															"src": "7355:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7377:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7377:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7364:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7364:12:14"
																},
																"nativeSrc": "7364:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7364:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7355:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7355:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7417:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7417:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7393:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "7393:23:14"
																},
																"nativeSrc": "7393:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7393:30:14"
															},
															"nativeSrc": "7393:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7393:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7296:133:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7323:6:14",
														"nodeType": "YulTypedName",
														"src": "7323:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7331:3:14",
														"nodeType": "YulTypedName",
														"src": "7331:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7339:5:14",
														"nodeType": "YulTypedName",
														"src": "7339:5:14",
														"type": ""
													}
												],
												"src": "7296:133:14"
											},
											{
												"body": {
													"nativeSrc": "7478:79:14",
													"nodeType": "YulBlock",
													"src": "7478:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7535:16:14",
																"nodeType": "YulBlock",
																"src": "7535:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7544:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7544:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7547:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7547:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7537:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7537:6:14"
																			},
																			"nativeSrc": "7537:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7537:12:14"
																		},
																		"nativeSrc": "7537:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7537:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7501:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7501:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7526:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7526:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7508:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "7508:17:14"
																				},
																				"nativeSrc": "7508:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7508:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7498:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7498:2:14"
																		},
																		"nativeSrc": "7498:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7498:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7491:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7491:6:14"
																},
																"nativeSrc": "7491:43:14",
																"nodeType": "YulFunctionCall",
																"src": "7491:43:14"
															},
															"nativeSrc": "7488:63:14",
															"nodeType": "YulIf",
															"src": "7488:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7435:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7471:5:14",
														"nodeType": "YulTypedName",
														"src": "7471:5:14",
														"type": ""
													}
												],
												"src": "7435:122:14"
											},
											{
												"body": {
													"nativeSrc": "7615:87:14",
													"nodeType": "YulBlock",
													"src": "7615:87:14",
													"statements": [
														{
															"nativeSrc": "7625:29:14",
															"nodeType": "YulAssignment",
															"src": "7625:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7647:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7647:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7634:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7634:12:14"
																},
																"nativeSrc": "7634:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7634:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7625:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7625:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7690:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7690:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7663:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "7663:26:14"
																},
																"nativeSrc": "7663:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7663:33:14"
															},
															"nativeSrc": "7663:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "7663:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "7563:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7593:6:14",
														"nodeType": "YulTypedName",
														"src": "7593:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7601:3:14",
														"nodeType": "YulTypedName",
														"src": "7601:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7609:5:14",
														"nodeType": "YulTypedName",
														"src": "7609:5:14",
														"type": ""
													}
												],
												"src": "7563:139:14"
											},
											{
												"body": {
													"nativeSrc": "7841:824:14",
													"nodeType": "YulBlock",
													"src": "7841:824:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7888:83:14",
																"nodeType": "YulBlock",
																"src": "7888:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7890:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7890:77:14"
																			},
																			"nativeSrc": "7890:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7890:79:14"
																		},
																		"nativeSrc": "7890:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7890:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7862:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7862:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7871:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7871:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7858:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7858:3:14"
																		},
																		"nativeSrc": "7858:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7858:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7883:3:14",
																		"nodeType": "YulLiteral",
																		"src": "7883:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7854:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7854:3:14"
																},
																"nativeSrc": "7854:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7854:33:14"
															},
															"nativeSrc": "7851:120:14",
															"nodeType": "YulIf",
															"src": "7851:120:14"
														},
														{
															"nativeSrc": "7981:117:14",
															"nodeType": "YulBlock",
															"src": "7981:117:14",
															"statements": [
																{
																	"nativeSrc": "7996:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7996:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8010:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8010:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8000:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8000:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8025:63:14",
																	"nodeType": "YulAssignment",
																	"src": "8025:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8060:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8060:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8071:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8071:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8056:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8056:3:14"
																				},
																				"nativeSrc": "8056:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8056:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8080:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8080:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8035:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "8035:20:14"
																		},
																		"nativeSrc": "8035:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8035:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8025:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8025:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8108:115:14",
															"nodeType": "YulBlock",
															"src": "8108:115:14",
															"statements": [
																{
																	"nativeSrc": "8123:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8123:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8137:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8137:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8127:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8127:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8153:60:14",
																	"nodeType": "YulAssignment",
																	"src": "8153:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8185:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8185:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8196:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8196:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8181:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8181:3:14"
																				},
																				"nativeSrc": "8181:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8181:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8205:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8205:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8163:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "8163:17:14"
																		},
																		"nativeSrc": "8163:50:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8163:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8153:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8153:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8233:118:14",
															"nodeType": "YulBlock",
															"src": "8233:118:14",
															"statements": [
																{
																	"nativeSrc": "8248:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8248:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8262:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8262:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8252:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8252:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8278:63:14",
																	"nodeType": "YulAssignment",
																	"src": "8278:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8313:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8313:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8324:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8324:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8309:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8309:3:14"
																				},
																				"nativeSrc": "8309:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8309:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8333:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8333:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8288:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "8288:20:14"
																		},
																		"nativeSrc": "8288:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8288:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8278:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8278:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8361:297:14",
															"nodeType": "YulBlock",
															"src": "8361:297:14",
															"statements": [
																{
																	"nativeSrc": "8376:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8376:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8407:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8407:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8418:2:14",
																						"nodeType": "YulLiteral",
																						"src": "8418:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8403:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8403:3:14"
																				},
																				"nativeSrc": "8403:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8403:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8390:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "8390:12:14"
																		},
																		"nativeSrc": "8390:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8380:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8380:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8469:83:14",
																		"nodeType": "YulBlock",
																		"src": "8469:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8471:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "8471:77:14"
																					},
																					"nativeSrc": "8471:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8471:79:14"
																				},
																				"nativeSrc": "8471:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8471:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8441:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8441:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8449:18:14",
																				"nodeType": "YulLiteral",
																				"src": "8449:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8438:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8438:2:14"
																		},
																		"nativeSrc": "8438:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8438:30:14"
																	},
																	"nativeSrc": "8435:117:14",
																	"nodeType": "YulIf",
																	"src": "8435:117:14"
																},
																{
																	"nativeSrc": "8566:82:14",
																	"nodeType": "YulAssignment",
																	"src": "8566:82:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8620:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8620:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8631:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8631:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8616:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8616:3:14"
																				},
																				"nativeSrc": "8616:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8616:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8640:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8640:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "8584:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "8584:31:14"
																		},
																		"nativeSrc": "8584:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8584:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8566:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8566:6:14"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "8574:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8574:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_boolt_uint256t_bytes_calldata_ptr",
												"nativeSrc": "7708:957:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7779:9:14",
														"nodeType": "YulTypedName",
														"src": "7779:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7790:7:14",
														"nodeType": "YulTypedName",
														"src": "7790:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7802:6:14",
														"nodeType": "YulTypedName",
														"src": "7802:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7810:6:14",
														"nodeType": "YulTypedName",
														"src": "7810:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7818:6:14",
														"nodeType": "YulTypedName",
														"src": "7818:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7826:6:14",
														"nodeType": "YulTypedName",
														"src": "7826:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7834:6:14",
														"nodeType": "YulTypedName",
														"src": "7834:6:14",
														"type": ""
													}
												],
												"src": "7708:957:14"
											},
											{
												"body": {
													"nativeSrc": "8715:32:14",
													"nodeType": "YulBlock",
													"src": "8715:32:14",
													"statements": [
														{
															"nativeSrc": "8725:16:14",
															"nodeType": "YulAssignment",
															"src": "8725:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "8736:5:14",
																"nodeType": "YulIdentifier",
																"src": "8736:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8725:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "8725:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "8671:76:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8697:5:14",
														"nodeType": "YulTypedName",
														"src": "8697:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8707:7:14",
														"nodeType": "YulTypedName",
														"src": "8707:7:14",
														"type": ""
													}
												],
												"src": "8671:76:14"
											},
											{
												"body": {
													"nativeSrc": "8816:52:14",
													"nodeType": "YulBlock",
													"src": "8816:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8833:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8833:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8855:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8855:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "8838:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "8838:16:14"
																		},
																		"nativeSrc": "8838:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8838:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8826:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8826:6:14"
																},
																"nativeSrc": "8826:36:14",
																"nodeType": "YulFunctionCall",
																"src": "8826:36:14"
															},
															"nativeSrc": "8826:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "8826:36:14"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "8753:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8804:5:14",
														"nodeType": "YulTypedName",
														"src": "8804:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8811:3:14",
														"nodeType": "YulTypedName",
														"src": "8811:3:14",
														"type": ""
													}
												],
												"src": "8753:115:14"
											},
											{
												"body": {
													"nativeSrc": "8996:202:14",
													"nodeType": "YulBlock",
													"src": "8996:202:14",
													"statements": [
														{
															"nativeSrc": "9006:26:14",
															"nodeType": "YulAssignment",
															"src": "9006:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9018:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9018:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9029:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9014:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9014:3:14"
																},
																"nativeSrc": "9014:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9014:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9006:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9006:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9084:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9084:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9097:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9097:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9108:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9108:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9093:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9093:3:14"
																		},
																		"nativeSrc": "9093:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9093:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "9042:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "9042:41:14"
																},
																"nativeSrc": "9042:69:14",
																"nodeType": "YulFunctionCall",
																"src": "9042:69:14"
															},
															"nativeSrc": "9042:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "9042:69:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9163:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9163:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9176:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9176:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9187:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9187:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9172:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9172:3:14"
																		},
																		"nativeSrc": "9172:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9172:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "9121:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "9121:41:14"
																},
																"nativeSrc": "9121:70:14",
																"nodeType": "YulFunctionCall",
																"src": "9121:70:14"
															},
															"nativeSrc": "9121:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "9121:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed",
												"nativeSrc": "8874:324:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8960:9:14",
														"nodeType": "YulTypedName",
														"src": "8960:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8972:6:14",
														"nodeType": "YulTypedName",
														"src": "8972:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8980:6:14",
														"nodeType": "YulTypedName",
														"src": "8980:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8991:4:14",
														"nodeType": "YulTypedName",
														"src": "8991:4:14",
														"type": ""
													}
												],
												"src": "8874:324:14"
											},
											{
												"body": {
													"nativeSrc": "9268:261:14",
													"nodeType": "YulBlock",
													"src": "9268:261:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9314:83:14",
																"nodeType": "YulBlock",
																"src": "9314:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9316:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9316:77:14"
																			},
																			"nativeSrc": "9316:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9316:79:14"
																		},
																		"nativeSrc": "9316:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9316:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9289:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9289:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9298:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9298:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9285:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9285:3:14"
																		},
																		"nativeSrc": "9285:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9285:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9310:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9310:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9281:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9281:3:14"
																},
																"nativeSrc": "9281:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9281:32:14"
															},
															"nativeSrc": "9278:119:14",
															"nodeType": "YulIf",
															"src": "9278:119:14"
														},
														{
															"nativeSrc": "9407:115:14",
															"nodeType": "YulBlock",
															"src": "9407:115:14",
															"statements": [
																{
																	"nativeSrc": "9422:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9422:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9436:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9436:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9426:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9426:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9451:61:14",
																	"nodeType": "YulAssignment",
																	"src": "9451:61:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9484:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9484:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9495:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9495:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9480:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9480:3:14"
																				},
																				"nativeSrc": "9480:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9480:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9504:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9504:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "9461:18:14",
																			"nodeType": "YulIdentifier",
																			"src": "9461:18:14"
																		},
																		"nativeSrc": "9461:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9461:51:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9451:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9451:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int24",
												"nativeSrc": "9204:325:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9238:9:14",
														"nodeType": "YulTypedName",
														"src": "9238:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9249:7:14",
														"nodeType": "YulTypedName",
														"src": "9249:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9261:6:14",
														"nodeType": "YulTypedName",
														"src": "9261:6:14",
														"type": ""
													}
												],
												"src": "9204:325:14"
											},
											{
												"body": {
													"nativeSrc": "9594:50:14",
													"nodeType": "YulBlock",
													"src": "9594:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9611:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9611:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9631:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9631:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "9616:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "9616:14:14"
																		},
																		"nativeSrc": "9616:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9616:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9604:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9604:6:14"
																},
																"nativeSrc": "9604:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9604:34:14"
															},
															"nativeSrc": "9604:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9604:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "9535:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9582:5:14",
														"nodeType": "YulTypedName",
														"src": "9582:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9589:3:14",
														"nodeType": "YulTypedName",
														"src": "9589:3:14",
														"type": ""
													}
												],
												"src": "9535:109:14"
											},
											{
												"body": {
													"nativeSrc": "9770:200:14",
													"nodeType": "YulBlock",
													"src": "9770:200:14",
													"statements": [
														{
															"nativeSrc": "9780:26:14",
															"nodeType": "YulAssignment",
															"src": "9780:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9792:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9792:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9803:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9803:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9788:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9788:3:14"
																},
																"nativeSrc": "9788:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9788:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9780:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9780:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9854:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9854:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9867:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9867:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9878:1:14",
																				"nodeType": "YulLiteral",
																				"src": "9878:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9863:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9863:3:14"
																		},
																		"nativeSrc": "9863:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9863:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9816:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "9816:37:14"
																},
																"nativeSrc": "9816:65:14",
																"nodeType": "YulFunctionCall",
																"src": "9816:65:14"
															},
															"nativeSrc": "9816:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "9816:65:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9935:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9935:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9948:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9948:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9959:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9959:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9944:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9944:3:14"
																		},
																		"nativeSrc": "9944:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9944:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "9891:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "9891:43:14"
																},
																"nativeSrc": "9891:72:14",
																"nodeType": "YulFunctionCall",
																"src": "9891:72:14"
															},
															"nativeSrc": "9891:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "9891:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed",
												"nativeSrc": "9650:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9734:9:14",
														"nodeType": "YulTypedName",
														"src": "9734:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9746:6:14",
														"nodeType": "YulTypedName",
														"src": "9746:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9754:6:14",
														"nodeType": "YulTypedName",
														"src": "9754:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9765:4:14",
														"nodeType": "YulTypedName",
														"src": "9765:4:14",
														"type": ""
													}
												],
												"src": "9650:320:14"
											},
											{
												"body": {
													"nativeSrc": "10004:152:14",
													"nodeType": "YulBlock",
													"src": "10004:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10021:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10021:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10024:77:14",
																		"nodeType": "YulLiteral",
																		"src": "10024:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10014:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10014:6:14"
																},
																"nativeSrc": "10014:88:14",
																"nodeType": "YulFunctionCall",
																"src": "10014:88:14"
															},
															"nativeSrc": "10014:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "10014:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10118:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10118:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10121:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10121:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10111:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10111:6:14"
																},
																"nativeSrc": "10111:15:14",
																"nodeType": "YulFunctionCall",
																"src": "10111:15:14"
															},
															"nativeSrc": "10111:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "10111:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10142:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10142:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10145:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10145:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10135:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10135:6:14"
																},
																"nativeSrc": "10135:15:14",
																"nodeType": "YulFunctionCall",
																"src": "10135:15:14"
															},
															"nativeSrc": "10135:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "10135:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9976:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "9976:180:14"
											},
											{
												"body": {
													"nativeSrc": "10200:188:14",
													"nodeType": "YulBlock",
													"src": "10200:188:14",
													"statements": [
														{
															"nativeSrc": "10210:31:14",
															"nodeType": "YulAssignment",
															"src": "10210:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10235:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10235:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "10219:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "10219:15:14"
																},
																"nativeSrc": "10219:22:14",
																"nodeType": "YulFunctionCall",
																"src": "10219:22:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10210:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10210:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10331:22:14",
																"nodeType": "YulBlock",
																"src": "10331:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10333:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "10333:16:14"
																			},
																			"nativeSrc": "10333:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10333:18:14"
																		},
																		"nativeSrc": "10333:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10333:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10256:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10256:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10263:66:14",
																		"nodeType": "YulLiteral",
																		"src": "10263:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10253:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "10253:2:14"
																},
																"nativeSrc": "10253:77:14",
																"nodeType": "YulFunctionCall",
																"src": "10253:77:14"
															},
															"nativeSrc": "10250:103:14",
															"nodeType": "YulIf",
															"src": "10250:103:14"
														},
														{
															"nativeSrc": "10362:20:14",
															"nodeType": "YulAssignment",
															"src": "10362:20:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10373:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10373:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10376:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10376:5:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10369:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10369:3:14"
																},
																"nativeSrc": "10369:13:14",
																"nodeType": "YulFunctionCall",
																"src": "10369:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10362:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:14"
																}
															]
														}
													]
												},
												"name": "negate_t_int24",
												"nativeSrc": "10162:226:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10186:5:14",
														"nodeType": "YulTypedName",
														"src": "10186:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10196:3:14",
														"nodeType": "YulTypedName",
														"src": "10196:3:14",
														"type": ""
													}
												],
												"src": "10162:226:14"
											},
											{
												"body": {
													"nativeSrc": "10438:180:14",
													"nodeType": "YulBlock",
													"src": "10438:180:14",
													"statements": [
														{
															"nativeSrc": "10448:25:14",
															"nodeType": "YulAssignment",
															"src": "10448:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10471:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10471:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nativeSrc": "10453:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "10453:17:14"
																},
																"nativeSrc": "10453:20:14",
																"nodeType": "YulFunctionCall",
																"src": "10453:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10448:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "10448:1:14"
																}
															]
														},
														{
															"nativeSrc": "10482:25:14",
															"nodeType": "YulAssignment",
															"src": "10482:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10505:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10505:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nativeSrc": "10487:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "10487:17:14"
																},
																"nativeSrc": "10487:20:14",
																"nodeType": "YulFunctionCall",
																"src": "10487:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10482:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "10482:1:14"
																}
															]
														},
														{
															"nativeSrc": "10516:16:14",
															"nodeType": "YulAssignment",
															"src": "10516:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10527:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10527:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10530:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "10530:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10523:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:14"
																},
																"nativeSrc": "10523:9:14",
																"nodeType": "YulFunctionCall",
																"src": "10523:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10516:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10516:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10589:22:14",
																"nodeType": "YulBlock",
																"src": "10589:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10591:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "10591:16:14"
																			},
																			"nativeSrc": "10591:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10591:18:14"
																		},
																		"nativeSrc": "10591:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10591:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "10548:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10548:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10553:34:14",
																		"nodeType": "YulLiteral",
																		"src": "10553:34:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10545:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "10545:2:14"
																},
																"nativeSrc": "10545:43:14",
																"nodeType": "YulFunctionCall",
																"src": "10545:43:14"
															},
															"nativeSrc": "10542:69:14",
															"nodeType": "YulIf",
															"src": "10542:69:14"
														}
													]
												},
												"name": "checked_add_t_uint128",
												"nativeSrc": "10394:224:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10425:1:14",
														"nodeType": "YulTypedName",
														"src": "10425:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10428:1:14",
														"nodeType": "YulTypedName",
														"src": "10428:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10434:3:14",
														"nodeType": "YulTypedName",
														"src": "10434:3:14",
														"type": ""
													}
												],
												"src": "10394:224:14"
											},
											{
												"body": {
													"nativeSrc": "10719:73:14",
													"nodeType": "YulBlock",
													"src": "10719:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10736:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10736:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10741:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10741:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10729:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10729:6:14"
																},
																"nativeSrc": "10729:19:14",
																"nodeType": "YulFunctionCall",
																"src": "10729:19:14"
															},
															"nativeSrc": "10729:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "10729:19:14"
														},
														{
															"nativeSrc": "10757:29:14",
															"nodeType": "YulAssignment",
															"src": "10757:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10776:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10776:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10781:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10781:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10772:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10772:3:14"
																},
																"nativeSrc": "10772:14:14",
																"nodeType": "YulFunctionCall",
																"src": "10772:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10757:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "10757:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "10624:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10691:3:14",
														"nodeType": "YulTypedName",
														"src": "10691:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10696:6:14",
														"nodeType": "YulTypedName",
														"src": "10696:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10707:11:14",
														"nodeType": "YulTypedName",
														"src": "10707:11:14",
														"type": ""
													}
												],
												"src": "10624:168:14"
											},
											{
												"body": {
													"nativeSrc": "10862:84:14",
													"nodeType": "YulBlock",
													"src": "10862:84:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10886:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10886:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10891:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10891:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10896:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10896:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10873:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "10873:12:14"
																},
																"nativeSrc": "10873:30:14",
																"nodeType": "YulFunctionCall",
																"src": "10873:30:14"
															},
															"nativeSrc": "10873:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "10873:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10923:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10923:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10928:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10928:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10919:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10919:3:14"
																		},
																		"nativeSrc": "10919:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10919:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10937:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10937:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10912:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10912:6:14"
																},
																"nativeSrc": "10912:27:14",
																"nodeType": "YulFunctionCall",
																"src": "10912:27:14"
															},
															"nativeSrc": "10912:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "10912:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "10798:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10844:3:14",
														"nodeType": "YulTypedName",
														"src": "10844:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10849:3:14",
														"nodeType": "YulTypedName",
														"src": "10849:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10854:6:14",
														"nodeType": "YulTypedName",
														"src": "10854:6:14",
														"type": ""
													}
												],
												"src": "10798:148:14"
											},
											{
												"body": {
													"nativeSrc": "11000:54:14",
													"nodeType": "YulBlock",
													"src": "11000:54:14",
													"statements": [
														{
															"nativeSrc": "11010:38:14",
															"nodeType": "YulAssignment",
															"src": "11010:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11028:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "11028:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11035:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11035:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11024:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11024:3:14"
																		},
																		"nativeSrc": "11024:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11024:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11044:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11044:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11040:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11040:3:14"
																		},
																		"nativeSrc": "11040:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11040:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11020:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11020:3:14"
																},
																"nativeSrc": "11020:28:14",
																"nodeType": "YulFunctionCall",
																"src": "11020:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11010:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11010:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "10952:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10983:5:14",
														"nodeType": "YulTypedName",
														"src": "10983:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10993:6:14",
														"nodeType": "YulTypedName",
														"src": "10993:6:14",
														"type": ""
													}
												],
												"src": "10952:102:14"
											},
											{
												"body": {
													"nativeSrc": "11182:214:14",
													"nodeType": "YulBlock",
													"src": "11182:214:14",
													"statements": [
														{
															"nativeSrc": "11192:77:14",
															"nodeType": "YulAssignment",
															"src": "11192:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11257:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11257:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11262:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11262:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "11199:57:14",
																	"nodeType": "YulIdentifier",
																	"src": "11199:57:14"
																},
																"nativeSrc": "11199:70:14",
																"nodeType": "YulFunctionCall",
																"src": "11199:70:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11192:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11192:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "11316:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "11316:5:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11323:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11323:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11328:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11328:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11279:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "11279:36:14"
																},
																"nativeSrc": "11279:56:14",
																"nodeType": "YulFunctionCall",
																"src": "11279:56:14"
															},
															"nativeSrc": "11279:56:14",
															"nodeType": "YulExpressionStatement",
															"src": "11279:56:14"
														},
														{
															"nativeSrc": "11344:46:14",
															"nodeType": "YulAssignment",
															"src": "11344:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11355:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11355:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11382:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "11382:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "11360:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "11360:21:14"
																		},
																		"nativeSrc": "11360:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11360:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11351:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11351:3:14"
																},
																"nativeSrc": "11351:39:14",
																"nodeType": "YulFunctionCall",
																"src": "11351:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11344:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11344:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "11082:314:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "11155:5:14",
														"nodeType": "YulTypedName",
														"src": "11155:5:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11162:6:14",
														"nodeType": "YulTypedName",
														"src": "11162:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11170:3:14",
														"nodeType": "YulTypedName",
														"src": "11170:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11178:3:14",
														"nodeType": "YulTypedName",
														"src": "11178:3:14",
														"type": ""
													}
												],
												"src": "11082:314:14"
											},
											{
												"body": {
													"nativeSrc": "11584:367:14",
													"nodeType": "YulBlock",
													"src": "11584:367:14",
													"statements": [
														{
															"nativeSrc": "11594:26:14",
															"nodeType": "YulAssignment",
															"src": "11594:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11606:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11606:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11617:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11617:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11602:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11602:3:14"
																},
																"nativeSrc": "11602:18:14",
																"nodeType": "YulFunctionCall",
																"src": "11602:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11594:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11594:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11674:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11674:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11687:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11687:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11698:1:14",
																				"nodeType": "YulLiteral",
																				"src": "11698:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11683:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11683:3:14"
																		},
																		"nativeSrc": "11683:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11683:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11630:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "11630:43:14"
																},
																"nativeSrc": "11630:71:14",
																"nodeType": "YulFunctionCall",
																"src": "11630:71:14"
															},
															"nativeSrc": "11630:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "11630:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11755:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11755:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11768:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11768:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11779:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11779:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11764:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11764:3:14"
																		},
																		"nativeSrc": "11764:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11764:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11711:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "11711:43:14"
																},
																"nativeSrc": "11711:72:14",
																"nodeType": "YulFunctionCall",
																"src": "11711:72:14"
															},
															"nativeSrc": "11711:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "11711:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11804:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11804:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11815:2:14",
																				"nodeType": "YulLiteral",
																				"src": "11815:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11800:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11800:3:14"
																		},
																		"nativeSrc": "11800:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11800:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11824:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "11824:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11830:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11830:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11820:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11820:3:14"
																		},
																		"nativeSrc": "11820:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11820:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11793:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11793:6:14"
																},
																"nativeSrc": "11793:48:14",
																"nodeType": "YulFunctionCall",
																"src": "11793:48:14"
															},
															"nativeSrc": "11793:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "11793:48:14"
														},
														{
															"nativeSrc": "11850:94:14",
															"nodeType": "YulAssignment",
															"src": "11850:94:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11922:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11922:6:14"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11930:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11930:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11939:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "11939:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "11858:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "11858:63:14"
																},
																"nativeSrc": "11858:86:14",
																"nodeType": "YulFunctionCall",
																"src": "11858:86:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11850:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "11850:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "11402:549:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11532:9:14",
														"nodeType": "YulTypedName",
														"src": "11532:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11544:6:14",
														"nodeType": "YulTypedName",
														"src": "11544:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11552:6:14",
														"nodeType": "YulTypedName",
														"src": "11552:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11560:6:14",
														"nodeType": "YulTypedName",
														"src": "11560:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11568:6:14",
														"nodeType": "YulTypedName",
														"src": "11568:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11579:4:14",
														"nodeType": "YulTypedName",
														"src": "11579:4:14",
														"type": ""
													}
												],
												"src": "11402:549:14"
											},
											{
												"body": {
													"nativeSrc": "12001:147:14",
													"nodeType": "YulBlock",
													"src": "12001:147:14",
													"statements": [
														{
															"nativeSrc": "12011:25:14",
															"nodeType": "YulAssignment",
															"src": "12011:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12034:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12034:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12016:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12016:17:14"
																},
																"nativeSrc": "12016:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12016:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12011:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "12011:1:14"
																}
															]
														},
														{
															"nativeSrc": "12045:25:14",
															"nodeType": "YulAssignment",
															"src": "12045:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12068:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12068:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12050:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12050:17:14"
																},
																"nativeSrc": "12050:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12050:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12045:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "12045:1:14"
																}
															]
														},
														{
															"nativeSrc": "12079:16:14",
															"nodeType": "YulAssignment",
															"src": "12079:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12090:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12090:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12093:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12093:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12086:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12086:3:14"
																},
																"nativeSrc": "12086:9:14",
																"nodeType": "YulFunctionCall",
																"src": "12086:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12079:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12079:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12119:22:14",
																"nodeType": "YulBlock",
																"src": "12119:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12121:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12121:16:14"
																			},
																			"nativeSrc": "12121:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12121:18:14"
																		},
																		"nativeSrc": "12121:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12121:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12111:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12111:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12114:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12114:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12108:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12108:2:14"
																},
																"nativeSrc": "12108:10:14",
																"nodeType": "YulFunctionCall",
																"src": "12108:10:14"
															},
															"nativeSrc": "12105:36:14",
															"nodeType": "YulIf",
															"src": "12105:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11957:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11988:1:14",
														"nodeType": "YulTypedName",
														"src": "11988:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11991:1:14",
														"nodeType": "YulTypedName",
														"src": "11991:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11997:3:14",
														"nodeType": "YulTypedName",
														"src": "11997:3:14",
														"type": ""
													}
												],
												"src": "11957:191:14"
											},
											{
												"body": {
													"nativeSrc": "12336:371:14",
													"nodeType": "YulBlock",
													"src": "12336:371:14",
													"statements": [
														{
															"nativeSrc": "12346:27:14",
															"nodeType": "YulAssignment",
															"src": "12346:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12358:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "12358:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12369:3:14",
																		"nodeType": "YulLiteral",
																		"src": "12369:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12354:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12354:3:14"
																},
																"nativeSrc": "12354:19:14",
																"nodeType": "YulFunctionCall",
																"src": "12354:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12346:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12346:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12427:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12427:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12440:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12440:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12451:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12451:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12436:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12436:3:14"
																		},
																		"nativeSrc": "12436:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12436:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12383:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12383:43:14"
																},
																"nativeSrc": "12383:71:14",
																"nodeType": "YulFunctionCall",
																"src": "12383:71:14"
															},
															"nativeSrc": "12383:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "12383:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12508:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12508:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12521:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12521:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12532:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12532:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12517:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12517:3:14"
																		},
																		"nativeSrc": "12517:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12517:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "12464:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12464:43:14"
																},
																"nativeSrc": "12464:72:14",
																"nodeType": "YulFunctionCall",
																"src": "12464:72:14"
															},
															"nativeSrc": "12464:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "12464:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12590:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12590:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12603:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12603:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12614:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12614:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12599:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12599:3:14"
																		},
																		"nativeSrc": "12599:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12599:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12546:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12546:43:14"
																},
																"nativeSrc": "12546:72:14",
																"nodeType": "YulFunctionCall",
																"src": "12546:72:14"
															},
															"nativeSrc": "12546:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "12546:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12672:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12672:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12685:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12685:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12696:2:14",
																				"nodeType": "YulLiteral",
																				"src": "12696:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12681:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12681:3:14"
																		},
																		"nativeSrc": "12681:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12681:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12628:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12628:43:14"
																},
																"nativeSrc": "12628:72:14",
																"nodeType": "YulFunctionCall",
																"src": "12628:72:14"
															},
															"nativeSrc": "12628:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "12628:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12154:553:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12284:9:14",
														"nodeType": "YulTypedName",
														"src": "12284:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12296:6:14",
														"nodeType": "YulTypedName",
														"src": "12296:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12304:6:14",
														"nodeType": "YulTypedName",
														"src": "12304:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12312:6:14",
														"nodeType": "YulTypedName",
														"src": "12312:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12320:6:14",
														"nodeType": "YulTypedName",
														"src": "12320:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12331:4:14",
														"nodeType": "YulTypedName",
														"src": "12331:4:14",
														"type": ""
													}
												],
												"src": "12154:553:14"
											},
											{
												"body": {
													"nativeSrc": "12758:149:14",
													"nodeType": "YulBlock",
													"src": "12758:149:14",
													"statements": [
														{
															"nativeSrc": "12768:25:14",
															"nodeType": "YulAssignment",
															"src": "12768:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12791:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12791:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12773:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12773:17:14"
																},
																"nativeSrc": "12773:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12773:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12768:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "12768:1:14"
																}
															]
														},
														{
															"nativeSrc": "12802:25:14",
															"nodeType": "YulAssignment",
															"src": "12802:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12825:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12825:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12807:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "12807:17:14"
																},
																"nativeSrc": "12807:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12807:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12802:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "12802:1:14"
																}
															]
														},
														{
															"nativeSrc": "12836:17:14",
															"nodeType": "YulAssignment",
															"src": "12836:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12848:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12848:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12851:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12851:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12844:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12844:3:14"
																},
																"nativeSrc": "12844:9:14",
																"nodeType": "YulFunctionCall",
																"src": "12844:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12836:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12836:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12878:22:14",
																"nodeType": "YulBlock",
																"src": "12878:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12880:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12880:16:14"
																			},
																			"nativeSrc": "12880:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12880:18:14"
																		},
																		"nativeSrc": "12880:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12880:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12869:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12869:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12875:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "12875:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12866:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12866:2:14"
																},
																"nativeSrc": "12866:11:14",
																"nodeType": "YulFunctionCall",
																"src": "12866:11:14"
															},
															"nativeSrc": "12863:37:14",
															"nodeType": "YulIf",
															"src": "12863:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12713:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12744:1:14",
														"nodeType": "YulTypedName",
														"src": "12744:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12747:1:14",
														"nodeType": "YulTypedName",
														"src": "12747:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12753:4:14",
														"nodeType": "YulTypedName",
														"src": "12753:4:14",
														"type": ""
													}
												],
												"src": "12713:194:14"
											},
											{
												"body": {
													"nativeSrc": "12952:189:14",
													"nodeType": "YulBlock",
													"src": "12952:189:14",
													"statements": [
														{
															"nativeSrc": "12962:32:14",
															"nodeType": "YulAssignment",
															"src": "12962:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12988:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "12988:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "12971:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "12971:16:14"
																},
																"nativeSrc": "12971:23:14",
																"nodeType": "YulFunctionCall",
																"src": "12971:23:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12962:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12962:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13084:22:14",
																"nodeType": "YulBlock",
																"src": "13084:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13086:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "13086:16:14"
																			},
																			"nativeSrc": "13086:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13086:18:14"
																		},
																		"nativeSrc": "13086:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13086:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13009:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13009:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13016:66:14",
																		"nodeType": "YulLiteral",
																		"src": "13016:66:14",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13006:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "13006:2:14"
																},
																"nativeSrc": "13006:77:14",
																"nodeType": "YulFunctionCall",
																"src": "13006:77:14"
															},
															"nativeSrc": "13003:103:14",
															"nodeType": "YulIf",
															"src": "13003:103:14"
														},
														{
															"nativeSrc": "13115:20:14",
															"nodeType": "YulAssignment",
															"src": "13115:20:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13126:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13126:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13129:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13129:5:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "13122:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13122:3:14"
																},
																"nativeSrc": "13122:13:14",
																"nodeType": "YulFunctionCall",
																"src": "13122:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13115:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13115:3:14"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "12913:228:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12938:5:14",
														"nodeType": "YulTypedName",
														"src": "12938:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12948:3:14",
														"nodeType": "YulTypedName",
														"src": "12948:3:14",
														"type": ""
													}
												],
												"src": "12913:228:14"
											},
											{
												"body": {
													"nativeSrc": "13273:206:14",
													"nodeType": "YulBlock",
													"src": "13273:206:14",
													"statements": [
														{
															"nativeSrc": "13283:26:14",
															"nodeType": "YulAssignment",
															"src": "13283:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13295:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "13295:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13306:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13306:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13291:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13291:3:14"
																},
																"nativeSrc": "13291:18:14",
																"nodeType": "YulFunctionCall",
																"src": "13291:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13283:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "13283:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13363:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13363:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13376:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13376:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13387:1:14",
																				"nodeType": "YulLiteral",
																				"src": "13387:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13372:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13372:3:14"
																		},
																		"nativeSrc": "13372:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13372:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13319:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13319:43:14"
																},
																"nativeSrc": "13319:71:14",
																"nodeType": "YulFunctionCall",
																"src": "13319:71:14"
															},
															"nativeSrc": "13319:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "13319:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13444:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13444:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13457:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13457:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13468:2:14",
																				"nodeType": "YulLiteral",
																				"src": "13468:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13453:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13453:3:14"
																		},
																		"nativeSrc": "13453:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13453:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13400:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "13400:43:14"
																},
																"nativeSrc": "13400:72:14",
																"nodeType": "YulFunctionCall",
																"src": "13400:72:14"
															},
															"nativeSrc": "13400:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "13400:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13147:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13237:9:14",
														"nodeType": "YulTypedName",
														"src": "13237:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13249:6:14",
														"nodeType": "YulTypedName",
														"src": "13249:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13257:6:14",
														"nodeType": "YulTypedName",
														"src": "13257:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13268:4:14",
														"nodeType": "YulTypedName",
														"src": "13268:4:14",
														"type": ""
													}
												],
												"src": "13147:332:14"
											},
											{
												"body": {
													"nativeSrc": "13545:77:14",
													"nodeType": "YulBlock",
													"src": "13545:77:14",
													"statements": [
														{
															"nativeSrc": "13555:22:14",
															"nodeType": "YulAssignment",
															"src": "13555:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13570:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "13570:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13564:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13564:5:14"
																},
																"nativeSrc": "13564:13:14",
																"nodeType": "YulFunctionCall",
																"src": "13564:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13555:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "13555:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13610:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "13610:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13586:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "13586:23:14"
																},
																"nativeSrc": "13586:30:14",
																"nodeType": "YulFunctionCall",
																"src": "13586:30:14"
															},
															"nativeSrc": "13586:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "13586:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13485:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13523:6:14",
														"nodeType": "YulTypedName",
														"src": "13523:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13531:3:14",
														"nodeType": "YulTypedName",
														"src": "13531:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13539:5:14",
														"nodeType": "YulTypedName",
														"src": "13539:5:14",
														"type": ""
													}
												],
												"src": "13485:137:14"
											},
											{
												"body": {
													"nativeSrc": "13702:271:14",
													"nodeType": "YulBlock",
													"src": "13702:271:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "13748:83:14",
																"nodeType": "YulBlock",
																"src": "13748:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13750:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "13750:77:14"
																			},
																			"nativeSrc": "13750:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "13750:79:14"
																		},
																		"nativeSrc": "13750:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "13750:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13723:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13723:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13732:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "13732:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13719:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "13719:3:14"
																		},
																		"nativeSrc": "13719:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13719:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13744:2:14",
																		"nodeType": "YulLiteral",
																		"src": "13744:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13715:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "13715:3:14"
																},
																"nativeSrc": "13715:32:14",
																"nodeType": "YulFunctionCall",
																"src": "13715:32:14"
															},
															"nativeSrc": "13712:119:14",
															"nodeType": "YulIf",
															"src": "13712:119:14"
														},
														{
															"nativeSrc": "13841:125:14",
															"nodeType": "YulBlock",
															"src": "13841:125:14",
															"statements": [
																{
																	"nativeSrc": "13856:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13856:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13870:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13870:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13860:6:14",
																			"nodeType": "YulTypedName",
																			"src": "13860:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13885:71:14",
																	"nodeType": "YulAssignment",
																	"src": "13885:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13928:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13928:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13939:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13939:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13924:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13924:3:14"
																				},
																				"nativeSrc": "13924:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13924:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13948:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13948:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13895:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "13895:28:14"
																		},
																		"nativeSrc": "13895:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13895:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13885:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13885:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13628:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13672:9:14",
														"nodeType": "YulTypedName",
														"src": "13672:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13683:7:14",
														"nodeType": "YulTypedName",
														"src": "13683:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13695:6:14",
														"nodeType": "YulTypedName",
														"src": "13695:6:14",
														"type": ""
													}
												],
												"src": "13628:345:14"
											},
											{
												"body": {
													"nativeSrc": "14157:363:14",
													"nodeType": "YulBlock",
													"src": "14157:363:14",
													"statements": [
														{
															"nativeSrc": "14167:26:14",
															"nodeType": "YulAssignment",
															"src": "14167:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14179:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14179:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14190:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14190:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14175:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14175:3:14"
																},
																"nativeSrc": "14175:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14175:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14167:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14167:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14245:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14245:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14258:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14258:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14269:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14269:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14254:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14254:3:14"
																		},
																		"nativeSrc": "14254:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14254:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "14203:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "14203:41:14"
																},
																"nativeSrc": "14203:69:14",
																"nodeType": "YulFunctionCall",
																"src": "14203:69:14"
															},
															"nativeSrc": "14203:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "14203:69:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14324:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14324:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14337:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14337:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14348:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14348:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14333:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14333:3:14"
																		},
																		"nativeSrc": "14333:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14333:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "14282:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "14282:41:14"
																},
																"nativeSrc": "14282:70:14",
																"nodeType": "YulFunctionCall",
																"src": "14282:70:14"
															},
															"nativeSrc": "14282:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "14282:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14373:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14373:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14384:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14384:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14369:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14369:3:14"
																		},
																		"nativeSrc": "14369:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14369:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14393:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "14393:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14399:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14399:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14389:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14389:3:14"
																		},
																		"nativeSrc": "14389:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14389:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14362:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14362:6:14"
																},
																"nativeSrc": "14362:48:14",
																"nodeType": "YulFunctionCall",
																"src": "14362:48:14"
															},
															"nativeSrc": "14362:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "14362:48:14"
														},
														{
															"nativeSrc": "14419:94:14",
															"nodeType": "YulAssignment",
															"src": "14419:94:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14491:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14491:6:14"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "14499:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14499:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14508:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "14508:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "14427:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "14427:63:14"
																},
																"nativeSrc": "14427:86:14",
																"nodeType": "YulFunctionCall",
																"src": "14427:86:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14419:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14419:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "13979:541:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14105:9:14",
														"nodeType": "YulTypedName",
														"src": "14105:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14117:6:14",
														"nodeType": "YulTypedName",
														"src": "14117:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14125:6:14",
														"nodeType": "YulTypedName",
														"src": "14125:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14133:6:14",
														"nodeType": "YulTypedName",
														"src": "14133:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14141:6:14",
														"nodeType": "YulTypedName",
														"src": "14141:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14152:4:14",
														"nodeType": "YulTypedName",
														"src": "14152:4:14",
														"type": ""
													}
												],
												"src": "13979:541:14"
											},
											{
												"body": {
													"nativeSrc": "14728:446:14",
													"nodeType": "YulBlock",
													"src": "14728:446:14",
													"statements": [
														{
															"nativeSrc": "14738:27:14",
															"nodeType": "YulAssignment",
															"src": "14738:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14750:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14750:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14761:3:14",
																		"nodeType": "YulLiteral",
																		"src": "14761:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14746:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14746:3:14"
																},
																"nativeSrc": "14746:19:14",
																"nodeType": "YulFunctionCall",
																"src": "14746:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14738:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14738:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14817:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14817:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14830:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14830:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14841:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14841:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14826:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14826:3:14"
																		},
																		"nativeSrc": "14826:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14826:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "14775:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "14775:41:14"
																},
																"nativeSrc": "14775:69:14",
																"nodeType": "YulFunctionCall",
																"src": "14775:69:14"
															},
															"nativeSrc": "14775:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "14775:69:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14896:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14896:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14909:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14909:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14920:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14920:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14905:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14905:3:14"
																		},
																		"nativeSrc": "14905:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14905:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "14854:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "14854:41:14"
																},
																"nativeSrc": "14854:70:14",
																"nodeType": "YulFunctionCall",
																"src": "14854:70:14"
															},
															"nativeSrc": "14854:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "14854:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14978:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14978:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14991:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14991:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15002:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15002:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14987:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14987:3:14"
																		},
																		"nativeSrc": "14987:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14987:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "14934:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "14934:43:14"
																},
																"nativeSrc": "14934:72:14",
																"nodeType": "YulFunctionCall",
																"src": "14934:72:14"
															},
															"nativeSrc": "14934:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "14934:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15060:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15060:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15073:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15073:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15084:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15084:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15069:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15069:3:14"
																		},
																		"nativeSrc": "15069:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15069:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "15016:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "15016:43:14"
																},
																"nativeSrc": "15016:72:14",
																"nodeType": "YulFunctionCall",
																"src": "15016:72:14"
															},
															"nativeSrc": "15016:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "15016:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "15138:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "15138:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15151:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15151:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15162:3:14",
																				"nodeType": "YulLiteral",
																				"src": "15162:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15147:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15147:3:14"
																		},
																		"nativeSrc": "15147:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15147:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "15098:39:14",
																	"nodeType": "YulIdentifier",
																	"src": "15098:39:14"
																},
																"nativeSrc": "15098:69:14",
																"nodeType": "YulFunctionCall",
																"src": "15098:69:14"
															},
															"nativeSrc": "15098:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "15098:69:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed",
												"nativeSrc": "14526:648:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14668:9:14",
														"nodeType": "YulTypedName",
														"src": "14668:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14680:6:14",
														"nodeType": "YulTypedName",
														"src": "14680:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14688:6:14",
														"nodeType": "YulTypedName",
														"src": "14688:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14696:6:14",
														"nodeType": "YulTypedName",
														"src": "14696:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14704:6:14",
														"nodeType": "YulTypedName",
														"src": "14704:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14712:6:14",
														"nodeType": "YulTypedName",
														"src": "14712:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14723:4:14",
														"nodeType": "YulTypedName",
														"src": "14723:4:14",
														"type": ""
													}
												],
												"src": "14526:648:14"
											},
											{
												"body": {
													"nativeSrc": "15208:152:14",
													"nodeType": "YulBlock",
													"src": "15208:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15225:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15225:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15228:77:14",
																		"nodeType": "YulLiteral",
																		"src": "15228:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15218:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15218:6:14"
																},
																"nativeSrc": "15218:88:14",
																"nodeType": "YulFunctionCall",
																"src": "15218:88:14"
															},
															"nativeSrc": "15218:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "15218:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15322:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15322:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15325:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15325:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15315:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15315:6:14"
																},
																"nativeSrc": "15315:15:14",
																"nodeType": "YulFunctionCall",
																"src": "15315:15:14"
															},
															"nativeSrc": "15315:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "15315:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15346:1:14",
																		"nodeType": "YulLiteral",
																		"src": "15346:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15349:4:14",
																		"nodeType": "YulLiteral",
																		"src": "15349:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15339:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15339:6:14"
																},
																"nativeSrc": "15339:15:14",
																"nodeType": "YulFunctionCall",
																"src": "15339:15:14"
															},
															"nativeSrc": "15339:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "15339:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15180:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "15180:180:14"
											},
											{
												"body": {
													"nativeSrc": "15398:139:14",
													"nodeType": "YulBlock",
													"src": "15398:139:14",
													"statements": [
														{
															"nativeSrc": "15408:23:14",
															"nodeType": "YulAssignment",
															"src": "15408:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15429:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15429:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "15413:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "15413:15:14"
																},
																"nativeSrc": "15413:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15413:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15408:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15408:1:14"
																}
															]
														},
														{
															"nativeSrc": "15440:23:14",
															"nodeType": "YulAssignment",
															"src": "15440:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15461:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15461:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "15445:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "15445:15:14"
																},
																"nativeSrc": "15445:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15445:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15440:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15440:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15485:22:14",
																"nodeType": "YulBlock",
																"src": "15485:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15487:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "15487:16:14"
																			},
																			"nativeSrc": "15487:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15487:18:14"
																		},
																		"nativeSrc": "15487:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15487:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15482:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15482:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15475:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15475:6:14"
																},
																"nativeSrc": "15475:9:14",
																"nodeType": "YulFunctionCall",
																"src": "15475:9:14"
															},
															"nativeSrc": "15472:35:14",
															"nodeType": "YulIf",
															"src": "15472:35:14"
														},
														{
															"nativeSrc": "15516:15:14",
															"nodeType": "YulAssignment",
															"src": "15516:15:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15526:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15526:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15529:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15529:1:14"
																	}
																],
																"functionName": {
																	"name": "smod",
																	"nativeSrc": "15521:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15521:4:14"
																},
																"nativeSrc": "15521:10:14",
																"nodeType": "YulFunctionCall",
																"src": "15521:10:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15516:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15516:1:14"
																}
															]
														}
													]
												},
												"name": "mod_t_int24",
												"nativeSrc": "15366:171:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15387:1:14",
														"nodeType": "YulTypedName",
														"src": "15387:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15390:1:14",
														"nodeType": "YulTypedName",
														"src": "15390:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15396:1:14",
														"nodeType": "YulTypedName",
														"src": "15396:1:14",
														"type": ""
													}
												],
												"src": "15366:171:14"
											},
											{
												"body": {
													"nativeSrc": "15583:342:14",
													"nodeType": "YulBlock",
													"src": "15583:342:14",
													"statements": [
														{
															"nativeSrc": "15593:23:14",
															"nodeType": "YulAssignment",
															"src": "15593:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15614:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15614:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "15598:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "15598:15:14"
																},
																"nativeSrc": "15598:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15598:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15593:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15593:1:14"
																}
															]
														},
														{
															"nativeSrc": "15625:23:14",
															"nodeType": "YulAssignment",
															"src": "15625:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15646:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15646:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "15630:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "15630:15:14"
																},
																"nativeSrc": "15630:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15630:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15625:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15625:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15670:22:14",
																"nodeType": "YulBlock",
																"src": "15670:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15672:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "15672:16:14"
																			},
																			"nativeSrc": "15672:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15672:18:14"
																		},
																		"nativeSrc": "15672:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15672:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15667:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15667:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15660:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15660:6:14"
																},
																"nativeSrc": "15660:9:14",
																"nodeType": "YulFunctionCall",
																"src": "15660:9:14"
															},
															"nativeSrc": "15657:35:14",
															"nodeType": "YulIf",
															"src": "15657:35:14"
														},
														{
															"body": {
																"nativeSrc": "15872:22:14",
																"nodeType": "YulBlock",
																"src": "15872:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15874:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "15874:16:14"
																			},
																			"nativeSrc": "15874:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15874:18:14"
																		},
																		"nativeSrc": "15874:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15874:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "15761:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "15761:1:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15764:66:14",
																				"nodeType": "YulLiteral",
																				"src": "15764:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15758:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "15758:2:14"
																		},
																		"nativeSrc": "15758:73:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15758:73:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "15848:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "15848:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15855:1:14",
																						"nodeType": "YulLiteral",
																						"src": "15855:1:14",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15858:1:14",
																						"nodeType": "YulLiteral",
																						"src": "15858:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15851:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15851:3:14"
																				},
																				"nativeSrc": "15851:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15851:9:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15845:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "15845:2:14"
																		},
																		"nativeSrc": "15845:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15845:16:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15741:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15741:3:14"
																},
																"nativeSrc": "15741:130:14",
																"nodeType": "YulFunctionCall",
																"src": "15741:130:14"
															},
															"nativeSrc": "15738:156:14",
															"nodeType": "YulIf",
															"src": "15738:156:14"
														},
														{
															"nativeSrc": "15904:15:14",
															"nodeType": "YulAssignment",
															"src": "15904:15:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15914:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15914:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15917:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15917:1:14"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "15909:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15909:4:14"
																},
																"nativeSrc": "15909:10:14",
																"nodeType": "YulFunctionCall",
																"src": "15909:10:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15904:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "15904:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int24",
												"nativeSrc": "15543:382:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15572:1:14",
														"nodeType": "YulTypedName",
														"src": "15572:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15575:1:14",
														"nodeType": "YulTypedName",
														"src": "15575:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15581:1:14",
														"nodeType": "YulTypedName",
														"src": "15581:1:14",
														"type": ""
													}
												],
												"src": "15543:382:14"
											},
											{
												"body": {
													"nativeSrc": "15973:52:14",
													"nodeType": "YulBlock",
													"src": "15973:52:14",
													"statements": [
														{
															"nativeSrc": "15983:35:14",
															"nodeType": "YulAssignment",
															"src": "15983:35:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16008:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16008:2:14",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16012:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16012:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16004:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16004:3:14"
																},
																"nativeSrc": "16004:14:14",
																"nodeType": "YulFunctionCall",
																"src": "16004:14:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15983:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "15983:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "15931:94:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15954:5:14",
														"nodeType": "YulTypedName",
														"src": "15954:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15964:8:14",
														"nodeType": "YulTypedName",
														"src": "15964:8:14",
														"type": ""
													}
												],
												"src": "15931:94:14"
											},
											{
												"body": {
													"nativeSrc": "16078:47:14",
													"nodeType": "YulBlock",
													"src": "16078:47:14",
													"statements": [
														{
															"nativeSrc": "16088:31:14",
															"nodeType": "YulAssignment",
															"src": "16088:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16113:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16113:5:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "16099:13:14",
																	"nodeType": "YulIdentifier",
																	"src": "16099:13:14"
																},
																"nativeSrc": "16099:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16099:20:14"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "16088:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "16088:7:14"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "16031:94:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16060:5:14",
														"nodeType": "YulTypedName",
														"src": "16060:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "16070:7:14",
														"nodeType": "YulTypedName",
														"src": "16070:7:14",
														"type": ""
													}
												],
												"src": "16031:94:14"
											},
											{
												"body": {
													"nativeSrc": "16178:53:14",
													"nodeType": "YulBlock",
													"src": "16178:53:14",
													"statements": [
														{
															"nativeSrc": "16188:37:14",
															"nodeType": "YulAssignment",
															"src": "16188:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16219:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16219:5:14"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "16199:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "16199:19:14"
																},
																"nativeSrc": "16199:26:14",
																"nodeType": "YulFunctionCall",
																"src": "16199:26:14"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "16188:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "16188:7:14"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "16131:100:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16160:5:14",
														"nodeType": "YulTypedName",
														"src": "16160:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "16170:7:14",
														"nodeType": "YulTypedName",
														"src": "16170:7:14",
														"type": ""
													}
												],
												"src": "16131:100:14"
											},
											{
												"body": {
													"nativeSrc": "16320:74:14",
													"nodeType": "YulBlock",
													"src": "16320:74:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16337:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16337:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16380:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "16380:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "16362:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "16362:17:14"
																				},
																				"nativeSrc": "16362:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16362:24:14"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "16342:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "16342:19:14"
																		},
																		"nativeSrc": "16342:45:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16342:45:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16330:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16330:6:14"
																},
																"nativeSrc": "16330:58:14",
																"nodeType": "YulFunctionCall",
																"src": "16330:58:14"
															},
															"nativeSrc": "16330:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "16330:58:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "16237:157:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16308:5:14",
														"nodeType": "YulTypedName",
														"src": "16308:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16315:3:14",
														"nodeType": "YulTypedName",
														"src": "16315:3:14",
														"type": ""
													}
												],
												"src": "16237:157:14"
											},
											{
												"body": {
													"nativeSrc": "16443:53:14",
													"nodeType": "YulBlock",
													"src": "16443:53:14",
													"statements": [
														{
															"nativeSrc": "16453:36:14",
															"nodeType": "YulAssignment",
															"src": "16453:36:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16478:3:14",
																		"nodeType": "YulLiteral",
																		"src": "16478:3:14",
																		"type": "",
																		"value": "232"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16483:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16483:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16474:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16474:3:14"
																},
																"nativeSrc": "16474:15:14",
																"nodeType": "YulFunctionCall",
																"src": "16474:15:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16453:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "16453:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_232",
												"nativeSrc": "16400:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16424:5:14",
														"nodeType": "YulTypedName",
														"src": "16424:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16434:8:14",
														"nodeType": "YulTypedName",
														"src": "16434:8:14",
														"type": ""
													}
												],
												"src": "16400:96:14"
											},
											{
												"body": {
													"nativeSrc": "16547:48:14",
													"nodeType": "YulBlock",
													"src": "16547:48:14",
													"statements": [
														{
															"nativeSrc": "16557:32:14",
															"nodeType": "YulAssignment",
															"src": "16557:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16583:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16583:5:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_232",
																	"nativeSrc": "16568:14:14",
																	"nodeType": "YulIdentifier",
																	"src": "16568:14:14"
																},
																"nativeSrc": "16568:21:14",
																"nodeType": "YulFunctionCall",
																"src": "16568:21:14"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "16557:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "16557:7:14"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_int24",
												"nativeSrc": "16502:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16529:5:14",
														"nodeType": "YulTypedName",
														"src": "16529:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "16539:7:14",
														"nodeType": "YulTypedName",
														"src": "16539:7:14",
														"type": ""
													}
												],
												"src": "16502:93:14"
											},
											{
												"body": {
													"nativeSrc": "16680:70:14",
													"nodeType": "YulBlock",
													"src": "16680:70:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16697:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16697:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16736:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "16736:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "16720:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "16720:15:14"
																				},
																				"nativeSrc": "16720:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16720:22:14"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_int24",
																			"nativeSrc": "16702:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "16702:17:14"
																		},
																		"nativeSrc": "16702:41:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16702:41:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16690:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16690:6:14"
																},
																"nativeSrc": "16690:54:14",
																"nodeType": "YulFunctionCall",
																"src": "16690:54:14"
															},
															"nativeSrc": "16690:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "16690:54:14"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
												"nativeSrc": "16601:149:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16668:5:14",
														"nodeType": "YulTypedName",
														"src": "16668:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16675:3:14",
														"nodeType": "YulTypedName",
														"src": "16675:3:14",
														"type": ""
													}
												],
												"src": "16601:149:14"
											},
											{
												"body": {
													"nativeSrc": "16920:356:14",
													"nodeType": "YulBlock",
													"src": "16920:356:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16993:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16993:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17002:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17002:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "16931:61:14",
																	"nodeType": "YulIdentifier",
																	"src": "16931:61:14"
																},
																"nativeSrc": "16931:75:14",
																"nodeType": "YulFunctionCall",
																"src": "16931:75:14"
															},
															"nativeSrc": "16931:75:14",
															"nodeType": "YulExpressionStatement",
															"src": "16931:75:14"
														},
														{
															"nativeSrc": "17015:19:14",
															"nodeType": "YulAssignment",
															"src": "17015:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17026:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17026:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17031:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17031:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17022:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17022:3:14"
																},
																"nativeSrc": "17022:12:14",
																"nodeType": "YulFunctionCall",
																"src": "17022:12:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17015:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17015:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17102:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17102:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17111:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17111:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
																	"nativeSrc": "17044:57:14",
																	"nodeType": "YulIdentifier",
																	"src": "17044:57:14"
																},
																"nativeSrc": "17044:71:14",
																"nodeType": "YulFunctionCall",
																"src": "17044:71:14"
															},
															"nativeSrc": "17044:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "17044:71:14"
														},
														{
															"nativeSrc": "17124:18:14",
															"nodeType": "YulAssignment",
															"src": "17124:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17135:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17135:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17140:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17140:1:14",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17131:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17131:3:14"
																},
																"nativeSrc": "17131:11:14",
																"nodeType": "YulFunctionCall",
																"src": "17131:11:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17124:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17124:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17210:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17210:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17219:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17219:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
																	"nativeSrc": "17152:57:14",
																	"nodeType": "YulIdentifier",
																	"src": "17152:57:14"
																},
																"nativeSrc": "17152:71:14",
																"nodeType": "YulFunctionCall",
																"src": "17152:71:14"
															},
															"nativeSrc": "17152:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "17152:71:14"
														},
														{
															"nativeSrc": "17232:18:14",
															"nodeType": "YulAssignment",
															"src": "17232:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17243:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17243:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17248:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17248:1:14",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17239:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17239:3:14"
																},
																"nativeSrc": "17239:11:14",
																"nodeType": "YulFunctionCall",
																"src": "17239:11:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17232:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17232:3:14"
																}
															]
														},
														{
															"nativeSrc": "17260:10:14",
															"nodeType": "YulAssignment",
															"src": "17260:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "17267:3:14",
																"nodeType": "YulIdentifier",
																"src": "17267:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17260:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17260:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16756:520:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16883:3:14",
														"nodeType": "YulTypedName",
														"src": "16883:3:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16889:6:14",
														"nodeType": "YulTypedName",
														"src": "16889:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16897:6:14",
														"nodeType": "YulTypedName",
														"src": "16897:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16905:6:14",
														"nodeType": "YulTypedName",
														"src": "16905:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16916:3:14",
														"nodeType": "YulTypedName",
														"src": "16916:3:14",
														"type": ""
													}
												],
												"src": "16756:520:14"
											},
											{
												"body": {
													"nativeSrc": "17378:73:14",
													"nodeType": "YulBlock",
													"src": "17378:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17395:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17395:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17400:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17400:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17388:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17388:6:14"
																},
																"nativeSrc": "17388:19:14",
																"nodeType": "YulFunctionCall",
																"src": "17388:19:14"
															},
															"nativeSrc": "17388:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "17388:19:14"
														},
														{
															"nativeSrc": "17416:29:14",
															"nodeType": "YulAssignment",
															"src": "17416:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17435:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17435:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17440:4:14",
																		"nodeType": "YulLiteral",
																		"src": "17440:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17431:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17431:3:14"
																},
																"nativeSrc": "17431:14:14",
																"nodeType": "YulFunctionCall",
																"src": "17431:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17416:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "17416:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "17282:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17350:3:14",
														"nodeType": "YulTypedName",
														"src": "17350:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17355:6:14",
														"nodeType": "YulTypedName",
														"src": "17355:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17366:11:14",
														"nodeType": "YulTypedName",
														"src": "17366:11:14",
														"type": ""
													}
												],
												"src": "17282:169:14"
											},
											{
												"body": {
													"nativeSrc": "17563:45:14",
													"nodeType": "YulBlock",
													"src": "17563:45:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17585:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17585:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17593:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17593:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17581:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17581:3:14"
																		},
																		"nativeSrc": "17581:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17581:14:14"
																	},
																	{
																		"hexValue": "54",
																		"kind": "string",
																		"nativeSrc": "17597:3:14",
																		"nodeType": "YulLiteral",
																		"src": "17597:3:14",
																		"type": "",
																		"value": "T"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17574:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17574:6:14"
																},
																"nativeSrc": "17574:27:14",
																"nodeType": "YulFunctionCall",
																"src": "17574:27:14"
															},
															"nativeSrc": "17574:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "17574:27:14"
														}
													]
												},
												"name": "store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
												"nativeSrc": "17457:151:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17555:6:14",
														"nodeType": "YulTypedName",
														"src": "17555:6:14",
														"type": ""
													}
												],
												"src": "17457:151:14"
											},
											{
												"body": {
													"nativeSrc": "17760:219:14",
													"nodeType": "YulBlock",
													"src": "17760:219:14",
													"statements": [
														{
															"nativeSrc": "17770:73:14",
															"nodeType": "YulAssignment",
															"src": "17770:73:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17836:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17836:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17841:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17841:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17777:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "17777:58:14"
																},
																"nativeSrc": "17777:66:14",
																"nodeType": "YulFunctionCall",
																"src": "17777:66:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17770:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17770:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17941:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17941:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																	"nativeSrc": "17852:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17852:88:14"
																},
																"nativeSrc": "17852:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17852:93:14"
															},
															"nativeSrc": "17852:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17852:93:14"
														},
														{
															"nativeSrc": "17954:19:14",
															"nodeType": "YulAssignment",
															"src": "17954:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17965:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17965:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17970:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17970:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17961:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17961:3:14"
																},
																"nativeSrc": "17961:12:14",
																"nodeType": "YulFunctionCall",
																"src": "17961:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17954:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17954:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17614:365:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17748:3:14",
														"nodeType": "YulTypedName",
														"src": "17748:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17756:3:14",
														"nodeType": "YulTypedName",
														"src": "17756:3:14",
														"type": ""
													}
												],
												"src": "17614:365:14"
											},
											{
												"body": {
													"nativeSrc": "18156:248:14",
													"nodeType": "YulBlock",
													"src": "18156:248:14",
													"statements": [
														{
															"nativeSrc": "18166:26:14",
															"nodeType": "YulAssignment",
															"src": "18166:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18178:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18178:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18189:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18189:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18174:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18174:3:14"
																},
																"nativeSrc": "18174:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18174:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18166:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18166:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18213:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18213:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18224:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18224:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18209:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18209:3:14"
																		},
																		"nativeSrc": "18209:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18209:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18232:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18232:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18238:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18238:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18228:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18228:3:14"
																		},
																		"nativeSrc": "18228:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18228:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18202:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18202:6:14"
																},
																"nativeSrc": "18202:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18202:47:14"
															},
															"nativeSrc": "18202:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18202:47:14"
														},
														{
															"nativeSrc": "18258:139:14",
															"nodeType": "YulAssignment",
															"src": "18258:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18392:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18392:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18266:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18266:124:14"
																},
																"nativeSrc": "18266:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18266:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18258:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18258:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17985:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18136:9:14",
														"nodeType": "YulTypedName",
														"src": "18136:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18151:4:14",
														"nodeType": "YulTypedName",
														"src": "18151:4:14",
														"type": ""
													}
												],
												"src": "17985:419:14"
											},
											{
												"body": {
													"nativeSrc": "18458:362:14",
													"nodeType": "YulBlock",
													"src": "18458:362:14",
													"statements": [
														{
															"nativeSrc": "18468:25:14",
															"nodeType": "YulAssignment",
															"src": "18468:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18491:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18491:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18473:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "18473:17:14"
																},
																"nativeSrc": "18473:20:14",
																"nodeType": "YulFunctionCall",
																"src": "18473:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18468:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "18468:1:14"
																}
															]
														},
														{
															"nativeSrc": "18502:25:14",
															"nodeType": "YulAssignment",
															"src": "18502:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18525:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18525:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18507:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "18507:17:14"
																},
																"nativeSrc": "18507:20:14",
																"nodeType": "YulFunctionCall",
																"src": "18507:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18502:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "18502:1:14"
																}
															]
														},
														{
															"nativeSrc": "18536:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "18536:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18559:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18559:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18562:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18562:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18555:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18555:3:14"
																},
																"nativeSrc": "18555:9:14",
																"nodeType": "YulFunctionCall",
																"src": "18555:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "18540:11:14",
																	"nodeType": "YulTypedName",
																	"src": "18540:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18573:41:14",
															"nodeType": "YulAssignment",
															"src": "18573:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "18602:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "18602:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18584:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "18584:17:14"
																},
																"nativeSrc": "18584:30:14",
																"nodeType": "YulFunctionCall",
																"src": "18584:30:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "18573:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "18573:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18791:22:14",
																"nodeType": "YulBlock",
																"src": "18791:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18793:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "18793:16:14"
																			},
																			"nativeSrc": "18793:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18793:18:14"
																		},
																		"nativeSrc": "18793:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18793:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "18724:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "18724:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "18717:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "18717:6:14"
																				},
																				"nativeSrc": "18717:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18717:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "18747:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "18747:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "18754:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "18754:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "18763:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "18763:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "18750:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "18750:3:14"
																						},
																						"nativeSrc": "18750:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "18750:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "18744:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "18744:2:14"
																				},
																				"nativeSrc": "18744:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "18744:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "18697:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "18697:2:14"
																		},
																		"nativeSrc": "18697:83:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18697:83:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18677:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18677:6:14"
																},
																"nativeSrc": "18677:113:14",
																"nodeType": "YulFunctionCall",
																"src": "18677:113:14"
															},
															"nativeSrc": "18674:139:14",
															"nodeType": "YulIf",
															"src": "18674:139:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18410:410:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18441:1:14",
														"nodeType": "YulTypedName",
														"src": "18441:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18444:1:14",
														"nodeType": "YulTypedName",
														"src": "18444:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18450:7:14",
														"nodeType": "YulTypedName",
														"src": "18450:7:14",
														"type": ""
													}
												],
												"src": "18410:410:14"
											},
											{
												"body": {
													"nativeSrc": "18868:143:14",
													"nodeType": "YulBlock",
													"src": "18868:143:14",
													"statements": [
														{
															"nativeSrc": "18878:25:14",
															"nodeType": "YulAssignment",
															"src": "18878:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18901:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18901:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18883:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "18883:17:14"
																},
																"nativeSrc": "18883:20:14",
																"nodeType": "YulFunctionCall",
																"src": "18883:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18878:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "18878:1:14"
																}
															]
														},
														{
															"nativeSrc": "18912:25:14",
															"nodeType": "YulAssignment",
															"src": "18912:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18935:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18935:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18917:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "18917:17:14"
																},
																"nativeSrc": "18917:20:14",
																"nodeType": "YulFunctionCall",
																"src": "18917:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18912:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "18912:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18959:22:14",
																"nodeType": "YulBlock",
																"src": "18959:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18961:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "18961:16:14"
																			},
																			"nativeSrc": "18961:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "18961:18:14"
																		},
																		"nativeSrc": "18961:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "18961:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18956:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "18956:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18949:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18949:6:14"
																},
																"nativeSrc": "18949:9:14",
																"nodeType": "YulFunctionCall",
																"src": "18949:9:14"
															},
															"nativeSrc": "18946:35:14",
															"nodeType": "YulIf",
															"src": "18946:35:14"
														},
														{
															"nativeSrc": "18991:14:14",
															"nodeType": "YulAssignment",
															"src": "18991:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19000:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19000:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19003:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19003:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18996:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18996:3:14"
																},
																"nativeSrc": "18996:9:14",
																"nodeType": "YulFunctionCall",
																"src": "18996:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18991:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "18991:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "18826:185:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18857:1:14",
														"nodeType": "YulTypedName",
														"src": "18857:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18860:1:14",
														"nodeType": "YulTypedName",
														"src": "18860:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18866:1:14",
														"nodeType": "YulTypedName",
														"src": "18866:1:14",
														"type": ""
													}
												],
												"src": "18826:185:14"
											},
											{
												"body": {
													"nativeSrc": "19051:142:14",
													"nodeType": "YulBlock",
													"src": "19051:142:14",
													"statements": [
														{
															"nativeSrc": "19061:25:14",
															"nodeType": "YulAssignment",
															"src": "19061:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19084:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19084:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19066:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "19066:17:14"
																},
																"nativeSrc": "19066:20:14",
																"nodeType": "YulFunctionCall",
																"src": "19066:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19061:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "19061:1:14"
																}
															]
														},
														{
															"nativeSrc": "19095:25:14",
															"nodeType": "YulAssignment",
															"src": "19095:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19118:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19118:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19100:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "19100:17:14"
																},
																"nativeSrc": "19100:20:14",
																"nodeType": "YulFunctionCall",
																"src": "19100:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19095:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "19095:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19142:22:14",
																"nodeType": "YulBlock",
																"src": "19142:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "19144:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "19144:16:14"
																			},
																			"nativeSrc": "19144:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "19144:18:14"
																		},
																		"nativeSrc": "19144:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "19144:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19139:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19139:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19132:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19132:6:14"
																},
																"nativeSrc": "19132:9:14",
																"nodeType": "YulFunctionCall",
																"src": "19132:9:14"
															},
															"nativeSrc": "19129:35:14",
															"nodeType": "YulIf",
															"src": "19129:35:14"
														},
														{
															"nativeSrc": "19173:14:14",
															"nodeType": "YulAssignment",
															"src": "19173:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19182:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19182:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19185:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19185:1:14"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "19178:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19178:3:14"
																},
																"nativeSrc": "19178:9:14",
																"nodeType": "YulFunctionCall",
																"src": "19178:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "19173:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "19173:1:14"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "19017:176:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19040:1:14",
														"nodeType": "YulTypedName",
														"src": "19040:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19043:1:14",
														"nodeType": "YulTypedName",
														"src": "19043:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "19049:1:14",
														"nodeType": "YulTypedName",
														"src": "19049:1:14",
														"type": ""
													}
												],
												"src": "19017:176:14"
											},
											{
												"body": {
													"nativeSrc": "19244:190:14",
													"nodeType": "YulBlock",
													"src": "19244:190:14",
													"statements": [
														{
															"nativeSrc": "19254:25:14",
															"nodeType": "YulAssignment",
															"src": "19254:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19277:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19277:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "19259:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "19259:17:14"
																},
																"nativeSrc": "19259:20:14",
																"nodeType": "YulFunctionCall",
																"src": "19259:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19254:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "19254:1:14"
																}
															]
														},
														{
															"nativeSrc": "19288:25:14",
															"nodeType": "YulAssignment",
															"src": "19288:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19311:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19311:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "19293:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "19293:17:14"
																},
																"nativeSrc": "19293:20:14",
																"nodeType": "YulFunctionCall",
																"src": "19293:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19288:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "19288:1:14"
																}
															]
														},
														{
															"nativeSrc": "19322:17:14",
															"nodeType": "YulAssignment",
															"src": "19322:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19334:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19334:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19337:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "19337:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "19330:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19330:3:14"
																},
																"nativeSrc": "19330:9:14",
																"nodeType": "YulFunctionCall",
																"src": "19330:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "19322:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19322:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19405:22:14",
																"nodeType": "YulBlock",
																"src": "19405:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19407:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "19407:16:14"
																			},
																			"nativeSrc": "19407:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "19407:18:14"
																		},
																		"nativeSrc": "19407:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "19407:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "19355:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19355:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19361:42:14",
																		"nodeType": "YulLiteral",
																		"src": "19361:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19352:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "19352:2:14"
																},
																"nativeSrc": "19352:52:14",
																"nodeType": "YulFunctionCall",
																"src": "19352:52:14"
															},
															"nativeSrc": "19349:78:14",
															"nodeType": "YulIf",
															"src": "19349:78:14"
														}
													]
												},
												"name": "checked_sub_t_uint160",
												"nativeSrc": "19199:235:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19230:1:14",
														"nodeType": "YulTypedName",
														"src": "19230:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19233:1:14",
														"nodeType": "YulTypedName",
														"src": "19233:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "19239:4:14",
														"nodeType": "YulTypedName",
														"src": "19239:4:14",
														"type": ""
													}
												],
												"src": "19199:235:14"
											},
											{
												"body": {
													"nativeSrc": "19503:80:14",
													"nodeType": "YulBlock",
													"src": "19503:80:14",
													"statements": [
														{
															"nativeSrc": "19513:22:14",
															"nodeType": "YulAssignment",
															"src": "19513:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "19528:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "19528:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19522:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "19522:5:14"
																},
																"nativeSrc": "19522:13:14",
																"nodeType": "YulFunctionCall",
																"src": "19522:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19513:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "19513:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19571:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "19571:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "19544:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "19544:26:14"
																},
																"nativeSrc": "19544:33:14",
																"nodeType": "YulFunctionCall",
																"src": "19544:33:14"
															},
															"nativeSrc": "19544:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "19544:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "19440:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "19481:6:14",
														"nodeType": "YulTypedName",
														"src": "19481:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19489:3:14",
														"nodeType": "YulTypedName",
														"src": "19489:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "19497:5:14",
														"nodeType": "YulTypedName",
														"src": "19497:5:14",
														"type": ""
													}
												],
												"src": "19440:143:14"
											},
											{
												"body": {
													"nativeSrc": "19666:274:14",
													"nodeType": "YulBlock",
													"src": "19666:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "19712:83:14",
																"nodeType": "YulBlock",
																"src": "19712:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19714:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "19714:77:14"
																			},
																			"nativeSrc": "19714:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "19714:79:14"
																		},
																		"nativeSrc": "19714:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "19714:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19687:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19687:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19696:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19696:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19683:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19683:3:14"
																		},
																		"nativeSrc": "19683:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19683:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19708:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19708:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19679:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19679:3:14"
																},
																"nativeSrc": "19679:32:14",
																"nodeType": "YulFunctionCall",
																"src": "19679:32:14"
															},
															"nativeSrc": "19676:119:14",
															"nodeType": "YulIf",
															"src": "19676:119:14"
														},
														{
															"nativeSrc": "19805:128:14",
															"nodeType": "YulBlock",
															"src": "19805:128:14",
															"statements": [
																{
																	"nativeSrc": "19820:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19820:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19834:1:14",
																		"nodeType": "YulLiteral",
																		"src": "19834:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19824:6:14",
																			"nodeType": "YulTypedName",
																			"src": "19824:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19849:74:14",
																	"nodeType": "YulAssignment",
																	"src": "19849:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19895:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "19895:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19906:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "19906:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19891:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "19891:3:14"
																				},
																				"nativeSrc": "19891:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "19891:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19915:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "19915:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "19859:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "19859:31:14"
																		},
																		"nativeSrc": "19859:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19859:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19849:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "19849:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "19589:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19636:9:14",
														"nodeType": "YulTypedName",
														"src": "19636:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19647:7:14",
														"nodeType": "YulTypedName",
														"src": "19647:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19659:6:14",
														"nodeType": "YulTypedName",
														"src": "19659:6:14",
														"type": ""
													}
												],
												"src": "19589:351:14"
											},
											{
												"body": {
													"nativeSrc": "19987:188:14",
													"nodeType": "YulBlock",
													"src": "19987:188:14",
													"statements": [
														{
															"nativeSrc": "19997:31:14",
															"nodeType": "YulAssignment",
															"src": "19997:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20022:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "20022:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "20006:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "20006:15:14"
																},
																"nativeSrc": "20006:22:14",
																"nodeType": "YulFunctionCall",
																"src": "20006:22:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19997:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "19997:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20118:22:14",
																"nodeType": "YulBlock",
																"src": "20118:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20120:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "20120:16:14"
																			},
																			"nativeSrc": "20120:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "20120:18:14"
																		},
																		"nativeSrc": "20120:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "20120:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20043:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "20043:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20050:66:14",
																		"nodeType": "YulLiteral",
																		"src": "20050:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20040:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "20040:2:14"
																},
																"nativeSrc": "20040:77:14",
																"nodeType": "YulFunctionCall",
																"src": "20040:77:14"
															},
															"nativeSrc": "20037:103:14",
															"nodeType": "YulIf",
															"src": "20037:103:14"
														},
														{
															"nativeSrc": "20149:20:14",
															"nodeType": "YulAssignment",
															"src": "20149:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20160:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "20160:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20167:1:14",
																		"nodeType": "YulLiteral",
																		"src": "20167:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "20156:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20156:3:14"
																},
																"nativeSrc": "20156:13:14",
																"nodeType": "YulFunctionCall",
																"src": "20156:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20149:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20149:3:14"
																}
															]
														}
													]
												},
												"name": "decrement_t_int24",
												"nativeSrc": "19946:229:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19973:5:14",
														"nodeType": "YulTypedName",
														"src": "19973:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19983:3:14",
														"nodeType": "YulTypedName",
														"src": "19983:3:14",
														"type": ""
													}
												],
												"src": "19946:229:14"
											},
											{
												"body": {
													"nativeSrc": "20224:270:14",
													"nodeType": "YulBlock",
													"src": "20224:270:14",
													"statements": [
														{
															"nativeSrc": "20234:23:14",
															"nodeType": "YulAssignment",
															"src": "20234:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20255:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20255:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "20239:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "20239:15:14"
																},
																"nativeSrc": "20239:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20239:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20234:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "20234:1:14"
																}
															]
														},
														{
															"nativeSrc": "20266:23:14",
															"nodeType": "YulAssignment",
															"src": "20266:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20287:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20287:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "20271:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "20271:15:14"
																},
																"nativeSrc": "20271:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20271:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20266:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "20266:1:14"
																}
															]
														},
														{
															"nativeSrc": "20298:17:14",
															"nodeType": "YulAssignment",
															"src": "20298:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20310:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20310:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20313:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20313:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "20306:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20306:3:14"
																},
																"nativeSrc": "20306:9:14",
																"nodeType": "YulFunctionCall",
																"src": "20306:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "20298:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20298:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20465:22:14",
																"nodeType": "YulBlock",
																"src": "20465:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20467:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "20467:16:14"
																			},
																			"nativeSrc": "20467:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "20467:18:14"
																		},
																		"nativeSrc": "20467:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "20467:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "diff",
																				"nativeSrc": "20348:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20348:4:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20354:66:14",
																				"nodeType": "YulLiteral",
																				"src": "20354:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "20344:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20344:3:14"
																		},
																		"nativeSrc": "20344:77:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20344:77:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "diff",
																				"nativeSrc": "20439:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20439:4:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20445:8:14",
																				"nodeType": "YulLiteral",
																				"src": "20445:8:14",
																				"type": "",
																				"value": "0x7fffff"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nativeSrc": "20435:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20435:3:14"
																		},
																		"nativeSrc": "20435:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20435:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20328:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "20328:2:14"
																},
																"nativeSrc": "20328:136:14",
																"nodeType": "YulFunctionCall",
																"src": "20328:136:14"
															},
															"nativeSrc": "20325:162:14",
															"nodeType": "YulIf",
															"src": "20325:162:14"
														}
													]
												},
												"name": "checked_sub_t_int24",
												"nativeSrc": "20181:313:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20210:1:14",
														"nodeType": "YulTypedName",
														"src": "20210:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20213:1:14",
														"nodeType": "YulTypedName",
														"src": "20213:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20219:4:14",
														"nodeType": "YulTypedName",
														"src": "20219:4:14",
														"type": ""
													}
												],
												"src": "20181:313:14"
											},
											{
												"body": {
													"nativeSrc": "20546:225:14",
													"nodeType": "YulBlock",
													"src": "20546:225:14",
													"statements": [
														{
															"nativeSrc": "20556:23:14",
															"nodeType": "YulAssignment",
															"src": "20556:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20577:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20577:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "20561:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "20561:15:14"
																},
																"nativeSrc": "20561:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20561:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20556:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "20556:1:14"
																}
															]
														},
														{
															"nativeSrc": "20588:23:14",
															"nodeType": "YulAssignment",
															"src": "20588:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20609:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20609:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "20593:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "20593:15:14"
																},
																"nativeSrc": "20593:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20593:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20588:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "20588:1:14"
																}
															]
														},
														{
															"nativeSrc": "20620:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "20620:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20643:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20643:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20646:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20646:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20639:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20639:3:14"
																},
																"nativeSrc": "20639:9:14",
																"nodeType": "YulFunctionCall",
																"src": "20639:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "20624:11:14",
																	"nodeType": "YulTypedName",
																	"src": "20624:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20657:39:14",
															"nodeType": "YulAssignment",
															"src": "20657:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "20684:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "20684:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "20668:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "20668:15:14"
																},
																"nativeSrc": "20668:28:14",
																"nodeType": "YulFunctionCall",
																"src": "20668:28:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "20657:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "20657:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20742:22:14",
																"nodeType": "YulBlock",
																"src": "20742:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20744:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "20744:16:14"
																			},
																			"nativeSrc": "20744:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "20744:18:14"
																		},
																		"nativeSrc": "20744:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "20744:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nativeSrc": "20719:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "20719:7:14"
																			},
																			{
																				"name": "product_raw",
																				"nativeSrc": "20728:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "20728:11:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20716:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "20716:2:14"
																		},
																		"nativeSrc": "20716:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20716:24:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20709:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20709:6:14"
																},
																"nativeSrc": "20709:32:14",
																"nodeType": "YulFunctionCall",
																"src": "20709:32:14"
															},
															"nativeSrc": "20706:58:14",
															"nodeType": "YulIf",
															"src": "20706:58:14"
														}
													]
												},
												"name": "checked_mul_t_int24",
												"nativeSrc": "20500:271:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20529:1:14",
														"nodeType": "YulTypedName",
														"src": "20529:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20532:1:14",
														"nodeType": "YulTypedName",
														"src": "20532:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "20538:7:14",
														"nodeType": "YulTypedName",
														"src": "20538:7:14",
														"type": ""
													}
												],
												"src": "20500:271:14"
											},
											{
												"body": {
													"nativeSrc": "20820:43:14",
													"nodeType": "YulBlock",
													"src": "20820:43:14",
													"statements": [
														{
															"nativeSrc": "20830:27:14",
															"nodeType": "YulAssignment",
															"src": "20830:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20845:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "20845:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20852:4:14",
																		"nodeType": "YulLiteral",
																		"src": "20852:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20841:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20841:3:14"
																},
																"nativeSrc": "20841:16:14",
																"nodeType": "YulFunctionCall",
																"src": "20841:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20830:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "20830:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "20777:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20802:5:14",
														"nodeType": "YulTypedName",
														"src": "20802:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20812:7:14",
														"nodeType": "YulTypedName",
														"src": "20812:7:14",
														"type": ""
													}
												],
												"src": "20777:86:14"
											},
											{
												"body": {
													"nativeSrc": "20912:148:14",
													"nodeType": "YulBlock",
													"src": "20912:148:14",
													"statements": [
														{
															"nativeSrc": "20922:23:14",
															"nodeType": "YulAssignment",
															"src": "20922:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20943:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20943:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "20927:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "20927:15:14"
																},
																"nativeSrc": "20927:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20927:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20922:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "20922:1:14"
																}
															]
														},
														{
															"nativeSrc": "20954:23:14",
															"nodeType": "YulAssignment",
															"src": "20954:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20975:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20975:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "20959:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "20959:15:14"
																},
																"nativeSrc": "20959:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20959:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20954:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "20954:1:14"
																}
															]
														},
														{
															"nativeSrc": "20986:17:14",
															"nodeType": "YulAssignment",
															"src": "20986:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20998:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "20998:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21001:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21001:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "20994:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20994:3:14"
																},
																"nativeSrc": "20994:9:14",
																"nodeType": "YulFunctionCall",
																"src": "20994:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "20986:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20986:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21031:22:14",
																"nodeType": "YulBlock",
																"src": "21031:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21033:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "21033:16:14"
																			},
																			"nativeSrc": "21033:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21033:18:14"
																		},
																		"nativeSrc": "21033:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21033:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "21019:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21019:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21025:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21025:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21016:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "21016:2:14"
																},
																"nativeSrc": "21016:14:14",
																"nodeType": "YulFunctionCall",
																"src": "21016:14:14"
															},
															"nativeSrc": "21013:40:14",
															"nodeType": "YulIf",
															"src": "21013:40:14"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "20869:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20898:1:14",
														"nodeType": "YulTypedName",
														"src": "20898:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20901:1:14",
														"nodeType": "YulTypedName",
														"src": "20901:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "20907:4:14",
														"nodeType": "YulTypedName",
														"src": "20907:4:14",
														"type": ""
													}
												],
												"src": "20869:191:14"
											},
											{
												"body": {
													"nativeSrc": "21108:267:14",
													"nodeType": "YulBlock",
													"src": "21108:267:14",
													"statements": [
														{
															"nativeSrc": "21118:23:14",
															"nodeType": "YulAssignment",
															"src": "21118:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21139:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21139:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "21123:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "21123:15:14"
																},
																"nativeSrc": "21123:18:14",
																"nodeType": "YulFunctionCall",
																"src": "21123:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21118:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "21118:1:14"
																}
															]
														},
														{
															"nativeSrc": "21150:23:14",
															"nodeType": "YulAssignment",
															"src": "21150:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21171:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21171:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "21155:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "21155:15:14"
																},
																"nativeSrc": "21155:18:14",
																"nodeType": "YulFunctionCall",
																"src": "21155:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21150:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "21150:1:14"
																}
															]
														},
														{
															"nativeSrc": "21182:16:14",
															"nodeType": "YulAssignment",
															"src": "21182:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21193:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21193:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21196:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "21196:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21189:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21189:3:14"
																},
																"nativeSrc": "21189:9:14",
																"nodeType": "YulFunctionCall",
																"src": "21189:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21182:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21182:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21346:22:14",
																"nodeType": "YulBlock",
																"src": "21346:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21348:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "21348:16:14"
																			},
																			"nativeSrc": "21348:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21348:18:14"
																		},
																		"nativeSrc": "21348:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21348:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "sum",
																				"nativeSrc": "21231:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "21231:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21236:8:14",
																				"nodeType": "YulLiteral",
																				"src": "21236:8:14",
																				"type": "",
																				"value": "0x7fffff"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nativeSrc": "21227:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21227:3:14"
																		},
																		"nativeSrc": "21227:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21227:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "sum",
																				"nativeSrc": "21263:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "21263:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21268:66:14",
																				"nodeType": "YulLiteral",
																				"src": "21268:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "21259:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21259:3:14"
																		},
																		"nativeSrc": "21259:76:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21259:76:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21211:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "21211:2:14"
																},
																"nativeSrc": "21211:134:14",
																"nodeType": "YulFunctionCall",
																"src": "21211:134:14"
															},
															"nativeSrc": "21208:160:14",
															"nodeType": "YulIf",
															"src": "21208:160:14"
														}
													]
												},
												"name": "checked_add_t_int24",
												"nativeSrc": "21066:309:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21095:1:14",
														"nodeType": "YulTypedName",
														"src": "21095:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21098:1:14",
														"nodeType": "YulTypedName",
														"src": "21098:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21104:3:14",
														"nodeType": "YulTypedName",
														"src": "21104:3:14",
														"type": ""
													}
												],
												"src": "21066:309:14"
											},
											{
												"body": {
													"nativeSrc": "21487:45:14",
													"nodeType": "YulBlock",
													"src": "21487:45:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21509:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21509:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21517:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21517:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21505:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21505:3:14"
																		},
																		"nativeSrc": "21505:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21505:14:14"
																	},
																	{
																		"hexValue": "52",
																		"kind": "string",
																		"nativeSrc": "21521:3:14",
																		"nodeType": "YulLiteral",
																		"src": "21521:3:14",
																		"type": "",
																		"value": "R"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21498:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21498:6:14"
																},
																"nativeSrc": "21498:27:14",
																"nodeType": "YulFunctionCall",
																"src": "21498:27:14"
															},
															"nativeSrc": "21498:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "21498:27:14"
														}
													]
												},
												"name": "store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
												"nativeSrc": "21381:151:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21479:6:14",
														"nodeType": "YulTypedName",
														"src": "21479:6:14",
														"type": ""
													}
												],
												"src": "21381:151:14"
											},
											{
												"body": {
													"nativeSrc": "21684:219:14",
													"nodeType": "YulBlock",
													"src": "21684:219:14",
													"statements": [
														{
															"nativeSrc": "21694:73:14",
															"nodeType": "YulAssignment",
															"src": "21694:73:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21760:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21760:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21765:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21765:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21701:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "21701:58:14"
																},
																"nativeSrc": "21701:66:14",
																"nodeType": "YulFunctionCall",
																"src": "21701:66:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21694:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21694:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21865:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21865:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																	"nativeSrc": "21776:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "21776:88:14"
																},
																"nativeSrc": "21776:93:14",
																"nodeType": "YulFunctionCall",
																"src": "21776:93:14"
															},
															"nativeSrc": "21776:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "21776:93:14"
														},
														{
															"nativeSrc": "21878:19:14",
															"nodeType": "YulAssignment",
															"src": "21878:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21889:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21889:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21894:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21894:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21885:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21885:3:14"
																},
																"nativeSrc": "21885:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21885:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21878:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21878:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21538:365:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21672:3:14",
														"nodeType": "YulTypedName",
														"src": "21672:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21680:3:14",
														"nodeType": "YulTypedName",
														"src": "21680:3:14",
														"type": ""
													}
												],
												"src": "21538:365:14"
											},
											{
												"body": {
													"nativeSrc": "22080:248:14",
													"nodeType": "YulBlock",
													"src": "22080:248:14",
													"statements": [
														{
															"nativeSrc": "22090:26:14",
															"nodeType": "YulAssignment",
															"src": "22090:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22102:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "22102:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22113:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22113:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22098:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22098:3:14"
																},
																"nativeSrc": "22098:18:14",
																"nodeType": "YulFunctionCall",
																"src": "22098:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22090:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22090:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22137:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22137:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22148:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22148:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22133:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22133:3:14"
																		},
																		"nativeSrc": "22133:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22133:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22156:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "22156:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22162:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22162:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22152:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22152:3:14"
																		},
																		"nativeSrc": "22152:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22152:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22126:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22126:6:14"
																},
																"nativeSrc": "22126:47:14",
																"nodeType": "YulFunctionCall",
																"src": "22126:47:14"
															},
															"nativeSrc": "22126:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "22126:47:14"
														},
														{
															"nativeSrc": "22182:139:14",
															"nodeType": "YulAssignment",
															"src": "22182:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22316:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "22316:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22190:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "22190:124:14"
																},
																"nativeSrc": "22190:131:14",
																"nodeType": "YulFunctionCall",
																"src": "22190:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22182:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22182:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21909:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22060:9:14",
														"nodeType": "YulTypedName",
														"src": "22060:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22075:4:14",
														"nodeType": "YulTypedName",
														"src": "22075:4:14",
														"type": ""
													}
												],
												"src": "21909:419:14"
											},
											{
												"body": {
													"nativeSrc": "22378:328:14",
													"nodeType": "YulBlock",
													"src": "22378:328:14",
													"statements": [
														{
															"nativeSrc": "22388:24:14",
															"nodeType": "YulAssignment",
															"src": "22388:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22410:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "22410:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "22393:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "22393:16:14"
																},
																"nativeSrc": "22393:19:14",
																"nodeType": "YulFunctionCall",
																"src": "22393:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22388:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "22388:1:14"
																}
															]
														},
														{
															"nativeSrc": "22421:24:14",
															"nodeType": "YulAssignment",
															"src": "22421:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22443:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "22443:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "22426:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "22426:16:14"
																},
																"nativeSrc": "22426:19:14",
																"nodeType": "YulFunctionCall",
																"src": "22426:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22421:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "22421:1:14"
																}
															]
														},
														{
															"nativeSrc": "22454:17:14",
															"nodeType": "YulAssignment",
															"src": "22454:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22466:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "22466:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22469:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "22469:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "22462:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22462:3:14"
																},
																"nativeSrc": "22462:9:14",
																"nodeType": "YulFunctionCall",
																"src": "22462:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "22454:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "22454:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22677:22:14",
																"nodeType": "YulBlock",
																"src": "22677:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22679:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "22679:16:14"
																			},
																			"nativeSrc": "22679:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "22679:18:14"
																		},
																		"nativeSrc": "22679:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "22679:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "y",
																								"nativeSrc": "22603:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "22603:1:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "22606:1:14",
																								"nodeType": "YulLiteral",
																								"src": "22606:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nativeSrc": "22599:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "22599:3:14"
																						},
																						"nativeSrc": "22599:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "22599:9:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "22592:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "22592:6:14"
																				},
																				"nativeSrc": "22592:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22592:17:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "22615:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "22615:4:14"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "22621:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "22621:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nativeSrc": "22611:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "22611:3:14"
																				},
																				"nativeSrc": "22611:12:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22611:12:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22588:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22588:3:14"
																		},
																		"nativeSrc": "22588:36:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22588:36:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "22646:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "22646:1:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "22649:1:14",
																						"nodeType": "YulLiteral",
																						"src": "22649:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "22642:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "22642:3:14"
																				},
																				"nativeSrc": "22642:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22642:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "diff",
																						"nativeSrc": "22657:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "22657:4:14"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "22663:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "22663:1:14"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "22653:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "22653:3:14"
																				},
																				"nativeSrc": "22653:12:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22653:12:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22638:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22638:3:14"
																		},
																		"nativeSrc": "22638:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22638:28:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22572:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "22572:2:14"
																},
																"nativeSrc": "22572:104:14",
																"nodeType": "YulFunctionCall",
																"src": "22572:104:14"
															},
															"nativeSrc": "22569:130:14",
															"nodeType": "YulIf",
															"src": "22569:130:14"
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nativeSrc": "22334:372:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22364:1:14",
														"nodeType": "YulTypedName",
														"src": "22364:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22367:1:14",
														"nodeType": "YulTypedName",
														"src": "22367:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "22373:4:14",
														"nodeType": "YulTypedName",
														"src": "22373:4:14",
														"type": ""
													}
												],
												"src": "22334:372:14"
											},
											{
												"body": {
													"nativeSrc": "22759:509:14",
													"nodeType": "YulBlock",
													"src": "22759:509:14",
													"statements": [
														{
															"nativeSrc": "22769:24:14",
															"nodeType": "YulAssignment",
															"src": "22769:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22791:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "22791:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "22774:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "22774:16:14"
																},
																"nativeSrc": "22774:19:14",
																"nodeType": "YulFunctionCall",
																"src": "22774:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22769:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "22769:1:14"
																}
															]
														},
														{
															"nativeSrc": "22802:24:14",
															"nodeType": "YulAssignment",
															"src": "22802:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22824:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "22824:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "22807:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "22807:16:14"
																},
																"nativeSrc": "22807:19:14",
																"nodeType": "YulFunctionCall",
																"src": "22807:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22802:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "22802:1:14"
																}
															]
														},
														{
															"nativeSrc": "22835:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "22835:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22858:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "22858:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22861:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "22861:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22854:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22854:3:14"
																},
																"nativeSrc": "22854:9:14",
																"nodeType": "YulFunctionCall",
																"src": "22854:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "22839:11:14",
																	"nodeType": "YulTypedName",
																	"src": "22839:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22872:40:14",
															"nodeType": "YulAssignment",
															"src": "22872:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "22900:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "22900:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "22883:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "22883:16:14"
																},
																"nativeSrc": "22883:29:14",
																"nodeType": "YulFunctionCall",
																"src": "22883:29:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "22872:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "22872:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23039:22:14",
																"nodeType": "YulBlock",
																"src": "23039:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23041:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "23041:16:14"
																			},
																			"nativeSrc": "23041:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "23041:18:14"
																		},
																		"nativeSrc": "23041:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "23041:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "22957:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "22957:1:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22960:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22960:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "22953:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22953:3:14"
																		},
																		"nativeSrc": "22953:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22953:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "22967:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "22967:1:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22970:66:14",
																				"nodeType": "YulLiteral",
																				"src": "22970:66:14",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "22964:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "22964:2:14"
																		},
																		"nativeSrc": "22964:73:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22964:73:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22949:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22949:3:14"
																},
																"nativeSrc": "22949:89:14",
																"nodeType": "YulFunctionCall",
																"src": "22949:89:14"
															},
															"nativeSrc": "22946:115:14",
															"nodeType": "YulIf",
															"src": "22946:115:14"
														},
														{
															"body": {
																"nativeSrc": "23239:22:14",
																"nodeType": "YulBlock",
																"src": "23239:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23241:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "23241:16:14"
																			},
																			"nativeSrc": "23241:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "23241:18:14"
																		},
																		"nativeSrc": "23241:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "23241:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "23171:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "23171:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "23164:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "23164:6:14"
																				},
																				"nativeSrc": "23164:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "23164:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "23194:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "23194:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "23202:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "23202:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "23211:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "23211:1:14"
																							}
																						],
																						"functionName": {
																							"name": "sdiv",
																							"nativeSrc": "23197:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "23197:4:14"
																						},
																						"nativeSrc": "23197:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "23197:16:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "23191:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "23191:2:14"
																				},
																				"nativeSrc": "23191:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "23191:23:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "23144:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "23144:2:14"
																		},
																		"nativeSrc": "23144:84:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23144:84:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23124:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23124:6:14"
																},
																"nativeSrc": "23124:114:14",
																"nodeType": "YulFunctionCall",
																"src": "23124:114:14"
															},
															"nativeSrc": "23121:140:14",
															"nodeType": "YulIf",
															"src": "23121:140:14"
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nativeSrc": "22712:556:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22742:1:14",
														"nodeType": "YulTypedName",
														"src": "22742:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22745:1:14",
														"nodeType": "YulTypedName",
														"src": "22745:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "22751:7:14",
														"nodeType": "YulTypedName",
														"src": "22751:7:14",
														"type": ""
													}
												],
												"src": "22712:556:14"
											},
											{
												"body": {
													"nativeSrc": "23317:332:14",
													"nodeType": "YulBlock",
													"src": "23317:332:14",
													"statements": [
														{
															"nativeSrc": "23327:24:14",
															"nodeType": "YulAssignment",
															"src": "23327:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23349:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23349:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "23332:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "23332:16:14"
																},
																"nativeSrc": "23332:19:14",
																"nodeType": "YulFunctionCall",
																"src": "23332:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23327:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "23327:1:14"
																}
															]
														},
														{
															"nativeSrc": "23360:24:14",
															"nodeType": "YulAssignment",
															"src": "23360:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23382:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23382:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "23365:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "23365:16:14"
																},
																"nativeSrc": "23365:19:14",
																"nodeType": "YulFunctionCall",
																"src": "23365:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23360:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "23360:1:14"
																}
															]
														},
														{
															"nativeSrc": "23393:16:14",
															"nodeType": "YulAssignment",
															"src": "23393:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23404:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23404:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "23407:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23407:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23400:3:14"
																},
																"nativeSrc": "23400:9:14",
																"nodeType": "YulFunctionCall",
																"src": "23400:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "23393:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23393:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23620:22:14",
																"nodeType": "YulBlock",
																"src": "23620:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23622:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "23622:16:14"
																			},
																			"nativeSrc": "23622:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "23622:18:14"
																		},
																		"nativeSrc": "23622:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "23622:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "x",
																								"nativeSrc": "23540:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "23540:1:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "23543:1:14",
																								"nodeType": "YulLiteral",
																								"src": "23543:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nativeSrc": "23536:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "23536:3:14"
																						},
																						"nativeSrc": "23536:9:14",
																						"nodeType": "YulFunctionCall",
																						"src": "23536:9:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "23529:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "23529:6:14"
																				},
																				"nativeSrc": "23529:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "23529:17:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "sum",
																						"nativeSrc": "23552:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "23552:3:14"
																					},
																					{
																						"name": "y",
																						"nativeSrc": "23557:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "23557:1:14"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "23548:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "23548:3:14"
																				},
																				"nativeSrc": "23548:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "23548:11:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23525:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23525:3:14"
																		},
																		"nativeSrc": "23525:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23525:35:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "23582:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "23582:1:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "23585:1:14",
																						"nodeType": "YulLiteral",
																						"src": "23585:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nativeSrc": "23578:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "23578:3:14"
																				},
																				"nativeSrc": "23578:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "23578:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "sum",
																								"nativeSrc": "23600:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "23600:3:14"
																							},
																							{
																								"name": "y",
																								"nativeSrc": "23605:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "23605:1:14"
																							}
																						],
																						"functionName": {
																							"name": "slt",
																							"nativeSrc": "23596:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "23596:3:14"
																						},
																						"nativeSrc": "23596:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "23596:11:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "23589:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "23589:6:14"
																				},
																				"nativeSrc": "23589:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "23589:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "23574:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23574:3:14"
																		},
																		"nativeSrc": "23574:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23574:35:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23509:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "23509:2:14"
																},
																"nativeSrc": "23509:110:14",
																"nodeType": "YulFunctionCall",
																"src": "23509:110:14"
															},
															"nativeSrc": "23506:136:14",
															"nodeType": "YulIf",
															"src": "23506:136:14"
														}
													]
												},
												"name": "checked_add_t_int256",
												"nativeSrc": "23274:375:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23304:1:14",
														"nodeType": "YulTypedName",
														"src": "23304:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23307:1:14",
														"nodeType": "YulTypedName",
														"src": "23307:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23313:3:14",
														"nodeType": "YulTypedName",
														"src": "23313:3:14",
														"type": ""
													}
												],
												"src": "23274:375:14"
											},
											{
												"body": {
													"nativeSrc": "23698:190:14",
													"nodeType": "YulBlock",
													"src": "23698:190:14",
													"statements": [
														{
															"nativeSrc": "23708:33:14",
															"nodeType": "YulAssignment",
															"src": "23708:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23735:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "23735:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "23717:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "23717:17:14"
																},
																"nativeSrc": "23717:24:14",
																"nodeType": "YulFunctionCall",
																"src": "23717:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23708:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "23708:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "23831:22:14",
																"nodeType": "YulBlock",
																"src": "23831:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "23833:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "23833:16:14"
																			},
																			"nativeSrc": "23833:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "23833:18:14"
																		},
																		"nativeSrc": "23833:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "23833:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23756:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "23756:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23763:66:14",
																		"nodeType": "YulLiteral",
																		"src": "23763:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "23753:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "23753:2:14"
																},
																"nativeSrc": "23753:77:14",
																"nodeType": "YulFunctionCall",
																"src": "23753:77:14"
															},
															"nativeSrc": "23750:103:14",
															"nodeType": "YulIf",
															"src": "23750:103:14"
														},
														{
															"nativeSrc": "23862:20:14",
															"nodeType": "YulAssignment",
															"src": "23862:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23873:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "23873:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23880:1:14",
																		"nodeType": "YulLiteral",
																		"src": "23880:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23869:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23869:3:14"
																},
																"nativeSrc": "23869:13:14",
																"nodeType": "YulFunctionCall",
																"src": "23869:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23862:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23862:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "23655:233:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23684:5:14",
														"nodeType": "YulTypedName",
														"src": "23684:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23694:3:14",
														"nodeType": "YulTypedName",
														"src": "23694:3:14",
														"type": ""
													}
												],
												"src": "23655:233:14"
											},
											{
												"body": {
													"nativeSrc": "23936:146:14",
													"nodeType": "YulBlock",
													"src": "23936:146:14",
													"statements": [
														{
															"nativeSrc": "23946:23:14",
															"nodeType": "YulAssignment",
															"src": "23946:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "23967:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23967:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "23951:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "23951:15:14"
																},
																"nativeSrc": "23951:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23951:18:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "23946:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "23946:1:14"
																}
															]
														},
														{
															"nativeSrc": "23978:23:14",
															"nodeType": "YulAssignment",
															"src": "23978:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "23999:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "23999:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "23983:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "23983:15:14"
																},
																"nativeSrc": "23983:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23983:18:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "23978:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "23978:1:14"
																}
															]
														},
														{
															"nativeSrc": "24010:16:14",
															"nodeType": "YulAssignment",
															"src": "24010:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "24021:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "24021:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "24024:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "24024:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24017:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24017:3:14"
																},
																"nativeSrc": "24017:9:14",
																"nodeType": "YulFunctionCall",
																"src": "24017:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "24010:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24010:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24053:22:14",
																"nodeType": "YulBlock",
																"src": "24053:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "24055:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "24055:16:14"
																			},
																			"nativeSrc": "24055:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "24055:18:14"
																		},
																		"nativeSrc": "24055:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "24055:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "24042:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24042:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24047:4:14",
																		"nodeType": "YulLiteral",
																		"src": "24047:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24039:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "24039:2:14"
																},
																"nativeSrc": "24039:13:14",
																"nodeType": "YulFunctionCall",
																"src": "24039:13:14"
															},
															"nativeSrc": "24036:39:14",
															"nodeType": "YulIf",
															"src": "24036:39:14"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nativeSrc": "23894:188:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "23923:1:14",
														"nodeType": "YulTypedName",
														"src": "23923:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "23926:1:14",
														"nodeType": "YulTypedName",
														"src": "23926:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "23932:3:14",
														"nodeType": "YulTypedName",
														"src": "23932:3:14",
														"type": ""
													}
												],
												"src": "23894:188:14"
											},
											{
												"body": {
													"nativeSrc": "24194:61:14",
													"nodeType": "YulBlock",
													"src": "24194:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24216:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "24216:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24224:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24224:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24212:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24212:3:14"
																		},
																		"nativeSrc": "24212:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24212:14:14"
																	},
																	{
																		"hexValue": "5052424d6174683a206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "24228:19:14",
																		"nodeType": "YulLiteral",
																		"src": "24228:19:14",
																		"type": "",
																		"value": "PRBMath: overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24205:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24205:6:14"
																},
																"nativeSrc": "24205:43:14",
																"nodeType": "YulFunctionCall",
																"src": "24205:43:14"
															},
															"nativeSrc": "24205:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "24205:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238",
												"nativeSrc": "24088:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24186:6:14",
														"nodeType": "YulTypedName",
														"src": "24186:6:14",
														"type": ""
													}
												],
												"src": "24088:167:14"
											},
											{
												"body": {
													"nativeSrc": "24407:220:14",
													"nodeType": "YulBlock",
													"src": "24407:220:14",
													"statements": [
														{
															"nativeSrc": "24417:74:14",
															"nodeType": "YulAssignment",
															"src": "24417:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24483:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24483:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24488:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24488:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24424:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "24424:58:14"
																},
																"nativeSrc": "24424:67:14",
																"nodeType": "YulFunctionCall",
																"src": "24424:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24417:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24417:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24589:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24589:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238",
																	"nativeSrc": "24500:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "24500:88:14"
																},
																"nativeSrc": "24500:93:14",
																"nodeType": "YulFunctionCall",
																"src": "24500:93:14"
															},
															"nativeSrc": "24500:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "24500:93:14"
														},
														{
															"nativeSrc": "24602:19:14",
															"nodeType": "YulAssignment",
															"src": "24602:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24613:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24613:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24618:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24618:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24609:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24609:3:14"
																},
																"nativeSrc": "24609:12:14",
																"nodeType": "YulFunctionCall",
																"src": "24609:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24602:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24602:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24261:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24395:3:14",
														"nodeType": "YulTypedName",
														"src": "24395:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24403:3:14",
														"nodeType": "YulTypedName",
														"src": "24403:3:14",
														"type": ""
													}
												],
												"src": "24261:366:14"
											},
											{
												"body": {
													"nativeSrc": "24804:248:14",
													"nodeType": "YulBlock",
													"src": "24804:248:14",
													"statements": [
														{
															"nativeSrc": "24814:26:14",
															"nodeType": "YulAssignment",
															"src": "24814:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24826:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24826:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24837:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24837:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24822:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24822:3:14"
																},
																"nativeSrc": "24822:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24822:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24814:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24814:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24861:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24861:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24872:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24872:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24857:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24857:3:14"
																		},
																		"nativeSrc": "24857:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24857:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24880:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24880:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24886:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24886:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24876:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24876:3:14"
																		},
																		"nativeSrc": "24876:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24876:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24850:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24850:6:14"
																},
																"nativeSrc": "24850:47:14",
																"nodeType": "YulFunctionCall",
																"src": "24850:47:14"
															},
															"nativeSrc": "24850:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "24850:47:14"
														},
														{
															"nativeSrc": "24906:139:14",
															"nodeType": "YulAssignment",
															"src": "24906:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25040:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25040:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24914:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "24914:124:14"
																},
																"nativeSrc": "24914:131:14",
																"nodeType": "YulFunctionCall",
																"src": "24914:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24906:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24906:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24633:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24784:9:14",
														"nodeType": "YulTypedName",
														"src": "24784:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24799:4:14",
														"nodeType": "YulTypedName",
														"src": "24799:4:14",
														"type": ""
													}
												],
												"src": "24633:419:14"
											},
											{
												"body": {
													"nativeSrc": "25102:188:14",
													"nodeType": "YulBlock",
													"src": "25102:188:14",
													"statements": [
														{
															"nativeSrc": "25112:25:14",
															"nodeType": "YulAssignment",
															"src": "25112:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25135:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "25135:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "25117:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "25117:17:14"
																},
																"nativeSrc": "25117:20:14",
																"nodeType": "YulFunctionCall",
																"src": "25117:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "25112:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "25112:1:14"
																}
															]
														},
														{
															"nativeSrc": "25146:25:14",
															"nodeType": "YulAssignment",
															"src": "25146:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "25169:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "25169:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "25151:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "25151:17:14"
																},
																"nativeSrc": "25151:20:14",
																"nodeType": "YulFunctionCall",
																"src": "25151:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "25146:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "25146:1:14"
																}
															]
														},
														{
															"nativeSrc": "25180:16:14",
															"nodeType": "YulAssignment",
															"src": "25180:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "25191:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "25191:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "25194:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "25194:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25187:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25187:3:14"
																},
																"nativeSrc": "25187:9:14",
																"nodeType": "YulFunctionCall",
																"src": "25187:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "25180:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25180:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25261:22:14",
																"nodeType": "YulBlock",
																"src": "25261:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "25263:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "25263:16:14"
																			},
																			"nativeSrc": "25263:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "25263:18:14"
																		},
																		"nativeSrc": "25263:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "25263:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "25212:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "25212:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25217:42:14",
																		"nodeType": "YulLiteral",
																		"src": "25217:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25209:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25209:2:14"
																},
																"nativeSrc": "25209:51:14",
																"nodeType": "YulFunctionCall",
																"src": "25209:51:14"
															},
															"nativeSrc": "25206:77:14",
															"nodeType": "YulIf",
															"src": "25206:77:14"
														}
													]
												},
												"name": "checked_add_t_uint160",
												"nativeSrc": "25058:232:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "25089:1:14",
														"nodeType": "YulTypedName",
														"src": "25089:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "25092:1:14",
														"nodeType": "YulTypedName",
														"src": "25092:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "25098:3:14",
														"nodeType": "YulTypedName",
														"src": "25098:3:14",
														"type": ""
													}
												],
												"src": "25058:232:14"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function abi_encode_t_int24_to_t_int24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    function abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int16(value) -> cleaned {\n        cleaned := signextend(1, value)\n    }\n\n    function validator_revert_t_int16(value) {\n        if iszero(eq(value, cleanup_t_int16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int16(value)\n    }\n\n    function abi_decode_tuple_t_int16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_boolt_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_int24(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function negate_t_int24(value) -> ret {\n        value := cleanup_t_int24(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function checked_add_t_uint128(x, y) -> sum {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_int24(x, y) -> r {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        if iszero(y) { panic_error_0x12() }\n        r := smod(x, y)\n    }\n\n    function checked_div_t_int24(x, y) -> r {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function shift_left_232(value) -> newValue {\n        newValue :=\n\n        shl(232, value)\n\n    }\n\n    function leftAlign_t_int24(value) -> aligned {\n        aligned := shift_left_232(value)\n    }\n\n    function abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_int24(cleanup_t_int24(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 3)\n\n        abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 3)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"T\")\n\n    }\n\n    function abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 1)\n        store_literal_in_memory_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_sub_t_uint160(x, y) -> diff {\n        x := cleanup_t_uint160(x)\n        y := cleanup_t_uint160(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function decrement_t_int24(value) -> ret {\n        value := cleanup_t_int24(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function checked_sub_t_int24(x, y) -> diff {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        diff := sub(x, y)\n\n        if or(\n            slt(diff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000),\n            sgt(diff, 0x7fffff)\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_int24(x, y) -> product {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int24(product_raw)\n\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_int24(x, y) -> sum {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        sum := add(x, y)\n\n        if or(\n            sgt(sum, 0x7fffff),\n            slt(sum, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000)\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"R\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 1)\n        store_literal_in_memory_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_int256(x, y) -> diff {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        diff := sub(x, y)\n\n        // underflow, if y >= 0 and diff > x\n        // overflow, if y < 0 and diff < x\n        if or(\n            and(iszero(slt(y, 0)), sgt(diff, x)),\n            and(slt(y, 0), slt(diff, x))\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_int256(product_raw)\n\n        // special case\n        if and(slt(x, 0), eq(y, 0x8000000000000000000000000000000000000000000000000000000000000000)) { panic_error_0x11() }\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, sdiv(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        sum := add(x, y)\n\n        // overflow, if x >= 0 and sum < y\n        // underflow, if x < 0 and sum >= y\n        if or(\n            and(iszero(slt(x, 0)), slt(sum, y)),\n            and(slt(x, 0), iszero(slt(sum, y)))\n        ) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238(memPtr) {\n\n        mstore(add(memPtr, 0), \"PRBMath: overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint160(x, y) -> sum {\n        x := cleanup_t_uint160(x)\n        y := cleanup_t_uint160(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"50": [
									{
										"length": 32,
										"start": 515
									},
									{
										"length": 32,
										"start": 3122
									},
									{
										"length": 32,
										"start": 5905
									}
								],
								"52": [
									{
										"length": 32,
										"start": 2756
									},
									{
										"length": 32,
										"start": 3684
									},
									{
										"length": 32,
										"start": 6063
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x514EA4BF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x514EA4BF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x5339C296 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x80C2C6EF EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0xF30DBA93 EQ PUSH2 0x1D0 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x3850C7BD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3C8A7D8D EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP3 SWAP2 SWAP1 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x2648 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP3 SWAP2 SWAP1 PUSH2 0x26F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x2750 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH2 0x773 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x27DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x2854 JUMP JUMPDEST PUSH2 0x788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP3 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP3 SWAP2 SWAP1 PUSH2 0x2951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT ISZERO DUP1 PUSH2 0x2BD JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST DUP1 PUSH2 0x2F6 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x2ED SWAP1 PUSH2 0x29A5 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH32 0x64847D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1007454800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x38F DUP9 DUP8 PUSH1 0x2 PUSH2 0xECD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3A8 DUP9 DUP9 PUSH1 0x2 PUSH2 0xECD SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C7 DUP10 PUSH1 0x1 PUSH1 0x3 PUSH2 0xFC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E5 DUP9 PUSH1 0x1 PUSH1 0x3 PUSH2 0xFC4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FF DUP12 DUP12 DUP12 PUSH1 0x4 PUSH2 0x102D SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP9 DUP3 PUSH2 0x1072 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP SWAP1 POP DUP11 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x4C7 JUMPI PUSH2 0x4C0 PUSH2 0x4B1 DUP13 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x4BA DUP13 PUSH2 0x10E2 JUMP JUMPDEST DUP12 PUSH2 0x1596 JUMP JUMPDEST SWAP6 POP PUSH2 0x58F JUMP JUMPDEST DUP10 PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND SLT ISZERO PUSH2 0x570 JUMPI PUSH2 0x4EF DUP2 PUSH0 ADD MLOAD PUSH2 0x4E9 DUP13 PUSH2 0x10E2 JUMP JUMPDEST DUP12 PUSH2 0x1596 JUMP JUMPDEST SWAP6 POP PUSH2 0x507 DUP2 PUSH0 ADD MLOAD PUSH2 0x501 DUP14 PUSH2 0x10E2 JUMP JUMPDEST DUP12 PUSH2 0x167A JUMP JUMPDEST SWAP5 POP DUP9 PUSH1 0x1 PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x29EB JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x58E JUMP JUMPDEST PUSH2 0x58B PUSH2 0x57C DUP13 PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x585 DUP13 PUSH2 0x10E2 JUMP JUMPDEST DUP12 PUSH2 0x167A JUMP JUMPDEST SWAP5 POP JUMPDEST JUMPDEST PUSH0 PUSH0 PUSH0 DUP9 GT ISZERO PUSH2 0x5A4 JUMPI PUSH2 0x5A1 PUSH2 0x170E JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP8 GT ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x5B4 PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD3487997 DUP10 DUP10 DUP14 DUP14 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A88 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x61F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP9 GT DUP1 ISZERO PUSH2 0x643 JUMPI POP PUSH2 0x635 PUSH2 0x170E JUMP JUMPDEST DUP9 DUP4 PUSH2 0x641 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP8 GT DUP1 ISZERO PUSH2 0x69A JUMPI POP PUSH2 0x68C PUSH2 0x17AC JUMP JUMPDEST DUP8 DUP3 PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP16 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE CALLER DUP16 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x725 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP SWAP1 POP JUMPDEST PUSH0 DUP2 PUSH0 ADD MLOAD GT ISZERO PUSH2 0x9E5 JUMPI PUSH2 0x861 PUSH2 0x241C JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD DUP2 PUSH0 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x8B9 DUP3 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP12 PUSH1 0x3 PUSH2 0x184A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP DUP2 PUSH1 0x20 ADD DUP2 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP PUSH2 0x8D6 DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0x10E2 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x941 DUP3 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH0 ADD MLOAD PUSH2 0x1A28 JUMP JUMPDEST DUP5 PUSH1 0x40 ADD DUP5 PUSH1 0x60 ADD DUP6 PUSH1 0x80 ADD DUP4 DUP2 MSTORE POP DUP4 DUP2 MSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP DUP1 PUSH1 0x60 ADD MLOAD DUP3 PUSH0 ADD DUP2 DUP2 MLOAD PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x20 ADD DUP2 DUP2 MLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 MSTORE POP POP PUSH2 0x9CE DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1AA1 JUMP JUMPDEST DUP3 PUSH1 0x60 ADD SWAP1 PUSH1 0x2 SIGNEXTEND SWAP1 DUP2 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP POP POP PUSH2 0x84E JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x2 SIGNEXTEND DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x2 SIGNEXTEND EQ PUSH2 0xA6F JUMPI DUP1 PUSH1 0x40 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD PUSH0 PUSH0 ADD PUSH0 PUSH0 PUSH0 ADD PUSH1 0x14 DUP5 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST DUP8 PUSH2 0xA96 JUMPI DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0xA82 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST DUP2 PUSH0 ADD MLOAD DUP9 PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST DUP1 PUSH0 ADD MLOAD DUP8 PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST DUP2 PUSH1 0x20 ADD MLOAD PUSH2 0xAB3 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP DUP8 ISZERO PUSH2 0xC30 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP6 PUSH2 0xB09 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB42 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB66 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST POP PUSH0 PUSH2 0xB70 PUSH2 0x170E JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFA461E33 DUP7 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBC8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBDA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xBE6 PUSH2 0x170E JUMP JUMPDEST DUP6 DUP3 PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST GT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xD9A JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP11 DUP7 PUSH2 0xC77 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC94 SWAP3 SWAP2 SWAP1 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x2BF0 JUMP JUMPDEST POP PUSH0 PUSH2 0xCDE PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFA461E33 DUP7 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C1B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD36 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD54 PUSH2 0x17AC JUMP JUMPDEST DUP5 DUP3 PUSH2 0xD60 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST GT ISZERO PUSH2 0xD98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67 DUP7 DUP7 PUSH0 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x40 MLOAD PUSH2 0xE4E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP5 DUP3 PUSH2 0xF17 SWAP2 SWAP1 PUSH2 0x29EB JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO EQ ISZERO SWAP4 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF80 JUMPI PUSH1 0x1 DUP4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP4 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x2CD7 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND EQ PUSH2 0xFDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH2 0xFF3 DUP4 DUP6 PUSH2 0xFEE SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL SWAP1 POP DUP1 DUP7 PUSH0 DUP6 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD XOR SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1045 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0x10A1 SWAP2 SWAP1 PUSH2 0x29EB JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x10F7 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1105 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1104 SWAP1 PUSH2 0x2B6F JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x1131 SWAP1 PUSH2 0x29A5 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 GT ISZERO PUSH2 0x1178 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116F SWAP1 PUSH2 0x2E7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x1 DUP4 AND SUB PUSH2 0x119A JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x11AC JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x11EE JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 PUSH2 0x11E9 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x121B JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x1248 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 PUSH2 0x1243 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x1275 JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x12A2 JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 PUSH2 0x129D SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x12CF JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x12FC JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 PUSH2 0x12F7 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x100 DUP4 AND EQ PUSH2 0x132A JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x200 DUP4 AND EQ PUSH2 0x1358 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 PUSH2 0x1353 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x400 DUP4 AND EQ PUSH2 0x1386 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x800 DUP4 AND EQ PUSH2 0x13B4 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 PUSH2 0x13AF SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0x13E2 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 PUSH2 0x13DD SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0x1410 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 PUSH2 0x140B SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0x143E JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 PUSH2 0x1439 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0x146C JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 PUSH2 0x1467 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0x149B JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 PUSH2 0x1496 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0x14C9 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 PUSH2 0x14C4 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0x14F6 JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0x1521 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 PUSH2 0x151C SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x155B JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1558 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH5 0x100000000 DUP3 PUSH2 0x156D SWAP2 SWAP1 PUSH2 0x2F0D JUMP JUMPDEST EQ PUSH2 0x1579 JUMPI PUSH1 0x1 PUSH2 0x157B JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR PUSH2 0x158D SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x15D6 JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x15F7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1671 PUSH2 0x1655 PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL DUP7 DUP7 PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x2F3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EBC JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F24 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x16BA JUMPI DUP3 DUP5 DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP JUMPDEST PUSH2 0x1705 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 PUSH2 0x16DC SWAP2 SWAP1 PUSH2 0x2F3D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH2 0x1EBC JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1768 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1783 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A7 SWAP2 SWAP1 PUSH2 0x2F98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1806 SWAP2 SWAP1 PUSH2 0x24B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1821 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1845 SWAP2 SWAP1 PUSH2 0x2F98 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP7 PUSH2 0x1859 SWAP2 SWAP1 PUSH2 0x2D07 JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH1 0x2 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x187B JUMPI POP PUSH0 DUP6 DUP8 PUSH2 0x1875 SWAP2 SWAP1 PUSH2 0x2CD7 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0x188F JUMPI DUP1 DUP1 PUSH2 0x188B SWAP1 PUSH2 0x2FC3 JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP4 ISZERO PUSH2 0x194C JUMPI PUSH0 PUSH0 PUSH2 0x18A0 DUP4 PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL PUSH1 0x1 DUP4 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL PUSH2 0x18C1 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP12 PUSH0 DUP7 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD AND SWAP1 POP PUSH0 DUP2 EQ ISZERO SWAP6 POP DUP6 PUSH2 0x1913 JUMPI DUP9 DUP4 PUSH1 0xFF AND DUP7 PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x300A JUMP JUMPDEST PUSH2 0x190E SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0x1941 JUMP JUMPDEST DUP9 PUSH2 0x191D DUP3 PUSH2 0x1F36 JUMP JUMPDEST DUP5 PUSH2 0x1928 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST PUSH1 0xFF AND DUP7 PUSH2 0x1936 SWAP2 SWAP1 PUSH2 0x300A JUMP JUMPDEST PUSH2 0x1940 SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x1A1E JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1963 PUSH1 0x1 DUP5 PUSH2 0x195E SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH1 0x1 DUP3 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL PUSH2 0x197C SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST NOT SWAP1 POP PUSH0 DUP2 DUP12 PUSH0 DUP7 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD AND SWAP1 POP PUSH0 DUP2 EQ ISZERO SWAP6 POP DUP6 PUSH2 0x19DD JUMPI DUP9 DUP4 PUSH1 0xFF PUSH2 0x19B4 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 DUP8 PUSH2 0x19C4 SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x19D8 SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST PUSH2 0x1A17 JUMP JUMPDEST DUP9 DUP4 PUSH2 0x19E8 DUP4 PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x19F2 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x1 DUP8 PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x1A0C SWAP2 SWAP1 PUSH2 0x30E0 JUMP JUMPDEST PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x3064 JUMP JUMPDEST JUMPDEST SWAP7 POP POP POP POP POP JUMPDEST POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO SWAP1 POP PUSH2 0x1A6A DUP9 DUP8 DUP8 DUP5 PUSH2 0x21BC JUMP JUMPDEST SWAP4 POP PUSH2 0x1A77 DUP9 DUP6 DUP9 PUSH2 0x1596 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A84 DUP9 DUP6 DUP9 PUSH2 0x167A JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1A96 JUMPI DUP2 DUP4 DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP JUMPDEST POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH5 0x1000276A3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO DUP1 ISZERO PUSH2 0x1B22 JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT JUMPDEST PUSH2 0x1B61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B58 SWAP1 PUSH2 0x3184 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL SWAP1 POP PUSH0 DUP2 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x7 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH1 0x6 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH4 0xFFFFFFFF DUP3 GT PUSH1 0x5 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH2 0xFFFF DUP3 GT PUSH1 0x4 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0xFF DUP3 GT PUSH1 0x3 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0xF DUP3 GT PUSH1 0x2 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0x3 DUP3 GT PUSH1 0x1 SHL DUP1 DUP3 OR SWAP2 POP DUP3 DUP2 SHR SWAP3 POP POP PUSH1 0x1 DUP3 GT DUP1 DUP3 OR SWAP2 POP POP PUSH1 0x80 DUP2 LT PUSH2 0x1C48 JUMPI PUSH1 0x7F DUP2 PUSH2 0x1C3E SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x1C5B JUMP JUMPDEST DUP1 PUSH1 0x7F PUSH2 0x1C55 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST DUP4 SWAP1 SHL SWAP2 POP JUMPDEST PUSH0 PUSH1 0x40 PUSH1 0x80 DUP4 PUSH2 0x1C6B SWAP2 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST SWAP1 SHL SWAP1 POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3F SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3E SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3D SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3C SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3B SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x3A SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x39 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x38 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x37 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x36 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x35 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x34 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x33 SHL DUP3 OR SWAP2 POP DUP4 DUP2 SHR SWAP4 POP POP DUP3 DUP4 MUL PUSH1 0x7F SHR SWAP3 POP DUP3 PUSH1 0x80 SHR DUP1 PUSH1 0x32 SHL DUP3 OR SWAP2 POP POP PUSH0 PUSH10 0x3627A301D71055774C85 DUP3 PUSH2 0x1DED SWAP2 SWAP1 PUSH2 0x31E2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x80 PUSH16 0x28F6481AB7F045A5AF012A19D003AAA DUP4 PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x31A2 JUMP JUMPDEST SWAP1 SAR SWAP1 POP PUSH0 PUSH1 0x80 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP5 PUSH2 0x1E31 SWAP2 SWAP1 PUSH2 0x3258 JUMP JUMPDEST SWAP1 SAR SWAP1 POP DUP1 PUSH1 0x2 SIGNEXTEND DUP3 PUSH1 0x2 SIGNEXTEND EQ PUSH2 0x1E8B JUMPI DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E62 DUP3 PUSH2 0x10E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x1E84 JUMPI DUP2 PUSH2 0x1E86 JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x1E8D JUMP JUMPDEST DUP2 JUMPDEST SWAP8 POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 DUP4 PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP2 POP PUSH2 0x100 DUP4 PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x2CD7 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x1EC8 DUP5 DUP5 DUP5 PUSH2 0x21E8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP1 PUSH2 0x1EDA JUMPI PUSH2 0x1ED9 PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DUP5 DUP7 MULMOD GT ISZERO PUSH2 0x1F1D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT PUSH2 0x1F0E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x1F19 SWAP1 PUSH2 0x3299 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 DUP5 MOD GT DUP3 DUP5 DIV ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 GT PUSH2 0x1F42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x1F71 JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x80 DUP2 PUSH2 0x1F6E SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x1F98 JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 PUSH2 0x1F95 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1FBB JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 PUSH2 0x1FB8 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x1FDC JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 PUSH2 0x1FD9 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x1FFC JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 PUSH2 0x1FF9 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x201B JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 PUSH2 0x2018 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x203A JUMPI PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 PUSH2 0x2037 SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 LT PUSH2 0x2052 JUMPI PUSH1 0x1 DUP2 PUSH2 0x204F SWAP2 SWAP1 PUSH2 0x32E0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 GT PUSH2 0x2063 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0xFF SWAP1 POP PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x2097 JUMPI PUSH1 0x80 DUP2 PUSH2 0x2090 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x209F JUMP JUMPDEST PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x20C7 JUMPI PUSH1 0x40 DUP2 PUSH2 0x20C0 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x20CF JUMP JUMPDEST PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x20F3 JUMPI PUSH1 0x20 DUP2 PUSH2 0x20EC SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH2 0xFFFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x211D JUMPI PUSH1 0x10 DUP2 PUSH2 0x2116 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x2125 JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH1 0xFF DUP1 AND DUP4 AND GT ISZERO PUSH2 0x2146 JUMPI PUSH1 0x8 DUP2 PUSH2 0x213F SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x214E JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH1 0xF DUP4 AND GT ISZERO PUSH2 0x216D JUMPI PUSH1 0x4 DUP2 PUSH2 0x2166 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH1 0x3 DUP4 AND GT ISZERO PUSH2 0x2194 JUMPI PUSH1 0x2 DUP2 PUSH2 0x218D SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP PUSH2 0x219C JUMP JUMPDEST PUSH1 0x2 DUP3 SWAP1 SHR SWAP2 POP JUMPDEST PUSH0 PUSH1 0x1 DUP4 AND GT ISZERO PUSH2 0x21B7 JUMPI PUSH1 0x1 DUP2 PUSH2 0x21B4 SWAP2 SWAP1 PUSH2 0x30AC JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x21D2 JUMPI PUSH2 0x21CD DUP6 DUP6 DUP6 PUSH2 0x22F2 JUMP JUMPDEST PUSH2 0x21DE JUMP JUMPDEST PUSH2 0x21DD DUP6 DUP6 DUP6 PUSH2 0x232C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH0 DUP2 SUB PUSH2 0x2220 JUMPI DUP4 DUP3 DUP2 PUSH2 0x2216 JUMPI PUSH2 0x2215 PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x22EB JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x2262 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2259 SWAP1 PUSH2 0x335E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH0 PUSH1 0x1 DUP7 NOT ADD DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 PUSH1 0xFF AND DUP4 SWAP1 SHL PUSH2 0x2318 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST DUP5 PUSH2 0x2323 SWAP2 SWAP1 PUSH2 0x337C JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 SHL SWAP1 POP PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0x236D SWAP2 SWAP1 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP3 PUSH2 0x2392 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST SUB PUSH2 0x23DA JUMPI PUSH0 DUP2 DUP4 PUSH2 0x23A4 SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT PUSH2 0x23D8 JUMPI PUSH2 0x23CE DUP4 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1EBC JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x2415 JUMP JUMPDEST POP JUMPDEST PUSH2 0x2410 DUP3 DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x2401 SWAP2 SWAP1 PUSH2 0x2EDD JUMP JUMPDEST PUSH2 0x240B SWAP2 SWAP1 PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x1F24 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249E DUP3 PUSH2 0x2475 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AE DUP2 PUSH2 0x2494 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x24A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24F1 DUP2 PUSH2 0x24CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x250A PUSH0 DUP4 ADD DUP5 PUSH2 0x24E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2519 DUP2 PUSH2 0x2475 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2534 DUP2 PUSH2 0x251F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x254D PUSH0 DUP4 ADD DUP6 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x255A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x252B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2572 DUP2 PUSH2 0x2494 JUMP JUMPDEST DUP2 EQ PUSH2 0x257C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x258D DUP2 PUSH2 0x2569 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x259C DUP2 PUSH2 0x251F JUMP JUMPDEST DUP2 EQ PUSH2 0x25A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25B7 DUP2 PUSH2 0x2593 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25C6 DUP2 PUSH2 0x24CD JUMP JUMPDEST DUP2 EQ PUSH2 0x25D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x25E1 DUP2 PUSH2 0x25BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2608 JUMPI PUSH2 0x2607 PUSH2 0x25E7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2625 JUMPI PUSH2 0x2624 PUSH2 0x25EB JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2641 JUMPI PUSH2 0x2640 PUSH2 0x25EF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2662 JUMPI PUSH2 0x2661 PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x266F DUP10 DUP3 DUP11 ADD PUSH2 0x257F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x2680 DUP10 DUP3 DUP11 ADD PUSH2 0x25A9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x2691 DUP10 DUP3 DUP11 ADD PUSH2 0x25A9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x26A2 DUP10 DUP3 DUP11 ADD PUSH2 0x25D3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26C3 JUMPI PUSH2 0x26C2 PUSH2 0x2565 JUMP JUMPDEST JUMPDEST PUSH2 0x26CF DUP10 DUP3 DUP11 ADD PUSH2 0x25F3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F0 DUP2 PUSH2 0x26DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2709 PUSH0 DUP4 ADD DUP6 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x2716 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x272F DUP2 PUSH2 0x271D JUMP JUMPDEST DUP2 EQ PUSH2 0x2739 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x274A DUP2 PUSH2 0x2726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2765 JUMPI PUSH2 0x2764 PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2772 DUP5 DUP3 DUP6 ADD PUSH2 0x273C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2790 DUP2 PUSH2 0x277B JUMP JUMPDEST DUP2 EQ PUSH2 0x279A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27AB DUP2 PUSH2 0x2787 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C6 JUMPI PUSH2 0x27C5 PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27D3 DUP5 DUP3 DUP6 ADD PUSH2 0x279D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27EF PUSH0 DUP4 ADD DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2809 DUP2 PUSH2 0x27F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2813 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2824 DUP2 PUSH2 0x2800 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2833 DUP2 PUSH2 0x26DE JUMP JUMPDEST DUP2 EQ PUSH2 0x283D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x284E DUP2 PUSH2 0x282A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x286D JUMPI PUSH2 0x286C PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x287A DUP9 DUP3 DUP10 ADD PUSH2 0x257F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x288B DUP9 DUP3 DUP10 ADD PUSH2 0x2816 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x289C DUP9 DUP3 DUP10 ADD PUSH2 0x2840 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28BD JUMPI PUSH2 0x28BC PUSH2 0x2565 JUMP JUMPDEST JUMPDEST PUSH2 0x28C9 DUP9 DUP3 DUP10 ADD PUSH2 0x25F3 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28EA DUP2 PUSH2 0x28D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2903 PUSH0 DUP4 ADD DUP6 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x2910 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292C JUMPI PUSH2 0x292B PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2939 DUP5 DUP3 DUP6 ADD PUSH2 0x25A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294B DUP2 PUSH2 0x27F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2964 PUSH0 DUP4 ADD DUP6 PUSH2 0x2942 JUMP JUMPDEST PUSH2 0x2971 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x29AF DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x29E1 JUMPI PUSH2 0x29E0 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x29F5 DUP3 PUSH2 0x24CD JUMP JUMPDEST SWAP2 POP PUSH2 0x2A00 DUP4 PUSH2 0x24CD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A28 JUMPI PUSH2 0x2A27 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A67 DUP4 DUP6 PUSH2 0x2A2E JUMP JUMPDEST SWAP4 POP PUSH2 0x2A74 DUP4 DUP6 DUP5 PUSH2 0x2A3E JUMP JUMPDEST PUSH2 0x2A7D DUP4 PUSH2 0x2A4C JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A9B PUSH0 DUP4 ADD DUP8 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x2AA8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x26E7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2ABB DUP2 DUP5 DUP7 PUSH2 0x2A5C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AD0 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2ADB DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AF3 JUMPI PUSH2 0x2AF2 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B0C PUSH0 DUP4 ADD DUP8 PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x2B19 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x2B26 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x26E7 JUMP JUMPDEST PUSH2 0x2B33 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B46 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2B51 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2B69 JUMPI PUSH2 0x2B68 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B79 DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x2BAB JUMPI PUSH2 0x2BAA PUSH2 0x2978 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BC8 PUSH0 DUP4 ADD DUP6 PUSH2 0x24A5 JUMP JUMPDEST PUSH2 0x2BD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BEA DUP2 PUSH2 0x2800 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C05 JUMPI PUSH2 0x2C04 PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C12 DUP5 DUP3 DUP6 ADD PUSH2 0x2BDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C2E PUSH0 DUP4 ADD DUP8 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x2C3B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x28E1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2C4E DUP2 DUP5 DUP7 PUSH2 0x2A5C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2C6C PUSH0 DUP4 ADD DUP9 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x2C79 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x28E1 JUMP JUMPDEST PUSH2 0x2C86 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x2C93 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x24E8 JUMP JUMPDEST PUSH2 0x2CA0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x252B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2CE1 DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x2CEC DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2CFC JUMPI PUSH2 0x2CFB PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SMOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D11 DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x2D1C DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2D2C JUMPI PUSH2 0x2D2B PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP4 EQ AND ISZERO PUSH2 0x2D64 JUMPI PUSH2 0x2D63 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D85 DUP3 PUSH2 0x2D6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D96 DUP3 PUSH2 0x2D7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DAE PUSH2 0x2DA9 DUP3 PUSH2 0x2494 JUMP JUMPDEST PUSH2 0x2D8C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2DCA DUP3 PUSH2 0x2DB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DE2 PUSH2 0x2DDD DUP3 PUSH2 0x251F JUMP JUMPDEST PUSH2 0x2DC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DF3 DUP3 DUP7 PUSH2 0x2D9D JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2E03 DUP3 DUP6 PUSH2 0x2DD1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x2E13 DUP3 DUP5 PUSH2 0x2DD1 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E68 PUSH1 0x1 DUP4 PUSH2 0x2E24 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E73 DUP3 PUSH2 0x2E34 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E95 DUP2 PUSH2 0x2E5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2EA6 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2EB1 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2EBF DUP2 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2ED6 JUMPI PUSH2 0x2ED5 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE7 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF2 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F02 JUMPI PUSH2 0x2F01 PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F17 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F22 DUP4 PUSH2 0x26DE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2F32 JUMPI PUSH2 0x2F31 PUSH2 0x2CAA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F47 DUP3 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F52 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F7E JUMPI PUSH2 0x2F7D PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2F92 DUP2 PUSH2 0x282A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FAD JUMPI PUSH2 0x2FAC PUSH2 0x2561 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FBA DUP5 DUP3 DUP6 ADD PUSH2 0x2F84 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2FCD DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x2FFF JUMPI PUSH2 0x2FFE PUSH2 0x2978 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3014 DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x301F DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH3 0x7FFFFF DUP2 SGT PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SLT OR ISZERO PUSH2 0x305E JUMPI PUSH2 0x305D PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x306E DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x3079 DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3087 DUP2 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 EQ PUSH2 0x3099 JUMPI PUSH2 0x3098 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30B6 DUP3 PUSH2 0x30A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C1 DUP4 PUSH2 0x30A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x30DA JUMPI PUSH2 0x30D9 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x30EA DUP3 PUSH2 0x251F JUMP JUMPDEST SWAP2 POP PUSH2 0x30F5 DUP4 PUSH2 0x251F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP2 SLT PUSH3 0x7FFFFF DUP3 SGT OR ISZERO PUSH2 0x3134 JUMPI PUSH2 0x3133 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5200000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x316E PUSH1 0x1 DUP4 PUSH2 0x2E24 JUMP JUMPDEST SWAP2 POP PUSH2 0x3179 DUP3 PUSH2 0x313A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x319B DUP2 PUSH2 0x3162 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x31AC DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B7 DUP4 PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 SLT PUSH0 DUP5 SLT AND DUP3 DUP3 SGT PUSH0 DUP6 SLT ISZERO AND OR ISZERO PUSH2 0x31DC JUMPI PUSH2 0x31DB PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31EC DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x31F7 DUP4 PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3205 DUP2 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP5 EQ PUSH0 DUP5 SLT AND ISZERO PUSH2 0x323C JUMPI PUSH2 0x323B PUSH2 0x2978 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3251 JUMPI PUSH2 0x3250 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3262 DUP3 PUSH2 0x28D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x326D DUP4 PUSH2 0x28D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP3 DUP2 SLT ISZERO PUSH0 DUP4 SLT AND DUP4 DUP3 SLT PUSH0 DUP5 SLT ISZERO AND OR ISZERO PUSH2 0x3293 JUMPI PUSH2 0x3292 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x32A3 DUP3 PUSH2 0x26DE JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x32D5 JUMPI PUSH2 0x32D4 PUSH2 0x2978 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x32EA DUP3 PUSH2 0x30A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F5 DUP4 PUSH2 0x30A0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x330E JUMPI PUSH2 0x330D PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5052424D6174683A206F766572666C6F77000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3348 PUSH1 0x11 DUP4 PUSH2 0x2E24 JUMP JUMPDEST SWAP2 POP PUSH2 0x3353 DUP3 PUSH2 0x3314 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3375 DUP2 PUSH2 0x333C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3386 DUP3 PUSH2 0x2475 JUMP JUMPDEST SWAP2 POP PUSH2 0x3391 DUP4 PUSH2 0x2475 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33BD JUMPI PUSH2 0x33BC PUSH2 0x2978 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD CREATE2 PUSH10 0xD86AA03A33D1BD9400BC EXP DATALOADN 0xA8F0 0x23 SDIV DUP3 0x2C POP PUSH16 0x18C435F7FFE893569A64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "446:7724:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;943:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1245:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1187:18;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2159:2508;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1438:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1367:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4699:3152;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;981:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1299:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;943:31;;;:::o;1245:24::-;;;;;;;;;;;;;:::o;1187:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2159:2508::-;2344:15;2361;2420:9;2407:22;;:9;:22;;;;:59;;;;744:7;2446:20;;:9;:20;;;2407:59;:96;;;;744:7;793:9;;;:::i;:::-;2483:20;;:9;:20;;;2407:96;2389:151;;;2522:18;;;;;;;;;;;;;;2389:151;2565:1;2555:6;:11;;;2551:39;;2575:15;;;;;;;;;;;;;;2551:39;2603:17;2623:31;2636:9;2647:6;2623:5;:12;;:31;;;;;:::i;:::-;2603:51;;2665:17;2685:31;2698:9;2709:6;2685:5;:12;;:31;;;;;:::i;:::-;2665:51;;2730:12;2727:77;;;2759:33;2779:9;2790:1;2759:10;:19;;:33;;;;;:::i;:::-;2727:77;2817:12;2814:77;;;2846:33;2866:9;2877:1;2846:10;:19;;:33;;;;;:::i;:::-;2814:77;2903:30;2936:92;2964:5;2984:9;3008;2936;:13;;:92;;;;;;:::i;:::-;2903:125;;3039:23;3055:6;3039:8;:15;;:23;;;;:::i;:::-;3075:19;3097:5;3075:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3133:9;3119:23;;:6;:11;;;:23;;;3115:911;;;3169:175;3209:38;3237:9;3209:27;:38::i;:::-;3266;3294:9;3266:27;:38::i;:::-;3323:6;3169:21;:175::i;:::-;3159:185;;3115:911;;;3380:9;3366:23;;:6;:11;;;:23;;;3362:664;;;3416:156;3456:6;:19;;;3494:38;3522:9;3494:27;:38::i;:::-;3551:6;3416:21;:156::i;:::-;3406:166;;3597:156;3637:6;:19;;;3675:38;3703:9;3675:27;:38::i;:::-;3732:6;3597:21;:156::i;:::-;3587:166;;3789:6;3768:9;;:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3362:664;;;3839:175;3879:38;3907:9;3879:27;:38::i;:::-;3936;3964:9;3936:27;:38::i;:::-;3993:6;3839:21;:175::i;:::-;3829:185;;3362:664;3115:911;4038:22;4071;4118:1;4108:7;:11;4104:44;;;4138:10;:8;:10::i;:::-;4121:27;;4104:44;4173:1;4163:7;:11;4159:44;;;4193:10;:8;:10::i;:::-;4176:27;;4159:44;4237:10;4214:56;;;4285:7;4307;4329:4;;4214:130;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4369:1;4359:7;:11;:52;;;;;4401:10;:8;:10::i;:::-;4391:7;4374:14;:24;;;;:::i;:::-;:37;4359:52;4355:103;;;4433:25;;;;;;;;;;;;;;4355:103;4483:1;4473:7;:11;:52;;;;;4515:10;:8;:10::i;:::-;4505:7;4488:14;:24;;;;:::i;:::-;:37;4473:52;4469:103;;;4547:25;;;;;;;;;;;;;;4469:103;4623:9;4588:71;;4612:9;4588:71;;4605:5;4588:71;;;4593:10;4634:6;4642:7;4651;4588:71;;;;;;;;;:::i;:::-;;;;;;;;2378:2289;;;;;;2159:2508;;;;;;;;;:::o;1438:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1367:43::-;;;;;;;;;;;;;;;;;:::o;4699:3152::-;4945:14;4961;4993:19;5015:5;4993:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5033:22;5058:192;;;;;;;;5109:15;5058:192;;;;5157:1;5058:192;;;;5187:6;:19;;;5058:192;;;;;;5227:6;:11;;;5058:192;;;;;5033:217;;5263:1019;5303:1;5270:5;:30;;;:34;5263:1019;;;5321:21;;:::i;:::-;5382:5;:18;;;5357:4;:22;;:43;;;;;;;;;;;5435:136;5497:5;:10;;;5526:1;5546:10;5435;:43;;:136;;;;;;:::i;:::-;5415:156;5416:4;:13;;5415:156;;;;;;;;;5610:42;5638:4;:13;;;5610:27;:42::i;:::-;5586:4;:21;;:66;;;;;;;;;;;5721:231;5786:5;:18;;;5827:4;:21;;;5871:9;;;;;;;;;;;5903:5;:30;;;5721:42;:231::i;:::-;5668:5;:18;;5688:4;:13;;5703:4;:14;;5667:285;;;;;;;;;;;;;;;;;;;6001:4;:13;;;5967:5;:30;;:47;;;;;;;:::i;:::-;;;;;;;;6091:4;:14;;;6065:5;:22;;:40;;;;;;;:::i;:::-;;;;;;;;6191:47;6219:5;:18;;;6191:27;:47::i;:::-;6178:5;:10;;:60;;;;;;;;;;;5306:976;5263:1019;;;6320:6;:11;;;6306:25;;:5;:10;;;:25;;;6302:125;;6384:5;:18;;;6404:5;:10;;;6349:5;:18;;;6369:5;:10;;;6348:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6302:125;6460:10;:322;;6669:5;:22;;;6661:31;;;:::i;:::-;6736:5;:30;;;6718:15;:48;;;;:::i;:::-;6460:322;;;6530:5;:30;;;6512:15;:48;;;;:::i;:::-;6588:5;:22;;;6580:31;;;:::i;:::-;6460:322;6439:343;;;;;;;;6799:10;6795:840;;;6833:6;6826:23;;;6850:9;6870:7;6869:8;;;:::i;:::-;6826:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6896:22;6921:10;:8;:10::i;:::-;6896:35;;6969:10;6946:56;;;7021:7;7047;7073:4;;6946:146;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7147:10;:8;:10::i;:::-;7136:7;7111:14;:33;;;;:::i;:::-;:46;7107:101;;;7183:25;;;;;;;;;;;;;;7107:101;6811:409;6795:840;;;7248:6;7241:23;;;7265:9;7285:7;7284:8;;;:::i;:::-;7241:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7311:22;7336:10;:8;:10::i;:::-;7311:35;;7384:10;7361:56;;;7436:7;7462;7488:4;;7361:146;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7562:10;:8;:10::i;:::-;7551:7;7526:14;:33;;;;:::i;:::-;:46;7522:101;;;7598:25;;;;;;;;;;;;;;7522:101;7226:409;6795:840;7697:9;7653:190;;7672:10;7653:190;;;7721:7;7743;7765:5;:18;;;;;;;;;;;;7798:9;;;;;;;;;;;7822:5;:10;;;;;;;;;;;;7653:190;;;;;;;;;;:::i;:::-;;;;;;;;4982:2869;;4699:3152;;;;;;;;:::o;981:31::-;;;:::o;1299:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;160:535:11:-;302:12;326:26;355:4;:10;360:4;355:10;;;;;;;;;;;;;;;326:39;;375:23;401:8;:18;;;;;;;;;;;;375:44;;429:22;472:14;454:15;:32;;;;:::i;:::-;429:57;;552:1;533:15;:20;;;507:47;;526:1;508:14;:19;;;507:47;;;;497:57;;588:1;569:15;:20;;;565:78;;628:4;605:8;:20;;;:27;;;;;;;;;;;;;;;;;;565:78;674:14;653:8;:18;;;:35;;;;;;;;;;;;;;;;;;316:379;;;160:535;;;;;:::o;1110:348:12:-;1278:1;1263:11;1256:4;:18;;;;:::i;:::-;:23;;;1248:32;;;;;;1325:13;1340:12;1356:28;1372:11;1365:4;:18;;;;:::i;:::-;1356:8;:28::i;:::-;1324:60;;;;1394:12;1414:6;1409:11;;:1;:11;;1394:26;;1447:4;1430;:13;1435:7;1430:13;;;;;;;;;;;;;;;;:21;;;;;;;;;;;1238:220;;;1110:348;;;:::o;138:306:9:-;300:30;353:4;:84;398:5;405:9;416;381:45;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;371:56;;;;;;353:84;;;;;;;;;;;342:95;;138:306;;;;;;:::o;450:234::-;528:23;554:4;:14;;;;;;;;;;;;528:40;;578:22;621:14;603:15;:32;;;;:::i;:::-;578:57;;663:14;646:4;:14;;;:31;;;;;;;;;;;;;;;;;;518:166;;450:234;;:::o;1355:2588:13:-;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;;:::i;:::-;1468:57;1450:75;;477:7;637:9;;;:::i;:::-;1554:25;;1543:7;:36;;1535:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1596:13;1629:1;1622:3;1612:7;:13;:18;:93;;1670:35;1612:93;;;1633:34;1612:93;1596:109;;;;1736:1;1729:3;1719:7;:13;:18;1715:83;;1795:3;1756:34;1748:5;:42;;;;:::i;:::-;1747:51;;1739:59;;1715:83;1829:1;1822:3;1812:7;:13;:18;1808:83;;1888:3;1849:34;1841:5;:42;;;;:::i;:::-;1840:51;;1832:59;;1808:83;1922:1;1915:3;1905:7;:13;:18;1901:83;;1981:3;1942:34;1934:5;:42;;;;:::i;:::-;1933:51;;1925:59;;1901:83;2016:1;2008:4;1998:7;:14;:19;1994:84;;2075:3;2036:34;2028:5;:42;;;;:::i;:::-;2027:51;;2019:59;;1994:84;2110:1;2102:4;2092:7;:14;:19;2088:84;;2169:3;2130:34;2122:5;:42;;;;:::i;:::-;2121:51;;2113:59;;2088:84;2204:1;2196:4;2186:7;:14;:19;2182:84;;2263:3;2224:34;2216:5;:42;;;;:::i;:::-;2215:51;;2207:59;;2182:84;2298:1;2290:4;2280:7;:14;:19;2276:84;;2357:3;2318:34;2310:5;:42;;;;:::i;:::-;2309:51;;2301:59;;2276:84;2393:1;2384:5;2374:7;:15;:20;2370:85;;2452:3;2413:34;2405:5;:42;;;;:::i;:::-;2404:51;;2396:59;;2370:85;2488:1;2479:5;2469:7;:15;:20;2465:85;;2547:3;2508:34;2500:5;:42;;;;:::i;:::-;2499:51;;2491:59;;2465:85;2583:1;2574:5;2564:7;:15;:20;2560:85;;2642:3;2603:34;2595:5;:42;;;;:::i;:::-;2594:51;;2586:59;;2560:85;2678:1;2669:5;2659:7;:15;:20;2655:85;;2737:3;2698:34;2690:5;:42;;;;:::i;:::-;2689:51;;2681:59;;2655:85;2774:1;2764:6;2754:7;:16;:21;2750:86;;2833:3;2794:34;2786:5;:42;;;;:::i;:::-;2785:51;;2777:59;;2750:86;2870:1;2860:6;2850:7;:16;:21;2846:86;;2929:3;2890:34;2882:5;:42;;;;:::i;:::-;2881:51;;2873:59;;2846:86;2966:1;2956:6;2946:7;:16;:21;2942:86;;3025:3;2986:34;2978:5;:42;;;;:::i;:::-;2977:51;;2969:59;;2942:86;3062:1;3052:6;3042:7;:16;:21;3038:86;;3121:3;3082:34;3074:5;:42;;;;:::i;:::-;3073:51;;3065:59;;3038:86;3159:1;3148:7;3138;:17;:22;3134:86;;3217:3;3179:33;3171:5;:41;;;;:::i;:::-;3170:50;;3162:58;;3134:86;3255:1;3244:7;3234;:17;:22;3230:85;;3312:3;3275:32;3267:5;:40;;;;:::i;:::-;3266:49;;3258:57;;3230:85;3350:1;3339:7;3329;:17;:22;3325:83;;3405:3;3370:30;3362:5;:38;;;;:::i;:::-;3361:47;;3353:55;;3325:83;3443:1;3432:7;3422;:17;:22;3418:78;;3493:3;3463:25;3455:5;:33;;;;:::i;:::-;3454:42;;3446:50;;3418:78;3518:1;3511:4;:8;;;3507:47;;;3549:5;3529:17;:25;;;;:::i;:::-;3521:33;;3507:47;3925:1;3913:7;3904:5;:17;;;;:::i;:::-;:22;:30;;3933:1;3904:30;;;3929:1;3904:30;3887:48;;3897:2;3888:5;:11;;3887:48;;;;:::i;:::-;3864:72;;1440:2503;;1355:2588;;;:::o;245:585:7:-;389:15;436:13;420:29;;:13;:29;;;416:110;;;497:13;512;463:63;;;;;;;;416:110;561:1;545:13;:17;;;537:26;;;;;;584:239;611:175;135:2:6;646:45:7;;654:9;646:18;;:45;;727:13;711;:29;;;;:::i;:::-;611:175;;759:13;611:175;;:16;:175::i;:::-;800:13;584:239;;:13;:239::i;:::-;574:249;;245:585;;;;;:::o;945:433::-;1089:15;1136:13;1120:29;;:13;:29;;;1116:110;;;1197:13;1212;1163:63;;;;;;;;1116:110;1247:124;1277:9;1247:124;;1317:13;1301;:29;;;;:::i;:::-;1247:124;;175:5:6;1247:16:7;:124::i;:::-;1237:134;;945:433;;;;;:::o;7880:128:0:-;7923:15;7968:6;7961:24;;;7994:4;7961:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7951:49;;7880:128;:::o;8037:::-;8080:15;8125:6;8118:24;;;8151:4;8118:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8108:49;;8037:128;:::o;2196:1957:12:-;2380:10;2392:16;2420;2446:11;2439:4;:18;;;;:::i;:::-;2420:37;;2478:1;2471:4;:8;;;:35;;;;;2505:1;2490:11;2483:4;:18;;;;:::i;:::-;:23;;;;2471:35;2467:53;;;2508:12;;;;;:::i;:::-;;;;2467:53;2570:3;2566:1581;;;2590:13;2605:12;2621:20;2630:10;2621:8;:20::i;:::-;2589:52;;;;2722:12;2763:6;2758:11;;:1;:11;;2753:1;2743:6;2738:11;;:1;:11;;2737:17;;;;:::i;:::-;:33;;;;:::i;:::-;2722:48;;2784:14;2817:4;2801;:13;2806:7;2801:13;;;;;;;;;;;;;;;;:20;2784:37;;2978:1;2968:6;:11;;2954:25;;3110:11;:186;;3285:11;3273:6;3266:14;;3247:10;:34;;;;:::i;:::-;3246:50;;;;:::i;:::-;3110:186;;;3216:11;3176:34;3203:6;3176:26;:34::i;:::-;3167:6;:43;;;;:::i;:::-;3160:51;;3141:10;:71;;;;:::i;:::-;3140:87;;;;:::i;:::-;3110:186;3103:193;;2575:732;;;;2566:1581;;;3425:13;3440:12;3456:24;3478:1;3465:10;:14;;;;:::i;:::-;3456:8;:24::i;:::-;3424:56;;;;3552:12;3585:1;3575:6;3570:11;;:1;:11;;3569:17;;;;:::i;:::-;3567:20;3552:35;;3601:14;3634:4;3618;:13;3623:7;3618:13;;;;;;;;;;;;;;;;:20;3601:37;;3787:1;3777:6;:11;;3763:25;;3919:11;:217;;4125:11;4112:6;4094:15;:24;;;;:::i;:::-;4086:34;;4076:1;4063:10;:14;;;;:::i;:::-;:58;;;;:::i;:::-;4062:74;;;;:::i;:::-;3919:217;;;4032:11;4019:6;3981:35;4009:6;3981:27;:35::i;:::-;:44;;;;:::i;:::-;3973:54;;3963:1;3950:10;:14;;;;:::i;:::-;:78;;;;:::i;:::-;3949:94;;;;:::i;:::-;3919:217;3912:224;;3313:834;;;;2566:1581;2410:1743;2196:1957;;;;;;;:::o;108:973:10:-;332:24;389:16;419:17;461:15;502:18;479:41;;:19;:41;;;;461:59;;550:149;594:19;627:9;650:15;679:10;550:30;:149::i;:::-;531:168;;721:117;756:19;789:16;819:9;721:21;:117::i;:::-;710:128;;860:117;895:19;928:16;958:9;860:21;:117::i;:::-;848:129;;993:10;988:87;;1044:9;1055:8;1019:45;;;;;;;;988:87;451:630;108:973;;;;;;;;:::o;4362:4281:13:-;4435:10;817;4564:30;;:12;:30;;;;:63;;;;;997:49;4598:29;;:12;:29;;;4564:63;4556:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4643:13;4684:2;4667:12;4659:21;;:27;;4643:43;;4697:9;4709:5;4697:17;;4724:11;4738:1;4724:15;;4795:34;4792:1;4789:41;4786:1;4782:49;4859:1;4854:3;4851:10;4844:17;;4886:1;4883;4879:9;4874:14;;4759:139;4952:18;4949:1;4946:25;4943:1;4939:33;5000:1;4995:3;4992:10;4985:17;;5027:1;5024;5020:9;5015:14;;4916:123;5093:10;5090:1;5087:17;5084:1;5080:25;5133:1;5128:3;5125:10;5118:17;;5160:1;5157;5153:9;5148:14;;5057:115;5226:6;5223:1;5220:13;5217:1;5213:21;5262:1;5257:3;5254:10;5247:17;;5289:1;5286;5282:9;5277:14;;5190:111;5355:4;5352:1;5349:11;5346:1;5342:19;5389:1;5384:3;5381:10;5374:17;;5416:1;5413;5409:9;5404:14;;5319:109;5482:3;5479:1;5476:10;5473:1;5469:18;5515:1;5510:3;5507:10;5500:17;;5542:1;5539;5535:9;5530:14;;5446:108;5608:3;5605:1;5602:10;5599:1;5595:18;5641:1;5636:3;5633:10;5626:17;;5668:1;5665;5661:9;5656:14;;5572:108;5727:3;5724:1;5721:10;5759:1;5754:3;5751:10;5744:17;;5698:73;5792:3;5785;:10;5781:79;;5817:3;5811;:9;;;;:::i;:::-;5801:5;:20;;5797:24;;5781:79;;;5856:3;5850;:9;;;;:::i;:::-;5840:5;:20;;5836:24;;5781:79;5871:12;5909:2;5901:3;5894;5887:17;;;;:::i;:::-;5886:25;;5871:40;;5966:1;5963;5959:9;5954:3;5950:19;5945:24;;6000:1;5995:3;5991:11;6042:1;6038:2;6034:10;6027:5;6024:21;6015:30;;6070:1;6067;6063:9;6058:14;;5931:151;6135:1;6132;6128:9;6123:3;6119:19;6114:24;;6169:1;6164:3;6160:11;6211:1;6207:2;6203:10;6196:5;6193:21;6184:30;;6239:1;6236;6232:9;6227:14;;6100:151;6304:1;6301;6297:9;6292:3;6288:19;6283:24;;6338:1;6333:3;6329:11;6380:1;6376:2;6372:10;6365:5;6362:21;6353:30;;6408:1;6405;6401:9;6396:14;;6269:151;6473:1;6470;6466:9;6461:3;6457:19;6452:24;;6507:1;6502:3;6498:11;6549:1;6545:2;6541:10;6534:5;6531:21;6522:30;;6577:1;6574;6570:9;6565:14;;6438:151;6642:1;6639;6635:9;6630:3;6626:19;6621:24;;6676:1;6671:3;6667:11;6718:1;6714:2;6710:10;6703:5;6700:21;6691:30;;6746:1;6743;6739:9;6734:14;;6607:151;6811:1;6808;6804:9;6799:3;6795:19;6790:24;;6845:1;6840:3;6836:11;6887:1;6883:2;6879:10;6872:5;6869:21;6860:30;;6915:1;6912;6908:9;6903:14;;6776:151;6980:1;6977;6973:9;6968:3;6964:19;6959:24;;7014:1;7009:3;7005:11;7056:1;7052:2;7048:10;7041:5;7038:21;7029:30;;7084:1;7081;7077:9;7072:14;;6945:151;7149:1;7146;7142:9;7137:3;7133:19;7128:24;;7183:1;7178:3;7174:11;7225:1;7221:2;7217:10;7210:5;7207:21;7198:30;;7253:1;7250;7246:9;7241:14;;7114:151;7318:1;7315;7311:9;7306:3;7302:19;7297:24;;7352:1;7347:3;7343:11;7394:1;7390:2;7386:10;7379:5;7376:21;7367:30;;7422:1;7419;7415:9;7410:14;;7283:151;7487:1;7484;7480:9;7475:3;7471:19;7466:24;;7521:1;7516:3;7512:11;7563:1;7559:2;7555:10;7548:5;7545:21;7536:30;;7591:1;7588;7584:9;7579:14;;7452:151;7656:1;7653;7649:9;7644:3;7640:19;7635:24;;7690:1;7685:3;7681:11;7732:1;7728:2;7724:10;7717:5;7714:21;7705:30;;7760:1;7757;7753:9;7748:14;;7621:151;7825:1;7822;7818:9;7813:3;7809:19;7804:24;;7859:1;7854:3;7850:11;7901:1;7897:2;7893:10;7886:5;7883:21;7874:30;;7929:1;7926;7922:9;7917:14;;7790:151;7994:1;7991;7987:9;7982:3;7978:19;7973:24;;8028:1;8023:3;8019:11;8070:1;8066:2;8062:10;8055:5;8052:21;8043:30;;8098:1;8095;8091:9;8086:14;;7959:151;8163:1;8160;8156:9;8151:3;8147:19;8142:24;;8197:1;8192:3;8188:11;8239:1;8235:2;8231:10;8224:5;8221:21;8212:30;;8128:124;8262:20;8293:24;8285:5;:32;;;;:::i;:::-;8262:55;;8346:13;8427:3;8385:37;8369:13;:53;;;;:::i;:::-;8368:62;;8346:85;;8441:12;8523:3;8479:39;8463:13;:55;;;;:::i;:::-;8462:64;;8441:86;;8556:6;8545:17;;:7;:17;;;:91;;8605:12;8575:42;;:26;8594:6;8575:18;:26::i;:::-;:42;;;;:61;;8629:7;8575:61;;;8620:6;8575:61;8545:91;;;8565:7;8545:91;8538:98;;4447:4196;;;;;;;4362:4281;;;:::o;686:168:12:-;738:13;753:12;801:1;793:4;:9;;;;777:26;;842:3;835:4;:10;;;;:::i;:::-;813:34;;686:168;;;:::o;3124:323:7:-;3246:14;3281:33;3296:1;3299;3302:11;3281:14;:33::i;:::-;3272:42;;3356:1;3341:11;3328:25;;;;;:::i;:::-;;3338:1;3335;3328:25;:29;3324:117;;;3390:17;3381:6;:26;3373:35;;;;;;3422:8;;;;;:::i;:::-;;;;3324:117;3124:323;;;;;:::o;3453:303::-;3563:14;3724:1;3710:11;3699:9;3695:27;3692:34;3662:11;3651:9;3647:27;3626:114;3616:124;;3453:303;;;;:::o;671:731:5:-;733:7;764:1;760;:5;752:14;;;;;;786:35;781:1;:40;777:102;;843:3;837:9;;;;;865:3;860:8;;;;;:::i;:::-;;;777:102;897:19;892:1;:24;888:84;;938:2;932:8;;;;;959:2;954:7;;;;;:::i;:::-;;;888:84;990:11;985:1;:16;981:76;;1023:2;1017:8;;;;;1044:2;1039:7;;;;;:::i;:::-;;;981:76;1075:7;1070:1;:12;1066:72;;1104:2;1098:8;;;;;1125:2;1120:7;;;;;:::i;:::-;;;1066:72;1156:5;1151:1;:10;1147:68;;1183:1;1177:7;;;;;1203:1;1198:6;;;;;:::i;:::-;;;1147:68;1233:4;1228:1;:9;1224:67;;1259:1;1253:7;;;;;1279:1;1274:6;;;;;:::i;:::-;;;1224:67;1309:3;1304:1;:8;1300:66;;1334:1;1328:7;;;;;1354:1;1349:6;;;;;:::i;:::-;;;1300:66;1384:3;1379:1;:8;1375:20;;1394:1;1389:6;;;;;:::i;:::-;;;1375:20;671:731;;;:::o;1893:894::-;1956:7;1987:1;1983;:5;1975:14;;;;;;2004:3;2000:7;;2045:1;2025:17;2021:21;;:1;:21;:25;2017:104;;;2067:3;2062:8;;;;;:::i;:::-;;;2017:104;;;2107:3;2101:9;;;;;2017:104;2157:1;2138:16;2134:20;;:1;:20;:24;2130:101;;;2179:2;2174:7;;;;;:::i;:::-;;;2130:101;;;2218:2;2212:8;;;;;2130:101;2267:1;2248:16;2244:20;;:1;:20;:24;2240:101;;;2289:2;2284:7;;;;;:::i;:::-;;;2240:101;;;2328:2;2322:8;;;;;2240:101;2377:1;2358:16;2354:20;;:1;:20;:24;2350:101;;;2399:2;2394:7;;;;;:::i;:::-;;;2350:101;;;2438:2;2432:8;;;;;2350:101;2486:1;2468:15;2464:19;;:1;:19;:23;2460:98;;;2508:1;2503:6;;;;;:::i;:::-;;;2460:98;;;2546:1;2540:7;;;;;2460:98;2581:1;2575:3;2571:1;:7;:11;2567:86;;;2603:1;2598:6;;;;;:::i;:::-;;;2567:86;;;2641:1;2635:7;;;;;2567:86;2676:1;2670:3;2666:1;:7;:11;2662:86;;;2698:1;2693:6;;;;;:::i;:::-;;;2662:86;;;2736:1;2730:7;;;;;2662:86;2771:1;2765:3;2761:1;:7;:11;2757:23;;;2779:1;2774:6;;;;;:::i;:::-;;;2757:23;1893:894;;;:::o;1384:544:7:-;1556:24;1611:10;:310;;1785:136;1842:12;1872:9;1899:8;1785:39;:136::i;:::-;1611:310;;;1636:134;1691:12;1721:9;1748:8;1636:37;:134::i;:::-;1611:310;1592:329;;1384:544;;;;;;:::o;1169:2385:8:-;1285:14;1392:13;1465;1594:1;1590:6;1587:1;1584;1577:20;1631:1;1628;1624:9;1615:18;;1687:5;1683:2;1680:13;1672:5;1668:2;1664:14;1660:34;1651:43;;1548:161;1801:1;1792:5;:10;1788:77;;1838:11;1830:5;:19;;;;;:::i;:::-;;;1823:26;;;;;;1788:77;1960:5;1946:11;:19;1938:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2249:17;2335:11;2332:1;2329;2322:25;2309:38;;2399:5;2388:9;2385:20;2378:5;2374:32;2365:41;;2444:9;2437:5;2433:21;2424:30;;2582:15;2630:1;2616:11;2615:12;:16;2600:11;:32;2582:50;;2707:7;2694:11;2690:25;2675:40;;2753:7;2746:5;2742:19;2733:28;;2825:1;2815:7;2805;2802:1;2798:15;2794:29;2790:37;2779:48;;2927:7;2919:5;:15;2910:24;;;;3000:15;3038:1;3023:11;3019:1;:15;3018:21;3000:39;;3083:7;3069:11;:21;3065:1;:25;3054:36;;;;3153:7;3139:11;:21;3135:1;:25;3124:36;;;;3224:7;3210:11;:21;3206:1;:25;3195:36;;;;3295:7;3281:11;:21;3277:1;:25;3266:36;;;;3366:7;3352:11;:21;3348:1;:25;3337:36;;;;3438:7;3424:11;:21;3420:1;:25;3409:36;;;;3500:7;3492:5;:15;3483:24;;3522:13;;;;;1169:2385;;;;;;:::o;2827:291:7:-;2988:7;3101:9;3061:49;;135:2:6;3062:35:7;;:8;:35;;3061:49;;;;:::i;:::-;3026:12;:85;;;;:::i;:::-;3007:104;;2827:291;;;;;:::o;1934:887::-;2093:7;2112:17;135:2:6;2132:45:7;;2140:9;2132:18;;:45;;2112:65;;2187:15;2216:12;2205:23;;:8;:23;;;;:::i;:::-;2187:41;;2330:12;2308:34;;2318:8;2308:7;:18;;;;:::i;:::-;:34;2304:318;;2358:19;2392:7;2380:9;:19;;;;:::i;:::-;2358:41;;2432:9;2417:11;:24;2413:199;;2521:54;2538:9;2549:12;2521:54;;2563:11;2521:16;:54::i;:::-;2461:136;;;;;;;2413:199;2344:278;2304:318;2737:63;2751:9;2791:8;2775:12;2763:24;;:9;:24;;;;:::i;:::-;2762:37;;;;:::i;:::-;2737:13;:63::i;:::-;2693:121;;;;1934:887;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:126:14:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:118::-;630:7;670:34;663:5;659:46;648:57;;593:118;;;:::o;717:::-;804:24;822:5;804:24;:::i;:::-;799:3;792:37;717:118;;:::o;841:222::-;934:4;972:2;961:9;957:18;949:26;;985:71;1053:1;1042:9;1038:17;1029:6;985:71;:::i;:::-;841:222;;;;:::o;1069:118::-;1156:24;1174:5;1156:24;:::i;:::-;1151:3;1144:37;1069:118;;:::o;1193:90::-;1228:7;1271:5;1268:1;1257:20;1246:31;;1193:90;;;:::o;1289:112::-;1372:22;1388:5;1372:22;:::i;:::-;1367:3;1360:35;1289:112;;:::o;1407:324::-;1524:4;1562:2;1551:9;1547:18;1539:26;;1575:71;1643:1;1632:9;1628:17;1619:6;1575:71;:::i;:::-;1656:68;1720:2;1709:9;1705:18;1696:6;1656:68;:::i;:::-;1407:324;;;;;:::o;1818:117::-;1927:1;1924;1917:12;1941:117;2050:1;2047;2040:12;2064:122;2137:24;2155:5;2137:24;:::i;:::-;2130:5;2127:35;2117:63;;2176:1;2173;2166:12;2117:63;2064:122;:::o;2192:139::-;2238:5;2276:6;2263:20;2254:29;;2292:33;2319:5;2292:33;:::i;:::-;2192:139;;;;:::o;2337:118::-;2408:22;2424:5;2408:22;:::i;:::-;2401:5;2398:33;2388:61;;2445:1;2442;2435:12;2388:61;2337:118;:::o;2461:135::-;2505:5;2543:6;2530:20;2521:29;;2559:31;2584:5;2559:31;:::i;:::-;2461:135;;;;:::o;2602:122::-;2675:24;2693:5;2675:24;:::i;:::-;2668:5;2665:35;2655:63;;2714:1;2711;2704:12;2655:63;2602:122;:::o;2730:139::-;2776:5;2814:6;2801:20;2792:29;;2830:33;2857:5;2830:33;:::i;:::-;2730:139;;;;:::o;2875:117::-;2984:1;2981;2974:12;2998:117;3107:1;3104;3097:12;3121:117;3230:1;3227;3220:12;3257:552;3314:8;3324:6;3374:3;3367:4;3359:6;3355:17;3351:27;3341:122;;3382:79;;:::i;:::-;3341:122;3495:6;3482:20;3472:30;;3525:18;3517:6;3514:30;3511:117;;;3547:79;;:::i;:::-;3511:117;3661:4;3653:6;3649:17;3637:29;;3715:3;3707:4;3699:6;3695:17;3685:8;3681:32;3678:41;3675:128;;;3722:79;;:::i;:::-;3675:128;3257:552;;;;;:::o;3815:1101::-;3917:6;3925;3933;3941;3949;3957;4006:3;3994:9;3985:7;3981:23;3977:33;3974:120;;;4013:79;;:::i;:::-;3974:120;4133:1;4158:53;4203:7;4194:6;4183:9;4179:22;4158:53;:::i;:::-;4148:63;;4104:117;4260:2;4286:51;4329:7;4320:6;4309:9;4305:22;4286:51;:::i;:::-;4276:61;;4231:116;4386:2;4412:51;4455:7;4446:6;4435:9;4431:22;4412:51;:::i;:::-;4402:61;;4357:116;4512:2;4538:53;4583:7;4574:6;4563:9;4559:22;4538:53;:::i;:::-;4528:63;;4483:118;4668:3;4657:9;4653:19;4640:33;4700:18;4692:6;4689:30;4686:117;;;4722:79;;:::i;:::-;4686:117;4835:64;4891:7;4882:6;4871:9;4867:22;4835:64;:::i;:::-;4817:82;;;;4611:298;3815:1101;;;;;;;;:::o;4922:77::-;4959:7;4988:5;4977:16;;4922:77;;;:::o;5005:118::-;5092:24;5110:5;5092:24;:::i;:::-;5087:3;5080:37;5005:118;;:::o;5129:332::-;5250:4;5288:2;5277:9;5273:18;5265:26;;5301:71;5369:1;5358:9;5354:17;5345:6;5301:71;:::i;:::-;5382:72;5450:2;5439:9;5435:18;5426:6;5382:72;:::i;:::-;5129:332;;;;;:::o;5467:77::-;5504:7;5533:5;5522:16;;5467:77;;;:::o;5550:122::-;5623:24;5641:5;5623:24;:::i;:::-;5616:5;5613:35;5603:63;;5662:1;5659;5652:12;5603:63;5550:122;:::o;5678:139::-;5724:5;5762:6;5749:20;5740:29;;5778:33;5805:5;5778:33;:::i;:::-;5678:139;;;;:::o;5823:329::-;5882:6;5931:2;5919:9;5910:7;5906:23;5902:32;5899:119;;;5937:79;;:::i;:::-;5899:119;6057:1;6082:53;6127:7;6118:6;6107:9;6103:22;6082:53;:::i;:::-;6072:63;;6028:117;5823:329;;;;:::o;6158:90::-;6193:7;6236:5;6233:1;6222:20;6211:31;;6158:90;;;:::o;6254:118::-;6325:22;6341:5;6325:22;:::i;:::-;6318:5;6315:33;6305:61;;6362:1;6359;6352:12;6305:61;6254:118;:::o;6378:135::-;6422:5;6460:6;6447:20;6438:29;;6476:31;6501:5;6476:31;:::i;:::-;6378:135;;;;:::o;6519:325::-;6576:6;6625:2;6613:9;6604:7;6600:23;6596:32;6593:119;;;6631:79;;:::i;:::-;6593:119;6751:1;6776:51;6819:7;6810:6;6799:9;6795:22;6776:51;:::i;:::-;6766:61;;6722:115;6519:325;;;;:::o;6850:222::-;6943:4;6981:2;6970:9;6966:18;6958:26;;6994:71;7062:1;7051:9;7047:17;7038:6;6994:71;:::i;:::-;6850:222;;;;:::o;7078:90::-;7112:7;7155:5;7148:13;7141:21;7130:32;;7078:90;;;:::o;7174:116::-;7244:21;7259:5;7244:21;:::i;:::-;7237:5;7234:32;7224:60;;7280:1;7277;7270:12;7224:60;7174:116;:::o;7296:133::-;7339:5;7377:6;7364:20;7355:29;;7393:30;7417:5;7393:30;:::i;:::-;7296:133;;;;:::o;7435:122::-;7508:24;7526:5;7508:24;:::i;:::-;7501:5;7498:35;7488:63;;7547:1;7544;7537:12;7488:63;7435:122;:::o;7563:139::-;7609:5;7647:6;7634:20;7625:29;;7663:33;7690:5;7663:33;:::i;:::-;7563:139;;;;:::o;7708:957::-;7802:6;7810;7818;7826;7834;7883:3;7871:9;7862:7;7858:23;7854:33;7851:120;;;7890:79;;:::i;:::-;7851:120;8010:1;8035:53;8080:7;8071:6;8060:9;8056:22;8035:53;:::i;:::-;8025:63;;7981:117;8137:2;8163:50;8205:7;8196:6;8185:9;8181:22;8163:50;:::i;:::-;8153:60;;8108:115;8262:2;8288:53;8333:7;8324:6;8313:9;8309:22;8288:53;:::i;:::-;8278:63;;8233:118;8418:2;8407:9;8403:18;8390:32;8449:18;8441:6;8438:30;8435:117;;;8471:79;;:::i;:::-;8435:117;8584:64;8640:7;8631:6;8620:9;8616:22;8584:64;:::i;:::-;8566:82;;;;8361:297;7708:957;;;;;;;;:::o;8671:76::-;8707:7;8736:5;8725:16;;8671:76;;;:::o;8753:115::-;8838:23;8855:5;8838:23;:::i;:::-;8833:3;8826:36;8753:115;;:::o;8874:324::-;8991:4;9029:2;9018:9;9014:18;9006:26;;9042:69;9108:1;9097:9;9093:17;9084:6;9042:69;:::i;:::-;9121:70;9187:2;9176:9;9172:18;9163:6;9121:70;:::i;:::-;8874:324;;;;;:::o;9204:325::-;9261:6;9310:2;9298:9;9289:7;9285:23;9281:32;9278:119;;;9316:79;;:::i;:::-;9278:119;9436:1;9461:51;9504:7;9495:6;9484:9;9480:22;9461:51;:::i;:::-;9451:61;;9407:115;9204:325;;;;:::o;9535:109::-;9616:21;9631:5;9616:21;:::i;:::-;9611:3;9604:34;9535:109;;:::o;9650:320::-;9765:4;9803:2;9792:9;9788:18;9780:26;;9816:65;9878:1;9867:9;9863:17;9854:6;9816:65;:::i;:::-;9891:72;9959:2;9948:9;9944:18;9935:6;9891:72;:::i;:::-;9650:320;;;;;:::o;9976:180::-;10024:77;10021:1;10014:88;10121:4;10118:1;10111:15;10145:4;10142:1;10135:15;10162:226;10196:3;10219:22;10235:5;10219:22;:::i;:::-;10210:31;;10263:66;10256:5;10253:77;10250:103;;10333:18;;:::i;:::-;10250:103;10376:5;10373:1;10369:13;10362:20;;10162:226;;;:::o;10394:224::-;10434:3;10453:20;10471:1;10453:20;:::i;:::-;10448:25;;10487:20;10505:1;10487:20;:::i;:::-;10482:25;;10530:1;10527;10523:9;10516:16;;10553:34;10548:3;10545:43;10542:69;;;10591:18;;:::i;:::-;10542:69;10394:224;;;;:::o;10624:168::-;10707:11;10741:6;10736:3;10729:19;10781:4;10776:3;10772:14;10757:29;;10624:168;;;;:::o;10798:148::-;10896:6;10891:3;10886;10873:30;10937:1;10928:6;10923:3;10919:16;10912:27;10798:148;;;:::o;10952:102::-;10993:6;11044:2;11040:7;11035:2;11028:5;11024:14;11020:28;11010:38;;10952:102;;;:::o;11082:314::-;11178:3;11199:70;11262:6;11257:3;11199:70;:::i;:::-;11192:77;;11279:56;11328:6;11323:3;11316:5;11279:56;:::i;:::-;11360:29;11382:6;11360:29;:::i;:::-;11355:3;11351:39;11344:46;;11082:314;;;;;:::o;11402:549::-;11579:4;11617:2;11606:9;11602:18;11594:26;;11630:71;11698:1;11687:9;11683:17;11674:6;11630:71;:::i;:::-;11711:72;11779:2;11768:9;11764:18;11755:6;11711:72;:::i;:::-;11830:9;11824:4;11820:20;11815:2;11804:9;11800:18;11793:48;11858:86;11939:4;11930:6;11922;11858:86;:::i;:::-;11850:94;;11402:549;;;;;;;:::o;11957:191::-;11997:3;12016:20;12034:1;12016:20;:::i;:::-;12011:25;;12050:20;12068:1;12050:20;:::i;:::-;12045:25;;12093:1;12090;12086:9;12079:16;;12114:3;12111:1;12108:10;12105:36;;;12121:18;;:::i;:::-;12105:36;11957:191;;;;:::o;12154:553::-;12331:4;12369:3;12358:9;12354:19;12346:27;;12383:71;12451:1;12440:9;12436:17;12427:6;12383:71;:::i;:::-;12464:72;12532:2;12521:9;12517:18;12508:6;12464:72;:::i;:::-;12546;12614:2;12603:9;12599:18;12590:6;12546:72;:::i;:::-;12628;12696:2;12685:9;12681:18;12672:6;12628:72;:::i;:::-;12154:553;;;;;;;:::o;12713:194::-;12753:4;12773:20;12791:1;12773:20;:::i;:::-;12768:25;;12807:20;12825:1;12807:20;:::i;:::-;12802:25;;12851:1;12848;12844:9;12836:17;;12875:1;12869:4;12866:11;12863:37;;;12880:18;;:::i;:::-;12863:37;12713:194;;;;:::o;12913:228::-;12948:3;12971:23;12988:5;12971:23;:::i;:::-;12962:32;;13016:66;13009:5;13006:77;13003:103;;13086:18;;:::i;:::-;13003:103;13129:5;13126:1;13122:13;13115:20;;12913:228;;;:::o;13147:332::-;13268:4;13306:2;13295:9;13291:18;13283:26;;13319:71;13387:1;13376:9;13372:17;13363:6;13319:71;:::i;:::-;13400:72;13468:2;13457:9;13453:18;13444:6;13400:72;:::i;:::-;13147:332;;;;;:::o;13485:137::-;13539:5;13570:6;13564:13;13555:22;;13586:30;13610:5;13586:30;:::i;:::-;13485:137;;;;:::o;13628:345::-;13695:6;13744:2;13732:9;13723:7;13719:23;13715:32;13712:119;;;13750:79;;:::i;:::-;13712:119;13870:1;13895:61;13948:7;13939:6;13928:9;13924:22;13895:61;:::i;:::-;13885:71;;13841:125;13628:345;;;;:::o;13979:541::-;14152:4;14190:2;14179:9;14175:18;14167:26;;14203:69;14269:1;14258:9;14254:17;14245:6;14203:69;:::i;:::-;14282:70;14348:2;14337:9;14333:18;14324:6;14282:70;:::i;:::-;14399:9;14393:4;14389:20;14384:2;14373:9;14369:18;14362:48;14427:86;14508:4;14499:6;14491;14427:86;:::i;:::-;14419:94;;13979:541;;;;;;;:::o;14526:648::-;14723:4;14761:3;14750:9;14746:19;14738:27;;14775:69;14841:1;14830:9;14826:17;14817:6;14775:69;:::i;:::-;14854:70;14920:2;14909:9;14905:18;14896:6;14854:70;:::i;:::-;14934:72;15002:2;14991:9;14987:18;14978:6;14934:72;:::i;:::-;15016;15084:2;15073:9;15069:18;15060:6;15016:72;:::i;:::-;15098:69;15162:3;15151:9;15147:19;15138:6;15098:69;:::i;:::-;14526:648;;;;;;;;:::o;15180:180::-;15228:77;15225:1;15218:88;15325:4;15322:1;15315:15;15349:4;15346:1;15339:15;15366:171;15396:1;15413:18;15429:1;15413:18;:::i;:::-;15408:23;;15445:18;15461:1;15445:18;:::i;:::-;15440:23;;15482:1;15472:35;;15487:18;;:::i;:::-;15472:35;15529:1;15526;15521:10;15516:15;;15366:171;;;;:::o;15543:382::-;15581:1;15598:18;15614:1;15598:18;:::i;:::-;15593:23;;15630:18;15646:1;15630:18;:::i;:::-;15625:23;;15667:1;15657:35;;15672:18;;:::i;:::-;15657:35;15858:1;15855;15851:9;15848:1;15845:16;15764:66;15761:1;15758:73;15741:130;15738:156;;;15874:18;;:::i;:::-;15738:156;15917:1;15914;15909:10;15904:15;;15543:382;;;;:::o;15931:94::-;15964:8;16012:5;16008:2;16004:14;15983:35;;15931:94;;;:::o;16031:::-;16070:7;16099:20;16113:5;16099:20;:::i;:::-;16088:31;;16031:94;;;:::o;16131:100::-;16170:7;16199:26;16219:5;16199:26;:::i;:::-;16188:37;;16131:100;;;:::o;16237:157::-;16342:45;16362:24;16380:5;16362:24;:::i;:::-;16342:45;:::i;:::-;16337:3;16330:58;16237:157;;:::o;16400:96::-;16434:8;16483:5;16478:3;16474:15;16453:36;;16400:96;;;:::o;16502:93::-;16539:7;16568:21;16583:5;16568:21;:::i;:::-;16557:32;;16502:93;;;:::o;16601:149::-;16702:41;16720:22;16736:5;16720:22;:::i;:::-;16702:41;:::i;:::-;16697:3;16690:54;16601:149;;:::o;16756:520::-;16916:3;16931:75;17002:3;16993:6;16931:75;:::i;:::-;17031:2;17026:3;17022:12;17015:19;;17044:71;17111:3;17102:6;17044:71;:::i;:::-;17140:1;17135:3;17131:11;17124:18;;17152:71;17219:3;17210:6;17152:71;:::i;:::-;17248:1;17243:3;17239:11;17232:18;;17267:3;17260:10;;16756:520;;;;;;:::o;17282:169::-;17366:11;17400:6;17395:3;17388:19;17440:4;17435:3;17431:14;17416:29;;17282:169;;;;:::o;17457:151::-;17597:3;17593:1;17585:6;17581:14;17574:27;17457:151;:::o;17614:365::-;17756:3;17777:66;17841:1;17836:3;17777:66;:::i;:::-;17770:73;;17852:93;17941:3;17852:93;:::i;:::-;17970:2;17965:3;17961:12;17954:19;;17614:365;;;:::o;17985:419::-;18151:4;18189:2;18178:9;18174:18;18166:26;;18238:9;18232:4;18228:20;18224:1;18213:9;18209:17;18202:47;18266:131;18392:4;18266:131;:::i;:::-;18258:139;;17985:419;;;:::o;18410:410::-;18450:7;18473:20;18491:1;18473:20;:::i;:::-;18468:25;;18507:20;18525:1;18507:20;:::i;:::-;18502:25;;18562:1;18559;18555:9;18584:30;18602:11;18584:30;:::i;:::-;18573:41;;18763:1;18754:7;18750:15;18747:1;18744:22;18724:1;18717:9;18697:83;18674:139;;18793:18;;:::i;:::-;18674:139;18458:362;18410:410;;;;:::o;18826:185::-;18866:1;18883:20;18901:1;18883:20;:::i;:::-;18878:25;;18917:20;18935:1;18917:20;:::i;:::-;18912:25;;18956:1;18946:35;;18961:18;;:::i;:::-;18946:35;19003:1;19000;18996:9;18991:14;;18826:185;;;;:::o;19017:176::-;19049:1;19066:20;19084:1;19066:20;:::i;:::-;19061:25;;19100:20;19118:1;19100:20;:::i;:::-;19095:25;;19139:1;19129:35;;19144:18;;:::i;:::-;19129:35;19185:1;19182;19178:9;19173:14;;19017:176;;;;:::o;19199:235::-;19239:4;19259:20;19277:1;19259:20;:::i;:::-;19254:25;;19293:20;19311:1;19293:20;:::i;:::-;19288:25;;19337:1;19334;19330:9;19322:17;;19361:42;19355:4;19352:52;19349:78;;;19407:18;;:::i;:::-;19349:78;19199:235;;;;:::o;19440:143::-;19497:5;19528:6;19522:13;19513:22;;19544:33;19571:5;19544:33;:::i;:::-;19440:143;;;;:::o;19589:351::-;19659:6;19708:2;19696:9;19687:7;19683:23;19679:32;19676:119;;;19714:79;;:::i;:::-;19676:119;19834:1;19859:64;19915:7;19906:6;19895:9;19891:22;19859:64;:::i;:::-;19849:74;;19805:128;19589:351;;;;:::o;19946:229::-;19983:3;20006:22;20022:5;20006:22;:::i;:::-;19997:31;;20050:66;20043:5;20040:77;20037:103;;20120:18;;:::i;:::-;20037:103;20167:1;20160:5;20156:13;20149:20;;19946:229;;;:::o;20181:313::-;20219:4;20239:18;20255:1;20239:18;:::i;:::-;20234:23;;20271:18;20287:1;20271:18;:::i;:::-;20266:23;;20313:1;20310;20306:9;20298:17;;20445:8;20439:4;20435:19;20354:66;20348:4;20344:77;20328:136;20325:162;;;20467:18;;:::i;:::-;20325:162;20181:313;;;;:::o;20500:271::-;20538:7;20561:18;20577:1;20561:18;:::i;:::-;20556:23;;20593:18;20609:1;20593:18;:::i;:::-;20588:23;;20646:1;20643;20639:9;20668:28;20684:11;20668:28;:::i;:::-;20657:39;;20728:11;20719:7;20716:24;20706:58;;20744:18;;:::i;:::-;20706:58;20546:225;20500:271;;;;:::o;20777:86::-;20812:7;20852:4;20845:5;20841:16;20830:27;;20777:86;;;:::o;20869:191::-;20907:4;20927:18;20943:1;20927:18;:::i;:::-;20922:23;;20959:18;20975:1;20959:18;:::i;:::-;20954:23;;21001:1;20998;20994:9;20986:17;;21025:4;21019;21016:14;21013:40;;;21033:18;;:::i;:::-;21013:40;20869:191;;;;:::o;21066:309::-;21104:3;21123:18;21139:1;21123:18;:::i;:::-;21118:23;;21155:18;21171:1;21155:18;:::i;:::-;21150:23;;21196:1;21193;21189:9;21182:16;;21268:66;21263:3;21259:76;21236:8;21231:3;21227:18;21211:134;21208:160;;;21348:18;;:::i;:::-;21208:160;21066:309;;;;:::o;21381:151::-;21521:3;21517:1;21509:6;21505:14;21498:27;21381:151;:::o;21538:365::-;21680:3;21701:66;21765:1;21760:3;21701:66;:::i;:::-;21694:73;;21776:93;21865:3;21776:93;:::i;:::-;21894:2;21889:3;21885:12;21878:19;;21538:365;;;:::o;21909:419::-;22075:4;22113:2;22102:9;22098:18;22090:26;;22162:9;22156:4;22152:20;22148:1;22137:9;22133:17;22126:47;22190:131;22316:4;22190:131;:::i;:::-;22182:139;;21909:419;;;:::o;22334:372::-;22373:4;22393:19;22410:1;22393:19;:::i;:::-;22388:24;;22426:19;22443:1;22426:19;:::i;:::-;22421:24;;22469:1;22466;22462:9;22454:17;;22663:1;22657:4;22653:12;22649:1;22646;22642:9;22638:28;22621:1;22615:4;22611:12;22606:1;22603;22599:9;22592:17;22588:36;22572:104;22569:130;;;22679:18;;:::i;:::-;22569:130;22334:372;;;;:::o;22712:556::-;22751:7;22774:19;22791:1;22774:19;:::i;:::-;22769:24;;22807:19;22824:1;22807:19;:::i;:::-;22802:24;;22861:1;22858;22854:9;22883:29;22900:11;22883:29;:::i;:::-;22872:40;;22970:66;22967:1;22964:73;22960:1;22957;22953:9;22949:89;22946:115;;;23041:18;;:::i;:::-;22946:115;23211:1;23202:7;23197:16;23194:1;23191:23;23171:1;23164:9;23144:84;23121:140;;23241:18;;:::i;:::-;23121:140;22759:509;22712:556;;;;:::o;23274:375::-;23313:3;23332:19;23349:1;23332:19;:::i;:::-;23327:24;;23365:19;23382:1;23365:19;:::i;:::-;23360:24;;23407:1;23404;23400:9;23393:16;;23605:1;23600:3;23596:11;23589:19;23585:1;23582;23578:9;23574:35;23557:1;23552:3;23548:11;23543:1;23540;23536:9;23529:17;23525:35;23509:110;23506:136;;;23622:18;;:::i;:::-;23506:136;23274:375;;;;:::o;23655:233::-;23694:3;23717:24;23735:5;23717:24;:::i;:::-;23708:33;;23763:66;23756:5;23753:77;23750:103;;23833:18;;:::i;:::-;23750:103;23880:1;23873:5;23869:13;23862:20;;23655:233;;;:::o;23894:188::-;23932:3;23951:18;23967:1;23951:18;:::i;:::-;23946:23;;23983:18;23999:1;23983:18;:::i;:::-;23978:23;;24024:1;24021;24017:9;24010:16;;24047:4;24042:3;24039:13;24036:39;;;24055:18;;:::i;:::-;24036:39;23894:188;;;;:::o;24088:167::-;24228:19;24224:1;24216:6;24212:14;24205:43;24088:167;:::o;24261:366::-;24403:3;24424:67;24488:2;24483:3;24424:67;:::i;:::-;24417:74;;24500:93;24589:3;24500:93;:::i;:::-;24618:2;24613:3;24609:12;24602:19;;24261:366;;;:::o;24633:419::-;24799:4;24837:2;24826:9;24822:18;24814:26;;24886:9;24880:4;24876:20;24872:1;24861:9;24857:17;24850:47;24914:131;25040:4;24914:131;:::i;:::-;24906:139;;24633:419;;;:::o;25058:232::-;25098:3;25117:20;25135:1;25117:20;:::i;:::-;25112:25;;25151:20;25169:1;25151:20;:::i;:::-;25146:25;;25194:1;25191;25187:9;25180:16;;25217:42;25212:3;25209:51;25206:77;;;25263:18;;:::i;:::-;25206:77;25058:232;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2661000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"liquidity()": "2489",
								"mint(address,int24,int24,uint128,bytes)": "infinite",
								"positions(bytes32)": "2808",
								"slot0()": "4829",
								"swap(address,bool,uint256,bytes)": "infinite",
								"tickBitmap(int16)": "2784",
								"ticks(int24)": "5206",
								"token0()": "infinite",
								"token1()": "infinite"
							},
							"internal": {
								"balance0()": "infinite",
								"balance1()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1864,
									"end": 2137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2029,
									"end": 2036,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2020,
									"end": 2036,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2056,
									"end": 2063,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2047,
									"end": 2063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2103,
									"end": 2115,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2123,
									"end": 2127,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "SIGNEXTEND",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2082,
									"end": 2129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2079,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFF"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SIGNEXTEND",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFF"
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2074,
									"end": 2129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1864,
									"end": 2137,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 967,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 967,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 918,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 936,
									"end": 941,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 918,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 918,
									"end": 942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 918,
									"end": 942,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 918,
									"end": 942,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 908,
									"end": 943,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 898,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 898,
									"end": 961,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 957,
									"end": 958,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 947,
									"end": 959,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 898,
									"end": 961,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 898,
									"end": 961,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 845,
									"end": 967,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 967,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1030,
									"end": 1035,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1067,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1055,
									"end": 1068,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1046,
									"end": 1068,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1046,
									"end": 1068,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 1077,
									"end": 1110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 973,
									"end": 1116,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1197,
									"end": 1198,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1186,
									"end": 1206,
									"name": "SIGNEXTEND",
									"source": 14
								},
								{
									"begin": 1175,
									"end": 1206,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1175,
									"end": 1206,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1305,
									"end": 1310,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 1289,
									"end": 1311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1282,
									"end": 1287,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1326,
									"end": 1327,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1324,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1328,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1218,
									"end": 1336,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1397,
									"end": 1402,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1434,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1422,
									"end": 1435,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1469,
									"end": 1474,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 1444,
									"end": 1475,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1342,
									"end": 1481,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1582,
									"end": 1588,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1590,
									"end": 1596,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1655,
									"end": 1658,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 1643,
									"end": 1652,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1634,
									"end": 1641,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1630,
									"end": 1653,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1626,
									"end": 1659,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 1662,
									"end": 1741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1782,
									"end": 1783,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1863,
									"end": 1870,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1843,
									"end": 1852,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 1839,
									"end": 1861,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 1807,
									"end": 1871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1753,
									"end": 1881,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1920,
									"end": 1922,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 2002,
									"end": 2009,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 1993,
									"end": 1999,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1982,
									"end": 1991,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 1978,
									"end": 2000,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 1946,
									"end": 2010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1891,
									"end": 2020,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2141,
									"end": 2148,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2121,
									"end": 2130,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 2117,
									"end": 2139,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 2085,
									"end": 2149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2075,
									"end": 2149,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2075,
									"end": 2149,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2030,
									"end": 2159,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2198,
									"end": 2200,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2278,
									"end": 2285,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2258,
									"end": 2267,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 2254,
									"end": 2276,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 2224,
									"end": 2286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "tag",
									"source": 14,
									"value": "48"
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2214,
									"end": 2286,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2214,
									"end": 2286,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2169,
									"end": 2296,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1487,
									"end": 2303,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 8170,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001f569d86aa03a33d1bd9400bc0ad1a8f02305822c506f18c435f7ffe893569a64736f6c634300081e0033",
									".code": [
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "514EA4BF"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "514EA4BF"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "5339C296"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "80C2C6EF"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "F30DBA93"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "1A686502"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "3C8A7D8D"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 8170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 943,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 943,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1245,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1187,
											"end": 1205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1187,
											"end": 1205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2159,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2159,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2159,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1438,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1438,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1367,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1367,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1367,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4699,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4699,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4699,
											"end": 7851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 981,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 981,
											"end": 1012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1299,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1299,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1299,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 943,
											"end": 974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 943,
											"end": 974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2429,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2416,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2407,
											"end": 2466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 744,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 2446,
											"end": 2466,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2446,
											"end": 2466,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2455,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2466,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2446,
											"end": 2466,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2446,
											"end": 2466,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2466,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2407,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 744,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 793,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 793,
											"end": 802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 793,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 793,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 793,
											"end": 802,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 793,
											"end": 802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2503,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2407,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2389,
											"end": 2540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "64847D000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2540,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2389,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2555,
											"end": 2561,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2566,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2555,
											"end": 2566,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2555,
											"end": 2566,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "1007454800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2636,
											"end": 2645,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2623,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2623,
											"end": 2635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2685,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2685,
											"end": 2697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 2716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2727,
											"end": 2804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2779,
											"end": 2788,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2759,
											"end": 2769,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2759,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2759,
											"end": 2778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2727,
											"end": 2804,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2727,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2814,
											"end": 2891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2877,
											"end": 2878,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2846,
											"end": 2856,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2846,
											"end": 2865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2891,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2814,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2964,
											"end": 2969,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2984,
											"end": 2993,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2945,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2936,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2936,
											"end": 2949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2936,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2903,
											"end": 3028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3047,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3039,
											"end": 3054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3039,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3142,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3119,
											"end": 3142,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3119,
											"end": 3130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3119,
											"end": 3142,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3119,
											"end": 3142,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3209,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3209,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3247,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3209,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3294,
											"end": 3303,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3266,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3266,
											"end": 3304,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3266,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3169,
											"end": 3344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3169,
											"end": 3344,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3169,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3344,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3380,
											"end": 3389,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3389,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3456,
											"end": 3462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3456,
											"end": 3475,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3494,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3494,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3494,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3416,
											"end": 3572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3572,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3416,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3572,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3637,
											"end": 3643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3703,
											"end": 3712,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3675,
											"end": 3713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3713,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3675,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3738,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3597,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3753,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3597,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3753,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3587,
											"end": 3753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3795,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3768,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3879,
											"end": 3917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3907,
											"end": 3916,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3879,
											"end": 3917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3917,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3879,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3964,
											"end": 3973,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3936,
											"end": 3974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3936,
											"end": 3974,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3936,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 3999,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3839,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3839,
											"end": 4014,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3839,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 4014,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 4014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3362,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3115,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4115,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4119,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4104,
											"end": 4148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4138,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4138,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4138,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4138,
											"end": 4148,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4138,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4104,
											"end": 4148,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4104,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4170,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4174,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4159,
											"end": 4203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4193,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4193,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4193,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4176,
											"end": 4203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4203,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4159,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4237,
											"end": 4247,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4270,
											"name": "PUSH",
											"source": 0,
											"value": "D3487997"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4307,
											"end": 4314,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4333,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 4329,
											"end": 4333,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4214,
											"end": 4344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4369,
											"end": 4370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4366,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4370,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4411,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4359,
											"end": 4411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4401,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4401,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4401,
											"end": 4411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4401,
											"end": 4411,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4401,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4391,
											"end": 4398,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4374,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4374,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4374,
											"end": 4411,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4411,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4359,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4355,
											"end": 4458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4355,
											"end": 4458,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4355,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4480,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4473,
											"end": 4484,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4515,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4515,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4515,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4505,
											"end": 4512,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 4502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4488,
											"end": 4512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 4512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4488,
											"end": 4512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4488,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4488,
											"end": 4525,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4469,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4547,
											"end": 4572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4572,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4469,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 4612,
											"end": 4621,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE"
										},
										{
											"begin": 4593,
											"end": 4603,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4649,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 4651,
											"end": 4658,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4588,
											"end": 4659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4659,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2159,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4945,
											"end": 4959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5033,
											"end": 5055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5109,
											"end": 5124,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5157,
											"end": 5158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5187,
											"end": 5193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5187,
											"end": 5206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5187,
											"end": 5206,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5187,
											"end": 5206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5227,
											"end": 5233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5227,
											"end": 5238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5227,
											"end": 5238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5058,
											"end": 5250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5033,
											"end": 5250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5033,
											"end": 5250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5303,
											"end": 5304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5270,
											"end": 5304,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5321,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5321,
											"end": 5342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5321,
											"end": 5342,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 5321,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5357,
											"end": 5400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5497,
											"end": 5502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5507,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5497,
											"end": 5507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5497,
											"end": 5507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5546,
											"end": 5556,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5445,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5435,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5435,
											"end": 5478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5416,
											"end": 5420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5416,
											"end": 5429,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5415,
											"end": 5571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5638,
											"end": 5642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5638,
											"end": 5651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5638,
											"end": 5651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5638,
											"end": 5651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5610,
											"end": 5652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5652,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5610,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5586,
											"end": 5652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5786,
											"end": 5791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5786,
											"end": 5804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5827,
											"end": 5848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5871,
											"end": 5880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5908,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5903,
											"end": 5933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5721,
											"end": 5952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5721,
											"end": 5952,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5721,
											"end": 5952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5673,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5692,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5688,
											"end": 5701,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5688,
											"end": 5701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5703,
											"end": 5707,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5703,
											"end": 5717,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5703,
											"end": 5717,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5667,
											"end": 5952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6001,
											"end": 6014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 5972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 5997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5967,
											"end": 5997,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5967,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5967,
											"end": 6014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6105,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6091,
											"end": 6105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6091,
											"end": 6105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6065,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6191,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6219,
											"end": 6224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6191,
											"end": 6218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6191,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6191,
											"end": 6238,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6191,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6188,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6178,
											"end": 6188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6178,
											"end": 6238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 6282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5263,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6320,
											"end": 6331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6320,
											"end": 6331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6320,
											"end": 6331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6306,
											"end": 6331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6306,
											"end": 6331,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 6306,
											"end": 6311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6306,
											"end": 6316,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6306,
											"end": 6316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6306,
											"end": 6316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6306,
											"end": 6331,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6306,
											"end": 6331,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 6306,
											"end": 6331,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6302,
											"end": 6427,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6414,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6404,
											"end": 6414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6349,
											"end": 6354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6369,
											"end": 6379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6369,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6427,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 6302,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6460,
											"end": 6470,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6460,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6460,
											"end": 6782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6669,
											"end": 6674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6661,
											"end": 6692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6661,
											"end": 6692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6661,
											"end": 6692,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6661,
											"end": 6692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6736,
											"end": 6766,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6733,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6718,
											"end": 6766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6718,
											"end": 6766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6766,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6718,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6460,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6460,
											"end": 6782,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6460,
											"end": 6782,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6460,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6527,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6512,
											"end": 6560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 6512,
											"end": 6560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6512,
											"end": 6560,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 6512,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6580,
											"end": 6611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6580,
											"end": 6611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6580,
											"end": 6611,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 6580,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6460,
											"end": 6782,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 6460,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6782,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6782,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6799,
											"end": 6809,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6826,
											"end": 6849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6826,
											"end": 6849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6849,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 6850,
											"end": 6859,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6870,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6869,
											"end": 6877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 6869,
											"end": 6877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6869,
											"end": 6877,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 6869,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6826,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6826,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6896,
											"end": 6918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6921,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6921,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6921,
											"end": 6931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6921,
											"end": 6931,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6921,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6896,
											"end": 6931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6896,
											"end": 6931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6969,
											"end": 6979,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6946,
											"end": 7002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7002,
											"name": "PUSH",
											"source": 0,
											"value": "FA461E33"
										},
										{
											"begin": 7021,
											"end": 7028,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7047,
											"end": 7054,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6946,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6946,
											"end": 7092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7147,
											"end": 7155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7147,
											"end": 7157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7147,
											"end": 7157,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7147,
											"end": 7157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7143,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7111,
											"end": 7144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7111,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7144,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7111,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7157,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7208,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7107,
											"end": 7208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7183,
											"end": 7208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7107,
											"end": 7208,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7107,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6811,
											"end": 7220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7241,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7241,
											"end": 7264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7264,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 7265,
											"end": 7274,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7292,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7284,
											"end": 7292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7284,
											"end": 7292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7284,
											"end": 7292,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7284,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 7241,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 7241,
											"end": 7294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7241,
											"end": 7294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7311,
											"end": 7333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7336,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7336,
											"end": 7346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7336,
											"end": 7346,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7336,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7311,
											"end": 7346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7311,
											"end": 7346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7384,
											"end": 7394,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7361,
											"end": 7417,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7417,
											"name": "PUSH",
											"source": 0,
											"value": "FA461E33"
										},
										{
											"begin": 7436,
											"end": 7443,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7462,
											"end": 7469,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 7361,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7562,
											"end": 7570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7562,
											"end": 7572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7572,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7562,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7551,
											"end": 7558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7526,
											"end": 7559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7526,
											"end": 7559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7559,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7526,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7526,
											"end": 7572,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7623,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7522,
											"end": 7623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7623,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7522,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7226,
											"end": 7635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6795,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7697,
											"end": 7706,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "C42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67"
										},
										{
											"begin": 7721,
											"end": 7728,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7750,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7765,
											"end": 7783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7822,
											"end": 7827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7822,
											"end": 7832,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7653,
											"end": 7843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7653,
											"end": 7843,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 7851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 7851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 7851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 160,
											"end": 695,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 160,
											"end": 695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 314,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 352,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 359,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 364,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "SIGNEXTEND",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "SIGNEXTEND",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 355,
											"end": 365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 355,
											"end": 365,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 326,
											"end": 365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 326,
											"end": 365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 375,
											"end": 398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 409,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 401,
											"end": 419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 401,
											"end": 419,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 401,
											"end": 419,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 401,
											"end": 419,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 375,
											"end": 419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 375,
											"end": 419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 429,
											"end": 451,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 486,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 454,
											"end": 469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 454,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 454,
											"end": 486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 454,
											"end": 486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 454,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 454,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 454,
											"end": 486,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 454,
											"end": 486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 429,
											"end": 486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 429,
											"end": 486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 552,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 533,
											"end": 553,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 533,
											"end": 553,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 533,
											"end": 553,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 508,
											"end": 527,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 508,
											"end": 527,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 508,
											"end": 527,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 507,
											"end": 554,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 507,
											"end": 554,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 497,
											"end": 554,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 497,
											"end": 554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 588,
											"end": 589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 584,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 569,
											"end": 589,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 589,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 569,
											"end": 589,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 628,
											"end": 632,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 605,
											"end": 613,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 605,
											"end": 625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 605,
											"end": 625,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 632,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 605,
											"end": 632,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 605,
											"end": 632,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 605,
											"end": 632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 643,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 674,
											"end": 688,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 653,
											"end": 661,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 653,
											"end": 671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 653,
											"end": 671,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 653,
											"end": 688,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 653,
											"end": 688,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 688,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 653,
											"end": 688,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 653,
											"end": 688,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 316,
											"end": 695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 316,
											"end": 695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 316,
											"end": 695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 160,
											"end": 695,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 160,
											"end": 695,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 160,
											"end": 695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 160,
											"end": 695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 160,
											"end": 695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 160,
											"end": 695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1278,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1274,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1260,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 1256,
											"end": 1274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 1256,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1256,
											"end": 1279,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1279,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1248,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1325,
											"end": 1338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1340,
											"end": 1352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1372,
											"end": 1383,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1365,
											"end": 1369,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1365,
											"end": 1383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 1356,
											"end": 1384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1356,
											"end": 1384,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1356,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1394,
											"end": 1406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1409,
											"end": 1420,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1394,
											"end": 1420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1394,
											"end": 1420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1451,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1434,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "XOR",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1430,
											"end": 1451,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1238,
											"end": 1458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1110,
											"end": 1458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 138,
											"end": 444,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 300,
											"end": 330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 357,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 405,
											"end": 414,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 416,
											"end": 425,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 381,
											"end": 426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 381,
											"end": 426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 371,
											"end": 427,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 437,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 437,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 353,
											"end": 437,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 437,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 342,
											"end": 437,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 342,
											"end": 437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 138,
											"end": 444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 450,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 528,
											"end": 551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 558,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 554,
											"end": 568,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 554,
											"end": 568,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 568,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 528,
											"end": 568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 528,
											"end": 568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 578,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 635,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 603,
											"end": 618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 603,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 603,
											"end": 635,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 603,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 603,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 603,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 603,
											"end": 635,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 603,
											"end": 635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 578,
											"end": 635,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 578,
											"end": 635,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 677,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 650,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 646,
											"end": 660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 660,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 677,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 646,
											"end": 677,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 677,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 677,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 646,
											"end": 677,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 518,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 450,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1418,
											"end": 1438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1476,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1519,
											"end": 1523,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1512,
											"end": 1524,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1495,
											"end": 1499,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 1487,
											"end": 1500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1487,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 1468,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1525,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 477,
											"end": 484,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 637,
											"end": 646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFF"
										},
										{
											"begin": 1554,
											"end": 1579,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1550,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1535,
											"end": 1585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 1535,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1622,
											"end": 1625,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1612,
											"end": 1619,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1612,
											"end": 1625,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1612,
											"end": 1630,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1705,
											"name": "PUSH",
											"source": 13,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1633,
											"end": 1667,
											"name": "PUSH",
											"source": 13,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1612,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1732,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1719,
											"end": 1726,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1719,
											"end": 1732,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1795,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1756,
											"end": 1790,
											"name": "PUSH",
											"source": 13,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1748,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1748,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1747,
											"end": 1798,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1739,
											"end": 1798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1715,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1829,
											"end": 1830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1825,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1812,
											"end": 1825,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1888,
											"end": 1891,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1849,
											"end": 1883,
											"name": "PUSH",
											"source": 13,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1841,
											"end": 1846,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1841,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 1841,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1840,
											"end": 1891,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1891,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 1808,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1905,
											"end": 1912,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1918,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1905,
											"end": 1923,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1942,
											"end": 1976,
											"name": "PUSH",
											"source": 13,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1934,
											"end": 1939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1934,
											"end": 1976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 1934,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1933,
											"end": 1984,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1933,
											"end": 1984,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1984,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 1901,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2012,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2012,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2017,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2036,
											"end": 2070,
											"name": "PUSH",
											"source": 13,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2028,
											"end": 2033,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2028,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 2028,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2027,
											"end": 2078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2027,
											"end": 2078,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2019,
											"end": 2078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2019,
											"end": 2078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 1994,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2106,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2092,
											"end": 2111,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2172,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2122,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2172,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2113,
											"end": 2172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2113,
											"end": 2172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 2088,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2200,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2200,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2205,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2263,
											"end": 2266,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2224,
											"end": 2258,
											"name": "PUSH",
											"source": 13,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2216,
											"end": 2221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2216,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 2216,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2266,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2266,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 2182,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2298,
											"end": 2299,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2294,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2299,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2357,
											"end": 2360,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2318,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2310,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 2310,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2309,
											"end": 2360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2309,
											"end": 2360,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 2276,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2393,
											"end": 2394,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2374,
											"end": 2381,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2389,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2374,
											"end": 2394,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2452,
											"end": 2455,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2413,
											"end": 2447,
											"name": "PUSH",
											"source": 13,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2405,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 2405,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2404,
											"end": 2455,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2396,
											"end": 2455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2396,
											"end": 2455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 2370,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2488,
											"end": 2489,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2484,
											"name": "PUSH",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2469,
											"end": 2484,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2508,
											"end": 2542,
											"name": "PUSH",
											"source": 13,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2500,
											"end": 2505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2500,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 2500,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2550,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2491,
											"end": 2550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2491,
											"end": 2550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 2465,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2579,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2584,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2642,
											"end": 2645,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2603,
											"end": 2637,
											"name": "PUSH",
											"source": 13,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2595,
											"end": 2600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2595,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 2595,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2594,
											"end": 2645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2594,
											"end": 2645,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2586,
											"end": 2645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2586,
											"end": 2645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 2560,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2674,
											"name": "PUSH",
											"source": 13,
											"value": "800"
										},
										{
											"begin": 2659,
											"end": 2666,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2659,
											"end": 2674,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2737,
											"end": 2740,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2698,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2690,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 2690,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2740,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2681,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2681,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 2655,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "PUSH",
											"source": 13,
											"value": "1000"
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2770,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2775,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2794,
											"end": 2828,
											"name": "PUSH",
											"source": 13,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2786,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 2786,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2785,
											"end": 2836,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2785,
											"end": 2836,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 2836,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2777,
											"end": 2836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 2750,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "PUSH",
											"source": 13,
											"value": "2000"
										},
										{
											"begin": 2850,
											"end": 2857,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2866,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2929,
											"end": 2932,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2890,
											"end": 2924,
											"name": "PUSH",
											"source": 13,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2882,
											"end": 2887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2882,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2882,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 2932,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 2932,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2873,
											"end": 2932,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2873,
											"end": 2932,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 2846,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "PUSH",
											"source": 13,
											"value": "4000"
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2946,
											"end": 2962,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2946,
											"end": 2967,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3025,
											"end": 3028,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2986,
											"end": 3020,
											"name": "PUSH",
											"source": 13,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 2978,
											"end": 3020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2978,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3028,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 2969,
											"end": 3028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2969,
											"end": 3028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 2942,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3058,
											"name": "PUSH",
											"source": 13,
											"value": "8000"
										},
										{
											"begin": 3042,
											"end": 3049,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3042,
											"end": 3058,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3042,
											"end": 3063,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3124,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3082,
											"end": 3116,
											"name": "PUSH",
											"source": 13,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3074,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 3074,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3124,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3124,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3124,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3065,
											"end": 3124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 3038,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3155,
											"name": "PUSH",
											"source": 13,
											"value": "10000"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3138,
											"end": 3155,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3138,
											"end": 3160,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3217,
											"end": 3220,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3179,
											"end": 3212,
											"name": "PUSH",
											"source": 13,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3171,
											"end": 3176,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3171,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 3171,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3220,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3220,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3220,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 3134,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "PUSH",
											"source": 13,
											"value": "20000"
										},
										{
											"begin": 3234,
											"end": 3241,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3234,
											"end": 3251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3234,
											"end": 3256,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3312,
											"end": 3315,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3275,
											"end": 3307,
											"name": "PUSH",
											"source": 13,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3267,
											"end": 3272,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3267,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3267,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3266,
											"end": 3315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3266,
											"end": 3315,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3258,
											"end": 3315,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3230,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3346,
											"name": "PUSH",
											"source": 13,
											"value": "40000"
										},
										{
											"begin": 3329,
											"end": 3336,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3329,
											"end": 3346,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3329,
											"end": 3351,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3408,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3370,
											"end": 3400,
											"name": "PUSH",
											"source": 13,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3362,
											"end": 3367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3362,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 3362,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3361,
											"end": 3408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3361,
											"end": 3408,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 3353,
											"end": 3408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3353,
											"end": 3408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3325,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3443,
											"end": 3444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "PUSH",
											"source": 13,
											"value": "80000"
										},
										{
											"begin": 3422,
											"end": 3429,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3439,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3444,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3463,
											"end": 3488,
											"name": "PUSH",
											"source": 13,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3455,
											"end": 3460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3455,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3455,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3454,
											"end": 3496,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3446,
											"end": 3496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3418,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 3511,
											"end": 3519,
											"name": "SGT",
											"source": 13
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 3529,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 3529,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3507,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3913,
											"end": 3920,
											"name": "PUSH",
											"source": 13,
											"value": "100000000"
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 3904,
											"end": 3921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 3904,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3926,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3899,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3887,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 3887,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 3943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 3943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 3943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 245,
											"end": 830,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 245,
											"end": 830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 389,
											"end": 404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 420,
											"end": 449,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 449,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 420,
											"end": 433,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 420,
											"end": 449,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 420,
											"end": 449,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 420,
											"end": 449,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 416,
											"end": 526,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 416,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 416,
											"end": 526,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 497,
											"end": 510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 512,
											"end": 525,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 463,
											"end": 526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 416,
											"end": 526,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 416,
											"end": 526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 561,
											"end": 562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 558,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 545,
											"end": 562,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 545,
											"end": 562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 545,
											"end": 562,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 537,
											"end": 563,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 537,
											"end": 563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 584,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 611,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 646,
											"end": 691,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 646,
											"end": 691,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 654,
											"end": 663,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 646,
											"end": 664,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 646,
											"end": 664,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 646,
											"end": 691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 646,
											"end": 691,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 727,
											"end": 740,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 711,
											"end": 724,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 711,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 711,
											"end": 740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 711,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 711,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 711,
											"end": 740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 711,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 611,
											"end": 786,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 611,
											"end": 786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 759,
											"end": 772,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 611,
											"end": 786,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 611,
											"end": 786,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 611,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 611,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 611,
											"end": 786,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 611,
											"end": 786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 800,
											"end": 813,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 584,
											"end": 823,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 584,
											"end": 823,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 584,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 584,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 584,
											"end": 823,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 584,
											"end": 823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 574,
											"end": 823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 574,
											"end": 823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 245,
											"end": 830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1089,
											"end": 1104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1133,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1120,
											"end": 1149,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1210,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1212,
											"end": 1225,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1116,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1317,
											"end": 1330,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1314,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 1301,
											"end": 1330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1301,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 175,
											"end": 180,
											"name": "PUSH",
											"source": 6,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 1247,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 1247,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1247,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 1378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7880,
											"end": 8008,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 7880,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 7974,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 7961,
											"end": 7985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7961,
											"end": 7985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 7985,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7994,
											"end": 7998,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 7961,
											"end": 8000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 7961,
											"end": 8000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 7961,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7951,
											"end": 8000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7951,
											"end": 8000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 8008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 8008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8165,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8037,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8080,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8125,
											"end": 8131,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8118,
											"end": 8142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8118,
											"end": 8142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8142,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8151,
											"end": 8155,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8118,
											"end": 8157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 8118,
											"end": 8157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 8118,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8108,
											"end": 8157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2408,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2457,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2443,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2439,
											"end": 2457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 2457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 2457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2478,
											"end": 2479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2475,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2479,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2471,
											"end": 2479,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2479,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2501,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2487,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2483,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 2483,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2506,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2483,
											"end": 2506,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2506,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2483,
											"end": 2506,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2471,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 2508,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2573,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2590,
											"end": 2603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2617,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2630,
											"end": 2640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2621,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2641,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 2621,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2722,
											"end": 2734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2758,
											"end": 2769,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2758,
											"end": 2769,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2758,
											"end": 2769,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2758,
											"end": 2769,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2743,
											"end": 2749,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2749,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2738,
											"end": 2749,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2739,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2738,
											"end": 2749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2749,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2737,
											"end": 2754,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 2737,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2754,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 2737,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 2737,
											"end": 2770,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 2737,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2737,
											"end": 2770,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 2737,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2722,
											"end": 2770,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2722,
											"end": 2770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2798,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2805,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2813,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2801,
											"end": 2821,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2821,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2821,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 2974,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 2979,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 2979,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2954,
											"end": 2979,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2954,
											"end": 2979,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3110,
											"end": 3121,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3110,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 3110,
											"end": 3296,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3285,
											"end": 3296,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3280,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3266,
											"end": 3280,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3257,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 3247,
											"end": 3281,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3281,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 3247,
											"end": 3281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3247,
											"end": 3281,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 3247,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3246,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 3246,
											"end": 3296,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3246,
											"end": 3296,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3246,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3246,
											"end": 3296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3246,
											"end": 3296,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 3246,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3110,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3110,
											"end": 3296,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3110,
											"end": 3296,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 3110,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3227,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3202,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3176,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3176,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3173,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3167,
											"end": 3210,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 3167,
											"end": 3210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3167,
											"end": 3210,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 3167,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3211,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3160,
											"end": 3211,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3151,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3141,
											"end": 3212,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3212,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 3141,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3212,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 3141,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3140,
											"end": 3227,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3227,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3140,
											"end": 3227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3140,
											"end": 3227,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3140,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3110,
											"end": 3296,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 3110,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3103,
											"end": 3296,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3103,
											"end": 3296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2575,
											"end": 3307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2575,
											"end": 3307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2575,
											"end": 3307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2575,
											"end": 3307,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3425,
											"end": 3438,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 3478,
											"end": 3479,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3465,
											"end": 3475,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3465,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 3465,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 3456,
											"end": 3480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3480,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 3456,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3424,
											"end": 3480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3586,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3581,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3570,
											"end": 3581,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3571,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3570,
											"end": 3581,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3581,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3569,
											"end": 3586,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3586,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 3569,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3586,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 3569,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3587,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3622,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3630,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3618,
											"end": 3638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 3788,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 3788,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3763,
											"end": 3788,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3763,
											"end": 3788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3919,
											"end": 4136,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4136,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4094,
											"end": 4109,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4094,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4094,
											"end": 4118,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4094,
											"end": 4118,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4094,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 4094,
											"end": 4118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4094,
											"end": 4118,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4094,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4086,
											"end": 4120,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4086,
											"end": 4120,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4077,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4063,
											"end": 4073,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4063,
											"end": 4077,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 4063,
											"end": 4077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4077,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4063,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 4063,
											"end": 4121,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 4063,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4063,
											"end": 4121,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 4063,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4062,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4062,
											"end": 4136,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4062,
											"end": 4136,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4062,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 4062,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4062,
											"end": 4136,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 4062,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3919,
											"end": 4136,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4136,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 3919,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4032,
											"end": 4043,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4019,
											"end": 4025,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 4009,
											"end": 4015,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 3981,
											"end": 4016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 3981,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3981,
											"end": 4025,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4025,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 3981,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4025,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 3981,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3973,
											"end": 4027,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3950,
											"end": 3960,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3950,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 3950,
											"end": 4028,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 4028,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 3950,
											"end": 4028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 4028,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 3950,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3949,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3949,
											"end": 4043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3949,
											"end": 4043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3949,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 3949,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3949,
											"end": 4043,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 3949,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3919,
											"end": 4136,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 3919,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 4136,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 4136,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3313,
											"end": 4147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3313,
											"end": 4147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3313,
											"end": 4147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3313,
											"end": 4147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 2566,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2410,
											"end": 4153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 4153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 332,
											"end": 356,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 436,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 461,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 479,
											"end": 520,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 479,
											"end": 520,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 479,
											"end": 498,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 479,
											"end": 520,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 479,
											"end": 520,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 479,
											"end": 520,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 479,
											"end": 520,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 461,
											"end": 520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 461,
											"end": 520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 594,
											"end": 613,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 627,
											"end": 636,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 650,
											"end": 665,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 679,
											"end": 689,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 550,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 550,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 550,
											"end": 699,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 550,
											"end": 699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 531,
											"end": 699,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 531,
											"end": 699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 721,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 756,
											"end": 775,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 789,
											"end": 805,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 819,
											"end": 828,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 721,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 721,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 721,
											"end": 838,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 721,
											"end": 838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 838,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 710,
											"end": 838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 860,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 895,
											"end": 914,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 928,
											"end": 944,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 958,
											"end": 967,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 860,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 860,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 860,
											"end": 977,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 860,
											"end": 977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 848,
											"end": 977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 848,
											"end": 977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 993,
											"end": 1003,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 988,
											"end": 1075,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1044,
											"end": 1053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1055,
											"end": 1063,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1064,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1064,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1064,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1019,
											"end": 1064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1075,
											"name": "tag",
											"source": 10,
											"value": "315"
										},
										{
											"begin": 988,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 451,
											"end": 1081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 108,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4362,
											"end": 8643,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4362,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 827,
											"name": "PUSH",
											"source": 13,
											"value": "1000276A3"
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4576,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4627,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4627,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 4564,
											"end": 4627,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1046,
											"name": "PUSH",
											"source": 13,
											"value": "FFFD8963EFD1FC6A506488495D951D5263988D26"
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4598,
											"end": 4627,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4564,
											"end": 4627,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 4564,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 4556,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 4556,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4656,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4686,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4667,
											"end": 4679,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4659,
											"end": 4680,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4659,
											"end": 4680,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4659,
											"end": 4686,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4659,
											"end": 4686,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4686,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4709,
											"end": 4714,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4714,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4738,
											"end": 4739,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4739,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 4739,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4795,
											"end": 4829,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4792,
											"end": 4793,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4789,
											"end": 4830,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4786,
											"end": 4787,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4782,
											"end": 4831,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4854,
											"end": 4857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4861,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4844,
											"end": 4861,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4844,
											"end": 4861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4879,
											"end": 4888,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 4888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 4888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4952,
											"end": 4970,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4971,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4943,
											"end": 4944,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 4939,
											"end": 4972,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5000,
											"end": 5001,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4995,
											"end": 4998,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5027,
											"end": 5028,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5024,
											"end": 5025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5015,
											"end": 5029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4916,
											"end": 5039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5093,
											"end": 5103,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5091,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5104,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5084,
											"end": 5085,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5080,
											"end": 5105,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5133,
											"end": 5134,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5125,
											"end": 5135,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5135,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5135,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5160,
											"end": 5161,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5157,
											"end": 5158,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5153,
											"end": 5162,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5148,
											"end": 5162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 5223,
											"end": 5224,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5220,
											"end": 5233,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5217,
											"end": 5218,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5213,
											"end": 5234,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5257,
											"end": 5260,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5254,
											"end": 5264,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5247,
											"end": 5264,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5247,
											"end": 5264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5282,
											"end": 5291,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5291,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5277,
											"end": 5291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5190,
											"end": 5301,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5355,
											"end": 5359,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5352,
											"end": 5353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5349,
											"end": 5360,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5342,
											"end": 5361,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5389,
											"end": 5390,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5381,
											"end": 5391,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5391,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5391,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5409,
											"end": 5418,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5418,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5482,
											"end": 5485,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 5479,
											"end": 5480,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5486,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5469,
											"end": 5487,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5510,
											"end": 5513,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5507,
											"end": 5517,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5517,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5517,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5544,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5530,
											"end": 5544,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5530,
											"end": 5544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5611,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5612,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5600,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5636,
											"end": 5639,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5643,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5626,
											"end": 5643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5626,
											"end": 5643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5665,
											"end": 5666,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5661,
											"end": 5670,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5670,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5572,
											"end": 5680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5727,
											"end": 5730,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5724,
											"end": 5725,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5721,
											"end": 5731,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5757,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5751,
											"end": 5761,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5761,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5761,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5698,
											"end": 5771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5792,
											"end": 5795,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5785,
											"end": 5788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5795,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5820,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 5811,
											"end": 5814,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 5811,
											"end": 5820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5806,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5821,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5821,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5797,
											"end": 5821,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5797,
											"end": 5821,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5850,
											"end": 5853,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 5850,
											"end": 5859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 5850,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5860,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5860,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5836,
											"end": 5860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 5781,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5883,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5911,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5901,
											"end": 5904,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 5887,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5886,
											"end": 5911,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5886,
											"end": 5911,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5911,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 5967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5964,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5954,
											"end": 5957,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 5950,
											"end": 5969,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 5969,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 5969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5991,
											"end": 6002,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6042,
											"end": 6043,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 6034,
											"end": 6044,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6027,
											"end": 6032,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6024,
											"end": 6045,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6070,
											"end": 6071,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6063,
											"end": 6072,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6072,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5931,
											"end": 6082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6135,
											"end": 6136,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6123,
											"end": 6126,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 6119,
											"end": 6138,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6138,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6169,
											"end": 6170,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6164,
											"end": 6167,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6160,
											"end": 6171,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6207,
											"end": 6209,
											"name": "PUSH",
											"source": 13,
											"value": "3E"
										},
										{
											"begin": 6203,
											"end": 6213,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6193,
											"end": 6214,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6184,
											"end": 6214,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6184,
											"end": 6214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6239,
											"end": 6240,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6237,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6232,
											"end": 6241,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6227,
											"end": 6241,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6227,
											"end": 6241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6301,
											"end": 6302,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6297,
											"end": 6306,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6292,
											"end": 6295,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 6288,
											"end": 6307,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6283,
											"end": 6307,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6283,
											"end": 6307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6336,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6329,
											"end": 6340,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6380,
											"end": 6381,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6376,
											"end": 6378,
											"name": "PUSH",
											"source": 13,
											"value": "3D"
										},
										{
											"begin": 6372,
											"end": 6382,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6370,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6362,
											"end": 6383,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6383,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6408,
											"end": 6409,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6401,
											"end": 6410,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6410,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6269,
											"end": 6420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6461,
											"end": 6464,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 6457,
											"end": 6476,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6452,
											"end": 6476,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6452,
											"end": 6476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6508,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6498,
											"end": 6509,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6549,
											"end": 6550,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6547,
											"name": "PUSH",
											"source": 13,
											"value": "3C"
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6534,
											"end": 6539,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6552,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6522,
											"end": 6552,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6522,
											"end": 6552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6577,
											"end": 6578,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6574,
											"end": 6575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6565,
											"end": 6579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6438,
											"end": 6589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6639,
											"end": 6640,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6635,
											"end": 6644,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 6633,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 6626,
											"end": 6645,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6621,
											"end": 6645,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6621,
											"end": 6645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6667,
											"end": 6678,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6718,
											"end": 6719,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6714,
											"end": 6716,
											"name": "PUSH",
											"source": 13,
											"value": "3B"
										},
										{
											"begin": 6710,
											"end": 6720,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6708,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6700,
											"end": 6721,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6721,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6746,
											"end": 6747,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 6744,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6739,
											"end": 6748,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 6748,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6734,
											"end": 6748,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6811,
											"end": 6812,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6808,
											"end": 6809,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6804,
											"end": 6813,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6799,
											"end": 6802,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 6795,
											"end": 6814,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6814,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6790,
											"end": 6814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6846,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6840,
											"end": 6843,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6836,
											"end": 6847,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6883,
											"end": 6885,
											"name": "PUSH",
											"source": 13,
											"value": "3A"
										},
										{
											"begin": 6879,
											"end": 6889,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 6872,
											"end": 6877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6869,
											"end": 6890,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6860,
											"end": 6890,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6860,
											"end": 6890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6916,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6908,
											"end": 6917,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6903,
											"end": 6917,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6903,
											"end": 6917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6776,
											"end": 6927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6980,
											"end": 6981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6973,
											"end": 6982,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6968,
											"end": 6971,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 6964,
											"end": 6983,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6983,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7009,
											"end": 7012,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7005,
											"end": 7016,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7057,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7052,
											"end": 7054,
											"name": "PUSH",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 7048,
											"end": 7058,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7041,
											"end": 7046,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7059,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7029,
											"end": 7059,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7029,
											"end": 7059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7081,
											"end": 7082,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7077,
											"end": 7086,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7086,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6945,
											"end": 7096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7137,
											"end": 7140,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 7133,
											"end": 7152,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7128,
											"end": 7152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7183,
											"end": 7184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7178,
											"end": 7181,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7174,
											"end": 7185,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7225,
											"end": 7226,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7223,
											"name": "PUSH",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 7217,
											"end": 7227,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7210,
											"end": 7215,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7207,
											"end": 7228,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7198,
											"end": 7228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7198,
											"end": 7228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7250,
											"end": 7251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7246,
											"end": 7255,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7241,
											"end": 7255,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7241,
											"end": 7255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7265,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7318,
											"end": 7319,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7311,
											"end": 7320,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7306,
											"end": 7309,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 7302,
											"end": 7321,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7297,
											"end": 7321,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7297,
											"end": 7321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7347,
											"end": 7350,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7343,
											"end": 7354,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7395,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7390,
											"end": 7392,
											"name": "PUSH",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 7386,
											"end": 7396,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7379,
											"end": 7384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7376,
											"end": 7397,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7422,
											"end": 7423,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7419,
											"end": 7420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7415,
											"end": 7424,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7410,
											"end": 7424,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7410,
											"end": 7424,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7434,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7487,
											"end": 7488,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7484,
											"end": 7485,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7480,
											"end": 7489,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7478,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 7471,
											"end": 7490,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7466,
											"end": 7490,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7466,
											"end": 7490,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 7522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7512,
											"end": 7523,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7563,
											"end": 7564,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7559,
											"end": 7561,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 7555,
											"end": 7565,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7548,
											"end": 7553,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7545,
											"end": 7566,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 7566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 7566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7588,
											"end": 7589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7584,
											"end": 7593,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7579,
											"end": 7593,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7579,
											"end": 7593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7452,
											"end": 7603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7656,
											"end": 7657,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7653,
											"end": 7654,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7649,
											"end": 7658,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7644,
											"end": 7647,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 7640,
											"end": 7659,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7635,
											"end": 7659,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7635,
											"end": 7659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7685,
											"end": 7688,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7681,
											"end": 7692,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7733,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7728,
											"end": 7730,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 7724,
											"end": 7734,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7717,
											"end": 7722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7735,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7705,
											"end": 7735,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7705,
											"end": 7735,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7761,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7757,
											"end": 7758,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7753,
											"end": 7762,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7748,
											"end": 7762,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7748,
											"end": 7762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7621,
											"end": 7772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7826,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7818,
											"end": 7827,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7813,
											"end": 7816,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 7809,
											"end": 7828,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7828,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7859,
											"end": 7860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7854,
											"end": 7857,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7850,
											"end": 7861,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7901,
											"end": 7902,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7897,
											"end": 7899,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 7893,
											"end": 7903,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7883,
											"end": 7904,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7874,
											"end": 7904,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7874,
											"end": 7904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 7927,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7922,
											"end": 7931,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7917,
											"end": 7931,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7917,
											"end": 7931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 7941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7994,
											"end": 7995,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7991,
											"end": 7992,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7987,
											"end": 7996,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 7985,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 7978,
											"end": 7997,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 7997,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 7997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8028,
											"end": 8029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8026,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8019,
											"end": 8030,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 8070,
											"end": 8071,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8066,
											"end": 8068,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 8062,
											"end": 8072,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8052,
											"end": 8073,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8043,
											"end": 8073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8043,
											"end": 8073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8099,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8095,
											"end": 8096,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8091,
											"end": 8100,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 8086,
											"end": 8100,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8086,
											"end": 8100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7959,
											"end": 8110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8163,
											"end": 8164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8161,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8156,
											"end": 8165,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8154,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 8147,
											"end": 8166,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 8142,
											"end": 8166,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8142,
											"end": 8166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8197,
											"end": 8198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8192,
											"end": 8195,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8188,
											"end": 8199,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8240,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8235,
											"end": 8237,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 8231,
											"end": 8241,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8224,
											"end": 8229,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8221,
											"end": 8242,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8128,
											"end": 8252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8317,
											"name": "PUSH",
											"source": 13,
											"value": "3627A301D71055774C85"
										},
										{
											"begin": 8285,
											"end": 8290,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 8285,
											"end": 8317,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8317,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 8285,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8317,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 8285,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8262,
											"end": 8317,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8262,
											"end": 8317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8359,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8430,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8385,
											"end": 8422,
											"name": "PUSH",
											"source": 13,
											"value": "28F6481AB7F045A5AF012A19D003AAA"
										},
										{
											"begin": 8369,
											"end": 8382,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8369,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 8369,
											"end": 8422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8369,
											"end": 8422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8369,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 8369,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8369,
											"end": 8422,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 8369,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8368,
											"end": 8430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8368,
											"end": 8430,
											"name": "SAR",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8431,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8523,
											"end": 8526,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8479,
											"end": 8518,
											"name": "PUSH",
											"source": 13,
											"value": "DB2DF09E81959A81455E260799A0632F"
										},
										{
											"begin": 8463,
											"end": 8476,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8463,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 8463,
											"end": 8518,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8463,
											"end": 8518,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8463,
											"end": 8518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 8463,
											"end": 8518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8463,
											"end": 8518,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 8463,
											"end": 8518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8462,
											"end": 8526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8462,
											"end": 8526,
											"name": "SAR",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8556,
											"end": 8562,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8562,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8545,
											"end": 8562,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8562,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8545,
											"end": 8562,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8562,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 8545,
											"end": 8636,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8617,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8575,
											"end": 8617,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8601,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 8575,
											"end": 8601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8601,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 8575,
											"end": 8601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8617,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8575,
											"end": 8617,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8617,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8617,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 8575,
											"end": 8636,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8629,
											"end": 8636,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 8575,
											"end": 8636,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8636,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 8575,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8620,
											"end": 8626,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8636,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 8575,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 8545,
											"end": 8636,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8636,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 8545,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8565,
											"end": 8572,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8545,
											"end": 8636,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 8545,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8538,
											"end": 8636,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 8538,
											"end": 8636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 8643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 8643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 8643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 8643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 8643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 8643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 8643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 8643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 8643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 8643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4362,
											"end": 8643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 686,
											"end": 854,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 686,
											"end": 854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 738,
											"end": 751,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 802,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 793,
											"end": 797,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 793,
											"end": 802,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 793,
											"end": 802,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 793,
											"end": 802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 793,
											"end": 802,
											"name": "SAR",
											"source": 12
										},
										{
											"begin": 777,
											"end": 803,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 777,
											"end": 803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 842,
											"end": 845,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 835,
											"end": 839,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 835,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 835,
											"end": 845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 835,
											"end": 845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 835,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 835,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 835,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 835,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 813,
											"end": 847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 813,
											"end": 847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 686,
											"end": 854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 686,
											"end": 854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 686,
											"end": 854,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 686,
											"end": 854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3296,
											"end": 3297,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3302,
											"end": 3313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3281,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3281,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3272,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3356,
											"end": 3357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3328,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3338,
											"end": 3339,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3336,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3353,
											"name": "MULMOD",
											"source": 7
										},
										{
											"begin": 3328,
											"end": 3357,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3407,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3407,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3373,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3422,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 3324,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3563,
											"end": 3577,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3721,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3722,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3726,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3674,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3616,
											"end": 3740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 1402,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 671,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 733,
											"end": 740,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 760,
											"end": 765,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 752,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 752,
											"end": 766,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 752,
											"end": 766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 766,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 766,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 752,
											"end": 766,
											"name": "tag",
											"source": 5,
											"value": "351"
										},
										{
											"begin": 752,
											"end": 766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 786,
											"end": 821,
											"name": "PUSH",
											"source": 5,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 781,
											"end": 821,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 777,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 777,
											"end": 879,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 843,
											"end": 846,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 837,
											"end": 846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 837,
											"end": 846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 837,
											"end": 846,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 837,
											"end": 846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 837,
											"end": 846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 868,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 860,
											"end": 868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 860,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 860,
											"end": 868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 860,
											"end": 868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 860,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 860,
											"end": 868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 860,
											"end": 868,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 860,
											"end": 868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 860,
											"end": 868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 860,
											"end": 868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 777,
											"end": 879,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 777,
											"end": 879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 897,
											"end": 916,
											"name": "PUSH",
											"source": 5,
											"value": "10000000000000000"
										},
										{
											"begin": 892,
											"end": 893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 892,
											"end": 916,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 888,
											"end": 972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 888,
											"end": 972,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 940,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 932,
											"end": 940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 932,
											"end": 940,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 932,
											"end": 940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 932,
											"end": 940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 961,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 954,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 954,
											"end": 961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 954,
											"end": 961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 954,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 954,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 961,
											"name": "tag",
											"source": 5,
											"value": "356"
										},
										{
											"begin": 954,
											"end": 961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 954,
											"end": 961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 954,
											"end": 961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 888,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 888,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1001,
											"name": "PUSH",
											"source": 5,
											"value": "100000000"
										},
										{
											"begin": 985,
											"end": 986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1001,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 981,
											"end": 1057,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1025,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1017,
											"end": 1025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1025,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 1039,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "tag",
											"source": 5,
											"value": "358"
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1039,
											"end": 1046,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1057,
											"name": "tag",
											"source": 5,
											"value": "357"
										},
										{
											"begin": 981,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1082,
											"name": "PUSH",
											"source": 5,
											"value": "10000"
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1106,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 1120,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 1066,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1156,
											"end": 1161,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1161,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 1147,
											"end": 1215,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1184,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1204,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 1198,
											"end": 1204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1215,
											"name": "tag",
											"source": 5,
											"value": "361"
										},
										{
											"begin": 1147,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1237,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1237,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1224,
											"end": 1291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1253,
											"end": 1260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1253,
											"end": 1260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1253,
											"end": 1260,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1253,
											"end": 1260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1253,
											"end": 1260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 1274,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "tag",
											"source": 5,
											"value": "364"
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1291,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1224,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1312,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1312,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 1300,
											"end": 1366,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1355,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 1349,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1300,
											"end": 1366,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 1300,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1379,
											"end": 1387,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "354"
										},
										{
											"begin": 1389,
											"end": 1395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "tag",
											"source": 5,
											"value": "368"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "tag",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 1375,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 671,
											"end": 1402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 671,
											"end": 1402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 671,
											"end": 1402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 671,
											"end": 1402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2787,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1893,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1988,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "tag",
											"source": 5,
											"value": "370"
										},
										{
											"begin": 1975,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2007,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2000,
											"end": 2007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2045,
											"end": 2046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2042,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2042,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2042,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2042,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2046,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2070,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2062,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "tag",
											"source": 5,
											"value": "372"
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "tag",
											"source": 5,
											"value": "371"
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2110,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "tag",
											"source": 5,
											"value": "373"
										},
										{
											"begin": 2017,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2154,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2158,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2181,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2174,
											"end": 2181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2174,
											"end": 2181,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "tag",
											"source": 5,
											"value": "374"
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "tag",
											"source": 5,
											"value": "376"
										},
										{
											"begin": 2130,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2244,
											"end": 2264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2268,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2289,
											"end": 2291,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2284,
											"end": 2291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "377"
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2330,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 2240,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2374,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 2354,
											"end": 2374,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2378,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2401,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2394,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2440,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2432,
											"end": 2440,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2440,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 2350,
											"end": 2451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2486,
											"end": 2487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2483,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2464,
											"end": 2483,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2483,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2483,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2487,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2503,
											"end": 2509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2546,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "tag",
											"source": 5,
											"value": "385"
										},
										{
											"begin": 2460,
											"end": 2558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2581,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2578,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2578,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2582,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2598,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "387"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "tag",
											"source": 5,
											"value": "386"
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2642,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2635,
											"end": 2642,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2642,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 2567,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2676,
											"end": 2677,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2666,
											"end": 2667,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2673,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2666,
											"end": 2677,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2693,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "tag",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2736,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 2662,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2765,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2768,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2772,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2780,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 2757,
											"end": 2780,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2774,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2757,
											"end": 2780,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 2757,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2787,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2787,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2787,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 2787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1928,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1384,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 1611,
											"end": 1921,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 1842,
											"end": 1854,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1899,
											"end": 1907,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 1785,
											"end": 1921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1921,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 1785,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 1611,
											"end": 1921,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1921,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 1611,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 1691,
											"end": 1703,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1748,
											"end": 1756,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 1636,
											"end": 1770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1636,
											"end": 1770,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 1636,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1921,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 1611,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1921,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1921,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1928,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1928,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1384,
											"end": 1928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1285,
											"end": 1299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1405,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1596,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1577,
											"end": 1597,
											"name": "MULMOD",
											"source": 8
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1633,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1633,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1687,
											"end": 1692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1672,
											"end": 1677,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1678,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1660,
											"end": 1694,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1792,
											"end": 1802,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 1788,
											"end": 1865,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1838,
											"end": 1849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 1830,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1830,
											"end": 1849,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 1823,
											"end": 1849,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1788,
											"end": 1865,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 1788,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1965,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 1938,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 1938,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2249,
											"end": 2266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2346,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2329,
											"end": 2330,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "MULMOD",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2309,
											"end": 2347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2405,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2365,
											"end": 2406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2453,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2454,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2454,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2616,
											"end": 2627,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2627,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2615,
											"end": 2631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2611,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2600,
											"end": 2632,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2632,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2632,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2707,
											"end": 2714,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2705,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2715,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2715,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2746,
											"end": 2751,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2761,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2761,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2815,
											"end": 2822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2812,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2813,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2794,
											"end": 2823,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2790,
											"end": 2827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2924,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2919,
											"end": 2934,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2910,
											"end": 2934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3039,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3023,
											"end": 3034,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3019,
											"end": 3020,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 3019,
											"end": 3034,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3018,
											"end": 3039,
											"name": "XOR",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3000,
											"end": 3039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3083,
											"end": 3090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3080,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3069,
											"end": 3090,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3065,
											"end": 3090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3090,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3054,
											"end": 3090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3153,
											"end": 3160,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3150,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3139,
											"end": 3160,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3135,
											"end": 3136,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3135,
											"end": 3160,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3224,
											"end": 3231,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3221,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3231,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3206,
											"end": 3231,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3231,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3231,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3231,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3302,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3292,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3281,
											"end": 3302,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3278,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3277,
											"end": 3302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3302,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3302,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3302,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3302,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3373,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3348,
											"end": 3373,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3438,
											"end": 3445,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3435,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 3420,
											"end": 3445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3445,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3497,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3507,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 3554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2827,
											"end": 3118,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 2827,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 137,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3062,
											"end": 3097,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3062,
											"end": 3097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3070,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3062,
											"end": 3097,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 3061,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 3061,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3038,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 3026,
											"end": 3111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3026,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3026,
											"end": 3111,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 3026,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 3118,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 3118,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 3118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 3118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 3118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2827,
											"end": 3118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2093,
											"end": 2100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 137,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2132,
											"end": 2177,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2132,
											"end": 2177,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2150,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2177,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2202,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2213,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2205,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 2205,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2228,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2228,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2342,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2342,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2308,
											"end": 2342,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2318,
											"end": 2326,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2308,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 2308,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2342,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2304,
											"end": 2622,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2399,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 2380,
											"end": 2399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2380,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2399,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 2380,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2417,
											"end": 2441,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 2413,
											"end": 2612,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2549,
											"end": 2561,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2575,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2521,
											"end": 2575,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2574,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2521,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2575,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2521,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2597,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 2461,
											"end": 2597,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2413,
											"end": 2612,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 2413,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2344,
											"end": 2622,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2622,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2304,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 2751,
											"end": 2760,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2799,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2787,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2787,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2787,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 2763,
											"end": 2787,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2763,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2763,
											"end": 2787,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 2763,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2762,
											"end": 2799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2762,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2762,
											"end": 2799,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 2762,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 2737,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2800,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 2737,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2814,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 2821,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1934,
											"end": 2821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "121"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SIGNEXTEND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 593,
											"end": 711,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 593,
											"end": 711,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 704,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 668,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 659,
											"end": 705,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 648,
											"end": 705,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 648,
											"end": 705,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 593,
											"end": 711,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 593,
											"end": 711,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 593,
											"end": 711,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 593,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 717,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 717,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 804,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 804,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 804,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 804,
											"end": 828,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 804,
											"end": 828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 799,
											"end": 802,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 792,
											"end": 829,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 717,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 717,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 717,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 974,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 957,
											"end": 975,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 949,
											"end": 975,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 949,
											"end": 975,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 1053,
											"end": 1054,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1038,
											"end": 1055,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 985,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 1174,
											"end": 1179,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 1156,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1181,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1276,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1277,
											"name": "SIGNEXTEND",
											"source": 14
										},
										{
											"begin": 1246,
											"end": 1277,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1246,
											"end": 1277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1193,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 1372,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1367,
											"end": 1370,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1360,
											"end": 1395,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1289,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1524,
											"end": 1528,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1564,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1539,
											"end": 1565,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1539,
											"end": 1565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1641,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1628,
											"end": 1645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1619,
											"end": 1625,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 1575,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1705,
											"end": 1723,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 1656,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 1731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1818,
											"end": 1935,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 1818,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1929,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1941,
											"end": 2058,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 1941,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2048,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2052,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 2137,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2127,
											"end": 2162,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2064,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2263,
											"end": 2283,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 2292,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2192,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 2408,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2401,
											"end": 2406,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2398,
											"end": 2431,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2445,
											"end": 2446,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2337,
											"end": 2455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2505,
											"end": 2510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2530,
											"end": 2550,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2550,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2550,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 2559,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2461,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 2675,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2665,
											"end": 2700,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2714,
											"end": 2715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2716,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2602,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2801,
											"end": 2821,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2792,
											"end": 2821,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2792,
											"end": 2821,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 2830,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "tag",
											"source": 14,
											"value": "519"
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2730,
											"end": 2869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2875,
											"end": 2992,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 2875,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2984,
											"end": 2985,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2986,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2998,
											"end": 3115,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 2998,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3109,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3238,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 3121,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3314,
											"end": 3322,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3377,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3355,
											"end": 3372,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 3382,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3482,
											"end": 3502,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3502,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3502,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3517,
											"end": 3523,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3514,
											"end": 3544,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 3547,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "tag",
											"source": 14,
											"value": "526"
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3649,
											"end": 3666,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3637,
											"end": 3666,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3637,
											"end": 3666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3707,
											"end": 3711,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 3699,
											"end": 3705,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3695,
											"end": 3712,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 3685,
											"end": 3693,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3681,
											"end": 3713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3678,
											"end": 3719,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 3722,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3257,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3963,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 3994,
											"end": 4003,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3985,
											"end": 3992,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 3981,
											"end": 4004,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3977,
											"end": 4010,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 4013,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4183,
											"end": 4192,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4179,
											"end": 4201,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 4158,
											"end": 4211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4148,
											"end": 4211,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4148,
											"end": 4211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4104,
											"end": 4221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 4329,
											"end": 4336,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4305,
											"end": 4327,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 4286,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4337,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4231,
											"end": 4347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4386,
											"end": 4388,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 4455,
											"end": 4462,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 4412,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4402,
											"end": 4463,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4402,
											"end": 4463,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4357,
											"end": 4473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4512,
											"end": 4514,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 4583,
											"end": 4590,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4572,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4559,
											"end": 4581,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 4538,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4483,
											"end": 4601,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4668,
											"end": 4671,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4640,
											"end": 4673,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4689,
											"end": 4719,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 4722,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "tag",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 4891,
											"end": 4898,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 4882,
											"end": 4888,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4871,
											"end": 4880,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4889,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 4835,
											"end": 4899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4611,
											"end": 4909,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3815,
											"end": 4916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4993,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4977,
											"end": 4993,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4977,
											"end": 4993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4922,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 5110,
											"end": 5115,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 5092,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5087,
											"end": 5090,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5080,
											"end": 5117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5005,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5254,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5290,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5273,
											"end": 5291,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5354,
											"end": 5371,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 5301,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5426,
											"end": 5432,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 5382,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5129,
											"end": 5461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5504,
											"end": 5511,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5538,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5522,
											"end": 5538,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5522,
											"end": 5538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5467,
											"end": 5544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 5623,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5616,
											"end": 5621,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5613,
											"end": 5648,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5662,
											"end": 5663,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5660,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5664,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5550,
											"end": 5672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5724,
											"end": 5729,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5768,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5749,
											"end": 5769,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5740,
											"end": 5769,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5740,
											"end": 5769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 5805,
											"end": 5810,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 5778,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5678,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5910,
											"end": 5917,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5906,
											"end": 5929,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 5934,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 5937,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6118,
											"end": 6124,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6125,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 6082,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6072,
											"end": 6135,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6072,
											"end": 6135,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5823,
											"end": 6152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6193,
											"end": 6200,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6241,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "SIGNEXTEND",
											"source": 14
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 6341,
											"end": 6346,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 6325,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6315,
											"end": 6348,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6362,
											"end": 6363,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6364,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6254,
											"end": 6372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6466,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6447,
											"end": 6467,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 6476,
											"end": 6507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6378,
											"end": 6513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6604,
											"end": 6611,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6623,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6596,
											"end": 6628,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 6631,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6810,
											"end": 6816,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6795,
											"end": 6817,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 6776,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6766,
											"end": 6827,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6766,
											"end": 6827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6722,
											"end": 6837,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6519,
											"end": 6844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6943,
											"end": 6947,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 6984,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6958,
											"end": 6984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7060,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7047,
											"end": 7064,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7038,
											"end": 7044,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 6994,
											"end": 7065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6850,
											"end": 7072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7168,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 7078,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7112,
											"end": 7119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7155,
											"end": 7160,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7148,
											"end": 7161,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7141,
											"end": 7162,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7130,
											"end": 7162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7130,
											"end": 7162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7168,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7174,
											"end": 7290,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 7174,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7244,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 7259,
											"end": 7264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7244,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 7244,
											"end": 7265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7244,
											"end": 7265,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 7244,
											"end": 7265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7237,
											"end": 7242,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7234,
											"end": 7266,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7224,
											"end": 7284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 7224,
											"end": 7284,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7280,
											"end": 7281,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7282,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7224,
											"end": 7284,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 7224,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7174,
											"end": 7290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7174,
											"end": 7290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7429,
											"name": "tag",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 7296,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7339,
											"end": 7344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7377,
											"end": 7383,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7364,
											"end": 7384,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7355,
											"end": 7384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7355,
											"end": 7384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7393,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 7417,
											"end": 7422,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7393,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 7393,
											"end": 7423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7393,
											"end": 7423,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 7393,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7429,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7429,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7429,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7429,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7435,
											"end": 7557,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 7435,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 7526,
											"end": 7531,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 7508,
											"end": 7532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7532,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 7508,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7501,
											"end": 7506,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7498,
											"end": 7533,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 7488,
											"end": 7551,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7545,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7549,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7551,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 7488,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7435,
											"end": 7557,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7435,
											"end": 7557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7563,
											"end": 7702,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 7563,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7609,
											"end": 7614,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7647,
											"end": 7653,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7634,
											"end": 7654,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7663,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 7690,
											"end": 7695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7663,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 7663,
											"end": 7696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7663,
											"end": 7696,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 7663,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7563,
											"end": 7702,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7563,
											"end": 7702,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7563,
											"end": 7702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7563,
											"end": 7702,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7563,
											"end": 7702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7802,
											"end": 7808,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7816,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7832,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7840,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7883,
											"end": 7886,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7871,
											"end": 7880,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7862,
											"end": 7869,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7858,
											"end": 7881,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7854,
											"end": 7887,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7851,
											"end": 7971,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7851,
											"end": 7971,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 7851,
											"end": 7971,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7890,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 7890,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 7890,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7890,
											"end": 7969,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 7890,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7851,
											"end": 7971,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 7851,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8010,
											"end": 8011,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 8080,
											"end": 8087,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8060,
											"end": 8069,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 8056,
											"end": 8078,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 8035,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 8035,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8025,
											"end": 8088,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 8025,
											"end": 8088,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7981,
											"end": 8098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8137,
											"end": 8139,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8163,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 8205,
											"end": 8212,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8196,
											"end": 8202,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8185,
											"end": 8194,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 8181,
											"end": 8203,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8163,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "453"
										},
										{
											"begin": 8163,
											"end": 8213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8163,
											"end": 8213,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 8163,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8153,
											"end": 8213,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8153,
											"end": 8213,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8108,
											"end": 8223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8262,
											"end": 8264,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8288,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 8333,
											"end": 8340,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8324,
											"end": 8330,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8313,
											"end": 8322,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 8309,
											"end": 8331,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 8288,
											"end": 8341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8341,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 8288,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8278,
											"end": 8341,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8278,
											"end": 8341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8233,
											"end": 8351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8418,
											"end": 8420,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8407,
											"end": 8416,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8390,
											"end": 8422,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8449,
											"end": 8467,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8441,
											"end": 8447,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8438,
											"end": 8468,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8435,
											"end": 8552,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8435,
											"end": 8552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 8435,
											"end": 8552,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8471,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 8471,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 8471,
											"end": 8550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8471,
											"end": 8550,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 8471,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8435,
											"end": 8552,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 8435,
											"end": 8552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8584,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 8640,
											"end": 8647,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8631,
											"end": 8637,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8620,
											"end": 8629,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 8616,
											"end": 8638,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8584,
											"end": 8648,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 8584,
											"end": 8648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8584,
											"end": 8648,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 8584,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8566,
											"end": 8648,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8566,
											"end": 8648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8566,
											"end": 8648,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8566,
											"end": 8648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8361,
											"end": 8658,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7708,
											"end": 8665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 8747,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 8671,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8707,
											"end": 8714,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8736,
											"end": 8741,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8725,
											"end": 8741,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8725,
											"end": 8741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 8747,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 8747,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 8747,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8671,
											"end": 8747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8753,
											"end": 8868,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 8753,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 8855,
											"end": 8860,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 8838,
											"end": 8861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 8838,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8833,
											"end": 8836,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8826,
											"end": 8862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8753,
											"end": 8868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8753,
											"end": 8868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8753,
											"end": 8868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8874,
											"end": 9198,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 8874,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8991,
											"end": 8995,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9014,
											"end": 9032,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9006,
											"end": 9032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9042,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 9108,
											"end": 9109,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9106,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9093,
											"end": 9110,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9042,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 9042,
											"end": 9111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9042,
											"end": 9111,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 9042,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9121,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 9187,
											"end": 9189,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9176,
											"end": 9185,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9172,
											"end": 9190,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9163,
											"end": 9169,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9121,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 9121,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9121,
											"end": 9191,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 9121,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8874,
											"end": 9198,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8874,
											"end": 9198,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8874,
											"end": 9198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8874,
											"end": 9198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8874,
											"end": 9198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8874,
											"end": 9198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9204,
											"end": 9529,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 9204,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9261,
											"end": 9267,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 9312,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9298,
											"end": 9307,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9289,
											"end": 9296,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9285,
											"end": 9308,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9281,
											"end": 9313,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9316,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 9316,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 9316,
											"end": 9395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9316,
											"end": 9395,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 9316,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 9278,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9436,
											"end": 9437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 9504,
											"end": 9511,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9495,
											"end": 9501,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9484,
											"end": 9493,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9480,
											"end": 9502,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9461,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 9461,
											"end": 9512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9461,
											"end": 9512,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 9461,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9451,
											"end": 9512,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9451,
											"end": 9512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9407,
											"end": 9522,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9204,
											"end": 9529,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9204,
											"end": 9529,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9204,
											"end": 9529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9204,
											"end": 9529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9204,
											"end": 9529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9535,
											"end": 9644,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 9535,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9616,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 9631,
											"end": 9636,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9616,
											"end": 9637,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 9616,
											"end": 9637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9616,
											"end": 9637,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 9616,
											"end": 9637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9611,
											"end": 9614,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9604,
											"end": 9638,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9535,
											"end": 9644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9535,
											"end": 9644,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9535,
											"end": 9644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9970,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 9650,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9765,
											"end": 9769,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9805,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9780,
											"end": 9806,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9780,
											"end": 9806,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9816,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 9878,
											"end": 9879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9867,
											"end": 9876,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9863,
											"end": 9880,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9854,
											"end": 9860,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9816,
											"end": 9881,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 9816,
											"end": 9881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9816,
											"end": 9881,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 9816,
											"end": 9881,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 9959,
											"end": 9961,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9948,
											"end": 9957,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9935,
											"end": 9941,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 9891,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9891,
											"end": 9963,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 9891,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9970,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9970,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9970,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9970,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9970,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9976,
											"end": 10156,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 9976,
											"end": 10156,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10024,
											"end": 10101,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10021,
											"end": 10022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10102,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10121,
											"end": 10125,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10111,
											"end": 10126,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10145,
											"end": 10149,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10142,
											"end": 10143,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10150,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10388,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 10162,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10196,
											"end": 10199,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 10235,
											"end": 10240,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 10219,
											"end": 10241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 10219,
											"end": 10241,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10210,
											"end": 10241,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10210,
											"end": 10241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10263,
											"end": 10329,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 10256,
											"end": 10261,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10253,
											"end": 10330,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10250,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 10250,
											"end": 10353,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 10333,
											"end": 10351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "tag",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10250,
											"end": 10353,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 10250,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10376,
											"end": 10381,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10373,
											"end": 10374,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10369,
											"end": 10382,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10362,
											"end": 10382,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10388,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10388,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10162,
											"end": 10388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10394,
											"end": 10618,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 10394,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10434,
											"end": 10437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 10471,
											"end": 10472,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10453,
											"end": 10473,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 10453,
											"end": 10473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10453,
											"end": 10473,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 10453,
											"end": 10473,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10448,
											"end": 10473,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10448,
											"end": 10473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10487,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 10505,
											"end": 10506,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10487,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 10487,
											"end": 10507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10487,
											"end": 10507,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 10487,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10482,
											"end": 10507,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10482,
											"end": 10507,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10527,
											"end": 10528,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10523,
											"end": 10532,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10516,
											"end": 10532,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10516,
											"end": 10532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10553,
											"end": 10587,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10548,
											"end": 10551,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10545,
											"end": 10588,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10542,
											"end": 10611,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10542,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 10542,
											"end": 10611,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10591,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 10591,
											"end": 10609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 10591,
											"end": 10609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10591,
											"end": 10609,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 10591,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10542,
											"end": 10611,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 10542,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10394,
											"end": 10618,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10394,
											"end": 10618,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10394,
											"end": 10618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10394,
											"end": 10618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10394,
											"end": 10618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10792,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 10624,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10736,
											"end": 10739,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10729,
											"end": 10748,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10781,
											"end": 10785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10776,
											"end": 10779,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10772,
											"end": 10786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10757,
											"end": 10786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10757,
											"end": 10786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10624,
											"end": 10792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10946,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 10798,
											"end": 10946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10896,
											"end": 10902,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10891,
											"end": 10894,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10886,
											"end": 10889,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10873,
											"end": 10903,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 10937,
											"end": 10938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10928,
											"end": 10934,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10923,
											"end": 10926,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10919,
											"end": 10935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10912,
											"end": 10939,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10946,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10946,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10946,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10798,
											"end": 10946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10952,
											"end": 11054,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 10952,
											"end": 11054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11046,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11040,
											"end": 11047,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 11035,
											"end": 11037,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11028,
											"end": 11033,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11024,
											"end": 11038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11020,
											"end": 11048,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11010,
											"end": 11048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10952,
											"end": 11054,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10952,
											"end": 11054,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10952,
											"end": 11054,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10952,
											"end": 11054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11396,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 11082,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11178,
											"end": 11181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11199,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 11262,
											"end": 11268,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11257,
											"end": 11260,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11199,
											"end": 11269,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 11199,
											"end": 11269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11199,
											"end": 11269,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 11199,
											"end": 11269,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11269,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11192,
											"end": 11269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11279,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 11328,
											"end": 11334,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11323,
											"end": 11326,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11316,
											"end": 11321,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11279,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 11279,
											"end": 11335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11279,
											"end": 11335,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 11279,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11360,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 11382,
											"end": 11388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11360,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 11360,
											"end": 11389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11360,
											"end": 11389,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 11360,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11355,
											"end": 11358,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11351,
											"end": 11390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11344,
											"end": 11390,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11344,
											"end": 11390,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11396,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11396,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11082,
											"end": 11396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "tag",
											"source": 14,
											"value": "102"
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11579,
											"end": 11583,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11617,
											"end": 11619,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11606,
											"end": 11615,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11602,
											"end": 11620,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11594,
											"end": 11620,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11594,
											"end": 11620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11630,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11696,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11683,
											"end": 11700,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11674,
											"end": 11680,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11630,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 11630,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11630,
											"end": 11701,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 11630,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11711,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 11779,
											"end": 11781,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11768,
											"end": 11777,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11764,
											"end": 11782,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11755,
											"end": 11761,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11711,
											"end": 11783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 11711,
											"end": 11783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11711,
											"end": 11783,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 11711,
											"end": 11783,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11830,
											"end": 11839,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11824,
											"end": 11828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11820,
											"end": 11840,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11815,
											"end": 11817,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11804,
											"end": 11813,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11793,
											"end": 11841,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11858,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 11939,
											"end": 11943,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11930,
											"end": 11936,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11922,
											"end": 11928,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11858,
											"end": 11944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 11858,
											"end": 11944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11858,
											"end": 11944,
											"name": "tag",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 11858,
											"end": 11944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11850,
											"end": 11944,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11850,
											"end": 11944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11402,
											"end": 11951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12148,
											"name": "tag",
											"source": 14,
											"value": "109"
										},
										{
											"begin": 11957,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11997,
											"end": 12000,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 12034,
											"end": 12035,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12016,
											"end": 12036,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 12016,
											"end": 12036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12016,
											"end": 12036,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 12016,
											"end": 12036,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12011,
											"end": 12036,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12011,
											"end": 12036,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12050,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 12068,
											"end": 12069,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12050,
											"end": 12070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 12050,
											"end": 12070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12050,
											"end": 12070,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 12050,
											"end": 12070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12045,
											"end": 12070,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12093,
											"end": 12094,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12090,
											"end": 12091,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12086,
											"end": 12095,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12079,
											"end": 12095,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12079,
											"end": 12095,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12114,
											"end": 12117,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12111,
											"end": 12112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12108,
											"end": 12118,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12105,
											"end": 12141,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12105,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 12105,
											"end": 12141,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 12121,
											"end": 12139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12105,
											"end": 12141,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 12105,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12148,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12148,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12148,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11957,
											"end": 12148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12331,
											"end": 12335,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12372,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 12358,
											"end": 12367,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12354,
											"end": 12373,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12346,
											"end": 12373,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12346,
											"end": 12373,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12383,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 12451,
											"end": 12452,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12440,
											"end": 12449,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12436,
											"end": 12453,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12427,
											"end": 12433,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12383,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 12383,
											"end": 12454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12383,
											"end": 12454,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 12383,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12464,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 12532,
											"end": 12534,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12521,
											"end": 12530,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12514,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12464,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 12464,
											"end": 12536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12464,
											"end": 12536,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 12464,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12546,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 12614,
											"end": 12616,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12603,
											"end": 12612,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12599,
											"end": 12617,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12590,
											"end": 12596,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12546,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 12546,
											"end": 12618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12546,
											"end": 12618,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 12546,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12628,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 12696,
											"end": 12698,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 12685,
											"end": 12694,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12681,
											"end": 12699,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12672,
											"end": 12678,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12628,
											"end": 12700,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 12628,
											"end": 12700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12628,
											"end": 12700,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 12628,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12154,
											"end": 12707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12713,
											"end": 12907,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 12713,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12757,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12773,
											"end": 12793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 12791,
											"end": 12792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12773,
											"end": 12793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 12773,
											"end": 12793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12773,
											"end": 12793,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 12773,
											"end": 12793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12768,
											"end": 12793,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12768,
											"end": 12793,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12807,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 12825,
											"end": 12826,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12807,
											"end": 12827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 12807,
											"end": 12827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12807,
											"end": 12827,
											"name": "tag",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 12807,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12827,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12802,
											"end": 12827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12851,
											"end": 12852,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12848,
											"end": 12849,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12844,
											"end": 12853,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12836,
											"end": 12853,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12836,
											"end": 12853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12875,
											"end": 12876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12869,
											"end": 12873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12866,
											"end": 12877,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12863,
											"end": 12900,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12863,
											"end": 12900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 12863,
											"end": 12900,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 12880,
											"end": 12898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "tag",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12863,
											"end": 12900,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 12863,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12713,
											"end": 12907,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12713,
											"end": 12907,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12713,
											"end": 12907,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12713,
											"end": 12907,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12713,
											"end": 12907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12913,
											"end": 13141,
											"name": "tag",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 12913,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12948,
											"end": 12951,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12971,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 12988,
											"end": 12993,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12971,
											"end": 12994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 12971,
											"end": 12994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12971,
											"end": 12994,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 12971,
											"end": 12994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12962,
											"end": 12994,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12962,
											"end": 12994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13016,
											"end": 13082,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13009,
											"end": 13014,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13083,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13003,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 13003,
											"end": 13106,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13086,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 13086,
											"end": 13104,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 13086,
											"end": 13104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13086,
											"end": 13104,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 13086,
											"end": 13104,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13003,
											"end": 13106,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 13003,
											"end": 13106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13129,
											"end": 13134,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13126,
											"end": 13127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13135,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13115,
											"end": 13135,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12913,
											"end": 13141,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12913,
											"end": 13141,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12913,
											"end": 13141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12913,
											"end": 13141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13479,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 13147,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13268,
											"end": 13272,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13306,
											"end": 13308,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13295,
											"end": 13304,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13291,
											"end": 13309,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13283,
											"end": 13309,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13283,
											"end": 13309,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13319,
											"end": 13390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 13387,
											"end": 13388,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13376,
											"end": 13385,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13372,
											"end": 13389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13363,
											"end": 13369,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13319,
											"end": 13390,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 13319,
											"end": 13390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13319,
											"end": 13390,
											"name": "tag",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 13319,
											"end": 13390,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13400,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 13468,
											"end": 13470,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13457,
											"end": 13466,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13453,
											"end": 13471,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13444,
											"end": 13450,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13400,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 13400,
											"end": 13472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13400,
											"end": 13472,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 13400,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13479,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13479,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13622,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 13485,
											"end": 13622,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13539,
											"end": 13544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13570,
											"end": 13576,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13564,
											"end": 13577,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13555,
											"end": 13577,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13586,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 13610,
											"end": 13615,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13586,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 13586,
											"end": 13616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13586,
											"end": 13616,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 13586,
											"end": 13616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13622,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13622,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13622,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13622,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13973,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 13628,
											"end": 13973,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13695,
											"end": 13701,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13746,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13732,
											"end": 13741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13723,
											"end": 13730,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13719,
											"end": 13742,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13715,
											"end": 13747,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13712,
											"end": 13831,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13712,
											"end": 13831,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 13712,
											"end": 13831,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13750,
											"end": 13829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 13750,
											"end": 13829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 13750,
											"end": 13829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13750,
											"end": 13829,
											"name": "tag",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 13750,
											"end": 13829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13712,
											"end": 13831,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 13712,
											"end": 13831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13870,
											"end": 13871,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 13948,
											"end": 13955,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13939,
											"end": 13945,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13928,
											"end": 13937,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13924,
											"end": 13946,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13895,
											"end": 13956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 13895,
											"end": 13956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13895,
											"end": 13956,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 13895,
											"end": 13956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13885,
											"end": 13956,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13885,
											"end": 13956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13841,
											"end": 13966,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13973,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13973,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13628,
											"end": 13973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14152,
											"end": 14156,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14190,
											"end": 14192,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 14179,
											"end": 14188,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14175,
											"end": 14193,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14167,
											"end": 14193,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14167,
											"end": 14193,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14203,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 14269,
											"end": 14270,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14258,
											"end": 14267,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14254,
											"end": 14271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14245,
											"end": 14251,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 14203,
											"end": 14272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 14203,
											"end": 14272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14203,
											"end": 14272,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 14203,
											"end": 14272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14282,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 14348,
											"end": 14350,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14337,
											"end": 14346,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14333,
											"end": 14351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14324,
											"end": 14330,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14282,
											"end": 14352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 14282,
											"end": 14352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14282,
											"end": 14352,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 14282,
											"end": 14352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14399,
											"end": 14408,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14393,
											"end": 14397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14389,
											"end": 14409,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14384,
											"end": 14386,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14373,
											"end": 14382,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14369,
											"end": 14387,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14362,
											"end": 14410,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 14508,
											"end": 14512,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14499,
											"end": 14505,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14491,
											"end": 14497,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14513,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 14427,
											"end": 14513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14427,
											"end": 14513,
											"name": "tag",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 14427,
											"end": 14513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14419,
											"end": 14513,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14419,
											"end": 14513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13979,
											"end": 14520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14723,
											"end": 14727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14761,
											"end": 14764,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 14750,
											"end": 14759,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14746,
											"end": 14765,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14738,
											"end": 14765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14738,
											"end": 14765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14775,
											"end": 14844,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 14841,
											"end": 14842,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14830,
											"end": 14839,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14826,
											"end": 14843,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14817,
											"end": 14823,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 14775,
											"end": 14844,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 14775,
											"end": 14844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14775,
											"end": 14844,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 14775,
											"end": 14844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 14920,
											"end": 14922,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14909,
											"end": 14918,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14905,
											"end": 14923,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14896,
											"end": 14902,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 14924,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 14854,
											"end": 14924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14854,
											"end": 14924,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 14854,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14934,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 15002,
											"end": 15004,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14991,
											"end": 15000,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14987,
											"end": 15005,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14978,
											"end": 14984,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14934,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 14934,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14934,
											"end": 15006,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 14934,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15016,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 15084,
											"end": 15086,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15073,
											"end": 15082,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15069,
											"end": 15087,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15060,
											"end": 15066,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15016,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 15016,
											"end": 15088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15016,
											"end": 15088,
											"name": "tag",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 15016,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15098,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 15162,
											"end": 15165,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 15151,
											"end": 15160,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15147,
											"end": 15166,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15138,
											"end": 15144,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15098,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 15098,
											"end": 15167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15098,
											"end": 15167,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 15098,
											"end": 15167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14526,
											"end": 15174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15180,
											"end": 15360,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 15180,
											"end": 15360,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15228,
											"end": 15305,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15225,
											"end": 15226,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15218,
											"end": 15306,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15325,
											"end": 15329,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 15322,
											"end": 15323,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 15315,
											"end": 15330,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15349,
											"end": 15353,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15346,
											"end": 15347,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15339,
											"end": 15354,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 15366,
											"end": 15537,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 15366,
											"end": 15537,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15396,
											"end": 15397,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15413,
											"end": 15431,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 15429,
											"end": 15430,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15413,
											"end": 15431,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 15413,
											"end": 15431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15413,
											"end": 15431,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 15413,
											"end": 15431,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15408,
											"end": 15431,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15408,
											"end": 15431,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15445,
											"end": 15463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 15461,
											"end": 15462,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15445,
											"end": 15463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 15445,
											"end": 15463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15445,
											"end": 15463,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 15445,
											"end": 15463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15440,
											"end": 15463,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15440,
											"end": 15463,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15482,
											"end": 15483,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15472,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 15472,
											"end": 15507,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15487,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 15487,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 15487,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15487,
											"end": 15505,
											"name": "tag",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 15487,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15472,
											"end": 15507,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 15472,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15529,
											"end": 15530,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15526,
											"end": 15527,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15521,
											"end": 15531,
											"name": "SMOD",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15531,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15516,
											"end": 15531,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15366,
											"end": 15537,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15366,
											"end": 15537,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15366,
											"end": 15537,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15366,
											"end": 15537,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15366,
											"end": 15537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15543,
											"end": 15925,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 15543,
											"end": 15925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15581,
											"end": 15582,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15598,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 15614,
											"end": 15615,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15598,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 15598,
											"end": 15616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15598,
											"end": 15616,
											"name": "tag",
											"source": 14,
											"value": "669"
										},
										{
											"begin": 15598,
											"end": 15616,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15593,
											"end": 15616,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15593,
											"end": 15616,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 15646,
											"end": 15647,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 15630,
											"end": 15648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "tag",
											"source": 14,
											"value": "670"
										},
										{
											"begin": 15630,
											"end": 15648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15625,
											"end": 15648,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15625,
											"end": 15648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15667,
											"end": 15668,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15657,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 15657,
											"end": 15692,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 15672,
											"end": 15690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15657,
											"end": 15692,
											"name": "tag",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 15657,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15858,
											"end": 15859,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15855,
											"end": 15856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15851,
											"end": 15860,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15848,
											"end": 15849,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15845,
											"end": 15861,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15764,
											"end": 15830,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 15761,
											"end": 15762,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15758,
											"end": 15831,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 15741,
											"end": 15871,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15738,
											"end": 15894,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15738,
											"end": 15894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 15738,
											"end": 15894,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 15874,
											"end": 15892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "tag",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15738,
											"end": 15894,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 15738,
											"end": 15894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15917,
											"end": 15918,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15909,
											"end": 15919,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 15904,
											"end": 15919,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15904,
											"end": 15919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15543,
											"end": 15925,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15543,
											"end": 15925,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15543,
											"end": 15925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15543,
											"end": 15925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15543,
											"end": 15925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16025,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 15931,
											"end": 16025,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15964,
											"end": 15972,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16012,
											"end": 16017,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16008,
											"end": 16010,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 16004,
											"end": 16018,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 15983,
											"end": 16018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15983,
											"end": 16018,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16025,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16025,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16025,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16031,
											"end": 16125,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 16031,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16070,
											"end": 16077,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16099,
											"end": 16119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 16113,
											"end": 16118,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16099,
											"end": 16119,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 16099,
											"end": 16119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16099,
											"end": 16119,
											"name": "tag",
											"source": 14,
											"value": "677"
										},
										{
											"begin": 16099,
											"end": 16119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16088,
											"end": 16119,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16088,
											"end": 16119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16031,
											"end": 16125,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16031,
											"end": 16125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16031,
											"end": 16125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16031,
											"end": 16125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16131,
											"end": 16231,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 16131,
											"end": 16231,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16170,
											"end": 16177,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16199,
											"end": 16225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 16219,
											"end": 16224,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16199,
											"end": 16225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 16199,
											"end": 16225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16199,
											"end": 16225,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 16199,
											"end": 16225,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16225,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16188,
											"end": 16225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16131,
											"end": 16231,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16131,
											"end": 16231,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16131,
											"end": 16231,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16131,
											"end": 16231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16237,
											"end": 16394,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 16237,
											"end": 16394,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16342,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 16362,
											"end": 16386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 16380,
											"end": 16385,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16362,
											"end": 16386,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 16362,
											"end": 16386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16362,
											"end": 16386,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 16362,
											"end": 16386,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16342,
											"end": 16387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 16342,
											"end": 16387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16342,
											"end": 16387,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 16342,
											"end": 16387,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16337,
											"end": 16340,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16330,
											"end": 16388,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16237,
											"end": 16394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16237,
											"end": 16394,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16237,
											"end": 16394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16400,
											"end": 16496,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 16400,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16434,
											"end": 16442,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16483,
											"end": 16488,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16478,
											"end": 16481,
											"name": "PUSH",
											"source": 14,
											"value": "E8"
										},
										{
											"begin": 16474,
											"end": 16489,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 16453,
											"end": 16489,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16453,
											"end": 16489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16400,
											"end": 16496,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16400,
											"end": 16496,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16400,
											"end": 16496,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16400,
											"end": 16496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16502,
											"end": 16595,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 16502,
											"end": 16595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16539,
											"end": 16546,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16568,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 16583,
											"end": 16588,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16568,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 16568,
											"end": 16589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16568,
											"end": 16589,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 16568,
											"end": 16589,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16557,
											"end": 16589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16557,
											"end": 16589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16502,
											"end": 16595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16502,
											"end": 16595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16502,
											"end": 16595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16502,
											"end": 16595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16750,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 16601,
											"end": 16750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16702,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 16720,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 16736,
											"end": 16741,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16720,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 16720,
											"end": 16742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16720,
											"end": 16742,
											"name": "tag",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 16720,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16702,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 16702,
											"end": 16743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16702,
											"end": 16743,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 16702,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16697,
											"end": 16700,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16690,
											"end": 16744,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16756,
											"end": 17276,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 16756,
											"end": 17276,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16916,
											"end": 16919,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 17006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 17002,
											"end": 17005,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16993,
											"end": 16999,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16931,
											"end": 17006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 16931,
											"end": 17006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16931,
											"end": 17006,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 16931,
											"end": 17006,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17031,
											"end": 17033,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 17026,
											"end": 17029,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17022,
											"end": 17034,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17015,
											"end": 17034,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17015,
											"end": 17034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17044,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 17111,
											"end": 17114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17102,
											"end": 17108,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17044,
											"end": 17115,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 17044,
											"end": 17115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17044,
											"end": 17115,
											"name": "tag",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 17044,
											"end": 17115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17140,
											"end": 17141,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 17135,
											"end": 17138,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17131,
											"end": 17142,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17124,
											"end": 17142,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17124,
											"end": 17142,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17152,
											"end": 17223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 17219,
											"end": 17222,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17210,
											"end": 17216,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17152,
											"end": 17223,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 17152,
											"end": 17223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17152,
											"end": 17223,
											"name": "tag",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 17152,
											"end": 17223,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17248,
											"end": 17249,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 17243,
											"end": 17246,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17239,
											"end": 17250,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17232,
											"end": 17250,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17232,
											"end": 17250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17267,
											"end": 17270,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17260,
											"end": 17270,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17260,
											"end": 17270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16756,
											"end": 17276,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16756,
											"end": 17276,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16756,
											"end": 17276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16756,
											"end": 17276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16756,
											"end": 17276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16756,
											"end": 17276,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16756,
											"end": 17276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17282,
											"end": 17451,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 17282,
											"end": 17451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17366,
											"end": 17377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17400,
											"end": 17406,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17398,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17388,
											"end": 17407,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17440,
											"end": 17444,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17435,
											"end": 17438,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17431,
											"end": 17445,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17416,
											"end": 17445,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17416,
											"end": 17445,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17282,
											"end": 17451,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17282,
											"end": 17451,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17282,
											"end": 17451,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17282,
											"end": 17451,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17282,
											"end": 17451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17457,
											"end": 17608,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 17457,
											"end": 17608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17597,
											"end": 17600,
											"name": "PUSH",
											"source": 14,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17593,
											"end": 17594,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17585,
											"end": 17591,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17581,
											"end": 17595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17574,
											"end": 17601,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17457,
											"end": 17608,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17457,
											"end": 17608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17614,
											"end": 17979,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 17614,
											"end": 17979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17756,
											"end": 17759,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17777,
											"end": 17843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 17841,
											"end": 17842,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 17836,
											"end": 17839,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17777,
											"end": 17843,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 17777,
											"end": 17843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17777,
											"end": 17843,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 17777,
											"end": 17843,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17770,
											"end": 17843,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17770,
											"end": 17843,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17852,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 17941,
											"end": 17944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17852,
											"end": 17945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 17852,
											"end": 17945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17852,
											"end": 17945,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 17852,
											"end": 17945,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17970,
											"end": 17972,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17965,
											"end": 17968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17961,
											"end": 17973,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17954,
											"end": 17973,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17954,
											"end": 17973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17614,
											"end": 17979,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17614,
											"end": 17979,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17614,
											"end": 17979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17614,
											"end": 17979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17985,
											"end": 18404,
											"name": "tag",
											"source": 14,
											"value": "196"
										},
										{
											"begin": 17985,
											"end": 18404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18151,
											"end": 18155,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18189,
											"end": 18191,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18178,
											"end": 18187,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18174,
											"end": 18192,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18166,
											"end": 18192,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18166,
											"end": 18192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18238,
											"end": 18247,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18232,
											"end": 18236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18228,
											"end": 18248,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18224,
											"end": 18225,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18213,
											"end": 18222,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18209,
											"end": 18226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18202,
											"end": 18249,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18266,
											"end": 18397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 18392,
											"end": 18396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18266,
											"end": 18397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 18266,
											"end": 18397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18266,
											"end": 18397,
											"name": "tag",
											"source": 14,
											"value": "699"
										},
										{
											"begin": 18266,
											"end": 18397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18258,
											"end": 18397,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18258,
											"end": 18397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17985,
											"end": 18404,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17985,
											"end": 18404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17985,
											"end": 18404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17985,
											"end": 18404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18410,
											"end": 18820,
											"name": "tag",
											"source": 14,
											"value": "201"
										},
										{
											"begin": 18410,
											"end": 18820,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18450,
											"end": 18457,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18473,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 18491,
											"end": 18492,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18473,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 18473,
											"end": 18493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18473,
											"end": 18493,
											"name": "tag",
											"source": 14,
											"value": "701"
										},
										{
											"begin": 18473,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18468,
											"end": 18493,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18468,
											"end": 18493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18507,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 18525,
											"end": 18526,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18507,
											"end": 18527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 18507,
											"end": 18527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18507,
											"end": 18527,
											"name": "tag",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 18507,
											"end": 18527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18502,
											"end": 18527,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18502,
											"end": 18527,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18562,
											"end": 18563,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18559,
											"end": 18560,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18555,
											"end": 18564,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 18584,
											"end": 18614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 18602,
											"end": 18613,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18584,
											"end": 18614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 18584,
											"end": 18614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18584,
											"end": 18614,
											"name": "tag",
											"source": 14,
											"value": "703"
										},
										{
											"begin": 18584,
											"end": 18614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18573,
											"end": 18614,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18573,
											"end": 18614,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18763,
											"end": 18764,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18754,
											"end": 18761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18750,
											"end": 18765,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 18747,
											"end": 18748,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 18744,
											"end": 18766,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18724,
											"end": 18725,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18717,
											"end": 18726,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18697,
											"end": 18780,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 18674,
											"end": 18813,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 18674,
											"end": 18813,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18793,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 18793,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 18793,
											"end": 18811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18793,
											"end": 18811,
											"name": "tag",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 18793,
											"end": 18811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18674,
											"end": 18813,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 18674,
											"end": 18813,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18458,
											"end": 18820,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18410,
											"end": 18820,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18410,
											"end": 18820,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18410,
											"end": 18820,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18410,
											"end": 18820,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18410,
											"end": 18820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18826,
											"end": 19011,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 18826,
											"end": 19011,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18866,
											"end": 18867,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18883,
											"end": 18903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 18901,
											"end": 18902,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18883,
											"end": 18903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 18883,
											"end": 18903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18883,
											"end": 18903,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 18883,
											"end": 18903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18878,
											"end": 18903,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18878,
											"end": 18903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18917,
											"end": 18937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 18935,
											"end": 18936,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18917,
											"end": 18937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 18917,
											"end": 18937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18917,
											"end": 18937,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 18917,
											"end": 18937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 18937,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 18937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18956,
											"end": 18957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18946,
											"end": 18981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 18946,
											"end": 18981,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18961,
											"end": 18979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 18961,
											"end": 18979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 18961,
											"end": 18979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18961,
											"end": 18979,
											"name": "tag",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 18961,
											"end": 18979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18946,
											"end": 18981,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 18946,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19003,
											"end": 19004,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19000,
											"end": 19001,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18996,
											"end": 19005,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 18991,
											"end": 19005,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18991,
											"end": 19005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18826,
											"end": 19011,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18826,
											"end": 19011,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18826,
											"end": 19011,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18826,
											"end": 19011,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18826,
											"end": 19011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19017,
											"end": 19193,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 19017,
											"end": 19193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19049,
											"end": 19050,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19066,
											"end": 19086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 19084,
											"end": 19085,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19066,
											"end": 19086,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 19066,
											"end": 19086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19066,
											"end": 19086,
											"name": "tag",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 19066,
											"end": 19086,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19061,
											"end": 19086,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19061,
											"end": 19086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19100,
											"end": 19120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 19118,
											"end": 19119,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19100,
											"end": 19120,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 19100,
											"end": 19120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19100,
											"end": 19120,
											"name": "tag",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 19100,
											"end": 19120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19095,
											"end": 19120,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19095,
											"end": 19120,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19139,
											"end": 19140,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19129,
											"end": 19164,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 19129,
											"end": 19164,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19144,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 19144,
											"end": 19162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 19144,
											"end": 19162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19144,
											"end": 19162,
											"name": "tag",
											"source": 14,
											"value": "715"
										},
										{
											"begin": 19144,
											"end": 19162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19129,
											"end": 19164,
											"name": "tag",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 19129,
											"end": 19164,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19185,
											"end": 19186,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19182,
											"end": 19183,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19178,
											"end": 19187,
											"name": "MOD",
											"source": 14
										},
										{
											"begin": 19173,
											"end": 19187,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19173,
											"end": 19187,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19017,
											"end": 19193,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19017,
											"end": 19193,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19017,
											"end": 19193,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19017,
											"end": 19193,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19017,
											"end": 19193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19199,
											"end": 19434,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 19199,
											"end": 19434,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19239,
											"end": 19243,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19259,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "717"
										},
										{
											"begin": 19277,
											"end": 19278,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19259,
											"end": 19279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 19259,
											"end": 19279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19259,
											"end": 19279,
											"name": "tag",
											"source": 14,
											"value": "717"
										},
										{
											"begin": 19259,
											"end": 19279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19254,
											"end": 19279,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19254,
											"end": 19279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19293,
											"end": 19313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 19311,
											"end": 19312,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19293,
											"end": 19313,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 19293,
											"end": 19313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19293,
											"end": 19313,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 19293,
											"end": 19313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19288,
											"end": 19313,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19288,
											"end": 19313,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19337,
											"end": 19338,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19334,
											"end": 19335,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19330,
											"end": 19339,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19322,
											"end": 19339,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19322,
											"end": 19339,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19361,
											"end": 19403,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19355,
											"end": 19359,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19352,
											"end": 19404,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19349,
											"end": 19427,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19349,
											"end": 19427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 19349,
											"end": 19427,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19407,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "720"
										},
										{
											"begin": 19407,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 19407,
											"end": 19425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19407,
											"end": 19425,
											"name": "tag",
											"source": 14,
											"value": "720"
										},
										{
											"begin": 19407,
											"end": 19425,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19349,
											"end": 19427,
											"name": "tag",
											"source": 14,
											"value": "719"
										},
										{
											"begin": 19349,
											"end": 19427,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19199,
											"end": 19434,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19199,
											"end": 19434,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19199,
											"end": 19434,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19199,
											"end": 19434,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19199,
											"end": 19434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19440,
											"end": 19583,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 19440,
											"end": 19583,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19497,
											"end": 19502,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19528,
											"end": 19534,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19522,
											"end": 19535,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 19513,
											"end": 19535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19513,
											"end": 19535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19544,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 19571,
											"end": 19576,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19544,
											"end": 19577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 19544,
											"end": 19577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19544,
											"end": 19577,
											"name": "tag",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 19544,
											"end": 19577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19440,
											"end": 19583,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19440,
											"end": 19583,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19440,
											"end": 19583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19440,
											"end": 19583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19440,
											"end": 19583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19940,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 19589,
											"end": 19940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19659,
											"end": 19665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19708,
											"end": 19710,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19696,
											"end": 19705,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19687,
											"end": 19694,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19683,
											"end": 19706,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19679,
											"end": 19711,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 19676,
											"end": 19795,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19676,
											"end": 19795,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 19676,
											"end": 19795,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19714,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 19714,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 19714,
											"end": 19793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19714,
											"end": 19793,
											"name": "tag",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 19714,
											"end": 19793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19676,
											"end": 19795,
											"name": "tag",
											"source": 14,
											"value": "724"
										},
										{
											"begin": 19676,
											"end": 19795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19834,
											"end": 19835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19859,
											"end": 19923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 19915,
											"end": 19922,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 19906,
											"end": 19912,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19895,
											"end": 19904,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 19891,
											"end": 19913,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19859,
											"end": 19923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 19859,
											"end": 19923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19859,
											"end": 19923,
											"name": "tag",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 19859,
											"end": 19923,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19849,
											"end": 19923,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19849,
											"end": 19923,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19805,
											"end": 19933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19940,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19940,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19589,
											"end": 19940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19946,
											"end": 20175,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 19946,
											"end": 20175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19983,
											"end": 19986,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20006,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 20022,
											"end": 20027,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20006,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 20006,
											"end": 20028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20006,
											"end": 20028,
											"name": "tag",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 20006,
											"end": 20028,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19997,
											"end": 20028,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19997,
											"end": 20028,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20050,
											"end": 20116,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 20043,
											"end": 20048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20040,
											"end": 20117,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20037,
											"end": 20140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 20037,
											"end": 20140,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20120,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 20120,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 20120,
											"end": 20138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20120,
											"end": 20138,
											"name": "tag",
											"source": 14,
											"value": "730"
										},
										{
											"begin": 20120,
											"end": 20138,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20037,
											"end": 20140,
											"name": "tag",
											"source": 14,
											"value": "729"
										},
										{
											"begin": 20037,
											"end": 20140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20167,
											"end": 20168,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 20160,
											"end": 20165,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20156,
											"end": 20169,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20149,
											"end": 20169,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20149,
											"end": 20169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19946,
											"end": 20175,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19946,
											"end": 20175,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19946,
											"end": 20175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19946,
											"end": 20175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20181,
											"end": 20494,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 20181,
											"end": 20494,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20219,
											"end": 20223,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20239,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 20255,
											"end": 20256,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20239,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 20239,
											"end": 20257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20239,
											"end": 20257,
											"name": "tag",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 20239,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20234,
											"end": 20257,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20234,
											"end": 20257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20271,
											"end": 20289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 20287,
											"end": 20288,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20271,
											"end": 20289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 20271,
											"end": 20289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20271,
											"end": 20289,
											"name": "tag",
											"source": 14,
											"value": "733"
										},
										{
											"begin": 20271,
											"end": 20289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20266,
											"end": 20289,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20266,
											"end": 20289,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20313,
											"end": 20314,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20310,
											"end": 20311,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20306,
											"end": 20315,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20298,
											"end": 20315,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20298,
											"end": 20315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20445,
											"end": 20453,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFF"
										},
										{
											"begin": 20439,
											"end": 20443,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20435,
											"end": 20454,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 20354,
											"end": 20420,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 20348,
											"end": 20352,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20344,
											"end": 20421,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 20328,
											"end": 20464,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 20325,
											"end": 20487,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20325,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 20325,
											"end": 20487,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20467,
											"end": 20485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 20467,
											"end": 20485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 20467,
											"end": 20485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20467,
											"end": 20485,
											"name": "tag",
											"source": 14,
											"value": "735"
										},
										{
											"begin": 20467,
											"end": 20485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20325,
											"end": 20487,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 20325,
											"end": 20487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20181,
											"end": 20494,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20181,
											"end": 20494,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20181,
											"end": 20494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20181,
											"end": 20494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20181,
											"end": 20494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20771,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 20500,
											"end": 20771,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20538,
											"end": 20545,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20561,
											"end": 20579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 20577,
											"end": 20578,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20561,
											"end": 20579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 20561,
											"end": 20579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20561,
											"end": 20579,
											"name": "tag",
											"source": 14,
											"value": "737"
										},
										{
											"begin": 20561,
											"end": 20579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20556,
											"end": 20579,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20556,
											"end": 20579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20593,
											"end": 20611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 20609,
											"end": 20610,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20593,
											"end": 20611,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 20593,
											"end": 20611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20593,
											"end": 20611,
											"name": "tag",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 20593,
											"end": 20611,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20588,
											"end": 20611,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20588,
											"end": 20611,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20646,
											"end": 20647,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20643,
											"end": 20644,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20639,
											"end": 20648,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 20668,
											"end": 20696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 20684,
											"end": 20695,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20668,
											"end": 20696,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 20668,
											"end": 20696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20668,
											"end": 20696,
											"name": "tag",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 20668,
											"end": 20696,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20657,
											"end": 20696,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20657,
											"end": 20696,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20728,
											"end": 20739,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 20719,
											"end": 20726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20716,
											"end": 20740,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 20706,
											"end": 20764,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 20706,
											"end": 20764,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20744,
											"end": 20762,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 20744,
											"end": 20762,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 20744,
											"end": 20762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20744,
											"end": 20762,
											"name": "tag",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 20744,
											"end": 20762,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20706,
											"end": 20764,
											"name": "tag",
											"source": 14,
											"value": "740"
										},
										{
											"begin": 20706,
											"end": 20764,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20546,
											"end": 20771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20771,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20771,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20771,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20777,
											"end": 20863,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 20777,
											"end": 20863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20812,
											"end": 20819,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20852,
											"end": 20856,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 20845,
											"end": 20850,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20841,
											"end": 20857,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 20830,
											"end": 20857,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20830,
											"end": 20857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20777,
											"end": 20863,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20777,
											"end": 20863,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20777,
											"end": 20863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20777,
											"end": 20863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20869,
											"end": 21060,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 20869,
											"end": 21060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20907,
											"end": 20911,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20927,
											"end": 20945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "744"
										},
										{
											"begin": 20943,
											"end": 20944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20927,
											"end": 20945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 20927,
											"end": 20945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20927,
											"end": 20945,
											"name": "tag",
											"source": 14,
											"value": "744"
										},
										{
											"begin": 20927,
											"end": 20945,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20922,
											"end": 20945,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20922,
											"end": 20945,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20959,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 20975,
											"end": 20976,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20959,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 20959,
											"end": 20977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20959,
											"end": 20977,
											"name": "tag",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 20959,
											"end": 20977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20954,
											"end": 20977,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20954,
											"end": 20977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21001,
											"end": 21002,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20998,
											"end": 20999,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20994,
											"end": 21003,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20986,
											"end": 21003,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20986,
											"end": 21003,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21025,
											"end": 21029,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 21019,
											"end": 21023,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21016,
											"end": 21030,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 21013,
											"end": 21053,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21013,
											"end": 21053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 21013,
											"end": 21053,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21033,
											"end": 21051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "747"
										},
										{
											"begin": 21033,
											"end": 21051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 21033,
											"end": 21051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21033,
											"end": 21051,
											"name": "tag",
											"source": 14,
											"value": "747"
										},
										{
											"begin": 21033,
											"end": 21051,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21013,
											"end": 21053,
											"name": "tag",
											"source": 14,
											"value": "746"
										},
										{
											"begin": 21013,
											"end": 21053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20869,
											"end": 21060,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20869,
											"end": 21060,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20869,
											"end": 21060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20869,
											"end": 21060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20869,
											"end": 21060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21066,
											"end": 21375,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 21066,
											"end": 21375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21104,
											"end": 21107,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21123,
											"end": 21141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "749"
										},
										{
											"begin": 21139,
											"end": 21140,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21123,
											"end": 21141,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 21123,
											"end": 21141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21123,
											"end": 21141,
											"name": "tag",
											"source": 14,
											"value": "749"
										},
										{
											"begin": 21123,
											"end": 21141,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21118,
											"end": 21141,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21118,
											"end": 21141,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21155,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "750"
										},
										{
											"begin": 21171,
											"end": 21172,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21155,
											"end": 21173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 21155,
											"end": 21173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21155,
											"end": 21173,
											"name": "tag",
											"source": 14,
											"value": "750"
										},
										{
											"begin": 21155,
											"end": 21173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21150,
											"end": 21173,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21150,
											"end": 21173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21196,
											"end": 21197,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21193,
											"end": 21194,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21189,
											"end": 21198,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21182,
											"end": 21198,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21182,
											"end": 21198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21268,
											"end": 21334,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 21263,
											"end": 21266,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21259,
											"end": 21335,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 21236,
											"end": 21244,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFF"
										},
										{
											"begin": 21231,
											"end": 21234,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21227,
											"end": 21245,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 21211,
											"end": 21345,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 21208,
											"end": 21368,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21208,
											"end": 21368,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "751"
										},
										{
											"begin": 21208,
											"end": 21368,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21348,
											"end": 21366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "752"
										},
										{
											"begin": 21348,
											"end": 21366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 21348,
											"end": 21366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21348,
											"end": 21366,
											"name": "tag",
											"source": 14,
											"value": "752"
										},
										{
											"begin": 21348,
											"end": 21366,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21208,
											"end": 21368,
											"name": "tag",
											"source": 14,
											"value": "751"
										},
										{
											"begin": 21208,
											"end": 21368,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21066,
											"end": 21375,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21066,
											"end": 21375,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21066,
											"end": 21375,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21066,
											"end": 21375,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21066,
											"end": 21375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21381,
											"end": 21532,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 21381,
											"end": 21532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21521,
											"end": 21524,
											"name": "PUSH",
											"source": 14,
											"value": "5200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21517,
											"end": 21518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21509,
											"end": 21515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21505,
											"end": 21519,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21498,
											"end": 21525,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21381,
											"end": 21532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21381,
											"end": 21532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21538,
											"end": 21903,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 21538,
											"end": 21903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21680,
											"end": 21683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21701,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "755"
										},
										{
											"begin": 21765,
											"end": 21766,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 21760,
											"end": 21763,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21701,
											"end": 21767,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 21701,
											"end": 21767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21701,
											"end": 21767,
											"name": "tag",
											"source": 14,
											"value": "755"
										},
										{
											"begin": 21701,
											"end": 21767,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21694,
											"end": 21767,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21694,
											"end": 21767,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21776,
											"end": 21869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "756"
										},
										{
											"begin": 21865,
											"end": 21868,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21776,
											"end": 21869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 21776,
											"end": 21869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21776,
											"end": 21869,
											"name": "tag",
											"source": 14,
											"value": "756"
										},
										{
											"begin": 21776,
											"end": 21869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21894,
											"end": 21896,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21889,
											"end": 21892,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21885,
											"end": 21897,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21878,
											"end": 21897,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21878,
											"end": 21897,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21538,
											"end": 21903,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21538,
											"end": 21903,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21538,
											"end": 21903,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21538,
											"end": 21903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21909,
											"end": 22328,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 21909,
											"end": 22328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22075,
											"end": 22079,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22113,
											"end": 22115,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22102,
											"end": 22111,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22098,
											"end": 22116,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22090,
											"end": 22116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22090,
											"end": 22116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22162,
											"end": 22171,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22156,
											"end": 22160,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22152,
											"end": 22172,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22148,
											"end": 22149,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22137,
											"end": 22146,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22133,
											"end": 22150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22126,
											"end": 22173,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22190,
											"end": 22321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 22316,
											"end": 22320,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22190,
											"end": 22321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 22190,
											"end": 22321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22190,
											"end": 22321,
											"name": "tag",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 22190,
											"end": 22321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22182,
											"end": 22321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22182,
											"end": 22321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21909,
											"end": 22328,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21909,
											"end": 22328,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21909,
											"end": 22328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21909,
											"end": 22328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22334,
											"end": 22706,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 22334,
											"end": 22706,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22373,
											"end": 22377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22393,
											"end": 22412,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 22410,
											"end": 22411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22393,
											"end": 22412,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 22393,
											"end": 22412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22393,
											"end": 22412,
											"name": "tag",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 22393,
											"end": 22412,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22388,
											"end": 22412,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22388,
											"end": 22412,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22426,
											"end": 22445,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "761"
										},
										{
											"begin": 22443,
											"end": 22444,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22426,
											"end": 22445,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 22426,
											"end": 22445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22426,
											"end": 22445,
											"name": "tag",
											"source": 14,
											"value": "761"
										},
										{
											"begin": 22426,
											"end": 22445,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22421,
											"end": 22445,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22421,
											"end": 22445,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22469,
											"end": 22470,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22466,
											"end": 22467,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22462,
											"end": 22471,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22454,
											"end": 22471,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22454,
											"end": 22471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22663,
											"end": 22664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22657,
											"end": 22661,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22653,
											"end": 22665,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 22649,
											"end": 22650,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22646,
											"end": 22647,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22642,
											"end": 22651,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 22638,
											"end": 22666,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 22621,
											"end": 22622,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22615,
											"end": 22619,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22611,
											"end": 22623,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 22606,
											"end": 22607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22603,
											"end": 22604,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22599,
											"end": 22608,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 22592,
											"end": 22609,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 22588,
											"end": 22624,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 22572,
											"end": 22676,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 22569,
											"end": 22699,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 22569,
											"end": 22699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "762"
										},
										{
											"begin": 22569,
											"end": 22699,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22679,
											"end": 22697,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "763"
										},
										{
											"begin": 22679,
											"end": 22697,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 22679,
											"end": 22697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22679,
											"end": 22697,
											"name": "tag",
											"source": 14,
											"value": "763"
										},
										{
											"begin": 22679,
											"end": 22697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22569,
											"end": 22699,
											"name": "tag",
											"source": 14,
											"value": "762"
										},
										{
											"begin": 22569,
											"end": 22699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22334,
											"end": 22706,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22334,
											"end": 22706,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22334,
											"end": 22706,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22334,
											"end": 22706,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22334,
											"end": 22706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22712,
											"end": 23268,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 22712,
											"end": 23268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22751,
											"end": 22758,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22774,
											"end": 22793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "765"
										},
										{
											"begin": 22791,
											"end": 22792,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22774,
											"end": 22793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 22774,
											"end": 22793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22774,
											"end": 22793,
											"name": "tag",
											"source": 14,
											"value": "765"
										},
										{
											"begin": 22774,
											"end": 22793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22769,
											"end": 22793,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22769,
											"end": 22793,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22807,
											"end": 22826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "766"
										},
										{
											"begin": 22824,
											"end": 22825,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22807,
											"end": 22826,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 22807,
											"end": 22826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22807,
											"end": 22826,
											"name": "tag",
											"source": 14,
											"value": "766"
										},
										{
											"begin": 22807,
											"end": 22826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22802,
											"end": 22826,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22802,
											"end": 22826,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22861,
											"end": 22862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22858,
											"end": 22859,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22854,
											"end": 22863,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 22883,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "767"
										},
										{
											"begin": 22900,
											"end": 22911,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22883,
											"end": 22912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 22883,
											"end": 22912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22883,
											"end": 22912,
											"name": "tag",
											"source": 14,
											"value": "767"
										},
										{
											"begin": 22883,
											"end": 22912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22872,
											"end": 22912,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22872,
											"end": 22912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22970,
											"end": 23036,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22967,
											"end": 22968,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22964,
											"end": 23037,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 22960,
											"end": 22961,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22957,
											"end": 22958,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22953,
											"end": 22962,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 22949,
											"end": 23038,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 22946,
											"end": 23061,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 22946,
											"end": 23061,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "768"
										},
										{
											"begin": 22946,
											"end": 23061,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23041,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "769"
										},
										{
											"begin": 23041,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 23041,
											"end": 23059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23041,
											"end": 23059,
											"name": "tag",
											"source": 14,
											"value": "769"
										},
										{
											"begin": 23041,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22946,
											"end": 23061,
											"name": "tag",
											"source": 14,
											"value": "768"
										},
										{
											"begin": 22946,
											"end": 23061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23211,
											"end": 23212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23202,
											"end": 23209,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23197,
											"end": 23213,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 23194,
											"end": 23195,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23191,
											"end": 23214,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 23171,
											"end": 23172,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23164,
											"end": 23173,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 23144,
											"end": 23228,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 23121,
											"end": 23261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 23121,
											"end": 23261,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23241,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "771"
										},
										{
											"begin": 23241,
											"end": 23259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 23241,
											"end": 23259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23241,
											"end": 23259,
											"name": "tag",
											"source": 14,
											"value": "771"
										},
										{
											"begin": 23241,
											"end": 23259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23121,
											"end": 23261,
											"name": "tag",
											"source": 14,
											"value": "770"
										},
										{
											"begin": 23121,
											"end": 23261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22759,
											"end": 23268,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22712,
											"end": 23268,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22712,
											"end": 23268,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22712,
											"end": 23268,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22712,
											"end": 23268,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22712,
											"end": 23268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23649,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 23274,
											"end": 23649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23313,
											"end": 23316,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23332,
											"end": 23351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "773"
										},
										{
											"begin": 23349,
											"end": 23350,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23332,
											"end": 23351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 23332,
											"end": 23351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23332,
											"end": 23351,
											"name": "tag",
											"source": 14,
											"value": "773"
										},
										{
											"begin": 23332,
											"end": 23351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23327,
											"end": 23351,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23327,
											"end": 23351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23365,
											"end": 23384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 23382,
											"end": 23383,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23365,
											"end": 23384,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 23365,
											"end": 23384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23365,
											"end": 23384,
											"name": "tag",
											"source": 14,
											"value": "774"
										},
										{
											"begin": 23365,
											"end": 23384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23360,
											"end": 23384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23407,
											"end": 23408,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23404,
											"end": 23405,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23400,
											"end": 23409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23393,
											"end": 23409,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23393,
											"end": 23409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23605,
											"end": 23606,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23600,
											"end": 23603,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23596,
											"end": 23607,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 23589,
											"end": 23608,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 23585,
											"end": 23586,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23582,
											"end": 23583,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23578,
											"end": 23587,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 23574,
											"end": 23609,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 23557,
											"end": 23558,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23548,
											"end": 23559,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 23543,
											"end": 23544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23540,
											"end": 23541,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23536,
											"end": 23545,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 23529,
											"end": 23546,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 23525,
											"end": 23560,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 23509,
											"end": 23619,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 23506,
											"end": 23642,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 23506,
											"end": 23642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "775"
										},
										{
											"begin": 23506,
											"end": 23642,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23622,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 23622,
											"end": 23640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 23622,
											"end": 23640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23622,
											"end": 23640,
											"name": "tag",
											"source": 14,
											"value": "776"
										},
										{
											"begin": 23622,
											"end": 23640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23506,
											"end": 23642,
											"name": "tag",
											"source": 14,
											"value": "775"
										},
										{
											"begin": 23506,
											"end": 23642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23649,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23649,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23649,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23649,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23274,
											"end": 23649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23655,
											"end": 23888,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 23655,
											"end": 23888,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23694,
											"end": 23697,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23717,
											"end": 23741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "778"
										},
										{
											"begin": 23735,
											"end": 23740,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23717,
											"end": 23741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 23717,
											"end": 23741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23717,
											"end": 23741,
											"name": "tag",
											"source": 14,
											"value": "778"
										},
										{
											"begin": 23717,
											"end": 23741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23708,
											"end": 23741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23708,
											"end": 23741,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23763,
											"end": 23829,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23756,
											"end": 23761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23753,
											"end": 23830,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23750,
											"end": 23853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "779"
										},
										{
											"begin": 23750,
											"end": 23853,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23833,
											"end": 23851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "780"
										},
										{
											"begin": 23833,
											"end": 23851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 23833,
											"end": 23851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23833,
											"end": 23851,
											"name": "tag",
											"source": 14,
											"value": "780"
										},
										{
											"begin": 23833,
											"end": 23851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23750,
											"end": 23853,
											"name": "tag",
											"source": 14,
											"value": "779"
										},
										{
											"begin": 23750,
											"end": 23853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23880,
											"end": 23881,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 23873,
											"end": 23878,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23869,
											"end": 23882,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23862,
											"end": 23882,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23862,
											"end": 23882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23655,
											"end": 23888,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23655,
											"end": 23888,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23655,
											"end": 23888,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23655,
											"end": 23888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23894,
											"end": 24082,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 23894,
											"end": 24082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23932,
											"end": 23935,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23951,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "782"
										},
										{
											"begin": 23967,
											"end": 23968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23951,
											"end": 23969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 23951,
											"end": 23969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23951,
											"end": 23969,
											"name": "tag",
											"source": 14,
											"value": "782"
										},
										{
											"begin": 23951,
											"end": 23969,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23946,
											"end": 23969,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23946,
											"end": 23969,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24001,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "783"
										},
										{
											"begin": 23999,
											"end": 24000,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24001,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 23983,
											"end": 24001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23983,
											"end": 24001,
											"name": "tag",
											"source": 14,
											"value": "783"
										},
										{
											"begin": 23983,
											"end": 24001,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23978,
											"end": 24001,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23978,
											"end": 24001,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24024,
											"end": 24025,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24021,
											"end": 24022,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24017,
											"end": 24026,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24010,
											"end": 24026,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24010,
											"end": 24026,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24047,
											"end": 24051,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 24042,
											"end": 24045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24039,
											"end": 24052,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 24036,
											"end": 24075,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 24036,
											"end": 24075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "784"
										},
										{
											"begin": 24036,
											"end": 24075,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 24055,
											"end": 24073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "785"
										},
										{
											"begin": 24055,
											"end": 24073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 24055,
											"end": 24073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24055,
											"end": 24073,
											"name": "tag",
											"source": 14,
											"value": "785"
										},
										{
											"begin": 24055,
											"end": 24073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24036,
											"end": 24075,
											"name": "tag",
											"source": 14,
											"value": "784"
										},
										{
											"begin": 24036,
											"end": 24075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23894,
											"end": 24082,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23894,
											"end": 24082,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23894,
											"end": 24082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23894,
											"end": 24082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23894,
											"end": 24082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24088,
											"end": 24255,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 24088,
											"end": 24255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24228,
											"end": 24247,
											"name": "PUSH",
											"source": 14,
											"value": "5052424D6174683A206F766572666C6F77000000000000000000000000000000"
										},
										{
											"begin": 24224,
											"end": 24225,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24216,
											"end": 24222,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24212,
											"end": 24226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24205,
											"end": 24248,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24088,
											"end": 24255,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24088,
											"end": 24255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24261,
											"end": 24627,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 24261,
											"end": 24627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24403,
											"end": 24406,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24424,
											"end": 24491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "788"
										},
										{
											"begin": 24488,
											"end": 24490,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 24483,
											"end": 24486,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24424,
											"end": 24491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 24424,
											"end": 24491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24424,
											"end": 24491,
											"name": "tag",
											"source": 14,
											"value": "788"
										},
										{
											"begin": 24424,
											"end": 24491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24417,
											"end": 24491,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24417,
											"end": 24491,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24500,
											"end": 24593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "789"
										},
										{
											"begin": 24589,
											"end": 24592,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24500,
											"end": 24593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 24500,
											"end": 24593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24500,
											"end": 24593,
											"name": "tag",
											"source": 14,
											"value": "789"
										},
										{
											"begin": 24500,
											"end": 24593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24618,
											"end": 24620,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24613,
											"end": 24616,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24609,
											"end": 24621,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24602,
											"end": 24621,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24602,
											"end": 24621,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24261,
											"end": 24627,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24261,
											"end": 24627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24261,
											"end": 24627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24261,
											"end": 24627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24633,
											"end": 25052,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 24633,
											"end": 25052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24799,
											"end": 24803,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24837,
											"end": 24839,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24826,
											"end": 24835,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24822,
											"end": 24840,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24814,
											"end": 24840,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24814,
											"end": 24840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24886,
											"end": 24895,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24880,
											"end": 24884,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24876,
											"end": 24896,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24872,
											"end": 24873,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24861,
											"end": 24870,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24857,
											"end": 24874,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24850,
											"end": 24897,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24914,
											"end": 25045,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "791"
										},
										{
											"begin": 25040,
											"end": 25044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24914,
											"end": 25045,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 24914,
											"end": 25045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24914,
											"end": 25045,
											"name": "tag",
											"source": 14,
											"value": "791"
										},
										{
											"begin": 24914,
											"end": 25045,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24906,
											"end": 25045,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24906,
											"end": 25045,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24633,
											"end": 25052,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24633,
											"end": 25052,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24633,
											"end": 25052,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24633,
											"end": 25052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25058,
											"end": 25290,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 25058,
											"end": 25290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25098,
											"end": 25101,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25117,
											"end": 25137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "793"
										},
										{
											"begin": 25135,
											"end": 25136,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25117,
											"end": 25137,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 25117,
											"end": 25137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25117,
											"end": 25137,
											"name": "tag",
											"source": 14,
											"value": "793"
										},
										{
											"begin": 25117,
											"end": 25137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25112,
											"end": 25137,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25112,
											"end": 25137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25151,
											"end": 25171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "794"
										},
										{
											"begin": 25169,
											"end": 25170,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25151,
											"end": 25171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 25151,
											"end": 25171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25151,
											"end": 25171,
											"name": "tag",
											"source": 14,
											"value": "794"
										},
										{
											"begin": 25151,
											"end": 25171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25146,
											"end": 25171,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25146,
											"end": 25171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25194,
											"end": 25195,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25191,
											"end": 25192,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25187,
											"end": 25196,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25180,
											"end": 25196,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25180,
											"end": 25196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25217,
											"end": 25259,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25212,
											"end": 25215,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25209,
											"end": 25260,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 25206,
											"end": 25283,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25206,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "795"
										},
										{
											"begin": 25206,
											"end": 25283,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25263,
											"end": 25281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "796"
										},
										{
											"begin": 25263,
											"end": 25281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 25263,
											"end": 25281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25263,
											"end": 25281,
											"name": "tag",
											"source": 14,
											"value": "796"
										},
										{
											"begin": 25263,
											"end": 25281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25206,
											"end": 25283,
											"name": "tag",
											"source": 14,
											"value": "795"
										},
										{
											"begin": 25206,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25058,
											"end": 25290,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25058,
											"end": 25290,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25058,
											"end": 25290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25058,
											"end": 25290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25058,
											"end": 25290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"liquidity()": "1a686502",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"positions(bytes32)": "514ea4bf",
							"slot0()": "3850c7bd",
							"swap(address,bool,uint256,bytes)": "80c2c6ef",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1_\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTickRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLiquidity\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountSpecified\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/UniswapV3Pool.sol\":\"UniswapV3Pool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/UniswapV3Pool.sol\":{\"keccak256\":\"0x0c8bffa89a2c66763d946cac10f0391136ad8d3ce5c3ca717b4904d7fc3d6014\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://179073cbf000392a5fac73bf7369cc9d69e34271c5cee2a1db0fc89c2b3cc3b8\",\"dweb:/ipfs/QmTj9JLGSKZk1vHS5e7BzXmfMkddo2VEPoaNQpiEwncB76\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x8f7e66ebc62dc73aa8871ca29cc1f93d1fffa19a569972bfd58dcbb674329a90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6b8cc533e3d0d71cbe0663f17395713b798dfc419cc543d79bd145c2062ffcab\",\"dweb:/ipfs/QmRHswF3a49hkXrBGssMSu1r2H2gBWBVbHJ3MrF56L5HRW\"]},\"src/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x8dbe3d6c23da7bb08718f050ff8474f94367f833c0587670435eb2d4b4b3ae79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://928a138d8c7953049f7f06dc4b1c9fdc244c129edbecf550b5cc9d079bed3405\",\"dweb:/ipfs/QmZM7eTaxzp9LeQqrrzKuJt15P7BvT6Ba32hazdKrfsJuz\"]},\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x825cf10c30e3c8676fb8a9055948a59841c44387bdc50a2271345282753c38ed\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8379da8abbc993cb98540120ab4a0cdaee66e8a53a1792fb099089f626d946c4\",\"dweb:/ipfs/QmSSb8GPR4S6WCpgrYZwhYiDPMKqkX3Pm3bsMVcPuvrWuj\"]},\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xb8e8f6f7326fc86450a2e8daba3194709c9c92f552fe8aea44cb7c77dbff4ad2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8ef383b9b4142ea5774816a87d48b64a29e922edc83af6fb15b3098cef9819f\",\"dweb:/ipfs/QmdZXMdDWgMEFMS8rQtR5QN5KdLSZUuSmd6dQsjAKN8DFA\"]},\"src/lib/BitMath.sol\":{\"keccak256\":\"0x7a2051864fa0e8705564bde430557a6e9bc6d7765551f1a3b6ef8c8604eee313\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://28e81d5a4f36365c170097e7c5f208fcef3ceb87d082bf79450e69a678cd0c78\",\"dweb:/ipfs/QmNrHt2Vw2iLQ7JNRsVafYnaJqxxDSHUCQ8W9wMxosheRV\"]},\"src/lib/FixedPoint96.sol\":{\"keccak256\":\"0x2af6468434f30acf1bf0fa92c02c1bcfded878b568fd376687dceeaae2ce5000\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee84c31e8d79f8ca5538fc453bc7b52b9757c3400337a6cf03303631fbc9f620\",\"dweb:/ipfs/QmfWC816uyiXW8UARZJcgTGnHyoYgdfNRZ9Awtxw2TDFmK\"]},\"src/lib/Math.sol\":{\"keccak256\":\"0x9011dcd46af40bd23344240e7a9535cd0eb9dab637a3e7c81333e837071ed64f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c0d54cec48e2a1d4ed65e26fa04e0eeb712ad8b6707d4c79a8d600e69e39b4a8\",\"dweb:/ipfs/QmUrJVytg1g6ixzynY7Mp2SiH6NFrgBtMNWG7YHS2Sx7oW\"]},\"src/lib/PRBMath.sol\":{\"keccak256\":\"0x9adb90635cbd067f1d25b2979c8816564ea1018dbbbd0d865ac5e4b29d6d9bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e55f9be29babfd960a697723aaa4f9142dc3d00251eda8e4853ddb65be70cb9\",\"dweb:/ipfs/QmdoV8yDxLFHhyKb8HFRzLjmEopyfMC1rX8iyiePSEFc97\"]},\"src/lib/Position.sol\":{\"keccak256\":\"0x62d2ab06531ac4a0f60c9daa994ae38e6a82c2195022fa4b04c0cf589468f8d2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3be896ccd46161b135499a4a736f719d4b10112af999df66cddd9734fc52ab06\",\"dweb:/ipfs/QmcntWtU1Qjx586SPS3GDgNrGMAyV13VrMgdQopXQAY9AN\"]},\"src/lib/SwapMath.sol\":{\"keccak256\":\"0x5d695a120dc9c31a67db89693b5d6689598a7b023457d86264deb4b8078330b9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5589156f6e8bf0d81a56de90198542681dae02b348d22caeab3ec57fad02d597\",\"dweb:/ipfs/QmYHRqxS9vee3FUVyDNUdrKWhf87zrwFjLk2fQnzeL615C\"]},\"src/lib/Tick.sol\":{\"keccak256\":\"0x35a4d5dc0146b72ed1e530c16d691fa841d2edd786336adea1a306e698bc381a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1d17f41a71529f5eccf9c3af0a8d4693049950a7f46f6c5c97db70fd14d866cf\",\"dweb:/ipfs/QmcUjNxYXpBMErZpxF65XeA2fVg6R9sPy6gFGZEEcFR9Ud\"]},\"src/lib/TickBitmap.sol\":{\"keccak256\":\"0xa430211db40b0cf69be4f166c7764ac3d2ab3a494ebfdec27d1d3e69bd961d1c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://12ed04d4d2ef0939d532a400f6a3e8dddbad71f9938f1caccd624f463e70296a\",\"dweb:/ipfs/Qmcpf15LJRtGFT81KR2unB3YLKaUF5naiSJkiDYtqnFpfD\"]},\"src/lib/TickMath.sol\":{\"keccak256\":\"0x66bbfe54186fc7cc57565dbb20889526579a661c7971f7d4276bd7a600acbe81\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5bf2d491cd7ad9c8325715ad81245f0bb36e178b53e3acd1424af01ec09c48a7\",\"dweb:/ipfs/QmfXyEWsYun2KLtZALaN7HRGUxViEzr2gWkvGULWTtnRAt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 60,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "slot0",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Slot0)57_storage"
							},
							{
								"astId": 62,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "liquidity",
								"offset": 0,
								"slot": "1",
								"type": "t_uint128"
							},
							{
								"astId": 67,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "ticks",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_int24,t_struct(Info)1781_storage)"
							},
							{
								"astId": 71,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "tickBitmap",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_int16,t_uint256)"
							},
							{
								"astId": 76,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "positions",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_bytes32,t_struct(Info)1648_storage)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_int16": {
								"encoding": "inplace",
								"label": "int16",
								"numberOfBytes": "2"
							},
							"t_int24": {
								"encoding": "inplace",
								"label": "int24",
								"numberOfBytes": "3"
							},
							"t_mapping(t_bytes32,t_struct(Info)1648_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct Position.Info)",
								"numberOfBytes": "32",
								"value": "t_struct(Info)1648_storage"
							},
							"t_mapping(t_int16,t_uint256)": {
								"encoding": "mapping",
								"key": "t_int16",
								"label": "mapping(int16 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_int24,t_struct(Info)1781_storage)": {
								"encoding": "mapping",
								"key": "t_int24",
								"label": "mapping(int24 => struct Tick.Info)",
								"numberOfBytes": "32",
								"value": "t_struct(Info)1781_storage"
							},
							"t_struct(Info)1648_storage": {
								"encoding": "inplace",
								"label": "struct Position.Info",
								"members": [
									{
										"astId": 1647,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "liquidity",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Info)1781_storage": {
								"encoding": "inplace",
								"label": "struct Tick.Info",
								"members": [
									{
										"astId": 1778,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "initialized",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1780,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "liquidity",
										"offset": 1,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Slot0)57_storage": {
								"encoding": "inplace",
								"label": "struct UniswapV3Pool.Slot0",
								"members": [
									{
										"astId": 54,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "sqrtPriceX96",
										"offset": 0,
										"slot": "0",
										"type": "t_uint160"
									},
									{
										"astId": 56,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "tick",
										"offset": 20,
										"slot": "0",
										"type": "t_int24"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint160": {
								"encoding": "inplace",
								"label": "uint160",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for Uniswap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x8f7e66ebc62dc73aa8871ca29cc1f93d1fffa19a569972bfd58dcbb674329a90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6b8cc533e3d0d71cbe0663f17395713b798dfc419cc543d79bd145c2062ffcab\",\"dweb:/ipfs/QmRHswF3a49hkXrBGssMSu1r2H2gBWBVbHJ3MrF56L5HRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in Uniswap V3",
						"version": 1
					}
				}
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"IUniswapV3MintCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Owed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Owed",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3MintCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
								"params": {
									"amount0Owed": "The amount of token0 due to the pool for the minted liquidity",
									"amount1Owed": "The amount of token1 due to the pool for the minted liquidity"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#mint",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": "d3487997"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\"}}},\"title\":\"Callback for IUniswapV3PoolActions#mint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#mint must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/callback/IUniswapV3MintCallback.sol\":\"IUniswapV3MintCallback\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x8dbe3d6c23da7bb08718f050ff8474f94367f833c0587670435eb2d4b4b3ae79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://928a138d8c7953049f7f06dc4b1c9fdc244c129edbecf550b5cc9d079bed3405\",\"dweb:/ipfs/QmZM7eTaxzp9LeQqrrzKuJt15P7BvT6Ba32hazdKrfsJuz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"notice": "Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#mint must implement this interface",
						"version": 1
					}
				}
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool."
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x825cf10c30e3c8676fb8a9055948a59841c44387bdc50a2271345282753c38ed\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8379da8abbc993cb98540120ab4a0cdaee66e8a53a1792fb099089f626d946c4\",\"dweb:/ipfs/QmSSb8GPR4S6WCpgrYZwhYiDPMKqkX3Pm3bsMVcPuvrWuj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xb8e8f6f7326fc86450a2e8daba3194709c9c92f552fe8aea44cb7c77dbff4ad2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8ef383b9b4142ea5774816a87d48b64a29e922edc83af6fb15b3098cef9819f\",\"dweb:/ipfs/QmdZXMdDWgMEFMS8rQtR5QN5KdLSZUuSmd6dQsjAKN8DFA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"src/lib/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/BitMath.sol\":187:2789  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/BitMath.sol\":187:2789  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122008bee6bb8b141cbef156004e7b3e6beecf11b915f249f6f871ed1cebe5b8b71b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122008bee6bb8b141cbef156004e7b3e6beecf11b915f249f6f871ed1cebe5b8b71b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xBE DUPN 0xBB DUP12 EQ SHR 0xBE CALL JUMP STOP 0x4E PUSH28 0x3E6BEECF11B915F249F6F871ED1CEBE5B8B71B64736F6C634300081E STOP CALLER ",
							"sourceMap": "187:2602:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122008bee6bb8b141cbef156004e7b3e6beecf11b915f249f6f871ed1cebe5b8b71b64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xBE DUPN 0xBB DUP12 EQ SHR 0xBE CALL JUMP STOP 0x4E PUSH28 0x3E6BEECF11B915F249F6F871ED1CEBE5B8B71B64736F6C634300081E STOP CALLER ",
							"sourceMap": "187:2602:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 2789,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008bee6bb8b141cbef156004e7b3e6beecf11b915f249f6f871ed1cebe5b8b71b64736f6c634300081e0033",
									".code": [
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 2789,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/BitMath.sol\":{\"keccak256\":\"0x7a2051864fa0e8705564bde430557a6e9bc6d7765551f1a3b6ef8c8604eee313\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://28e81d5a4f36365c170097e7c5f208fcef3ceb87d082bf79450e69a678cd0c78\",\"dweb:/ipfs/QmNrHt2Vw2iLQ7JNRsVafYnaJqxxDSHUCQ8W9wMxosheRV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/FixedPoint96.sol\":71:183  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/FixedPoint96.sol\":71:183  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b4f662fdc47da00a0b0559c7c2ea96979abe136b01bcf550dbd1b5b8c8676f0864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4f662fdc47da00a0b0559c7c2ea96979abe136b01bcf550dbd1b5b8c8676f0864736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xF6 PUSH3 0xFDC47D LOG0 EXP SIGNEXTEND SDIV MSIZE 0xC7 0xC2 0xEA SWAP7 SWAP8 SWAP11 0xBE SGT PUSH12 0x1BCF550DBD1B5B8C8676F08 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "71:112:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b4f662fdc47da00a0b0559c7c2ea96979abe136b01bcf550dbd1b5b8c8676f0864736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xF6 PUSH3 0xFDC47D LOG0 EXP SIGNEXTEND SDIV MSIZE 0xC7 0xC2 0xEA SWAP7 SWAP8 SWAP11 0xBE SGT PUSH12 0x1BCF550DBD1B5B8C8676F08 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "71:112:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 71,
									"end": 183,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4f662fdc47da00a0b0559c7c2ea96979abe136b01bcf550dbd1b5b8c8676f0864736f6c634300081e0033",
									".code": [
										{
											"begin": 71,
											"end": 183,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 71,
											"end": 183,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 71,
											"end": 183,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 71,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 71,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 71,
											"end": 183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 71,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 71,
											"end": 183,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/FixedPoint96.sol\":{\"keccak256\":\"0x2af6468434f30acf1bf0fa92c02c1bcfded878b568fd376687dceeaae2ce5000\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee84c31e8d79f8ca5538fc453bc7b52b9757c3400337a6cf03303631fbc9f620\",\"dweb:/ipfs/QmfWC816uyiXW8UARZJcgTGnHyoYgdfNRZ9Awtxw2TDFmK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/Math.sol\":117:3758  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/Math.sol\":117:3758  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220cebbc48e96f0984f1664beb25d6ca2b3b9908e4d34e8084a68c1879e1a3439f164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cebbc48e96f0984f1664beb25d6ca2b3b9908e4d34e8084a68c1879e1a3439f164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBB 0xC4 DUP15 SWAP7 CREATE SWAP9 0x4F AND PUSH5 0xBEB25D6CA2 0xB3 0xB9 SWAP1 DUP15 0x4D CALLVALUE 0xE8 ADDMOD BLOBBASEFEE PUSH9 0xC1879E1A3439F16473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "117:3641:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cebbc48e96f0984f1664beb25d6ca2b3b9908e4d34e8084a68c1879e1a3439f164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE 0xBB 0xC4 DUP15 SWAP7 CREATE SWAP9 0x4F AND PUSH5 0xBEB25D6CA2 0xB3 0xB9 SWAP1 DUP15 0x4D CALLVALUE 0xE8 ADDMOD BLOBBASEFEE PUSH9 0xC1879E1A3439F16473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "117:3641:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"calcAmount0Delta(uint160,uint160,uint128)": "infinite",
								"calcAmount1Delta(uint160,uint160,uint128)": "infinite",
								"divRoundingUp(uint256,uint256)": "infinite",
								"getNextSqrtPriceFromAmount0RoundingUp(uint160,uint128,uint256)": "infinite",
								"getNextSqrtPriceFromAmount1RoundingDown(uint160,uint128,uint256)": "infinite",
								"getNextSqrtPriceFromInput(uint160,uint128,uint256,bool)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 117,
									"end": 3758,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cebbc48e96f0984f1664beb25d6ca2b3b9908e4d34e8084a68c1879e1a3439f164736f6c634300081e0033",
									".code": [
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 3758,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Math.sol\":\"Math\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/FixedPoint96.sol\":{\"keccak256\":\"0x2af6468434f30acf1bf0fa92c02c1bcfded878b568fd376687dceeaae2ce5000\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee84c31e8d79f8ca5538fc453bc7b52b9757c3400337a6cf03303631fbc9f620\",\"dweb:/ipfs/QmfWC816uyiXW8UARZJcgTGnHyoYgdfNRZ9Awtxw2TDFmK\"]},\"src/lib/Math.sol\":{\"keccak256\":\"0x9011dcd46af40bd23344240e7a9535cd0eb9dab637a3e7c81333e837071ed64f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c0d54cec48e2a1d4ed65e26fa04e0eeb712ad8b6707d4c79a8d600e69e39b4a8\",\"dweb:/ipfs/QmUrJVytg1g6ixzynY7Mp2SiH6NFrgBtMNWG7YHS2Sx7oW\"]},\"src/lib/PRBMath.sol\":{\"keccak256\":\"0x9adb90635cbd067f1d25b2979c8816564ea1018dbbbd0d865ac5e4b29d6d9bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e55f9be29babfd960a697723aaa4f9142dc3d00251eda8e4853ddb65be70cb9\",\"dweb:/ipfs/QmdoV8yDxLFHhyKb8HFRzLjmEopyfMC1rX8iyiePSEFc97\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/PRBMath.sol": {
				"PRBMath": {
					"abi": [],
					"devdoc": {
						"author": "Paul Razvan Berg",
						"kind": "dev",
						"methods": {},
						"title": "PRBMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/PRBMath.sol\":215:3997  library PRBMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/PRBMath.sol\":215:3997  library PRBMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201352a86867544606be40f2f92183a9244fcb521190fee3b72afa3103d3e0b8ff64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201352a86867544606be40f2f92183a9244fcb521190fee3b72afa3103d3e0b8ff64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT MSTORE 0xA8 PUSH9 0x67544606BE40F2F921 DUP4 0xA9 0x24 0x4F 0xCB MSTORE GT SWAP1 INVALID CALLF 0xB72A STATICCALL BALANCE SUB 0xD3 RJUMP 0xB8FF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "215:3782:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201352a86867544606be40f2f92183a9244fcb521190fee3b72afa3103d3e0b8ff64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT MSTORE 0xA8 PUSH9 0x67544606BE40F2F921 DUP4 0xA9 0x24 0x4F 0xCB MSTORE GT SWAP1 INVALID CALLF 0xB72A STATICCALL BALANCE SUB 0xD3 RJUMP 0xB8FF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "215:3782:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivFixedPoint(uint256,uint256)": "infinite",
								"round(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 215,
									"end": 3997,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201352a86867544606be40f2f92183a9244fcb521190fee3b72afa3103d3e0b8ff64736f6c634300081e0033",
									".code": [
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 3997,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Paul Razvan Berg\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PRBMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Smart contract library for advanced fixed-point math that works with uint256 and int256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/PRBMath.sol\":\"PRBMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/PRBMath.sol\":{\"keccak256\":\"0x9adb90635cbd067f1d25b2979c8816564ea1018dbbbd0d865ac5e4b29d6d9bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e55f9be29babfd960a697723aaa4f9142dc3d00251eda8e4853ddb65be70cb9\",\"dweb:/ipfs/QmdoV8yDxLFHhyKb8HFRzLjmEopyfMC1rX8iyiePSEFc97\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Smart contract library for advanced fixed-point math that works with uint256 and int256.",
						"version": 1
					}
				}
			},
			"src/lib/Position.sol": {
				"Position": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/Position.sol\":63:686  library Position {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/Position.sol\":63:686  library Position {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220307c7c962ee535937910b5c32c02616010417ce605e306f0413c0bdfff81198264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220307c7c962ee535937910b5c32c02616010417ce605e306f0413c0bdfff81198264736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH29 0x7C962EE535937910B5C32C02616010417CE605E306F0413C0BDFFF8119 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "63:623:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220307c7c962ee535937910b5c32c02616010417ce605e306f0413c0bdfff81198264736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS PUSH29 0x7C962EE535937910B5C32C02616010417CE605E306F0413C0BDFFF8119 DUP3 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "63:623:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"get(mapping(bytes32 => struct Position.Info storage ref),address,int24,int24)": "infinite",
								"update(struct Position.Info storage pointer,uint128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 63,
									"end": 686,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220307c7c962ee535937910b5c32c02616010417ce605e306f0413c0bdfff81198264736f6c634300081e0033",
									".code": [
										{
											"begin": 63,
											"end": 686,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 63,
											"end": 686,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 63,
											"end": 686,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 63,
											"end": 686,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 686,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 63,
											"end": 686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 686,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Position.sol\":\"Position\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/Position.sol\":{\"keccak256\":\"0x62d2ab06531ac4a0f60c9daa994ae38e6a82c2195022fa4b04c0cf589468f8d2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3be896ccd46161b135499a4a736f719d4b10112af999df66cddd9734fc52ab06\",\"dweb:/ipfs/QmcntWtU1Qjx586SPS3GDgNrGMAyV13VrMgdQopXQAY9AN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/SwapMath.sol": {
				"SwapMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/SwapMath.sol\":85:1083  library SwapMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/SwapMath.sol\":85:1083  library SwapMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201276374612f9fea09689de8ffaa78b2c029bf63d193e881df28569360a5bed6764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201276374612f9fea09689de8ffaa78b2c029bf63d193e881df28569360a5bed6764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH23 0x374612F9FEA09689DE8FFAA78B2C029BF63D193E881DF2 DUP6 PUSH10 0x360A5BED6764736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "85:998:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201276374612f9fea09689de8ffaa78b2c029bf63d193e881df28569360a5bed6764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT PUSH23 0x374612F9FEA09689DE8FFAA78B2C029BF63D193E881DF2 DUP6 PUSH10 0x360A5BED6764736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "85:998:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"computeSwapStep(uint160,uint160,uint128,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 85,
									"end": 1083,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201276374612f9fea09689de8ffaa78b2c029bf63d193e881df28569360a5bed6764736f6c634300081e0033",
									".code": [
										{
											"begin": 85,
											"end": 1083,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 85,
											"end": 1083,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 85,
											"end": 1083,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 85,
											"end": 1083,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 85,
											"end": 1083,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 1083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 85,
											"end": 1083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 1083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 1083,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/SwapMath.sol\":\"SwapMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/FixedPoint96.sol\":{\"keccak256\":\"0x2af6468434f30acf1bf0fa92c02c1bcfded878b568fd376687dceeaae2ce5000\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ee84c31e8d79f8ca5538fc453bc7b52b9757c3400337a6cf03303631fbc9f620\",\"dweb:/ipfs/QmfWC816uyiXW8UARZJcgTGnHyoYgdfNRZ9Awtxw2TDFmK\"]},\"src/lib/Math.sol\":{\"keccak256\":\"0x9011dcd46af40bd23344240e7a9535cd0eb9dab637a3e7c81333e837071ed64f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c0d54cec48e2a1d4ed65e26fa04e0eeb712ad8b6707d4c79a8d600e69e39b4a8\",\"dweb:/ipfs/QmUrJVytg1g6ixzynY7Mp2SiH6NFrgBtMNWG7YHS2Sx7oW\"]},\"src/lib/PRBMath.sol\":{\"keccak256\":\"0x9adb90635cbd067f1d25b2979c8816564ea1018dbbbd0d865ac5e4b29d6d9bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e55f9be29babfd960a697723aaa4f9142dc3d00251eda8e4853ddb65be70cb9\",\"dweb:/ipfs/QmdoV8yDxLFHhyKb8HFRzLjmEopyfMC1rX8iyiePSEFc97\"]},\"src/lib/SwapMath.sol\":{\"keccak256\":\"0x5d695a120dc9c31a67db89693b5d6689598a7b023457d86264deb4b8078330b9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5589156f6e8bf0d81a56de90198542681dae02b348d22caeab3ec57fad02d597\",\"dweb:/ipfs/QmYHRqxS9vee3FUVyDNUdrKWhf87zrwFjLk2fQnzeL615C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/Tick.sol": {
				"Tick": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/Tick.sol\":63:697  library Tick {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/Tick.sol\":63:697  library Tick {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205b93848c86b17124649bb4b05a857e046de6b254e33b697a2e217de32c1503ae64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205b93848c86b17124649bb4b05a857e046de6b254e33b697a2e217de32c1503ae64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST SWAP4 DUP5 DUP13 DUP7 0xB1 PUSH18 0x24649BB4B05A857E046DE6B254E33B697A2E 0x21 PUSH30 0xE32C1503AE64736F6C634300081E00330000000000000000000000000000 ",
							"sourceMap": "63:634:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205b93848c86b17124649bb4b05a857e046de6b254e33b697a2e217de32c1503ae64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST SWAP4 DUP5 DUP13 DUP7 0xB1 PUSH18 0x24649BB4B05A857E046DE6B254E33B697A2E 0x21 PUSH30 0xE32C1503AE64736F6C634300081E00330000000000000000000000000000 ",
							"sourceMap": "63:634:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"update(mapping(int24 => struct Tick.Info storage ref),int24,uint128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 63,
									"end": 697,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b93848c86b17124649bb4b05a857e046de6b254e33b697a2e217de32c1503ae64736f6c634300081e0033",
									".code": [
										{
											"begin": 63,
											"end": 697,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 63,
											"end": 697,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 63,
											"end": 697,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 63,
											"end": 697,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 63,
											"end": 697,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 63,
											"end": 697,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 63,
											"end": 697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 63,
											"end": 697,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Tick.sol\":\"Tick\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/Tick.sol\":{\"keccak256\":\"0x35a4d5dc0146b72ed1e530c16d691fa841d2edd786336adea1a306e698bc381a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1d17f41a71529f5eccf9c3af0a8d4693049950a7f46f6c5c97db70fd14d866cf\",\"dweb:/ipfs/QmcUjNxYXpBMErZpxF65XeA2fVg6R9sPy6gFGZEEcFR9Ud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/TickBitmap.sol": {
				"TickBitmap": {
					"abi": [],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/TickBitmap.sol\":331:4155  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/TickBitmap.sol\":331:4155  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212207973bd7114730004733e60dc9c8e414f4d4dc602adfa5abbb2464cc80fdda30064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207973bd7114730004733e60dc9c8e414f4d4dc602adfa5abbb2464cc80fdda30064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x73BD7114730004733E60DC9C8E414F4D4DC602ADFA5ABBB2464C 0xC8 0xF 0xDD LOG3 STOP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "331:3824:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207973bd7114730004733e60dc9c8e414f4d4dc602adfa5abbb2464cc80fdda30064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x73BD7114730004733E60DC9C8E414F4D4DC602ADFA5ABBB2464C 0xC8 0xF 0xDD LOG3 STOP PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "331:3824:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"flipTick(mapping(int16 => uint256),int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256),int24,int24,bool)": "infinite",
								"position(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 331,
									"end": 4155,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207973bd7114730004733e60dc9c8e414f4d4dc602adfa5abbb2464cc80fdda30064736f6c634300081e0033",
									".code": [
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 4155,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/BitMath.sol\":{\"keccak256\":\"0x7a2051864fa0e8705564bde430557a6e9bc6d7765551f1a3b6ef8c8604eee313\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://28e81d5a4f36365c170097e7c5f208fcef3ceb87d082bf79450e69a678cd0c78\",\"dweb:/ipfs/QmNrHt2Vw2iLQ7JNRsVafYnaJqxxDSHUCQ8W9wMxosheRV\"]},\"src/lib/TickBitmap.sol\":{\"keccak256\":\"0xa430211db40b0cf69be4f166c7764ac3d2ab3a494ebfdec27d1d3e69bd961d1c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://12ed04d4d2ef0939d532a400f6a3e8dddbad71f9938f1caccd624f463e70296a\",\"dweb:/ipfs/Qmcpf15LJRtGFT81KR2unB3YLKaUF5naiSJkiDYtqnFpfD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				}
			},
			"src/lib/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/TickMath.sol\":306:8645  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/TickMath.sol\":306:8645  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220060cf9530af2d81566adda729a18d3613826b4c7b46103037fc2ae48f22bd8a164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220060cf9530af2d81566adda729a18d3613826b4c7b46103037fc2ae48f22bd8a164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC EXTDELEGATECALL MSTORE8 EXP CALLCODE 0xD8 ISZERO PUSH7 0xADDA729A18D361 CODESIZE 0x26 0xB4 0xC7 0xB4 PUSH2 0x303 PUSH32 0xC2AE48F22BD8A164736F6C634300081E00330000000000000000000000000000 ",
							"sourceMap": "306:8339:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220060cf9530af2d81566adda729a18d3613826b4c7b46103037fc2ae48f22bd8a164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC EXTDELEGATECALL MSTORE8 EXP CALLCODE 0xD8 ISZERO PUSH7 0xADDA729A18D361 CODESIZE 0x26 0xB4 0xC7 0xB4 PUSH2 0x303 PUSH32 0xC2AE48F22BD8A164736F6C634300081E00330000000000000000000000000000 ",
							"sourceMap": "306:8339:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 306,
									"end": 8645,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220060cf9530af2d81566adda729a18d3613826b4c7b46103037fc2ae48f22bd8a164736f6c634300081e0033",
									".code": [
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 8645,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/FixedPoint96.sol",
								"src/lib/Math.sol",
								"src/lib/PRBMath.sol",
								"src/lib/Position.sol",
								"src/lib/SwapMath.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"src/lib/TickMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/TickMath.sol\":{\"keccak256\":\"0x66bbfe54186fc7cc57565dbb20889526579a661c7971f7d4276bd7a600acbe81\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5bf2d491cd7ad9c8325715ad81245f0bb36e178b53e3acd1424af01ec09c48a7\",\"dweb:/ipfs/QmfXyEWsYun2KLtZALaN7HRGUxViEzr2gWkvGULWTtnRAt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/UniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "src/UniswapV3Pool.sol",
					"exportedSymbols": {
						"BitMath": [
							1175
						],
						"FixedPoint96": [
							1186
						],
						"IERC20": [
							749
						],
						"IUniswapV3MintCallback": [
							763
						],
						"IUniswapV3PoolEvents": [
							896
						],
						"IUniswapV3SwapCallback": [
							777
						],
						"Math": [
							1456
						],
						"PRBMath": [
							1643
						],
						"Position": [
							1706
						],
						"SwapMath": [
							1774
						],
						"Tick": [
							1846
						],
						"TickBitmap": [
							2119
						],
						"TickMath": [
							2657
						],
						"UniswapV3Pool": [
							677
						]
					},
					"id": 678,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "src/lib/Math.sol",
							"file": "./lib/Math.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 1457,
							"src": "61:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/Position.sol",
							"file": "./lib/Position.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 1707,
							"src": "87:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/Tick.sol",
							"file": "./lib/Tick.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 1847,
							"src": "117:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/TickBitmap.sol",
							"file": "./lib/TickBitmap.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 2120,
							"src": "143:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/TickMath.sol",
							"file": "./lib/TickMath.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 2658,
							"src": "175:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/SwapMath.sol",
							"file": "./lib/SwapMath.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 1775,
							"src": "205:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/callback/IUniswapV3MintCallback.sol",
							"file": "./interfaces/callback/IUniswapV3MintCallback.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 764,
							"src": "235:58:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "./interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 778,
							"src": "295:58:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./interfaces/pool/IUniswapV3PoolEvents.sol",
							"id": 10,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 897,
							"src": "355:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 11,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 678,
							"sourceUnit": 750,
							"src": "409:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 12,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"478:20:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 896,
										"src": "478:20:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "478:20:0"
								}
							],
							"canonicalName": "UniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 677,
							"linearizedBaseContracts": [
								677,
								896
							],
							"name": "UniswapV3Pool",
							"nameLocation": "455:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 19,
									"libraryName": {
										"id": 14,
										"name": "Tick",
										"nameLocations": [
											"513:4:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1846,
										"src": "513:4:0"
									},
									"nodeType": "UsingForDirective",
									"src": "507:43:0",
									"typeName": {
										"id": 18,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 15,
											"name": "int24",
											"nodeType": "ElementaryTypeName",
											"src": "530:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"nodeType": "Mapping",
										"src": "522:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$",
											"typeString": "mapping(int24 => struct Tick.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 17,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 16,
												"name": "Tick.Info",
												"nameLocations": [
													"539:4:0",
													"544:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1781,
												"src": "539:9:0"
											},
											"referencedDeclaration": 1781,
											"src": "539:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$1781_storage_ptr",
												"typeString": "struct Tick.Info"
											}
										}
									}
								},
								{
									"global": false,
									"id": 25,
									"libraryName": {
										"id": 20,
										"name": "Position",
										"nameLocations": [
											"562:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1706,
										"src": "562:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "556:53:0",
									"typeName": {
										"id": 24,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 21,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "583:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "575:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$",
											"typeString": "mapping(bytes32 => struct Position.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 23,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 22,
												"name": "Position.Info",
												"nameLocations": [
													"594:8:0",
													"603:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1648,
												"src": "594:13:0"
											},
											"referencedDeclaration": 1648,
											"src": "594:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
												"typeString": "struct Position.Info"
											}
										}
									}
								},
								{
									"global": false,
									"id": 29,
									"libraryName": {
										"id": 26,
										"name": "Position",
										"nameLocations": [
											"621:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1706,
										"src": "621:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "615:33:0",
									"typeName": {
										"id": 28,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 27,
											"name": "Position.Info",
											"nameLocations": [
												"634:8:0",
												"643:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1648,
											"src": "634:13:0"
										},
										"referencedDeclaration": 1648,
										"src": "634:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
											"typeString": "struct Position.Info"
										}
									}
								},
								{
									"global": false,
									"id": 34,
									"libraryName": {
										"id": 30,
										"name": "TickBitmap",
										"nameLocations": [
											"660:10:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2119,
										"src": "660:10:0"
									},
									"nodeType": "UsingForDirective",
									"src": "654:47:0",
									"typeName": {
										"id": 33,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 31,
											"name": "int16",
											"nodeType": "ElementaryTypeName",
											"src": "683:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int16",
												"typeString": "int16"
											}
										},
										"nodeType": "Mapping",
										"src": "675:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
											"typeString": "mapping(int16 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 32,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "692:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									}
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "709:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 35,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "709:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "744:7:0",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 36,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "745:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 42,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "782:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "758:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 39,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "758:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "793:9:0",
										"subExpression": {
											"id": 40,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 38,
											"src": "794:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "064847d0",
									"id": 44,
									"name": "InvalidTickRange",
									"nameLocation": "817:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "833:2:0"
									},
									"src": "811:25:0"
								},
								{
									"errorSelector": "10074548",
									"id": 46,
									"name": "ZeroLiquidity",
									"nameLocation": "848:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "861:2:0"
									},
									"src": "842:22:0"
								},
								{
									"errorSelector": "098fb561",
									"id": 48,
									"name": "InsufficientInputAmount",
									"nameLocation": "876:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:2:0"
									},
									"src": "870:32:0"
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 50,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "968:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "943:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 49,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "943:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 52,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "1006:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "981:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 51,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "UniswapV3Pool.Slot0",
									"id": 57,
									"members": [
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "sqrtPriceX96",
											"nameLocation": "1116:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1108:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 53,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1108:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 56,
											"mutability": "mutable",
											"name": "tick",
											"nameLocation": "1169:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 57,
											"src": "1163:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 55,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1163:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Slot0",
									"nameLocation": "1064:5:0",
									"nodeType": "StructDefinition",
									"scope": 677,
									"src": "1057:124:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3850c7bd",
									"id": 60,
									"mutability": "mutable",
									"name": "slot0",
									"nameLocation": "1200:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "1187:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Slot0_$57_storage",
										"typeString": "struct UniswapV3Pool.Slot0"
									},
									"typeName": {
										"id": 59,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 58,
											"name": "Slot0",
											"nameLocations": [
												"1187:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 57,
											"src": "1187:5:0"
										},
										"referencedDeclaration": 57,
										"src": "1187:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Slot0_$57_storage_ptr",
											"typeString": "struct UniswapV3Pool.Slot0"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a686502",
									"id": 62,
									"mutability": "mutable",
									"name": "liquidity",
									"nameLocation": "1260:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "1245:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 61,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "1245:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f30dba93",
									"id": 67,
									"mutability": "mutable",
									"name": "ticks",
									"nameLocation": "1334:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "1299:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$",
										"typeString": "mapping(int24 => struct Tick.Info)"
									},
									"typeName": {
										"id": 66,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 63,
											"name": "int24",
											"nodeType": "ElementaryTypeName",
											"src": "1307:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"nodeType": "Mapping",
										"src": "1299:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$",
											"typeString": "mapping(int24 => struct Tick.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 65,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 64,
												"name": "Tick.Info",
												"nameLocations": [
													"1316:4:0",
													"1321:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1781,
												"src": "1316:9:0"
											},
											"referencedDeclaration": 1781,
											"src": "1316:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$1781_storage_ptr",
												"typeString": "struct Tick.Info"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5339c296",
									"id": 71,
									"mutability": "mutable",
									"name": "tickBitmap",
									"nameLocation": "1400:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "1367:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
										"typeString": "mapping(int16 => uint256)"
									},
									"typeName": {
										"id": 70,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 68,
											"name": "int16",
											"nodeType": "ElementaryTypeName",
											"src": "1375:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int16",
												"typeString": "int16"
											}
										},
										"nodeType": "Mapping",
										"src": "1367:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
											"typeString": "mapping(int16 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 69,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1384:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "514ea4bf",
									"id": 76,
									"mutability": "mutable",
									"name": "positions",
									"nameLocation": "1479:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 677,
									"src": "1438:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$",
										"typeString": "mapping(bytes32 => struct Position.Info)"
									},
									"typeName": {
										"id": 75,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 72,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1446:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1438:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$",
											"typeString": "mapping(bytes32 => struct Position.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 74,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 73,
												"name": "Position.Info",
												"nameLocations": [
													"1457:8:0",
													"1466:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1648,
												"src": "1457:13:0"
											},
											"referencedDeclaration": 1648,
											"src": "1457:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
												"typeString": "struct Position.Info"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "UniswapV3Pool.SwapState",
									"id": 85,
									"members": [
										{
											"constant": false,
											"id": 78,
											"mutability": "mutable",
											"name": "amountSpecifiedRemaining",
											"nameLocation": "1533:24:0",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "1525:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 77,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1525:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 80,
											"mutability": "mutable",
											"name": "amountCalculated",
											"nameLocation": "1576:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "1568:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 79,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1568:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 82,
											"mutability": "mutable",
											"name": "sqrtPriceX96",
											"nameLocation": "1611:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "1603:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 81,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1603:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 84,
											"mutability": "mutable",
											"name": "tick",
											"nameLocation": "1640:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 85,
											"src": "1634:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 83,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1634:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SwapState",
									"nameLocation": "1504:9:0",
									"nodeType": "StructDefinition",
									"scope": 677,
									"src": "1497:155:0",
									"visibility": "public"
								},
								{
									"canonicalName": "UniswapV3Pool.StepState",
									"id": 96,
									"members": [
										{
											"constant": false,
											"id": 87,
											"mutability": "mutable",
											"name": "sqrtPriceStartX96",
											"nameLocation": "1696:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1688:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 86,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1688:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 89,
											"mutability": "mutable",
											"name": "nextTick",
											"nameLocation": "1730:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1724:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 88,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1724:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 91,
											"mutability": "mutable",
											"name": "sqrtPriceNextX96",
											"nameLocation": "1757:16:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1749:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 90,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1749:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 93,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1792:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1784:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 92,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1784:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1819:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "1811:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 94,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1811:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StepState",
									"nameLocation": "1667:9:0",
									"nodeType": "StructDefinition",
									"scope": 677,
									"src": "1660:176:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "1987:150:0",
										"statements": [
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 107,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 108,
														"name": "token0_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2020:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "2020:16:0"
											},
											{
												"expression": {
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 111,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2047:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 112,
														"name": "token1_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2056:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2047:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "2047:16:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "slot0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "2074:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$57_storage",
															"typeString": "struct UniswapV3Pool.Slot0 storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 117,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "2103:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 118,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "2123:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 116,
															"name": "Slot0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "2082:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Slot0_$57_storage_ptr_$",
																"typeString": "type(struct UniswapV3Pool.Slot0 storage pointer)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2089:12:0",
															"2117:4:0"
														],
														"names": [
															"sqrtPriceX96",
															"tick"
														],
														"nodeType": "FunctionCall",
														"src": "2082:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
															"typeString": "struct UniswapV3Pool.Slot0 memory"
														}
													},
													"src": "2074:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Slot0_$57_storage",
														"typeString": "struct UniswapV3Pool.Slot0 storage ref"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2074:55:0"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "token0_",
												"nameLocation": "1894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "token1_",
												"nameLocation": "1920:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1912:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1946:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1938:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 101,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1975:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "1969:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 103,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1969:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:111:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:0:0"
									},
									"scope": 677,
									"src": "1864:273:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "2378:2289:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 140,
																"name": "lowerTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2407:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 141,
																"name": "upperTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2420:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2407:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "lowerTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "2446:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 144,
																"name": "MIN_TICK",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "2458:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2446:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2407:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 147,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2483:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 148,
															"name": "MAX_TICK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "2495:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"src": "2483:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2407:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 154,
												"nodeType": "IfStatement",
												"src": "2389:151:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 151,
															"name": "InvalidTickRange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2522:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2522:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 153,
													"nodeType": "RevertStatement",
													"src": "2515:25:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 155,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2555:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2555:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "2551:39:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 158,
															"name": "ZeroLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "2575:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2575:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 160,
													"nodeType": "RevertStatement",
													"src": "2568:22:0"
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "flippedLower",
														"nameLocation": "2608:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "2603:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 162,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2603:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 169,
												"initialValue": {
													"arguments": [
														{
															"id": 166,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2636:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 167,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "2647:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 164,
															"name": "ticks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "2623:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2629:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1845,
														"src": "2623:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$_$_t_int24_$_t_uint128_$returns$_t_bool_$attached_to$_t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$_$",
															"typeString": "function (mapping(int24 => struct Tick.Info storage ref),int24,uint128) returns (bool)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2623:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2603:51:0"
											},
											{
												"assignments": [
													171
												],
												"declarations": [
													{
														"constant": false,
														"id": 171,
														"mutability": "mutable",
														"name": "flippedUpper",
														"nameLocation": "2670:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "2665:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 170,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2665:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"arguments": [
														{
															"id": 174,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2698:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 175,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "2709:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 172,
															"name": "ticks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "2685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2691:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1845,
														"src": "2685:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$_$_t_int24_$_t_uint128_$returns$_t_bool_$attached_to$_t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$_$",
															"typeString": "function (mapping(int24 => struct Tick.Info storage ref),int24,uint128) returns (bool)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2685:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2665:51:0"
											},
											{
												"condition": {
													"id": 178,
													"name": "flippedLower",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "2730:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "IfStatement",
												"src": "2727:77:0",
												"trueBody": {
													"id": 186,
													"nodeType": "Block",
													"src": "2744:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 182,
																		"name": "lowerTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 127,
																		"src": "2779:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2790:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 179,
																		"name": "tickBitmap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "2759:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2770:8:0",
																	"memberName": "flipTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1925,
																	"src": "2759:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$returns$__$attached_to$_t_mapping$_t_int16_$_t_uint256_$_$",
																		"typeString": "function (mapping(int16 => uint256),int24,int24)"
																	}
																},
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2759:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 185,
															"nodeType": "ExpressionStatement",
															"src": "2759:33:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 188,
													"name": "flippedUpper",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2817:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 197,
												"nodeType": "IfStatement",
												"src": "2814:77:0",
												"trueBody": {
													"id": 196,
													"nodeType": "Block",
													"src": "2831:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 192,
																		"name": "upperTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "2866:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2877:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 189,
																		"name": "tickBitmap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 71,
																		"src": "2846:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2857:8:0",
																	"memberName": "flipTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1925,
																	"src": "2846:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$returns$__$attached_to$_t_mapping$_t_int16_$_t_uint256_$_$",
																		"typeString": "function (mapping(int16 => uint256),int24,int24)"
																	}
																},
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2846:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 195,
															"nodeType": "ExpressionStatement",
															"src": "2846:33:0"
														}
													]
												}
											},
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2925:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "2903:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
															"typeString": "struct Position.Info"
														},
														"typeName": {
															"id": 201,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 200,
																"name": "Position.Info",
																"nameLocations": [
																	"2903:8:0",
																	"2912:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1648,
																"src": "2903:13:0"
															},
															"referencedDeclaration": 1648,
															"src": "2903:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
																"typeString": "struct Position.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 209,
												"initialValue": {
													"arguments": [
														{
															"id": 205,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "2964:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 206,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "2984:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 207,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3008:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 203,
															"name": "positions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "2936:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2946:3:0",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1679,
														"src": "2936:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$_$_t_address_$_t_int24_$_t_int24_$returns$_t_struct$_Info_$1648_storage_ptr_$attached_to$_t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$_$",
															"typeString": "function (mapping(bytes32 => struct Position.Info storage ref),address,int24,int24) view returns (struct Position.Info storage pointer)"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2936:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2903:125:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3055:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 210,
															"name": "position",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "3039:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3048:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1705,
														"src": "3039:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Info_$1648_storage_ptr_$_t_uint128_$returns$__$attached_to$_t_struct$_Info_$1648_storage_ptr_$",
															"typeString": "function (struct Position.Info storage pointer,uint128)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3039:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "3039:23:0"
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "slot0_",
														"nameLocation": "3088:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "3075:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
															"typeString": "struct UniswapV3Pool.Slot0"
														},
														"typeName": {
															"id": 217,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 216,
																"name": "Slot0",
																"nameLocations": [
																	"3075:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 57,
																"src": "3075:5:0"
															},
															"referencedDeclaration": 57,
															"src": "3075:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Slot0_$57_storage_ptr",
																"typeString": "struct UniswapV3Pool.Slot0"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"id": 219,
													"name": "slot0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 60,
													"src": "3097:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Slot0_$57_storage",
														"typeString": "struct UniswapV3Pool.Slot0 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3075:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 221,
															"name": "slot0_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3119:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
																"typeString": "struct UniswapV3Pool.Slot0 memory"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3126:4:0",
														"memberName": "tick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 56,
														"src": "3119:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 223,
														"name": "lowerTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "3133:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "3119:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 241,
																"name": "slot0_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "3366:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
																	"typeString": "struct UniswapV3Pool.Slot0 memory"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3373:4:0",
															"memberName": "tick",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "3366:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 243,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3380:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"src": "3366:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 294,
														"nodeType": "Block",
														"src": "3814:212:0",
														"statements": [
															{
																"expression": {
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 279,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 138,
																		"src": "3829:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 284,
																						"name": "lowerTick",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 127,
																						"src": "3907:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					],
																					"expression": {
																						"id": 282,
																						"name": "TickMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "3879:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_TickMath_$2657_$",
																							"typeString": "type(library TickMath)"
																						}
																					},
																					"id": 283,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3888:18:0",
																					"memberName": "getSqrtRatioAtTick",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2517,
																					"src": "3879:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																						"typeString": "function (int24) pure returns (uint160)"
																					}
																				},
																				"id": 285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3879:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 288,
																						"name": "upperTick",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 129,
																						"src": "3964:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					],
																					"expression": {
																						"id": 286,
																						"name": "TickMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "3936:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_TickMath_$2657_$",
																							"typeString": "type(library TickMath)"
																						}
																					},
																					"id": 287,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3945:18:0",
																					"memberName": "getSqrtRatioAtTick",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2517,
																					"src": "3936:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																						"typeString": "function (int24) pure returns (uint160)"
																					}
																				},
																				"id": 289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3936:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 290,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 131,
																				"src": "3993:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"expression": {
																				"id": 280,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "3839:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1456_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3844:16:0",
																			"memberName": "calcAmount1Delta",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1279,
																			"src": "3839:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3839:175:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3829:185:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 293,
																"nodeType": "ExpressionStatement",
																"src": "3829:185:0"
															}
														]
													},
													"id": 295,
													"nodeType": "IfStatement",
													"src": "3362:664:0",
													"trueBody": {
														"id": 278,
														"nodeType": "Block",
														"src": "3391:417:0",
														"statements": [
															{
																"expression": {
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 245,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 136,
																		"src": "3406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 248,
																					"name": "slot0_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 218,
																					"src": "3456:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
																						"typeString": "struct UniswapV3Pool.Slot0 memory"
																					}
																				},
																				"id": 249,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3463:12:0",
																				"memberName": "sqrtPriceX96",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "3456:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 252,
																						"name": "upperTick",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 129,
																						"src": "3522:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					],
																					"expression": {
																						"id": 250,
																						"name": "TickMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "3494:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_TickMath_$2657_$",
																							"typeString": "type(library TickMath)"
																						}
																					},
																					"id": 251,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3503:18:0",
																					"memberName": "getSqrtRatioAtTick",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2517,
																					"src": "3494:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																						"typeString": "function (int24) pure returns (uint160)"
																					}
																				},
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3494:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 254,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 131,
																				"src": "3551:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"expression": {
																				"id": 246,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "3416:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1456_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3421:16:0",
																			"memberName": "calcAmount0Delta",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1242,
																			"src": "3416:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3416:156:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3406:166:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 257,
																"nodeType": "ExpressionStatement",
																"src": "3406:166:0"
															},
															{
																"expression": {
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 258,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 138,
																		"src": "3587:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 261,
																					"name": "slot0_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 218,
																					"src": "3637:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
																						"typeString": "struct UniswapV3Pool.Slot0 memory"
																					}
																				},
																				"id": 262,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3644:12:0",
																				"memberName": "sqrtPriceX96",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "3637:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 265,
																						"name": "lowerTick",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 127,
																						"src": "3703:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					],
																					"expression": {
																						"id": 263,
																						"name": "TickMath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "3675:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_TickMath_$2657_$",
																							"typeString": "type(library TickMath)"
																						}
																					},
																					"id": 264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3684:18:0",
																					"memberName": "getSqrtRatioAtTick",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2517,
																					"src": "3675:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																						"typeString": "function (int24) pure returns (uint160)"
																					}
																				},
																				"id": 266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3675:38:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 267,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 131,
																				"src": "3732:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"expression": {
																				"id": 259,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "3597:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1456_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3602:16:0",
																			"memberName": "calcAmount1Delta",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1279,
																			"src": "3597:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3597:156:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3587:166:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 270,
																"nodeType": "ExpressionStatement",
																"src": "3587:166:0"
															},
															{
																"expression": {
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 271,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "3768:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 274,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 131,
																				"src": "3789:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3781:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 272,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "3781:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3781:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3768:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 277,
																"nodeType": "ExpressionStatement",
																"src": "3768:28:0"
															}
														]
													}
												},
												"id": 296,
												"nodeType": "IfStatement",
												"src": "3115:911:0",
												"trueBody": {
													"id": 240,
													"nodeType": "Block",
													"src": "3144:212:0",
													"statements": [
														{
															"expression": {
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 225,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 136,
																	"src": "3159:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 230,
																					"name": "lowerTick",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 127,
																					"src": "3237:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				],
																				"expression": {
																					"id": 228,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2657,
																					"src": "3209:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$2657_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3218:18:0",
																				"memberName": "getSqrtRatioAtTick",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2517,
																				"src": "3209:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																					"typeString": "function (int24) pure returns (uint160)"
																				}
																			},
																			"id": 231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3209:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 234,
																					"name": "upperTick",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 129,
																					"src": "3294:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				],
																				"expression": {
																					"id": 232,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2657,
																					"src": "3266:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$2657_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3275:18:0",
																				"memberName": "getSqrtRatioAtTick",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2517,
																				"src": "3266:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																					"typeString": "function (int24) pure returns (uint160)"
																				}
																			},
																			"id": 235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3266:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 236,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 131,
																			"src": "3323:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"expression": {
																			"id": 226,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1456,
																			"src": "3169:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1456_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3174:16:0",
																		"memberName": "calcAmount0Delta",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1242,
																		"src": "3169:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																		}
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3169:175:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3159:185:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 239,
															"nodeType": "ExpressionStatement",
															"src": "3159:185:0"
														}
													]
												}
											},
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "balance0Before",
														"nameLocation": "4046:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "4038:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 297,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 299,
												"nodeType": "VariableDeclarationStatement",
												"src": "4038:22:0"
											},
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "balance1Before",
														"nameLocation": "4079:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 370,
														"src": "4071:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4071:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"nodeType": "VariableDeclarationStatement",
												"src": "4071:22:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 303,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "4108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4118:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4108:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "4104:44:0",
												"trueBody": {
													"expression": {
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 306,
															"name": "balance0Before",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 298,
															"src": "4121:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 307,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "4138:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4138:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4121:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 310,
													"nodeType": "ExpressionStatement",
													"src": "4121:27:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 312,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4163:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4173:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4163:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 320,
												"nodeType": "IfStatement",
												"src": "4159:44:0",
												"trueBody": {
													"expression": {
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 315,
															"name": "balance1Before",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "4176:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 316,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4193:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4193:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4176:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 319,
													"nodeType": "ExpressionStatement",
													"src": "4176:27:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "4285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 327,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 328,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4329:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 322,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4237:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4241:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4237:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 321,
																"name": "IUniswapV3MintCallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "4214:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3MintCallback_$763_$",
																	"typeString": "type(contract IUniswapV3MintCallback)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4214:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3MintCallback_$763",
																"typeString": "contract IUniswapV3MintCallback"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4249:21:0",
														"memberName": "uniswapV3MintCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 762,
														"src": "4214:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,bytes memory) external"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4214:130:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 331,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "4359:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4369:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4359:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 334,
																"name": "balance0Before",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "4374:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 335,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "4391:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4374:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 337,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "4401:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4401:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4374:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4359:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 344,
												"nodeType": "IfStatement",
												"src": "4355:103:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 341,
															"name": "InsufficientInputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "4433:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4433:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 343,
													"nodeType": "RevertStatement",
													"src": "4426:32:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 345,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4473:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4483:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4473:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "balance1Before",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "4488:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 349,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "4505:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4488:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 351,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4515:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4515:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4488:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4473:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "4469:103:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 355,
															"name": "InsufficientInputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "4547:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4547:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 357,
													"nodeType": "RevertStatement",
													"src": "4540:32:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 360,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4593:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4597:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4593:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "4605:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "4612:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 364,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "4623:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 365,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4634:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 366,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "4642:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 367,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "4651:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 359,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "4588:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,int24,int24,uint128,uint256,uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4588:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "EmitStatement",
												"src": "4583:76:0"
											}
										]
									},
									"functionSelector": "3c8a7d8d",
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2168:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2191:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2183:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "lowerTick",
												"nameLocation": "2213:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 126,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2207:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "upperTick",
												"nameLocation": "2239:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2233:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 128,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2233:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2267:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2259:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 130,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2299:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2284:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 132,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2284:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2172:153:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2352:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2344:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:34:0"
									},
									"scope": 677,
									"src": "2159:2508:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "4982:2869:0",
										"statements": [
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "slot0_",
														"nameLocation": "5006:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "4993:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
															"typeString": "struct UniswapV3Pool.Slot0"
														},
														"typeName": {
															"id": 387,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 386,
																"name": "Slot0",
																"nameLocations": [
																	"4993:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 57,
																"src": "4993:5:0"
															},
															"referencedDeclaration": 57,
															"src": "4993:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Slot0_$57_storage_ptr",
																"typeString": "struct UniswapV3Pool.Slot0"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"id": 389,
													"name": "slot0",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 60,
													"src": "5015:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Slot0_$57_storage",
														"typeString": "struct UniswapV3Pool.Slot0 storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4993:27:0"
											},
											{
												"assignments": [
													393
												],
												"declarations": [
													{
														"constant": false,
														"id": 393,
														"mutability": "mutable",
														"name": "state",
														"nameLocation": "5050:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "5033:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
															"typeString": "struct UniswapV3Pool.SwapState"
														},
														"typeName": {
															"id": 392,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 391,
																"name": "SwapState",
																"nameLocations": [
																	"5033:9:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 85,
																"src": "5033:9:0"
															},
															"referencedDeclaration": 85,
															"src": "5033:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapState_$85_storage_ptr",
																"typeString": "struct UniswapV3Pool.SwapState"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"arguments": [
														{
															"id": 395,
															"name": "amountSpecified",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "5109:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5157:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 397,
																"name": "slot0_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "5187:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
																	"typeString": "struct UniswapV3Pool.Slot0 memory"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5194:12:0",
															"memberName": "sqrtPriceX96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "5187:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 399,
																"name": "slot0_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "5227:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
																	"typeString": "struct UniswapV3Pool.Slot0 memory"
																}
															},
															"id": 400,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5234:4:0",
															"memberName": "tick",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "5227:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 394,
														"name": "SwapState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "5058:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_SwapState_$85_storage_ptr_$",
															"typeString": "type(struct UniswapV3Pool.SwapState storage pointer)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5083:24:0",
														"5139:16:0",
														"5173:12:0",
														"5221:4:0"
													],
													"names": [
														"amountSpecifiedRemaining",
														"amountCalculated",
														"sqrtPriceX96",
														"tick"
													],
													"nodeType": "FunctionCall",
													"src": "5058:192:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
														"typeString": "struct UniswapV3Pool.SwapState memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5033:217:0"
											},
											{
												"body": {
													"id": 485,
													"nodeType": "Block",
													"src": "5306:976:0",
													"statements": [
														{
															"assignments": [
																409
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 409,
																	"mutability": "mutable",
																	"name": "step",
																	"nameLocation": "5338:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 485,
																	"src": "5321:21:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																		"typeString": "struct UniswapV3Pool.StepState"
																	},
																	"typeName": {
																		"id": 408,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 407,
																			"name": "StepState",
																			"nameLocations": [
																				"5321:9:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 96,
																			"src": "5321:9:0"
																		},
																		"referencedDeclaration": 96,
																		"src": "5321:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StepState_$96_storage_ptr",
																			"typeString": "struct UniswapV3Pool.StepState"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 410,
															"nodeType": "VariableDeclarationStatement",
															"src": "5321:21:0"
														},
														{
															"expression": {
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 411,
																		"name": "step",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "5357:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																			"typeString": "struct UniswapV3Pool.StepState memory"
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5362:17:0",
																	"memberName": "sqrtPriceStartX96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 87,
																	"src": "5357:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 414,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "5382:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																			"typeString": "struct UniswapV3Pool.SwapState memory"
																		}
																	},
																	"id": 415,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5388:12:0",
																	"memberName": "sqrtPriceX96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 82,
																	"src": "5382:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "5357:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 417,
															"nodeType": "ExpressionStatement",
															"src": "5357:43:0"
														},
														{
															"expression": {
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"expression": {
																				"id": 418,
																				"name": "step",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "5416:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																					"typeString": "struct UniswapV3Pool.StepState memory"
																				}
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "5421:8:0",
																			"memberName": "nextTick",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 89,
																			"src": "5416:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		null
																	],
																	"id": 421,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "5415:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int24_$__$",
																		"typeString": "tuple(int24,)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 424,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "5497:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																					"typeString": "struct UniswapV3Pool.SwapState memory"
																				}
																			},
																			"id": 425,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5503:4:0",
																			"memberName": "tick",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 84,
																			"src": "5497:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"hexValue": "31",
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5526:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		{
																			"id": 427,
																			"name": "zeroForOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 375,
																			"src": "5546:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 422,
																			"name": "tickBitmap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 71,
																			"src": "5435:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																				"typeString": "mapping(int16 => uint256)"
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5446:32:0",
																		"memberName": "nextInitializedTickWithinOneWord",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2118,
																		"src": "5435:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$_t_bool_$returns$_t_int24_$_t_bool_$attached_to$_t_mapping$_t_int16_$_t_uint256_$_$",
																			"typeString": "function (mapping(int16 => uint256),int24,int24,bool) view returns (int24,bool)"
																		}
																	},
																	"id": 428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5435:136:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_int24_$_t_bool_$",
																		"typeString": "tuple(int24,bool)"
																	}
																},
																"src": "5415:156:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 430,
															"nodeType": "ExpressionStatement",
															"src": "5415:156:0"
														},
														{
															"expression": {
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 431,
																		"name": "step",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "5586:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																			"typeString": "struct UniswapV3Pool.StepState memory"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5591:16:0",
																	"memberName": "sqrtPriceNextX96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 91,
																	"src": "5586:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 436,
																				"name": "step",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "5638:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																					"typeString": "struct UniswapV3Pool.StepState memory"
																				}
																			},
																			"id": 437,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5643:8:0",
																			"memberName": "nextTick",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 89,
																			"src": "5638:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"expression": {
																			"id": 434,
																			"name": "TickMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "5610:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TickMath_$2657_$",
																				"typeString": "type(library TickMath)"
																			}
																		},
																		"id": 435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5619:18:0",
																		"memberName": "getSqrtRatioAtTick",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2517,
																		"src": "5610:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5610:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "5586:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 440,
															"nodeType": "ExpressionStatement",
															"src": "5586:66:0"
														},
														{
															"expression": {
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"expression": {
																				"id": 441,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "5668:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																					"typeString": "struct UniswapV3Pool.SwapState memory"
																				}
																			},
																			"id": 443,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "5674:12:0",
																			"memberName": "sqrtPriceX96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "5668:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"expression": {
																				"id": 444,
																				"name": "step",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "5688:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																					"typeString": "struct UniswapV3Pool.StepState memory"
																				}
																			},
																			"id": 445,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "5693:8:0",
																			"memberName": "amountIn",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 93,
																			"src": "5688:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 446,
																				"name": "step",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "5703:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																					"typeString": "struct UniswapV3Pool.StepState memory"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "5708:9:0",
																			"memberName": "amountOut",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 95,
																			"src": "5703:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 448,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "5667:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint160_$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint160,uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 451,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "5786:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																					"typeString": "struct UniswapV3Pool.SwapState memory"
																				}
																			},
																			"id": 452,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5792:12:0",
																			"memberName": "sqrtPriceX96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "5786:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"expression": {
																				"id": 453,
																				"name": "step",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "5827:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																					"typeString": "struct UniswapV3Pool.StepState memory"
																				}
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5832:16:0",
																			"memberName": "sqrtPriceNextX96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 91,
																			"src": "5827:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 455,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "5871:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		{
																			"expression": {
																				"id": 456,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "5903:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																					"typeString": "struct UniswapV3Pool.SwapState memory"
																				}
																			},
																			"id": 457,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5909:24:0",
																			"memberName": "amountSpecifiedRemaining",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 78,
																			"src": "5903:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 449,
																			"name": "SwapMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1774,
																			"src": "5721:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SwapMath_$1774_$",
																				"typeString": "type(library SwapMath)"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5748:15:0",
																		"memberName": "computeSwapStep",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1773,
																		"src": "5721:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$_t_uint256_$returns$_t_uint160_$_t_uint256_$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128,uint256) pure returns (uint160,uint256,uint256)"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5721:231:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint160_$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint160,uint256,uint256)"
																	}
																},
																"src": "5667:285:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 460,
															"nodeType": "ExpressionStatement",
															"src": "5667:285:0"
														},
														{
															"expression": {
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 461,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "5967:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																			"typeString": "struct UniswapV3Pool.SwapState memory"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5973:24:0",
																	"memberName": "amountSpecifiedRemaining",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 78,
																	"src": "5967:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 464,
																		"name": "step",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6001:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																			"typeString": "struct UniswapV3Pool.StepState memory"
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6006:8:0",
																	"memberName": "amountIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 93,
																	"src": "6001:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5967:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 467,
															"nodeType": "ExpressionStatement",
															"src": "5967:47:0"
														},
														{
															"expression": {
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 468,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "6065:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																			"typeString": "struct UniswapV3Pool.SwapState memory"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6071:16:0",
																	"memberName": "amountCalculated",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 80,
																	"src": "6065:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 471,
																		"name": "step",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6091:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StepState_$96_memory_ptr",
																			"typeString": "struct UniswapV3Pool.StepState memory"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6096:9:0",
																	"memberName": "amountOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 95,
																	"src": "6091:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6065:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 474,
															"nodeType": "ExpressionStatement",
															"src": "6065:40:0"
														},
														{
															"expression": {
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 475,
																		"name": "state",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 393,
																		"src": "6178:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																			"typeString": "struct UniswapV3Pool.SwapState memory"
																		}
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "6184:4:0",
																	"memberName": "tick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 84,
																	"src": "6178:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 480,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "6219:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																					"typeString": "struct UniswapV3Pool.SwapState memory"
																				}
																			},
																			"id": 481,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6225:12:0",
																			"memberName": "sqrtPriceX96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "6219:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"expression": {
																			"id": 478,
																			"name": "TickMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "6191:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TickMath_$2657_$",
																				"typeString": "type(library TickMath)"
																			}
																		},
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6200:18:0",
																		"memberName": "getTickAtSqrtRatio",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2656,
																		"src": "6191:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$returns$_t_int24_$",
																			"typeString": "function (uint160) pure returns (int24)"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6191:47:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "6178:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 484,
															"nodeType": "ExpressionStatement",
															"src": "6178:60:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 403,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "5270:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																"typeString": "struct UniswapV3Pool.SwapState memory"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5276:24:0",
														"memberName": "amountSpecifiedRemaining",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 78,
														"src": "5270:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5303:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5270:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 486,
												"nodeType": "WhileStatement",
												"src": "5263:1019:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 487,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "6306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																"typeString": "struct UniswapV3Pool.SwapState memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6312:4:0",
														"memberName": "tick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "6306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 489,
															"name": "slot0_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "6320:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Slot0_$57_memory_ptr",
																"typeString": "struct UniswapV3Pool.Slot0 memory"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6327:4:0",
														"memberName": "tick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 56,
														"src": "6320:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "6306:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "6302:125:0",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "6333:94:0",
													"statements": [
														{
															"expression": {
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"expression": {
																				"id": 492,
																				"name": "slot0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "6349:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Slot0_$57_storage",
																					"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																				}
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "6355:12:0",
																			"memberName": "sqrtPriceX96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 54,
																			"src": "6349:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"expression": {
																				"id": 495,
																				"name": "slot0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "6369:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Slot0_$57_storage",
																					"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																				}
																			},
																			"id": 496,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "6375:4:0",
																			"memberName": "tick",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 56,
																			"src": "6369:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "6348:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$",
																		"typeString": "tuple(uint160,int24)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"expression": {
																				"id": 498,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "6384:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																					"typeString": "struct UniswapV3Pool.SwapState memory"
																				}
																			},
																			"id": 499,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6390:12:0",
																			"memberName": "sqrtPriceX96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 82,
																			"src": "6384:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"expression": {
																				"id": 500,
																				"name": "state",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "6404:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																					"typeString": "struct UniswapV3Pool.SwapState memory"
																				}
																			},
																			"id": 501,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6410:4:0",
																			"memberName": "tick",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 84,
																			"src": "6404:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6383:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$",
																		"typeString": "tuple(uint160,int24)"
																	}
																},
																"src": "6348:67:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "6348:67:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 507,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "6440:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 508,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "6449:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 509,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6439:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
															"typeString": "tuple(int256,int256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 510,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "6460:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"components": [
																{
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "6661:31:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 527,
																					"name": "state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "6669:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																						"typeString": "struct UniswapV3Pool.SwapState memory"
																					}
																				},
																				"id": 528,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6675:16:0",
																				"memberName": "amountCalculated",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 80,
																				"src": "6669:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6662:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 525,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6662:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6662:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 533,
																				"name": "amountSpecified",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "6718:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 534,
																					"name": "state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "6736:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																						"typeString": "struct UniswapV3Pool.SwapState memory"
																					}
																				},
																				"id": 535,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6742:24:0",
																				"memberName": "amountSpecifiedRemaining",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 78,
																				"src": "6736:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6718:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6711:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 531,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6711:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6711:56:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 538,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6642:140:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																"typeString": "tuple(int256,int256)"
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "6460:322:0",
														"trueExpression": {
															"components": [
																{
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 513,
																				"name": "amountSpecified",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "6512:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"id": 514,
																					"name": "state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "6530:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																						"typeString": "struct UniswapV3Pool.SwapState memory"
																					}
																				},
																				"id": 515,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6536:24:0",
																				"memberName": "amountSpecifiedRemaining",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 78,
																				"src": "6530:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6512:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6505:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 511,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6505:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6505:56:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																{
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "6580:31:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 520,
																					"name": "state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 393,
																					"src": "6588:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_SwapState_$85_memory_ptr",
																						"typeString": "struct UniswapV3Pool.SwapState memory"
																					}
																				},
																				"id": 521,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6594:16:0",
																				"memberName": "amountCalculated",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 80,
																				"src": "6588:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6581:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 518,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6581:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6581:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 524,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6486:140:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																"typeString": "tuple(int256,int256)"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
															"typeString": "tuple(int256,int256)"
														}
													},
													"src": "6439:343:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "6439:343:0"
											},
											{
												"condition": {
													"id": 542,
													"name": "zeroForOne",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 375,
													"src": "6799:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "7226:409:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 588,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "7265:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "7284:8:0",
																				"subExpression": {
																					"id": 591,
																					"name": "amount0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 382,
																					"src": "7285:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7276:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 589,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7276:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7276:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 585,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 50,
																				"src": "7248:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 584,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "7241:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$749_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7241:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$749",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7256:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 698,
																	"src": "7241:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7241:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 595,
															"nodeType": "ExpressionStatement",
															"src": "7241:53:0"
														},
														{
															"assignments": [
																597
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 597,
																	"mutability": "mutable",
																	"name": "balance1Before",
																	"nameLocation": "7319:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 624,
																	"src": "7311:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 596,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7311:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 600,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 598,
																	"name": "balance1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "7336:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7336:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7311:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 606,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "7436:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"id": 607,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "7462:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"id": 608,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "7488:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 602,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7384:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7388:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "7384:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 601,
																			"name": "IUniswapV3SwapCallback",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "7361:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3SwapCallback_$777_$",
																				"typeString": "type(contract IUniswapV3SwapCallback)"
																			}
																		},
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7361:34:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$777",
																			"typeString": "contract IUniswapV3SwapCallback"
																		}
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7396:21:0",
																	"memberName": "uniswapV3SwapCallback",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 776,
																	"src": "7361:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_int256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (int256,int256,bytes memory) external"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7361:146:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 610,
															"nodeType": "ExpressionStatement",
															"src": "7361:146:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "balance1Before",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "7526:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 614,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "7551:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7543:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 612,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7543:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7543:16:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7526:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 617,
																		"name": "balance1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "7562:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7562:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7526:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 623,
															"nodeType": "IfStatement",
															"src": "7522:101:0",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 620,
																		"name": "InsufficientInputAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "7598:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7598:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 622,
																"nodeType": "RevertStatement",
																"src": "7591:32:0"
															}
														}
													]
												},
												"id": 625,
												"nodeType": "IfStatement",
												"src": "6795:840:0",
												"trueBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "6811:409:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 547,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "6850:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "6869:8:0",
																				"subExpression": {
																					"id": 550,
																					"name": "amount1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6870:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6861:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 548,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6861:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6861:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 544,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "6833:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 543,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 749,
																			"src": "6826:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$749_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6826:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$749",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6841:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 698,
																	"src": "6826:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6826:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 554,
															"nodeType": "ExpressionStatement",
															"src": "6826:53:0"
														},
														{
															"assignments": [
																556
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 556,
																	"mutability": "mutable",
																	"name": "balance0Before",
																	"nameLocation": "6904:14:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 583,
																	"src": "6896:22:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 555,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6896:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 559,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 557,
																	"name": "balance0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "6921:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6921:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6896:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 565,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "7021:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"id": 566,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "7047:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	{
																		"id": 567,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "7073:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 561,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6969:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6973:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6969:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 560,
																			"name": "IUniswapV3SwapCallback",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 777,
																			"src": "6946:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3SwapCallback_$777_$",
																				"typeString": "type(contract IUniswapV3SwapCallback)"
																			}
																		},
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6946:34:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$777",
																			"typeString": "contract IUniswapV3SwapCallback"
																		}
																	},
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6981:21:0",
																	"memberName": "uniswapV3SwapCallback",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 776,
																	"src": "6946:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_int256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (int256,int256,bytes memory) external"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6946:146:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "6946:146:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 570,
																		"name": "balance0Before",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 556,
																		"src": "7111:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 573,
																				"name": "amount0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 382,
																				"src": "7136:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7128:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 571,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7128:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7128:16:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7111:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 576,
																		"name": "balance0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "7147:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7147:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 582,
															"nodeType": "IfStatement",
															"src": "7107:101:0",
															"trueBody": {
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 579,
																		"name": "InsufficientInputAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "7183:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7183:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 581,
																"nodeType": "RevertStatement",
																"src": "7176:32:0"
															}
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 627,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7672:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7676:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7672:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "7697:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "7721:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 631,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"expression": {
																"id": 632,
																"name": "slot0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "7765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$57_storage",
																	"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7771:12:0",
															"memberName": "sqrtPriceX96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "7765:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 634,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "7798:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"id": 635,
																"name": "slot0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "7822:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$57_storage",
																	"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7828:4:0",
															"memberName": "tick",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 56,
															"src": "7822:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 626,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "7653:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_int256_$_t_int256_$_t_uint160_$_t_uint128_$_t_int24_$returns$__$",
															"typeString": "function (address,address,int256,int256,uint160,uint128,int24)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:190:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "7648:195:0"
											}
										]
									},
									"functionSelector": "80c2c6ef",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4708:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4731:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4723:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4784:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4779:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4841:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4833:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4899:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4899:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:207:0"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4952:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4945:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 381,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4945:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4968:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4961:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 383,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4961:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4944:32:0"
									},
									"scope": 677,
									"src": "4699:3152:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "7940:68:0",
										"statements": [
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 645,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "7951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 652,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7994:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$677",
																			"typeString": "contract UniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$677",
																			"typeString": "contract UniswapV3Pool"
																		}
																	],
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7986:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 650,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7986:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7986:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "7968:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 646,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "7961:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$749_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7961:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$749",
																	"typeString": "contract IERC20"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7976:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 688,
															"src": "7961:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7961:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7951:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "7951:49:0"
											}
										]
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance0",
									"nameLocation": "7889:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:2:0"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "7931:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "7923:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7922:17:0"
									},
									"scope": 677,
									"src": "7880:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "8097:68:0",
										"statements": [
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "8108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 670,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "8151:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$677",
																			"typeString": "contract UniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$677",
																			"typeString": "contract UniswapV3Pool"
																		}
																	],
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8143:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8143:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8143:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 665,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "8125:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 664,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "8118:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$749_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8118:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$749",
																	"typeString": "contract IERC20"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8133:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 688,
															"src": "8118:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8118:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8108:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "8108:49:0"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance1",
									"nameLocation": "8046:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8054:2:0"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "8088:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "8080:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:17:0"
									},
									"scope": 677,
									"src": "8037:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 678,
							"src": "446:7724:0",
							"usedErrors": [
								44,
								46,
								48
							],
							"usedEvents": [
								787,
								804,
								819,
								834,
								851,
								866,
								873,
								884,
								895
							]
						}
					],
					"src": "33:8139:0"
				},
				"id": 0
			},
			"src/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							749
						]
					},
					"id": 750,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 679,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 680,
								"nodeType": "StructuredDocumentation",
								"src": "74:134:1",
								"text": "@title Minimal ERC20 interface for Uniswap\n @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 749,
							"linearizedBaseContracts": [
								749
							],
							"name": "IERC20",
							"nameLocation": "218:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "232:203:1",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "450:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "460:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:17:1"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "500:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:9:1"
									},
									"scope": 749,
									"src": "441:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "517:336:1",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 698,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "868:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "885:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "877:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "904:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "896:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:35:1"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "930:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:6:1"
									},
									"scope": 749,
									"src": "859:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "944:253:1",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1212:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1230:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1222:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1245:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1237:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:32:1"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "1277:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:9:1"
									},
									"scope": 749,
									"src": "1203:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "1294:346:1",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1655:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1688:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1680:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:33:1"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1714:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 715,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1713:6:1"
									},
									"scope": 749,
									"src": "1646:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "1728:375:1",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 730,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2118:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2149:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2141:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2174:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2166:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2202:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2194:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:85:1"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "2234:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2234:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2233:6:1"
									},
									"scope": 749,
									"src": "2109:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "2248:372:1",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 739,
									"name": "Transfer",
									"nameLocation": "2632:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2657:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2641:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2679:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2663:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:57:1"
									},
									"src": "2626:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "2706:324:1",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 748,
									"name": "Approval",
									"nameLocation": "3042:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3067:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3051:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3090:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3074:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3107:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "3099:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:63:1"
									},
									"src": "3036:78:1"
								}
							],
							"scope": 750,
							"src": "208:2909:1",
							"usedErrors": [],
							"usedEvents": [
								739,
								748
							]
						}
					],
					"src": "46:3073:1"
				},
				"id": 1
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"ast": {
					"absolutePath": "src/interfaces/callback/IUniswapV3MintCallback.sol",
					"exportedSymbols": {
						"IUniswapV3MintCallback": [
							763
						]
					},
					"id": 764,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 751,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3MintCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 752,
								"nodeType": "StructuredDocumentation",
								"src": "74:146:2",
								"text": "@title Callback for IUniswapV3PoolActions#mint\n @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface"
							},
							"fullyImplemented": false,
							"id": 763,
							"linearizedBaseContracts": [
								763
							],
							"name": "IUniswapV3MintCallback",
							"nameLocation": "230:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "260:491:2",
										"text": "@notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\n @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n @param amount1Owed The amount of token1 due to the pool for the minted liquidity"
									},
									"functionSelector": "d3487997",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3MintCallback",
									"nameLocation": "766:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "amount0Owed",
												"nameLocation": "806:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "798:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "amount1Owed",
												"nameLocation": "836:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "828:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "873:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "858:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 758,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "858:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:97:2"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:2"
									},
									"scope": 763,
									"src": "757:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 764,
							"src": "220:677:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:853:2"
				},
				"id": 2
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "src/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							777
						]
					},
					"id": 778,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 766,
								"nodeType": "StructuredDocumentation",
								"src": "74:146:3",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "230:22:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "260:807:3",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool."
									},
									"functionSelector": "fa461e33",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1082:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1121:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1114:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 768,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1151:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1144:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 770,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1189:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1174:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 772,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1174:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:97:3"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1209:0:3"
									},
									"scope": 777,
									"src": "1073:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 778,
							"src": "220:993:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1169:3"
				},
				"id": 3
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "src/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							896
						]
					},
					"id": 897,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 780,
								"nodeType": "StructuredDocumentation",
								"src": "74:90:4",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 896,
							"linearizedBaseContracts": [
								896
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "174:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "202:347:4",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 787,
									"name": "Initialize",
									"nameLocation": "561:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "580:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "572:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 782,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "600:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "594:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 784,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "594:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:34:4"
									},
									"src": "555:51:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "614:558:4",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 804,
									"name": "Mint",
									"nameLocation": "1184:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1207:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1199:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1240:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1224:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1270:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1256:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 793,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1304:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1290:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 795,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1290:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1332:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1324:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 797,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1383:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1375:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:209:4"
									},
									"src": "1178:220:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "1406:499:4",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 819,
									"name": "Collect",
									"nameLocation": "1917:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1951:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1935:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1975:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1967:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2009:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "1995:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 810,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1995:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2043:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2029:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 812,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2029:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2071:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2063:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 814,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2097:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2089:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 816,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:187:4"
									},
									"src": "1911:201:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "2120:530:4",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 834,
									"name": "Burn",
									"nameLocation": "2662:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2677:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2723:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2709:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 823,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2709:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2757:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2743:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 825,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2785:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2777:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 827,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2810:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2802:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2836:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "2828:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:184:4"
									},
									"src": "2656:195:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2859:607:4",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 851,
									"name": "Swap",
									"nameLocation": "3478:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3509:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3493:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3542:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3526:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3569:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3562:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 840,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3594:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3587:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 842,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3587:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3620:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3612:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 844,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3651:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3643:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 846,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3677:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3671:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 848,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3671:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:206:4"
									},
									"src": "3472:217:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "3697:568:4",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 866,
									"name": "Flash",
									"nameLocation": "4277:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4309:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4293:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4342:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4326:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4370:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4362:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4396:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4388:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4422:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4414:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "4438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:176:4"
									},
									"src": "4271:188:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "4467:455:4",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 873,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4934:34:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4986:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "4979:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 868,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "5033:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "5026:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 870,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5026:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:101:4"
									},
									"src": "4928:142:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "5078:374:4",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 884,
									"name": "SetFeeProtocol",
									"nameLocation": "5464:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5485:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5479:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 875,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5479:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5508:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5502:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 877,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5502:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5531:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5525:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 879,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5525:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5554:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5548:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 881,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5548:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5478:92:4"
									},
									"src": "5458:113:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "5579:388:4",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 895,
									"name": "CollectProtocol",
									"nameLocation": "5979:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6011:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "5995:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5995:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6035:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "6019:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6054:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "6046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 890,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6071:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "6063:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 892,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5994:85:4"
									},
									"src": "5973:107:4"
								}
							],
							"scope": 897,
							"src": "164:5919:4",
							"usedErrors": [],
							"usedEvents": [
								787,
								804,
								819,
								834,
								851,
								866,
								873,
								884,
								895
							]
						}
					],
					"src": "46:6039:4"
				},
				"id": 4
			},
			"src/lib/BitMath.sol": {
				"ast": {
					"absolutePath": "src/lib/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							1175
						]
					},
					"id": 1176,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 898,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 899,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:5",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 1175,
							"linearizedBaseContracts": [
								1175
							],
							"name": "BitMath",
							"nameLocation": "195:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "742:660:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 908,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "760:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "764:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "760:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 907,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "752:14:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "781:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "786:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "781:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "IfStatement",
												"src": "777:102:5",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "823:56:5",
													"statements": [
														{
															"expression": {
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 916,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "837:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "837:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "837:9:5"
														},
														{
															"expression": {
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 920,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "860:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "865:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "860:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "860:8:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 926,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "892:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "897:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "892:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 938,
												"nodeType": "IfStatement",
												"src": "888:84:5",
												"trueBody": {
													"id": 937,
													"nodeType": "Block",
													"src": "918:54:5",
													"statements": [
														{
															"expression": {
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 929,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "932:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "938:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "932:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "932:8:5"
														},
														{
															"expression": {
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 933,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "954:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "959:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "954:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 936,
															"nodeType": "ExpressionStatement",
															"src": "954:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 939,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "985:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "990:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "985:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "981:76:5",
												"trueBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "1003:54:5",
													"statements": [
														{
															"expression": {
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 942,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1017:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1023:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1017:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 945,
															"nodeType": "ExpressionStatement",
															"src": "1017:8:5"
														},
														{
															"expression": {
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 946,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1039:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1044:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1039:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 949,
															"nodeType": "ExpressionStatement",
															"src": "1039:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 952,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1070:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1075:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1070:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "IfStatement",
												"src": "1066:72:5",
												"trueBody": {
													"id": 963,
													"nodeType": "Block",
													"src": "1084:54:5",
													"statements": [
														{
															"expression": {
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 955,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1098:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1104:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1098:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 958,
															"nodeType": "ExpressionStatement",
															"src": "1098:8:5"
														},
														{
															"expression": {
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 959,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1120:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1125:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1120:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 962,
															"nodeType": "ExpressionStatement",
															"src": "1120:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1151:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1156:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1151:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 977,
												"nodeType": "IfStatement",
												"src": "1147:68:5",
												"trueBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "1163:52:5",
													"statements": [
														{
															"expression": {
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 968,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1177:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1183:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1177:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 971,
															"nodeType": "ExpressionStatement",
															"src": "1177:7:5"
														},
														{
															"expression": {
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 972,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1198:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1203:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1198:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 975,
															"nodeType": "ExpressionStatement",
															"src": "1198:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 978,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1228:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1228:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 990,
												"nodeType": "IfStatement",
												"src": "1224:67:5",
												"trueBody": {
													"id": 989,
													"nodeType": "Block",
													"src": "1239:52:5",
													"statements": [
														{
															"expression": {
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 981,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1253:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1259:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1253:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 984,
															"nodeType": "ExpressionStatement",
															"src": "1253:7:5"
														},
														{
															"expression": {
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 985,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1274:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1279:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1274:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 988,
															"nodeType": "ExpressionStatement",
															"src": "1274:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 991,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1304:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1309:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1304:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "1300:66:5",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "1314:52:5",
													"statements": [
														{
															"expression": {
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 994,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "1328:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1334:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1328:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 997,
															"nodeType": "ExpressionStatement",
															"src": "1328:7:5"
														},
														{
															"expression": {
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 998,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 905,
																	"src": "1349:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1354:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1349:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1001,
															"nodeType": "ExpressionStatement",
															"src": "1349:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1004,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1379:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1384:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1379:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "IfStatement",
												"src": "1375:20:5",
												"trueBody": {
													"expression": {
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1007,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "1389:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1389:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1010,
													"nodeType": "ExpressionStatement",
													"src": "1389:6:5"
												}
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "209:457:5",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "680:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "707:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "699:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:11:5"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "739:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "733:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 904,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "733:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:9:5"
									},
									"scope": 1175,
									"src": "671:731:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "1965:822:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1983:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1987:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1983:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "1975:14:5"
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1027,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2000:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2004:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "2000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "2000:7:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1031,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2021:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2030:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1033,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2030:7:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 1032,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2025:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2025:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2039:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2025:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "2021:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2045:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2021:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1049,
													"nodeType": "Block",
													"src": "2087:34:5",
													"statements": [
														{
															"expression": {
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1045,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2101:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2107:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2101:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1048,
															"nodeType": "ExpressionStatement",
															"src": "2101:9:5"
														}
													]
												},
												"id": 1050,
												"nodeType": "IfStatement",
												"src": "2017:104:5",
												"trueBody": {
													"id": 1044,
													"nodeType": "Block",
													"src": "2048:33:5",
													"statements": [
														{
															"expression": {
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1040,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2062:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2067:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2062:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1043,
															"nodeType": "ExpressionStatement",
															"src": "2062:8:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1051,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2134:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2143:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 1053,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2143:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 1052,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2138:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2138:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2151:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2138:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2134:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2157:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2134:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1069,
													"nodeType": "Block",
													"src": "2198:33:5",
													"statements": [
														{
															"expression": {
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1065,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2212:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2218:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2212:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1068,
															"nodeType": "ExpressionStatement",
															"src": "2212:8:5"
														}
													]
												},
												"id": 1070,
												"nodeType": "IfStatement",
												"src": "2130:101:5",
												"trueBody": {
													"id": 1064,
													"nodeType": "Block",
													"src": "2160:32:5",
													"statements": [
														{
															"expression": {
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1060,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2174:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2179:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2174:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1063,
															"nodeType": "ExpressionStatement",
															"src": "2174:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1071,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2244:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2253:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 1073,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2253:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 1072,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2248:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2248:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2261:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2248:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2244:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2267:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2244:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1089,
													"nodeType": "Block",
													"src": "2308:33:5",
													"statements": [
														{
															"expression": {
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1085,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2322:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2328:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2322:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1088,
															"nodeType": "ExpressionStatement",
															"src": "2322:8:5"
														}
													]
												},
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "2240:101:5",
												"trueBody": {
													"id": 1084,
													"nodeType": "Block",
													"src": "2270:32:5",
													"statements": [
														{
															"expression": {
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1080,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2284:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2289:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2284:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1083,
															"nodeType": "ExpressionStatement",
															"src": "2284:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1091,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2354:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2363:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1093,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "2363:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 1092,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2358:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2358:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2371:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2358:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2354:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2377:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2354:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "2418:33:5",
													"statements": [
														{
															"expression": {
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1105,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2432:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2438:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2432:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1108,
															"nodeType": "ExpressionStatement",
															"src": "2432:8:5"
														}
													]
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "2350:101:5",
												"trueBody": {
													"id": 1104,
													"nodeType": "Block",
													"src": "2380:32:5",
													"statements": [
														{
															"expression": {
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1100,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2394:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2399:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2394:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1103,
															"nodeType": "ExpressionStatement",
															"src": "2394:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1111,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2464:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2473:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1113,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2473:5:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 1112,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2468:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2468:11:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2480:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2468:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2464:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2486:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2464:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "2526:32:5",
													"statements": [
														{
															"expression": {
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1125,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2540:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2546:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2540:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1128,
															"nodeType": "ExpressionStatement",
															"src": "2540:7:5"
														}
													]
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "2460:98:5",
												"trueBody": {
													"id": 1124,
													"nodeType": "Block",
													"src": "2489:31:5",
													"statements": [
														{
															"expression": {
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1120,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2503:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2508:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2503:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1123,
															"nodeType": "ExpressionStatement",
															"src": "2503:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1131,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2571:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2575:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "2571:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2581:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2571:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1145,
													"nodeType": "Block",
													"src": "2621:32:5",
													"statements": [
														{
															"expression": {
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1141,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2635:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2641:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2635:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1144,
															"nodeType": "ExpressionStatement",
															"src": "2635:7:5"
														}
													]
												},
												"id": 1146,
												"nodeType": "IfStatement",
												"src": "2567:86:5",
												"trueBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "2584:31:5",
													"statements": [
														{
															"expression": {
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1136,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2598:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2603:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2598:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1139,
															"nodeType": "ExpressionStatement",
															"src": "2598:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1147,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2666:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2670:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "2666:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2676:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2666:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "2716:32:5",
													"statements": [
														{
															"expression": {
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1157,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2730:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2736:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2730:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1160,
															"nodeType": "ExpressionStatement",
															"src": "2730:7:5"
														}
													]
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "2662:86:5",
												"trueBody": {
													"id": 1156,
													"nodeType": "Block",
													"src": "2679:31:5",
													"statements": [
														{
															"expression": {
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1152,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "2693:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2698:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2693:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1155,
															"nodeType": "ExpressionStatement",
															"src": "2693:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1163,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2761:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "2761:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2771:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2761:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "2757:23:5",
												"trueBody": {
													"expression": {
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1168,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "2774:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2779:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2774:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1171,
													"nodeType": "ExpressionStatement",
													"src": "2774:6:5"
												}
											}
										]
									},
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "1408:480:5",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nameLocation": "1902:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1930:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1922:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1922:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:11:5"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1962:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1956:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1018,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1956:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:9:5"
									},
									"scope": 1175,
									"src": "1893:894:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1176,
							"src": "187:2602:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2744:5"
				},
				"id": 5
			},
			"src/lib/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "src/lib/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							1186
						]
					},
					"id": 1187,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPoint96",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1186,
							"linearizedBaseContracts": [
								1186
							],
							"name": "FixedPoint96",
							"nameLocation": "79:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1180,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nameLocation": "122:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1186,
									"src": "98:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1178,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "98:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 1179,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "135:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1185,
									"mutability": "constant",
									"name": "Q96",
									"nameLocation": "169:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1186,
									"src": "143:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1181,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "143:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"id": 1184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 1182,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "175:1:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3936",
											"id": 1183,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "178:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_96_by_1",
												"typeString": "int_const 96"
											},
											"value": "96"
										},
										"src": "175:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 1187,
							"src": "71:112:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:139:6"
				},
				"id": 6
			},
			"src/lib/Math.sol": {
				"ast": {
					"absolutePath": "src/lib/Math.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							1186
						],
						"Math": [
							1456
						],
						"PRBMath": [
							1643
						]
					},
					"id": 1457,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:7"
						},
						{
							"absolutePath": "src/lib/FixedPoint96.sol",
							"file": "./FixedPoint96.sol",
							"id": 1189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1187,
							"src": "63:28:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/PRBMath.sol",
							"file": "./PRBMath.sol",
							"id": 1190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1644,
							"src": "92:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1456,
							"linearizedBaseContracts": [
								1456
							],
							"name": "Math",
							"nameLocation": "125:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "406:424:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1202,
														"name": "sqrtPriceAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "420:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1203,
														"name": "sqrtPriceBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "436:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "420:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "416:110:7",
												"trueBody": {
													"expression": {
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1205,
																	"name": "sqrtPriceAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "464:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1206,
																	"name": "sqrtPriceBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "479:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1207,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "463:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1208,
																	"name": "sqrtPriceBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "497:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1209,
																	"name": "sqrtPriceAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "512:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1210,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "496:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "463:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1212,
													"nodeType": "ExpressionStatement",
													"src": "463:63:7"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1215,
																"name": "sqrtPriceAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "545:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "561:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "545:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "537:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "537:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "537:26:7"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "574:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1225,
																							"name": "liquidity",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1197,
																							"src": "654:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint128",
																								"typeString": "uint128"
																							}
																						],
																						"id": 1224,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "646:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1223,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "646:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1226,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "646:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"expression": {
																						"id": 1227,
																						"name": "FixedPoint96",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1186,
																						"src": "668:12:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1186_$",
																							"typeString": "type(library FixedPoint96)"
																						}
																					},
																					"id": 1228,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "681:10:7",
																					"memberName": "RESOLUTION",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1180,
																					"src": "668:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "646:45:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1230,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "645:47:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				"id": 1233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1231,
																					"name": "sqrtPriceBX96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1195,
																					"src": "711:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1232,
																					"name": "sqrtPriceAX96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1193,
																					"src": "727:13:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"src": "711:29:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			}
																		],
																		"id": 1234,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "710:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 1235,
																		"name": "sqrtPriceBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "759:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1222,
																	"name": "mulDivRoundingUp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "611:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "611:175:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1237,
																"name": "sqrtPriceAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "800:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1221,
															"name": "divRoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "584:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "584:239:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "574:249:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "574:249:7"
											}
										]
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "136:104:7",
										"text": "@notice Calculates amount0 delta between two prices\n TODO: round down when removing liquidity"
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAmount0Delta",
									"nameLocation": "254:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "sqrtPriceAX96",
												"nameLocation": "288:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "280:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1192,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "sqrtPriceBX96",
												"nameLocation": "319:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "311:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1194,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "350:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "342:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1196,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:95:7"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "397:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "389:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:7"
									},
									"scope": 1456,
									"src": "245:585:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "1106:272:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1254,
														"name": "sqrtPriceAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "1120:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1255,
														"name": "sqrtPriceBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "1136:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1120:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "IfStatement",
												"src": "1116:110:7",
												"trueBody": {
													"expression": {
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1257,
																	"name": "sqrtPriceAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "1164:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1258,
																	"name": "sqrtPriceBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1247,
																	"src": "1179:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1259,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "1163:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1260,
																	"name": "sqrtPriceBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1247,
																	"src": "1197:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1261,
																	"name": "sqrtPriceAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "1212:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 1262,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1196:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "1163:63:7",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1264,
													"nodeType": "ExpressionStatement",
													"src": "1163:63:7"
												}
											},
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1266,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "1237:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1268,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "1277:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1269,
																			"name": "sqrtPriceBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1247,
																			"src": "1301:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1270,
																			"name": "sqrtPriceAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "1317:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "1301:29:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1300:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"expression": {
																	"id": 1273,
																	"name": "FixedPoint96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "1345:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1186_$",
																		"typeString": "type(library FixedPoint96)"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1358:3:7",
																"memberName": "Q96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1185,
																"src": "1345:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1267,
															"name": "mulDivRoundingUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "1247:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1247:124:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1237:134:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "1237:134:7"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "836:104:7",
										"text": "@notice Calculates amount1 delta between two prices\n TODO: round down when removing liquidity"
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calcAmount1Delta",
									"nameLocation": "954:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "sqrtPriceAX96",
												"nameLocation": "988:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "980:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1244,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "sqrtPriceBX96",
												"nameLocation": "1019:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1011:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1246,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1050:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1042:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1248,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:95:7"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1097:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1089:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1088:17:7"
									},
									"scope": 1456,
									"src": "945:433:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "1582:346:7",
										"statements": [
											{
												"expression": {
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "sqrtPriceNextX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "1592:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"id": 1293,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "1611:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"arguments": [
																{
																	"id": 1300,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "1842:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1301,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1872:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																{
																	"id": 1302,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "1899:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1299,
																"name": "getNextSqrtPriceFromAmount1RoundingDown",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "1785:39:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$returns$_t_uint160_$",
																	"typeString": "function (uint160,uint128,uint256) pure returns (uint160)"
																}
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1785:136:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "1611:310:7",
														"trueExpression": {
															"arguments": [
																{
																	"id": 1295,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "1691:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 1296,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "1721:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																{
																	"id": 1297,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "1748:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1294,
																"name": "getNextSqrtPriceFromAmount0RoundingUp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "1636:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$returns$_t_uint160_$",
																	"typeString": "function (uint160,uint128,uint256) pure returns (uint160)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:134:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1592:329:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "1592:329:7"
											}
										]
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromInput",
									"nameLocation": "1393:25:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1436:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1428:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1280,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1466:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1458:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1282,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1493:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1485:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "1516:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1511:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1511:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1418:114:7"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "sqrtPriceNextX96",
												"nameLocation": "1564:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "1556:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1289,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1556:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:26:7"
									},
									"scope": 1456,
									"src": "1384:544:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "2102:719:7",
										"statements": [
											{
												"assignments": [
													1320
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "2120:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "2112:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2112:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1328,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1323,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1312,
																"src": "2140:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2132:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1321,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2132:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2132:18:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"expression": {
															"id": 1325,
															"name": "FixedPoint96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "2154:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1186_$",
																"typeString": "type(library FixedPoint96)"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2167:10:7",
														"memberName": "RESOLUTION",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "2154:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "2132:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2112:65:7"
											},
											{
												"assignments": [
													1330
												],
												"declarations": [
													{
														"constant": false,
														"id": 1330,
														"mutability": "mutable",
														"name": "product",
														"nameLocation": "2195:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "2187:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2187:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1334,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1331,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "2205:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1332,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "2216:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2205:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2187:41:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1335,
															"name": "product",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "2308:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1336,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "2318:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2308:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1338,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "2330:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2308:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1361,
												"nodeType": "IfStatement",
												"src": "2304:318:7",
												"trueBody": {
													"id": 1360,
													"nodeType": "Block",
													"src": "2344:278:7",
													"statements": [
														{
															"assignments": [
																1341
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1341,
																	"mutability": "mutable",
																	"name": "denominator",
																	"nameLocation": "2366:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1360,
																	"src": "2358:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1340,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2358:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1345,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1342,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "2380:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1343,
																	"name": "product",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "2392:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2380:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2358:41:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1346,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "2417:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1347,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "2432:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2417:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1359,
															"nodeType": "IfStatement",
															"src": "2413:199:7",
															"trueBody": {
																"id": 1358,
																"nodeType": "Block",
																"src": "2443:169:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1352,
																							"name": "numerator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1320,
																							"src": "2538:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1353,
																							"name": "sqrtPriceX96",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1310,
																							"src": "2549:12:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							}
																						},
																						{
																							"id": 1354,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1341,
																							"src": "2563:11:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint160",
																								"typeString": "uint160"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1351,
																						"name": "mulDivRoundingUp",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1444,
																						"src": "2521:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2521:54:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2488:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1349,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "2488:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2488:109:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"functionReturnParameters": 1318,
																		"id": 1357,
																		"nodeType": "Return",
																		"src": "2461:136:7"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1365,
																	"name": "numerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "2751:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1366,
																					"name": "numerator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1320,
																					"src": "2763:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1367,
																					"name": "sqrtPriceX96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "2775:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				},
																				"src": "2763:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1369,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2762:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1370,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1314,
																		"src": "2791:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2762:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1364,
																"name": "divRoundingUp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "2737:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2737:63:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2712:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 1362,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2712:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2712:102:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1374,
												"nodeType": "Return",
												"src": "2693:121:7"
											}
										]
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount0RoundingUp",
									"nameLocation": "1943:37:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1998:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "1990:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1309,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2028:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2020:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1311,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2055:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2047:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1980:89:7"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2093:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1316,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:9:7"
									},
									"scope": 1456,
									"src": "1934:887:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "2997:121:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1387,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "3026:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1390,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "3062:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"expression": {
																					"id": 1391,
																					"name": "FixedPoint96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1186,
																					"src": "3074:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$1186_$",
																						"typeString": "type(library FixedPoint96)"
																					}
																				},
																				"id": 1392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "3087:10:7",
																				"memberName": "RESOLUTION",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1180,
																				"src": "3074:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "3062:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1394,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3061:37:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1395,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "3101:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3061:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3053:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 1388,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3053:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3053:58:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3026:85:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1399,
												"nodeType": "Return",
												"src": "3007:104:7"
											}
										]
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextSqrtPriceFromAmount1RoundingDown",
									"nameLocation": "2836:39:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "2893:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2885:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1377,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2923:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2915:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1379,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2915:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2950:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2942:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:89:7"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "2988:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1384,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:9:7"
									},
									"scope": 1456,
									"src": "2827:291:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "3262:185:7",
										"statements": [
											{
												"expression": {
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1412,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "3272:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1415,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "3296:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1416,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "3299:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1417,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "3302:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1413,
																"name": "PRBMath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_PRBMath_$1643_$",
																	"typeString": "type(library PRBMath)"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3289:6:7",
															"memberName": "mulDiv",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1605,
															"src": "3281:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3281:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3272:42:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "3272:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1422,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "3335:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1423,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "3338:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1424,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "3341:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1421,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "3328:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3328:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3356:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1442,
												"nodeType": "IfStatement",
												"src": "3324:117:7",
												"trueBody": {
													"id": 1441,
													"nodeType": "Block",
													"src": "3359:82:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1429,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "3381:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1432,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3395:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1431,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "3395:7:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 1430,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "3390:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3390:13:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3404:3:7",
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "3390:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3381:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1428,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3373:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3373:35:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1437,
															"nodeType": "ExpressionStatement",
															"src": "3373:35:7"
														},
														{
															"expression": {
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3422:8:7",
																"subExpression": {
																	"id": 1438,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "3422:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1440,
															"nodeType": "ExpressionStatement",
															"src": "3422:8:7"
														}
													]
												}
											}
										]
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nameLocation": "3133:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3167:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3159:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3186:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3178:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3178:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3205:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3197:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3197:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3149:73:7"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3254:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3246:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3245:16:7"
									},
									"scope": 1456,
									"src": "3124:323:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "3583:173:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3602:148:7",
													"nodeType": "YulBlock",
													"src": "3602:148:7",
													"statements": [
														{
															"nativeSrc": "3616:124:7",
															"nodeType": "YulAssignment",
															"src": "3616:124:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "numerator",
																				"nativeSrc": "3651:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:7"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3662:11:7",
																				"nodeType": "YulIdentifier",
																				"src": "3662:11:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3647:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:7"
																		},
																		"nativeSrc": "3647:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3647:27:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "numerator",
																						"nativeSrc": "3699:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3699:9:7"
																					},
																					{
																						"name": "denominator",
																						"nativeSrc": "3710:11:7",
																						"nodeType": "YulIdentifier",
																						"src": "3710:11:7"
																					}
																				],
																				"functionName": {
																					"name": "mod",
																					"nativeSrc": "3695:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3695:3:7"
																				},
																				"nativeSrc": "3695:27:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3695:27:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3724:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3724:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3692:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3692:2:7"
																		},
																		"nativeSrc": "3692:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3692:34:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3626:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3626:3:7"
																},
																"nativeSrc": "3626:114:7",
																"nodeType": "YulFunctionCall",
																"src": "3626:114:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3616:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3616:6:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1448,
														"isOffset": false,
														"isSlot": false,
														"src": "3662:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1448,
														"isOffset": false,
														"isSlot": false,
														"src": "3710:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1446,
														"isOffset": false,
														"isSlot": false,
														"src": "3651:9:7",
														"valueSize": 1
													},
													{
														"declaration": 1446,
														"isOffset": false,
														"isSlot": false,
														"src": "3699:9:7",
														"valueSize": 1
													},
													{
														"declaration": 1451,
														"isOffset": false,
														"isSlot": false,
														"src": "3616:6:7",
														"valueSize": 1
													}
												],
												"id": 1453,
												"nodeType": "InlineAssembly",
												"src": "3593:157:7"
											}
										]
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divRoundingUp",
									"nameLocation": "3462:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "numerator",
												"nameLocation": "3484:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3476:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3476:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3503:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3495:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3475:40:7"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3571:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "3563:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3563:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3562:16:7"
									},
									"scope": 1456,
									"src": "3453:303:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1457,
							"src": "117:3641:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:3722:7"
				},
				"id": 7
			},
			"src/lib/PRBMath.sol": {
				"ast": {
					"absolutePath": "src/lib/PRBMath.sol",
					"exportedSymbols": {
						"PRBMath": [
							1643
						]
					},
					"id": 1644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PRBMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "61:152:8",
								"text": "@title PRBMath\n @author Paul Razvan Berg\n @notice Smart contract library for advanced fixed-point math that works with uint256 and int256."
							},
							"fullyImplemented": true,
							"id": 1643,
							"linearizedBaseContracts": [
								1643
							],
							"name": "PRBMath",
							"nameLocation": "223:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "238:57:8",
										"text": "@notice The maximum value an uint256 number can have."
									},
									"id": 1463,
									"mutability": "constant",
									"name": "MAX_UINT256",
									"nameLocation": "327:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1643,
									"src": "301:115:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1461,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "301:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
										"id": 1462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "350:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "425:56:8",
										"text": "@notice The maximum value an int256 number can have."
									},
									"id": 1467,
									"mutability": "constant",
									"name": "MAX_INT256",
									"nameLocation": "512:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1643,
									"src": "487:104:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 1465,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "487:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"hexValue": "307837464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
										"id": 1466,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "525:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9967"
										},
										"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "600:56:8",
										"text": "@notice The minimum value an int256 number can have."
									},
									"id": 1474,
									"mutability": "constant",
									"name": "MIN_INT256",
									"nameLocation": "687:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1643,
									"src": "662:109:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 1469,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "662:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const -578...(70 digits omitted)...9968"
										},
										"id": 1473,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 1471,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "UnaryOperation",
											"operator": "-",
											"prefix": true,
											"src": "700:67:8",
											"subExpression": {
												"hexValue": "307837464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646",
												"id": 1470,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "701:66:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
													"typeString": "int_const 5789...(69 digits omitted)...9967"
												},
												"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
											},
											"typeDescriptions": {
												"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
												"typeString": "int_const -578...(70 digits omitted)...9967"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 1472,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "770:1:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "700:71:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const -578...(70 digits omitted)...9968"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "780:66:8",
										"text": "@notice The scaling factor used for fixed-point numbers: 1e18."
									},
									"id": 1478,
									"mutability": "constant",
									"name": "SCALE",
									"nameLocation": "878:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1643,
									"src": "852:38:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "852:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1477,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "886:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "899:46:8",
										"text": "@notice The half scale, used for rounding."
									},
									"id": 1482,
									"mutability": "constant",
									"name": "HALF_SCALE",
									"nameLocation": "977:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1643,
									"src": "951:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1480,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "951:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35653137",
										"id": 1481,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "990:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000_by_1",
											"typeString": "int_const 500000000000000000"
										},
										"value": "5e17"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "1301:2253:8",
										"statements": [
											{
												"id": 1603,
												"nodeType": "UncheckedBlock",
												"src": "1312:2235:8",
												"statements": [
													{
														"assignments": [
															1495
														],
														"declarations": [
															{
																"constant": false,
																"id": 1495,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "1400:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1603,
																"src": "1392:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1392:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1496,
														"nodeType": "VariableDeclarationStatement",
														"src": "1392:13:8"
													},
													{
														"assignments": [
															1498
														],
														"declarations": [
															{
																"constant": false,
																"id": 1498,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "1473:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1603,
																"src": "1465:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1497,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1465:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1499,
														"nodeType": "VariableDeclarationStatement",
														"src": "1465:13:8"
													},
													{
														"AST": {
															"nativeSrc": "1548:161:8",
															"nodeType": "YulBlock",
															"src": "1548:161:8",
															"statements": [
																{
																	"nativeSrc": "1567:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1567:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1584:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1584:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "1587:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1587:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1594:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1594:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1590:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1590:3:8"
																				},
																				"nativeSrc": "1590:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1590:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "1577:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1577:6:8"
																		},
																		"nativeSrc": "1577:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "1571:2:8",
																			"nodeType": "YulTypedName",
																			"src": "1571:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1615:18:8",
																	"nodeType": "YulAssignment",
																	"src": "1615:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "1628:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1628:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "1631:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "1631:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "1624:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1624:3:8"
																		},
																		"nativeSrc": "1624:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1624:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "1615:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "1615:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "1651:43:8",
																	"nodeType": "YulAssignment",
																	"src": "1651:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "1668:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1668:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "1672:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1672:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1664:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1664:3:8"
																				},
																				"nativeSrc": "1664:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1664:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "1683:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1683:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "1687:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1687:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1680:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1680:2:8"
																				},
																				"nativeSrc": "1680:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1660:3:8"
																		},
																		"nativeSrc": "1660:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1660:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "1651:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "1651:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1495,
																"isOffset": false,
																"isSlot": false,
																"src": "1615:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1495,
																"isOffset": false,
																"isSlot": false,
																"src": "1672:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1495,
																"isOffset": false,
																"isSlot": false,
																"src": "1687:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1498,
																"isOffset": false,
																"isSlot": false,
																"src": "1651:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1485,
																"isOffset": false,
																"isSlot": false,
																"src": "1584:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1485,
																"isOffset": false,
																"isSlot": false,
																"src": "1628:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1487,
																"isOffset": false,
																"isSlot": false,
																"src": "1587:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1487,
																"isOffset": false,
																"isSlot": false,
																"src": "1631:1:8",
																"valueSize": 1
															}
														],
														"id": 1500,
														"nodeType": "InlineAssembly",
														"src": "1539:170:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1501,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "1792:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1792:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1509,
														"nodeType": "IfStatement",
														"src": "1788:77:8",
														"trueBody": {
															"id": 1508,
															"nodeType": "Block",
															"src": "1804:61:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1504,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1495,
																			"src": "1830:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1505,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "1838:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1830:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1493,
																	"id": 1507,
																	"nodeType": "Return",
																	"src": "1823:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1511,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "1946:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1512,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1498,
																		"src": "1960:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1946:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5052424d6174683a206f766572666c6f77",
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1967:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238",
																		"typeString": "literal_string \"PRBMath: overflow\""
																	},
																	"value": "PRBMath: overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ddab677a98bc6692f43cc1dc668824b42fef5667923b384ede2611b38717b238",
																		"typeString": "literal_string \"PRBMath: overflow\""
																	}
																],
																"id": 1510,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1938:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1938:49:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1516,
														"nodeType": "ExpressionStatement",
														"src": "1938:49:8"
													},
													{
														"assignments": [
															1518
														],
														"declarations": [
															{
																"constant": false,
																"id": 1518,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2257:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1603,
																"src": "2249:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1517,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2249:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1519,
														"nodeType": "VariableDeclarationStatement",
														"src": "2249:17:8"
													},
													{
														"AST": {
															"nativeSrc": "2290:179:8",
															"nodeType": "YulBlock",
															"src": "2290:179:8",
															"statements": [
																{
																	"nativeSrc": "2309:38:8",
																	"nodeType": "YulAssignment",
																	"src": "2309:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2329:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2332:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2332:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "2335:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "2335:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2322:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2322:6:8"
																		},
																		"nativeSrc": "2322:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "2309:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "2309:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2365:41:8",
																	"nodeType": "YulAssignment",
																	"src": "2365:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "2378:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "2388:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2388:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2399:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "2385:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2385:2:8"
																				},
																				"nativeSrc": "2385:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2385:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2374:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2374:3:8"
																		},
																		"nativeSrc": "2374:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2365:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2365:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2424:30:8",
																	"nodeType": "YulAssignment",
																	"src": "2424:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "2437:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2437:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "2444:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2444:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2433:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2433:3:8"
																		},
																		"nativeSrc": "2433:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2433:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2424:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2424:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1489,
																"isOffset": false,
																"isSlot": false,
																"src": "2335:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1495,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1495,
																"isOffset": false,
																"isSlot": false,
																"src": "2424:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1495,
																"isOffset": false,
																"isSlot": false,
																"src": "2437:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1498,
																"isOffset": false,
																"isSlot": false,
																"src": "2365:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1498,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1518,
																"isOffset": false,
																"isSlot": false,
																"src": "2309:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1518,
																"isOffset": false,
																"isSlot": false,
																"src": "2388:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1518,
																"isOffset": false,
																"isSlot": false,
																"src": "2444:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1485,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1487,
																"isOffset": false,
																"isSlot": false,
																"src": "2332:1:8",
																"valueSize": 1
															}
														],
														"id": 1520,
														"nodeType": "InlineAssembly",
														"src": "2281:188:8"
													},
													{
														"assignments": [
															1522
														],
														"declarations": [
															{
																"constant": false,
																"id": 1522,
																"mutability": "mutable",
																"name": "lpotdod",
																"nameLocation": "2590:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1603,
																"src": "2582:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1521,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2582:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1530,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1523,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "2600:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "2615:12:8",
																			"subExpression": {
																				"id": 1524,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1489,
																				"src": "2616:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2630:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "2615:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1528,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2614:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2600:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2582:50:8"
													},
													{
														"AST": {
															"nativeSrc": "2656:186:8",
															"nodeType": "YulBlock",
															"src": "2656:186:8",
															"statements": [
																{
																	"nativeSrc": "2675:40:8",
																	"nodeType": "YulAssignment",
																	"src": "2675:40:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "2694:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "2694:11:8"
																			},
																			{
																				"name": "lpotdod",
																				"nativeSrc": "2707:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2707:7:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2690:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2690:3:8"
																		},
																		"nativeSrc": "2690:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2690:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "2675:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "2675:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2733:28:8",
																	"nodeType": "YulAssignment",
																	"src": "2733:28:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "2746:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2746:5:8"
																			},
																			{
																				"name": "lpotdod",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2742:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:8"
																		},
																		"nativeSrc": "2742:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2742:19:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2733:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2733:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2779:48:8",
																	"nodeType": "YulAssignment",
																	"src": "2779:48:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2802:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2802:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "lpotdod",
																								"nativeSrc": "2805:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "2805:7:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2798:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2798:3:8"
																						},
																						"nativeSrc": "2798:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2798:15:8"
																					},
																					{
																						"name": "lpotdod",
																						"nativeSrc": "2815:7:8",
																						"nodeType": "YulIdentifier",
																						"src": "2815:7:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "2794:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2794:3:8"
																				},
																				"nativeSrc": "2794:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2794:29:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2825:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2825:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2790:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2790:3:8"
																		},
																		"nativeSrc": "2790:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:37:8"
																	},
																	"variableNames": [
																		{
																			"name": "lpotdod",
																			"nativeSrc": "2779:7:8",
																			"nodeType": "YulIdentifier",
																			"src": "2779:7:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1489,
																"isOffset": false,
																"isSlot": false,
																"src": "2675:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1489,
																"isOffset": false,
																"isSlot": false,
																"src": "2694:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1522,
																"isOffset": false,
																"isSlot": false,
																"src": "2707:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1522,
																"isOffset": false,
																"isSlot": false,
																"src": "2753:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1522,
																"isOffset": false,
																"isSlot": false,
																"src": "2779:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1522,
																"isOffset": false,
																"isSlot": false,
																"src": "2805:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1522,
																"isOffset": false,
																"isSlot": false,
																"src": "2815:7:8",
																"valueSize": 1
															},
															{
																"declaration": 1495,
																"isOffset": false,
																"isSlot": false,
																"src": "2733:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1495,
																"isOffset": false,
																"isSlot": false,
																"src": "2746:5:8",
																"valueSize": 1
															}
														],
														"id": 1531,
														"nodeType": "InlineAssembly",
														"src": "2647:195:8"
													},
													{
														"expression": {
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1532,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "2910:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1533,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "2919:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1534,
																	"name": "lpotdod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "2927:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2919:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2910:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1537,
														"nodeType": "ExpressionStatement",
														"src": "2910:24:8"
													},
													{
														"assignments": [
															1539
														],
														"declarations": [
															{
																"constant": false,
																"id": 1539,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "3008:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1603,
																"src": "3000:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1538,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3000:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1546,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3019:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1541,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1489,
																			"src": "3023:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3019:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1543,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3018:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3038:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3018:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3000:39:8"
													},
													{
														"expression": {
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1547,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "3054:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3065:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1549,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "3069:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1550,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "3083:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3069:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3065:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3054:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1554,
														"nodeType": "ExpressionStatement",
														"src": "3054:36:8"
													},
													{
														"expression": {
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1555,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "3124:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3135:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1557,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "3139:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1558,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "3153:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3139:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3135:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3124:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1562,
														"nodeType": "ExpressionStatement",
														"src": "3124:36:8"
													},
													{
														"expression": {
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1563,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "3195:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3206:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1565,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "3210:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1566,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "3224:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3210:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3206:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3195:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1570,
														"nodeType": "ExpressionStatement",
														"src": "3195:36:8"
													},
													{
														"expression": {
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1571,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "3266:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3277:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1573,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "3281:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1574,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "3295:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3281:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3277:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3266:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1578,
														"nodeType": "ExpressionStatement",
														"src": "3266:36:8"
													},
													{
														"expression": {
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1579,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "3337:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3348:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1581,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "3352:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1582,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "3366:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3352:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3348:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3337:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1586,
														"nodeType": "ExpressionStatement",
														"src": "3337:36:8"
													},
													{
														"expression": {
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1587,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "3409:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3420:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1589,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1489,
																		"src": "3424:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1590,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "3438:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3424:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3420:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3409:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1594,
														"nodeType": "ExpressionStatement",
														"src": "3409:36:8"
													},
													{
														"expression": {
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1595,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "3483:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1596,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "3492:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1597,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1539,
																	"src": "3500:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3492:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3483:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1600,
														"nodeType": "ExpressionStatement",
														"src": "3483:24:8"
													},
													{
														"expression": {
															"id": 1601,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "3529:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1493,
														"id": 1602,
														"nodeType": "Return",
														"src": "3522:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "1003:160:8",
										"text": "@notice Calculates floor(a × b ÷ denominator) with full precision.\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1178:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1203:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1195:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1223:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1215:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1243:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1235:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:77:8"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1293:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "1285:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:16:8"
									},
									"scope": 1643,
									"src": "1169:2385:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "3719:47:8",
										"statements": [
											{
												"expression": {
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1615,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "3730:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1617,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1608,
																"src": "3746:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1618,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "3749:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1619,
																"name": "SCALE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3752:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1616,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "3739:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3730:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1622,
												"nodeType": "ExpressionStatement",
												"src": "3730:28:8"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "3562:64:8",
										"text": "@notice Calculates floor(x * y / SCALE) with full precision."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivFixedPoint",
									"nameLocation": "3641:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3666:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3658:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3658:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3677:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3669:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:22:8"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3711:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3703:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3703:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3702:16:8"
									},
									"scope": 1643,
									"src": "3632:134:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "3942:52:8",
										"statements": [
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1632,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "3953:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1633,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "3963:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1634,
																		"name": "HALF_SCALE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1482,
																		"src": "3967:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3963:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1636,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3962:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1637,
															"name": "SCALE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "3981:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3962:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3953:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "3953:33:8"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "3774:97:8",
										"text": "@notice Rounds x to the nearest integer. If the fractional part is 0.5 or more, it rounds up."
									},
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "round",
									"nameLocation": "3886:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3900:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "3892:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3891:11:8"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3934:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "3926:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:16:8"
									},
									"scope": 1643,
									"src": "3877:117:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1644,
							"src": "215:3782:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:3966:8"
				},
				"id": 8
			},
			"src/lib/Position.sol": {
				"ast": {
					"absolutePath": "src/lib/Position.sol",
					"exportedSymbols": {
						"Position": [
							1706
						]
					},
					"id": 1707,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Position",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1706,
							"linearizedBaseContracts": [
								1706
							],
							"name": "Position",
							"nameLocation": "71:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Position.Info",
									"id": 1648,
									"members": [
										{
											"constant": false,
											"id": 1647,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "116:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 1648,
											"src": "108:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1646,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "108:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nameLocation": "93:4:9",
									"nodeType": "StructDefinition",
									"scope": 1706,
									"src": "86:46:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "332:112:9",
										"statements": [
											{
												"expression": {
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1665,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "342:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1666,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "353:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 1675,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1670,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "398:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1671,
																			"name": "lowerTick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1657,
																			"src": "405:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"id": 1672,
																			"name": "upperTick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1659,
																			"src": "416:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"expression": {
																			"id": 1668,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "381:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "385:12:9",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "381:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "381:45:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1667,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "371:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "371:56:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "353:84:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1648_storage",
															"typeString": "struct Position.Info storage ref"
														}
													},
													"src": "342:95:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"id": 1677,
												"nodeType": "ExpressionStatement",
												"src": "342:95:9"
											}
										]
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "147:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "193:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "160:37:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$",
													"typeString": "mapping(bytes32 => struct Position.Info)"
												},
												"typeName": {
													"id": 1652,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1649,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "168:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Mapping",
													"src": "160:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$1648_storage_$",
														"typeString": "mapping(bytes32 => struct Position.Info)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1651,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1650,
															"name": "Info",
															"nameLocations": [
																"179:4:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1648,
															"src": "179:4:9"
														},
														"referencedDeclaration": 1648,
														"src": "179:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
															"typeString": "struct Position.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "215:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "207:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "lowerTick",
												"nameLocation": "236:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "230:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1656,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "230:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "upperTick",
												"nameLocation": "261:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "255:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1658,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "255:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:126:9"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "322:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "300:30:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 1662,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1661,
														"name": "Position.Info",
														"nameLocations": [
															"300:8:9",
															"309:4:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1648,
														"src": "300:13:9"
													},
													"referencedDeclaration": 1648,
													"src": "300:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:32:9"
									},
									"scope": 1706,
									"src": "138:306:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "518:166:9",
										"statements": [
											{
												"assignments": [
													1688
												],
												"declarations": [
													{
														"constant": false,
														"id": 1688,
														"mutability": "mutable",
														"name": "liquidityBefore",
														"nameLocation": "536:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1704,
														"src": "528:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1687,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "528:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"expression": {
														"id": 1689,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "554:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "559:9:9",
													"memberName": "liquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1647,
													"src": "554:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "528:40:9"
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "liquidityAfter",
														"nameLocation": "586:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1704,
														"src": "578:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1692,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "578:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1697,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1694,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1688,
														"src": "603:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1695,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "621:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "603:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "578:57:9"
											},
											{
												"expression": {
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1698,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "646:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "651:9:9",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1647,
														"src": "646:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1701,
														"name": "liquidityAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "663:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "646:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "646:31:9"
											}
										]
									},
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "459:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "479:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "466:17:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 1681,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1680,
														"name": "Info",
														"nameLocations": [
															"466:4:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1648,
														"src": "466:4:9"
													},
													"referencedDeclaration": 1648,
													"src": "466:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1648_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nameLocation": "493:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "485:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1683,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "465:43:9"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:0:9"
									},
									"scope": 1706,
									"src": "450:234:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1707,
							"src": "63:623:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:650:9"
				},
				"id": 9
			},
			"src/lib/SwapMath.sol": {
				"ast": {
					"absolutePath": "src/lib/SwapMath.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							1186
						],
						"Math": [
							1456
						],
						"PRBMath": [
							1643
						],
						"SwapMath": [
							1774
						]
					},
					"id": 1775,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1708,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:10"
						},
						{
							"absolutePath": "src/lib/Math.sol",
							"file": "./Math.sol",
							"id": 1709,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1775,
							"sourceUnit": 1457,
							"src": "63:20:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SwapMath",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1774,
							"linearizedBaseContracts": [
								1774
							],
							"name": "SwapMath",
							"nameLocation": "93:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "451:630:10",
										"statements": [
											{
												"assignments": [
													1727
												],
												"declarations": [
													{
														"constant": false,
														"id": 1727,
														"mutability": "mutable",
														"name": "zeroForOne",
														"nameLocation": "466:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "461:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1726,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "461:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1731,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1728,
														"name": "sqrtPriceCurrentX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "479:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1729,
														"name": "sqrtPriceTargetX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "502:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "479:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "461:59:10"
											},
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1732,
														"name": "sqrtPriceNextX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "531:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1735,
																"name": "sqrtPriceCurrentX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "594:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1736,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "627:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"id": 1737,
																"name": "amountRemaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1717,
																"src": "650:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1738,
																"name": "zeroForOne",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "679:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1733,
																"name": "Math",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "550:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Math_$1456_$",
																	"typeString": "type(library Math)"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "555:25:10",
															"memberName": "getNextSqrtPriceFromInput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1308,
															"src": "550:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint128_$_t_uint256_$_t_bool_$returns$_t_uint160_$",
																"typeString": "function (uint160,uint128,uint256,bool) pure returns (uint160)"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "550:149:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "531:168:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "531:168:10"
											},
											{
												"expression": {
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1742,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "710:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1745,
																"name": "sqrtPriceCurrentX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "756:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1746,
																"name": "sqrtPriceNextX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "789:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1747,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "819:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"expression": {
																"id": 1743,
																"name": "Math",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "721:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Math_$1456_$",
																	"typeString": "type(library Math)"
																}
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "726:16:10",
															"memberName": "calcAmount0Delta",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1242,
															"src": "721:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "721:117:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "710:128:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "710:128:10"
											},
											{
												"expression": {
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1751,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "848:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1754,
																"name": "sqrtPriceCurrentX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "895:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1755,
																"name": "sqrtPriceNextX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1720,
																"src": "928:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1756,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "958:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"expression": {
																"id": 1752,
																"name": "Math",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1456,
																"src": "860:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Math_$1456_$",
																	"typeString": "type(library Math)"
																}
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "865:16:10",
															"memberName": "calcAmount1Delta",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1279,
															"src": "860:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "860:117:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "848:129:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "848:129:10"
											},
											{
												"condition": {
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "992:11:10",
													"subExpression": {
														"id": 1760,
														"name": "zeroForOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "993:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1771,
												"nodeType": "IfStatement",
												"src": "988:87:10",
												"trueBody": {
													"id": 1770,
													"nodeType": "Block",
													"src": "1005:70:10",
													"statements": [
														{
															"expression": {
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 1762,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "1020:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1763,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "1030:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1764,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "1019:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1765,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "1044:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1766,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1722,
																			"src": "1055:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1767,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1043:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																		"typeString": "tuple(uint256,uint256)"
																	}
																},
																"src": "1019:45:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1769,
															"nodeType": "ExpressionStatement",
															"src": "1019:45:10"
														}
													]
												}
											}
										]
									},
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeSwapStep",
									"nameLocation": "117:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "sqrtPriceCurrentX96",
												"nameLocation": "150:19:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "142:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1710,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "sqrtPriceTargetX96",
												"nameLocation": "187:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "179:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1712,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "179:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "223:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "215:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1714,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "215:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "amountRemaining",
												"nameLocation": "250:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "242:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "132:139:10"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "sqrtPriceNextX96",
												"nameLocation": "340:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "332:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1719,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "397:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "389:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "427:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "419:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:128:10"
									},
									"scope": 1774,
									"src": "108:973:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1775,
							"src": "85:998:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:1047:10"
				},
				"id": 10
			},
			"src/lib/Tick.sol": {
				"ast": {
					"absolutePath": "src/lib/Tick.sol",
					"exportedSymbols": {
						"Tick": [
							1846
						]
					},
					"id": 1847,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1776,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Tick",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1846,
							"linearizedBaseContracts": [
								1846
							],
							"name": "Tick",
							"nameLocation": "71:4:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Tick.Info",
									"id": 1781,
									"members": [
										{
											"constant": false,
											"id": 1778,
											"mutability": "mutable",
											"name": "initialized",
											"nameLocation": "109:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 1781,
											"src": "104:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1777,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "104:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1780,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "138:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1781,
											"src": "130:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1779,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "130:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nameLocation": "89:4:11",
									"nodeType": "StructDefinition",
									"scope": 1846,
									"src": "82:72:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1844,
										"nodeType": "Block",
										"src": "316:379:11",
										"statements": [
											{
												"assignments": [
													1799
												],
												"declarations": [
													{
														"constant": false,
														"id": 1799,
														"mutability": "mutable",
														"name": "tickInfo",
														"nameLocation": "344:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "326:26:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1781_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 1798,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1797,
																"name": "Tick.Info",
																"nameLocations": [
																	"326:4:11",
																	"331:4:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1781,
																"src": "326:9:11"
															},
															"referencedDeclaration": 1781,
															"src": "326:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1781_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1803,
												"initialValue": {
													"baseExpression": {
														"id": 1800,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "355:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 1802,
													"indexExpression": {
														"id": 1801,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "360:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "355:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$1781_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "326:39:11"
											},
											{
												"assignments": [
													1805
												],
												"declarations": [
													{
														"constant": false,
														"id": 1805,
														"mutability": "mutable",
														"name": "liquidityBefore",
														"nameLocation": "383:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "375:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1804,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "375:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1808,
												"initialValue": {
													"expression": {
														"id": 1806,
														"name": "tickInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "401:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1781_storage_ptr",
															"typeString": "struct Tick.Info storage pointer"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "410:9:11",
													"memberName": "liquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1780,
													"src": "401:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "375:44:11"
											},
											{
												"assignments": [
													1810
												],
												"declarations": [
													{
														"constant": false,
														"id": 1810,
														"mutability": "mutable",
														"name": "liquidityAfter",
														"nameLocation": "437:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 1844,
														"src": "429:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1809,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "429:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1814,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1811,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "454:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1812,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "472:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "454:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "429:57:11"
											},
											{
												"expression": {
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1815,
														"name": "flipped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "497:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1816,
																		"name": "liquidityAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "508:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "526:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "508:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1819,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "507:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1820,
																		"name": "liquidityBefore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1805,
																		"src": "533:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "552:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "533:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1823,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "532:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "507:47:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "497:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "497:57:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1827,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "569:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "588:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "569:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1837,
												"nodeType": "IfStatement",
												"src": "565:78:11",
												"trueBody": {
													"id": 1836,
													"nodeType": "Block",
													"src": "591:52:11",
													"statements": [
														{
															"expression": {
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1830,
																		"name": "tickInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1799,
																		"src": "605:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$1781_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "614:11:11",
																	"memberName": "initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1778,
																	"src": "605:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "628:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "605:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1835,
															"nodeType": "ExpressionStatement",
															"src": "605:27:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1838,
															"name": "tickInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1799,
															"src": "653:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$1781_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "662:9:11",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1780,
														"src": "653:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1841,
														"name": "liquidityAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "674:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "653:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "653:35:11"
											}
										]
									},
									"id": 1845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "169:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "221:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "185:40:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 1785,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1782,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "193:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "185:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$1781_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1784,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1783,
															"name": "Tick.Info",
															"nameLocations": [
																"202:4:11",
																"207:4:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1781,
															"src": "202:9:11"
														},
														"referencedDeclaration": 1781,
														"src": "202:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$1781_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "241:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "235:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1787,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "235:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nameLocation": "263:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "255:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1789,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "255:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:108:11"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "flipped",
												"nameLocation": "307:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "302:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "302:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "301:14:11"
									},
									"scope": 1846,
									"src": "160:535:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1847,
							"src": "63:634:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:661:11"
				},
				"id": 11
			},
			"src/lib/TickBitmap.sol": {
				"ast": {
					"absolutePath": "src/lib/TickBitmap.sol",
					"exportedSymbols": {
						"BitMath": [
							1175
						],
						"TickBitmap": [
							2119
						]
					},
					"id": 2120,
					"license": "BUSL-1.1",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1848,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:12"
						},
						{
							"absolutePath": "src/lib/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 1849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2120,
							"sourceUnit": 1176,
							"src": "63:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickBitmap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1850,
								"nodeType": "StructuredDocumentation",
								"src": "88:243:12",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 2119,
							"linearizedBaseContracts": [
								2119
							],
							"name": "TickBitmap",
							"nameLocation": "339:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "767:87:12",
										"statements": [
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1860,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "777:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1863,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1853,
																	"src": "793:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "801:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "793:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "787:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 1861,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "787:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "787:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "777:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "777:26:12"
											},
											{
												"expression": {
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1869,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "813:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1874,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1853,
																			"src": "835:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "323536",
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "842:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"src": "835:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "828:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 1872,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "828:6:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "828:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "822:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 1870,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "822:5:12",
																"typeDescriptions": {}
															}
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "822:25:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "813:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "813:34:12"
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "356:325:12",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nameLocation": "695:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "710:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "704:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1852,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "704:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:12:12"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "744:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "738:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1855,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "738:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "bitPos",
												"nameLocation": "759:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "753:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1857,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "753:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:29:12"
									},
									"scope": 2119,
									"src": "686:168:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "1238:220:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1895,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "1256:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1896,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1891,
																	"src": "1263:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1256:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1256:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1248:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1901,
												"nodeType": "ExpressionStatement",
												"src": "1248:32:12"
											},
											{
												"assignments": [
													1903,
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "wordPos",
														"nameLocation": "1331:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1924,
														"src": "1325:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 1902,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "1325:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "bitPos",
														"nameLocation": "1346:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1924,
														"src": "1340:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1904,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1340:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1911,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1907,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "1365:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1908,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "1372:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1365:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 1906,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1882,
														"src": "1356:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1356:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:60:12"
											},
											{
												"assignments": [
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "1402:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1924,
														"src": "1394:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1394:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1409:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1915,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "1414:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1409:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1394:26:12"
											},
											{
												"expression": {
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1918,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "1430:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 1920,
														"indexExpression": {
															"id": 1919,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "1435:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1430:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 1921,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "1447:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1430:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "1430:21:12"
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "860:245:12",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nameLocation": "1119:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1171:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1137:38:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 1886,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1884,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1145:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "1137:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1885,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1154:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1191:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1185:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1888,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1185:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1211:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1205:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1890,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1205:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1127:101:12"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1238:0:12"
									},
									"scope": 2119,
									"src": "1110:348:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "2410:1743:12",
										"statements": [
											{
												"assignments": [
													1944
												],
												"declarations": [
													{
														"constant": false,
														"id": 1944,
														"mutability": "mutable",
														"name": "compressed",
														"nameLocation": "2426:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2117,
														"src": "2420:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1943,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2420:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1948,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1945,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "2439:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1946,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1934,
														"src": "2446:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2439:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2420:37:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1949,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "2471:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2471:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1952,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "2483:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1953,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "2490:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2483:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2505:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2483:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2471:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1961,
												"nodeType": "IfStatement",
												"src": "2467:53:12",
												"trueBody": {
													"expression": {
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "2508:12:12",
														"subExpression": {
															"id": 1958,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1944,
															"src": "2508:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 1960,
													"nodeType": "ExpressionStatement",
													"src": "2508:12:12"
												}
											},
											{
												"condition": {
													"id": 1962,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1936,
													"src": "2570:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "3313:834:12",
													"statements": [
														{
															"assignments": [
																2035,
																2037
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2035,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nameLocation": "3431:7:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2115,
																	"src": "3425:13:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 2034,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "3425:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2037,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nameLocation": "3446:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2115,
																	"src": "3440:12:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2036,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3440:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2043,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2039,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1944,
																			"src": "3465:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3478:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3465:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2038,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "3456:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3456:24:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3424:56:12"
														},
														{
															"assignments": [
																2045
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2045,
																	"mutability": "mutable",
																	"name": "mask",
																	"nameLocation": "3560:4:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2115,
																	"src": "3552:12:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2044,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2054,
															"initialValue": {
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "3567:20:12",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2048,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 2046,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3570:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 2047,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2037,
																							"src": "3575:6:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3570:11:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2049,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3569:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3585:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3569:17:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2052,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3568:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3552:35:12"
														},
														{
															"assignments": [
																2056
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2056,
																	"mutability": "mutable",
																	"name": "masked",
																	"nameLocation": "3609:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2115,
																	"src": "3601:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2055,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2062,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2057,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "3618:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 2059,
																	"indexExpression": {
																		"id": 2058,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2035,
																		"src": "3623:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3618:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2060,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "3634:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3618:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3601:37:12"
														},
														{
															"expression": {
																"id": 2067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2063,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "3763:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2064,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "3777:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3787:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3777:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3763:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2068,
															"nodeType": "ExpressionStatement",
															"src": "3763:25:12"
														},
														{
															"expression": {
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2069,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "3912:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 2070,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "3919:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 2108,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 2093,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2091,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1944,
																							"src": "4063:10:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2092,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4076:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4063:14:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 2104,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"expression": {
																														"arguments": [
																															{
																																"id": 2100,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"lValueRequested": false,
																																"nodeType": "ElementaryTypeNameExpression",
																																"src": "4099:5:12",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_type$_t_uint8_$",
																																	"typeString": "type(uint8)"
																																},
																																"typeName": {
																																	"id": 2099,
																																	"name": "uint8",
																																	"nodeType": "ElementaryTypeName",
																																	"src": "4099:5:12",
																																	"typeDescriptions": {}
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_type$_t_uint8_$",
																																	"typeString": "type(uint8)"
																																}
																															],
																															"id": 2098,
																															"name": "type",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 4294967269,
																															"src": "4094:4:12",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																																"typeString": "function () pure"
																															}
																														},
																														"id": 2101,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"nameLocations": [],
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "4094:11:12",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_magic_meta_type_t_uint8",
																															"typeString": "type(uint8)"
																														}
																													},
																													"id": 2102,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"memberLocation": "4106:3:12",
																													"memberName": "max",
																													"nodeType": "MemberAccess",
																													"src": "4094:15:12",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"id": 2103,
																													"name": "bitPos",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2037,
																													"src": "4112:6:12",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "4094:24:12",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"id": 2105,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "4093:26:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 2097,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4086:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 2096,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "4086:6:12",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2106,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4086:34:12",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 2095,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4080:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 2094,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4080:5:12",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4080:41:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4063:58:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 2109,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4062:60:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2110,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1934,
																			"src": "4125:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4062:74:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3919:217:12",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 2087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 2073,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2071,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1944,
																							"src": "3950:10:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 2072,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3963:1:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "3950:14:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 2083,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"arguments": [
																														{
																															"id": 2080,
																															"name": "masked",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 2056,
																															"src": "4009:6:12",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"expression": {
																														"argumentTypes": [
																															{
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														],
																														"expression": {
																															"id": 2078,
																															"name": "BitMath",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1175,
																															"src": "3981:7:12",
																															"typeDescriptions": {
																																"typeIdentifier": "t_type$_t_contract$_BitMath_$1175_$",
																																"typeString": "type(library BitMath)"
																															}
																														},
																														"id": 2079,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "3989:19:12",
																														"memberName": "leastSignificantBit",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 1174,
																														"src": "3981:27:12",
																														"typeDescriptions": {
																															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																															"typeString": "function (uint256) pure returns (uint8)"
																														}
																													},
																													"id": 2081,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"kind": "functionCall",
																													"lValueRequested": false,
																													"nameLocations": [],
																													"names": [],
																													"nodeType": "FunctionCall",
																													"src": "3981:35:12",
																													"tryCall": false,
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"id": 2082,
																													"name": "bitPos",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2037,
																													"src": "4019:6:12",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "3981:44:12",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"id": 2084,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "3980:46:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 2077,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3973:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 2076,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3973:6:12",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2085,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3973:54:12",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 2075,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3967:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 2074,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3967:5:12",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2086,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3967:61:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3950:78:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 2088,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3949:80:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2089,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1934,
																			"src": "4032:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3949:94:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3912:224:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2114,
															"nodeType": "ExpressionStatement",
															"src": "3912:224:12"
														}
													]
												},
												"id": 2116,
												"nodeType": "IfStatement",
												"src": "2566:1581:12",
												"trueBody": {
													"id": 2033,
													"nodeType": "Block",
													"src": "2575:732:12",
													"statements": [
														{
															"assignments": [
																1964,
																1966
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1964,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nameLocation": "2596:7:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2033,
																	"src": "2590:13:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 1963,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "2590:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1966,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nameLocation": "2611:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2033,
																	"src": "2605:12:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1965,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2605:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1970,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1968,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1944,
																		"src": "2630:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1967,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "2621:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2621:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2589:52:12"
														},
														{
															"assignments": [
																1972
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1972,
																	"mutability": "mutable",
																	"name": "mask",
																	"nameLocation": "2730:4:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2033,
																	"src": "2722:12:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1971,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2722:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1984,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1975,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2738:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1974,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1966,
																					"src": "2743:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2738:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1976,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2737:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2753:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2737:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2758:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1980,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1966,
																				"src": "2763:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2758:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1982,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2757:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2737:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2722:48:12"
														},
														{
															"assignments": [
																1986
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1986,
																	"mutability": "mutable",
																	"name": "masked",
																	"nameLocation": "2792:6:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2033,
																	"src": "2784:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1985,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2784:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1992,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1987,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1930,
																		"src": "2801:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 1989,
																	"indexExpression": {
																		"id": 1988,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "2806:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2801:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1990,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1972,
																	"src": "2817:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2801:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2784:37:12"
														},
														{
															"expression": {
																"id": 1997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1993,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1941,
																	"src": "2954:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1994,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "2968:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "2968:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2954:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1998,
															"nodeType": "ExpressionStatement",
															"src": "2954:25:12"
														},
														{
															"expression": {
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1999,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1939,
																	"src": "3103:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 2000,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "3110:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 2026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2018,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1944,
																						"src": "3247:10:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 2023,
																										"name": "bitPos",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1966,
																										"src": "3273:6:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 2022,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3266:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 2021,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3266:6:12",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2024,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3266:14:12",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 2020,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3260:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 2019,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3260:5:12",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2025,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3260:21:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3247:34:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 2027,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3246:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2028,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1934,
																			"src": "3285:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3246:50:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3110:186:12",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 2014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2001,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1944,
																						"src": "3141:10:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 2011,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2006,
																											"name": "bitPos",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1966,
																											"src": "3167:6:12",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"arguments": [
																												{
																													"id": 2009,
																													"name": "masked",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1986,
																													"src": "3203:6:12",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"id": 2007,
																													"name": "BitMath",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1175,
																													"src": "3176:7:12",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_contract$_BitMath_$1175_$",
																														"typeString": "type(library BitMath)"
																													}
																												},
																												"id": 2008,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "3184:18:12",
																												"memberName": "mostSignificantBit",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1013,
																												"src": "3176:26:12",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																													"typeString": "function (uint256) pure returns (uint8)"
																												}
																											},
																											"id": 2010,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "3176:34:12",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "3167:43:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 2005,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3160:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 2004,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3160:6:12",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 2012,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3160:51:12",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 2003,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3154:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 2002,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3154:5:12",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2013,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3154:58:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3141:71:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 2015,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3140:73:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2016,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1934,
																			"src": "3216:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3140:87:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3103:193:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2032,
															"nodeType": "ExpressionStatement",
															"src": "3103:193:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "1464:727:12",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nameLocation": "2205:32:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2281:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "2247:38:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 1929,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1927,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "2255:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "2247:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1928,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2264:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "2301:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "2295:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1931,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2295:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "2321:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "2315:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1933,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2315:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "lte",
												"nameLocation": "2347:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "2342:8:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2237:119:12"
									},
									"returnParameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "next",
												"nameLocation": "2386:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "2380:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1938,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2380:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "2397:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "2392:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1940,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2392:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2379:30:12"
									},
									"scope": 2119,
									"src": "2196:1957:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2120,
							"src": "331:3824:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:4118:12"
				},
				"id": 12
			},
			"src/lib/TickMath.sol": {
				"ast": {
					"absolutePath": "src/lib/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							2657
						]
					},
					"id": 2658,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2121,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2122,
								"nodeType": "StructuredDocumentation",
								"src": "71:235:13",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 2657,
							"linearizedBaseContracts": [
								2657
							],
							"name": "TickMath",
							"nameLocation": "314:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "329:108:13",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 2127,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "466:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2657,
									"src": "442:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2124,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "442:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "477:7:13",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 2125,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "478:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "490:107:13",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 2132,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "626:8:13",
									"nodeType": "VariableDeclaration",
									"scope": 2657,
									"src": "602:44:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 2129,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "602:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 2131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "637:9:13",
										"subExpression": {
											"id": 2130,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 2127,
											"src": "638:8:13",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "653:116:13",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 2136,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nameLocation": "800:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2657,
									"src": "774:53:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2134,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "774:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 2135,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "817:10:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2137,
										"nodeType": "StructuredDocumentation",
										"src": "833:116:13",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 2140,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nameLocation": "980:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2657,
									"src": "954:92:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 2138,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "954:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 2139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "997:49:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2516,
										"nodeType": "Block",
										"src": "1440:2503:13",
										"statements": [
											{
												"assignments": [
													2149
												],
												"declarations": [
													{
														"constant": false,
														"id": 2149,
														"mutability": "mutable",
														"name": "absTick",
														"nameLocation": "1458:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2516,
														"src": "1450:15:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1450:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2169,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 2152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2150,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "1468:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1475:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1468:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2165,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "1519:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1512:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 2163,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1512:6:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1512:12:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1504:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2161,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1504:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1504:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1468:57:13",
													"trueExpression": {
														"arguments": [
															{
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1487:13:13",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2157,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2143,
																			"src": "1495:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1488:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2155,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1488:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1488:12:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1479:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2153,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1479:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1479:22:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1450:75:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2171,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "1543:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2176,
																				"name": "MAX_TICK",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2132,
																				"src": "1569:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1562:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			},
																			"typeName": {
																				"id": 2174,
																				"name": "uint24",
																				"nodeType": "ElementaryTypeName",
																				"src": "1562:6:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1562:16:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1554:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2172,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1554:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1554:25:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1543:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1581:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 2170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1535:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1535:50:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2182,
												"nodeType": "ExpressionStatement",
												"src": "1535:50:13"
											},
											{
												"assignments": [
													2184
												],
												"declarations": [
													{
														"constant": false,
														"id": 2184,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1604:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2516,
														"src": "1596:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2183,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1596:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2193,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2185,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2149,
																"src": "1612:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1622:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1612:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1629:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1612:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1670:35:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1612:93:13",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1633:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1596:109:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2194,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "1719:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1729:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1719:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1736:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1719:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2208,
												"nodeType": "IfStatement",
												"src": "1715:83:13",
												"trueBody": {
													"expression": {
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2199,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "1739:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2200,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "1748:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 2201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1756:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1748:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2203,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1747:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1795:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1747:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1739:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2207,
													"nodeType": "ExpressionStatement",
													"src": "1739:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2209,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "1812:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 2210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1822:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1812:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1829:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1812:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2223,
												"nodeType": "IfStatement",
												"src": "1808:83:13",
												"trueBody": {
													"expression": {
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2214,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "1832:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2215,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "1841:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 2216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1849:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1841:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2218,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1840:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1888:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1840:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1832:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2222,
													"nodeType": "ExpressionStatement",
													"src": "1832:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2224,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "1905:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 2225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1915:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1905:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1922:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1905:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2238,
												"nodeType": "IfStatement",
												"src": "1901:83:13",
												"trueBody": {
													"expression": {
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2229,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "1925:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2230,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "1934:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 2231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1942:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1934:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1933:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1981:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1933:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1925:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2237,
													"nodeType": "ExpressionStatement",
													"src": "1925:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2239,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "1998:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2008:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1998:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2016:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1998:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2253,
												"nodeType": "IfStatement",
												"src": "1994:84:13",
												"trueBody": {
													"expression": {
														"id": 2251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2244,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2019:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2245,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2028:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 2246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2036:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2028:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2075:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2027:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2019:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2252,
													"nodeType": "ExpressionStatement",
													"src": "2019:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2254,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2092:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2102:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2092:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2110:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2092:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2268,
												"nodeType": "IfStatement",
												"src": "2088:84:13",
												"trueBody": {
													"expression": {
														"id": 2266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2259,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2113:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2260,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2122:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 2261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2130:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2122:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2263,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2121:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2169:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2121:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2113:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2267,
													"nodeType": "ExpressionStatement",
													"src": "2113:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2269,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2186:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2196:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2186:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2204:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2186:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2283,
												"nodeType": "IfStatement",
												"src": "2182:84:13",
												"trueBody": {
													"expression": {
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2274,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2207:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2275,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2216:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 2276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2224:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2216:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2278,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2215:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2263:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2215:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2207:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2282,
													"nodeType": "ExpressionStatement",
													"src": "2207:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2284,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2280:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2280:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2298:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2280:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2298,
												"nodeType": "IfStatement",
												"src": "2276:84:13",
												"trueBody": {
													"expression": {
														"id": 2296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2289,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2301:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2290,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2310:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 2291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2318:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2310:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2293,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2309:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2357:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2309:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2301:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2297,
													"nodeType": "ExpressionStatement",
													"src": "2301:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2299,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2374:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2384:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2374:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2393:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2374:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2313,
												"nodeType": "IfStatement",
												"src": "2370:85:13",
												"trueBody": {
													"expression": {
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2304,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2396:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2305,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 2306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2413:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2405:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2308,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2404:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2452:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2404:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2396:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2312,
													"nodeType": "ExpressionStatement",
													"src": "2396:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2314,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2469:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2479:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2469:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2488:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2469:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2328,
												"nodeType": "IfStatement",
												"src": "2465:85:13",
												"trueBody": {
													"expression": {
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2319,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2491:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2320,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2500:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2508:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2500:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2323,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2499:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2547:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2499:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2491:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2327,
													"nodeType": "ExpressionStatement",
													"src": "2491:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2329,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2564:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2574:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2564:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2583:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2564:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2343,
												"nodeType": "IfStatement",
												"src": "2560:85:13",
												"trueBody": {
													"expression": {
														"id": 2341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2334,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2586:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2335,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2595:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2603:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2595:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2338,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2594:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2642:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2594:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2586:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2342,
													"nodeType": "ExpressionStatement",
													"src": "2586:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2344,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2659:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2669:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2659:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2678:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2659:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2358,
												"nodeType": "IfStatement",
												"src": "2655:85:13",
												"trueBody": {
													"expression": {
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2349,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2681:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2350,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2690:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2698:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2690:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2689:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2737:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2689:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2681:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2357,
													"nodeType": "ExpressionStatement",
													"src": "2681:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2359,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2754:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2764:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2754:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2774:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2754:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2373,
												"nodeType": "IfStatement",
												"src": "2750:86:13",
												"trueBody": {
													"expression": {
														"id": 2371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2364,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2777:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2365,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2786:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2794:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2786:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2368,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2785:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2833:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2785:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2777:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2372,
													"nodeType": "ExpressionStatement",
													"src": "2777:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2374,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2850:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2860:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2850:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2870:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2850:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2388,
												"nodeType": "IfStatement",
												"src": "2846:86:13",
												"trueBody": {
													"expression": {
														"id": 2386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2379,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2873:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2380,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2890:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2882:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2383,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2881:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2929:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2881:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2873:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2387,
													"nodeType": "ExpressionStatement",
													"src": "2873:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2389,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "2946:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2956:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2946:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2966:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2946:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2403,
												"nodeType": "IfStatement",
												"src": "2942:86:13",
												"trueBody": {
													"expression": {
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2394,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "2969:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2395,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "2978:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 2396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2986:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2978:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2398,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2977:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3025:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2977:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2969:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2402,
													"nodeType": "ExpressionStatement",
													"src": "2969:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2404,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "3042:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3052:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3042:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3062:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3042:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2418,
												"nodeType": "IfStatement",
												"src": "3038:86:13",
												"trueBody": {
													"expression": {
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2409,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "3065:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2410,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "3074:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3082:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3074:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2413,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3073:44:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3121:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3073:51:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3065:59:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2417,
													"nodeType": "ExpressionStatement",
													"src": "3065:59:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2419,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "3138:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3148:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3138:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3159:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3138:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2433,
												"nodeType": "IfStatement",
												"src": "3134:86:13",
												"trueBody": {
													"expression": {
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2424,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "3162:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2425,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "3171:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3179:33:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3171:41:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2428,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3170:43:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3217:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3170:50:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3162:58:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2432,
													"nodeType": "ExpressionStatement",
													"src": "3162:58:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2434,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "3234:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3244:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3234:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3255:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3234:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2448,
												"nodeType": "IfStatement",
												"src": "3230:85:13",
												"trueBody": {
													"expression": {
														"id": 2446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2439,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "3258:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2440,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "3267:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3275:32:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3267:40:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2443,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3266:42:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3312:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3266:49:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3258:57:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2447,
													"nodeType": "ExpressionStatement",
													"src": "3258:57:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2449,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "3329:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3339:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3329:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3350:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3329:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2463,
												"nodeType": "IfStatement",
												"src": "3325:83:13",
												"trueBody": {
													"expression": {
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2454,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "3353:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2455,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "3362:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3370:30:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3362:38:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2458,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3361:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3405:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3361:47:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3353:55:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2462,
													"nodeType": "ExpressionStatement",
													"src": "3353:55:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2464,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "3422:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3432:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3422:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3443:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3422:22:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2478,
												"nodeType": "IfStatement",
												"src": "3418:78:13",
												"trueBody": {
													"expression": {
														"id": 2476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2469,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "3446:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2470,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2184,
																			"src": "3455:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3463:25:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3455:33:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2473,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3454:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3493:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3454:42:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3446:50:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2477,
													"nodeType": "ExpressionStatement",
													"src": "3446:50:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2479,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2143,
														"src": "3511:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3518:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3511:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2492,
												"nodeType": "IfStatement",
												"src": "3507:47:13",
												"trueBody": {
													"expression": {
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2482,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2184,
															"src": "3521:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3534:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2484,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3534:7:13",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2483,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3529:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3529:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3543:3:13",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3529:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2488,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "3549:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3529:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3521:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2491,
													"nodeType": "ExpressionStatement",
													"src": "3521:33:13"
												}
											},
											{
												"expression": {
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2493,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2146,
														"src": "3864:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2496,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2184,
																				"src": "3888:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3897:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3888:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2499,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3887:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2500,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2184,
																						"src": "3904:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 2503,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 2501,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3913:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 2502,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3918:2:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3913:7:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 2504,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3912:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3904:17:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2506,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3925:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3904:22:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 2509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3933:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 2510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3904:30:13",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 2508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3929:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 2511,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3903:32:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3887:48:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3879:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 2494,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3879:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3879:57:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3864:72:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 2515,
												"nodeType": "ExpressionStatement",
												"src": "3864:72:13"
											}
										]
									},
									"documentation": {
										"id": 2141,
										"nodeType": "StructuredDocumentation",
										"src": "1053:297:13",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 2517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1364:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1389:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "1383:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2142,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1383:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:12:13"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1426:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "1418:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2145,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:22:13"
									},
									"scope": 2657,
									"src": "1355:2588:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "4447:4196:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2526,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2520,
																	"src": "4564:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2527,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "4580:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4564:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2529,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2520,
																	"src": "4598:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2530,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2140,
																	"src": "4613:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4598:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4564:63:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4629:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 2525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4556:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4556:77:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2535,
												"nodeType": "ExpressionStatement",
												"src": "4556:77:13"
											},
											{
												"assignments": [
													2537
												],
												"declarations": [
													{
														"constant": false,
														"id": 2537,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "4651:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2655,
														"src": "4643:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4643:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2544,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2540,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2520,
																"src": "4667:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4659:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2538,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4659:7:13",
																"typeDescriptions": {}
															}
														},
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4659:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4684:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4659:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4643:43:13"
											},
											{
												"assignments": [
													2546
												],
												"declarations": [
													{
														"constant": false,
														"id": 2546,
														"mutability": "mutable",
														"name": "r",
														"nameLocation": "4705:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 2655,
														"src": "4697:9:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4697:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2548,
												"initialValue": {
													"id": 2547,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2537,
													"src": "4709:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4697:17:13"
											},
											{
												"assignments": [
													2550
												],
												"declarations": [
													{
														"constant": false,
														"id": 2550,
														"mutability": "mutable",
														"name": "msb",
														"nameLocation": "4732:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 2655,
														"src": "4724:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2549,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4724:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2552,
												"initialValue": {
													"hexValue": "30",
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4738:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4724:15:13"
											},
											{
												"AST": {
													"nativeSrc": "4759:139:13",
													"nodeType": "YulBlock",
													"src": "4759:139:13",
													"statements": [
														{
															"nativeSrc": "4773:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4773:58:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4786:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4786:1:13",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "4792:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4792:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4795:34:13",
																				"nodeType": "YulLiteral",
																				"src": "4795:34:13",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4789:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4789:2:13"
																		},
																		"nativeSrc": "4789:41:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4789:41:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4782:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4782:3:13"
																},
																"nativeSrc": "4782:49:13",
																"nodeType": "YulFunctionCall",
																"src": "4782:49:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "4777:1:13",
																	"nodeType": "YulTypedName",
																	"src": "4777:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4844:17:13",
															"nodeType": "YulAssignment",
															"src": "4844:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "4854:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4854:3:13"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "4859:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4859:1:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4851:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4851:2:13"
																},
																"nativeSrc": "4851:10:13",
																"nodeType": "YulFunctionCall",
																"src": "4851:10:13"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "4844:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4844:3:13"
																}
															]
														},
														{
															"nativeSrc": "4874:14:13",
															"nodeType": "YulAssignment",
															"src": "4874:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "4883:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4883:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "4886:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4886:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4879:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:13"
																},
																"nativeSrc": "4879:9:13",
																"nodeType": "YulFunctionCall",
																"src": "4879:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "4874:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "4874:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "4844:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "4854:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "4792:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "4874:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "4886:1:13",
														"valueSize": 1
													}
												],
												"id": 2553,
												"nodeType": "InlineAssembly",
												"src": "4750:148:13"
											},
											{
												"AST": {
													"nativeSrc": "4916:123:13",
													"nodeType": "YulBlock",
													"src": "4916:123:13",
													"statements": [
														{
															"nativeSrc": "4930:42:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4930:42:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4943:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4943:1:13",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "4949:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4949:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4952:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4952:18:13",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4946:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4946:2:13"
																		},
																		"nativeSrc": "4946:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4946:25:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4939:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:13"
																},
																"nativeSrc": "4939:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4939:33:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "4934:1:13",
																	"nodeType": "YulTypedName",
																	"src": "4934:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4985:17:13",
															"nodeType": "YulAssignment",
															"src": "4985:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "4995:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4995:3:13"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5000:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5000:1:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4992:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:13"
																},
																"nativeSrc": "4992:10:13",
																"nodeType": "YulFunctionCall",
																"src": "4992:10:13"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "4985:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:13"
																}
															]
														},
														{
															"nativeSrc": "5015:14:13",
															"nodeType": "YulAssignment",
															"src": "5015:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5024:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5024:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5027:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5020:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:13"
																},
																"nativeSrc": "5020:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5020:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5015:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5015:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "4985:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "4995:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "4949:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5015:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5027:1:13",
														"valueSize": 1
													}
												],
												"id": 2554,
												"nodeType": "InlineAssembly",
												"src": "4907:132:13"
											},
											{
												"AST": {
													"nativeSrc": "5057:115:13",
													"nodeType": "YulBlock",
													"src": "5057:115:13",
													"statements": [
														{
															"nativeSrc": "5071:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5071:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5084:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5084:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5090:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5090:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5093:10:13",
																				"nodeType": "YulLiteral",
																				"src": "5093:10:13",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5087:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5087:2:13"
																		},
																		"nativeSrc": "5087:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5087:17:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5080:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:13"
																},
																"nativeSrc": "5080:25:13",
																"nodeType": "YulFunctionCall",
																"src": "5080:25:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5075:1:13",
																	"nodeType": "YulTypedName",
																	"src": "5075:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5118:17:13",
															"nodeType": "YulAssignment",
															"src": "5118:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5128:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5128:3:13"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5133:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5133:1:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5125:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5125:2:13"
																},
																"nativeSrc": "5125:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5125:10:13"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:13"
																}
															]
														},
														{
															"nativeSrc": "5148:14:13",
															"nodeType": "YulAssignment",
															"src": "5148:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5157:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5157:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5160:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5160:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5153:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5153:3:13"
																},
																"nativeSrc": "5153:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5153:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5148:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5148:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5118:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5128:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5090:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5148:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5160:1:13",
														"valueSize": 1
													}
												],
												"id": 2555,
												"nodeType": "InlineAssembly",
												"src": "5048:124:13"
											},
											{
												"AST": {
													"nativeSrc": "5190:111:13",
													"nodeType": "YulBlock",
													"src": "5190:111:13",
													"statements": [
														{
															"nativeSrc": "5204:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5204:30:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5217:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5217:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5223:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5223:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5226:6:13",
																				"nodeType": "YulLiteral",
																				"src": "5226:6:13",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5220:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5220:2:13"
																		},
																		"nativeSrc": "5220:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5220:13:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5213:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5213:3:13"
																},
																"nativeSrc": "5213:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5213:21:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5208:1:13",
																	"nodeType": "YulTypedName",
																	"src": "5208:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5247:17:13",
															"nodeType": "YulAssignment",
															"src": "5247:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5257:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5257:3:13"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5262:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5262:1:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5254:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5254:2:13"
																},
																"nativeSrc": "5254:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5254:10:13"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5247:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5247:3:13"
																}
															]
														},
														{
															"nativeSrc": "5277:14:13",
															"nodeType": "YulAssignment",
															"src": "5277:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5286:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5286:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5289:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5289:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5282:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:13"
																},
																"nativeSrc": "5282:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5282:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5277:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5277:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5247:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5257:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5223:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5277:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5289:1:13",
														"valueSize": 1
													}
												],
												"id": 2556,
												"nodeType": "InlineAssembly",
												"src": "5181:120:13"
											},
											{
												"AST": {
													"nativeSrc": "5319:109:13",
													"nodeType": "YulBlock",
													"src": "5319:109:13",
													"statements": [
														{
															"nativeSrc": "5333:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5333:28:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5346:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5346:1:13",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5352:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5352:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5355:4:13",
																				"nodeType": "YulLiteral",
																				"src": "5355:4:13",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5349:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5349:2:13"
																		},
																		"nativeSrc": "5349:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5349:11:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5342:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5342:3:13"
																},
																"nativeSrc": "5342:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5342:19:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5337:1:13",
																	"nodeType": "YulTypedName",
																	"src": "5337:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5374:17:13",
															"nodeType": "YulAssignment",
															"src": "5374:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5384:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5384:3:13"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5389:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5389:1:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5381:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5381:2:13"
																},
																"nativeSrc": "5381:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5381:10:13"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5374:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:13"
																}
															]
														},
														{
															"nativeSrc": "5404:14:13",
															"nodeType": "YulAssignment",
															"src": "5404:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5413:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5413:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5416:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5416:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5409:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:13"
																},
																"nativeSrc": "5409:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5409:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5404:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5404:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5374:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5384:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5352:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5404:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5416:1:13",
														"valueSize": 1
													}
												],
												"id": 2557,
												"nodeType": "InlineAssembly",
												"src": "5310:118:13"
											},
											{
												"AST": {
													"nativeSrc": "5446:108:13",
													"nodeType": "YulBlock",
													"src": "5446:108:13",
													"statements": [
														{
															"nativeSrc": "5460:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5460:27:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5473:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5473:1:13",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5479:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5479:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5482:3:13",
																				"nodeType": "YulLiteral",
																				"src": "5482:3:13",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5476:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5476:2:13"
																		},
																		"nativeSrc": "5476:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5476:10:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5469:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:13"
																},
																"nativeSrc": "5469:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5469:18:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5464:1:13",
																	"nodeType": "YulTypedName",
																	"src": "5464:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5500:17:13",
															"nodeType": "YulAssignment",
															"src": "5500:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5510:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5510:3:13"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5515:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5515:1:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5507:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5507:2:13"
																},
																"nativeSrc": "5507:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5507:10:13"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5500:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5500:3:13"
																}
															]
														},
														{
															"nativeSrc": "5530:14:13",
															"nodeType": "YulAssignment",
															"src": "5530:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5539:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5539:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5542:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5542:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5535:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5535:3:13"
																},
																"nativeSrc": "5535:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5535:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5530:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5530:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5500:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5510:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5479:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5530:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5542:1:13",
														"valueSize": 1
													}
												],
												"id": 2558,
												"nodeType": "InlineAssembly",
												"src": "5437:117:13"
											},
											{
												"AST": {
													"nativeSrc": "5572:108:13",
													"nodeType": "YulBlock",
													"src": "5572:108:13",
													"statements": [
														{
															"nativeSrc": "5586:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5586:27:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5599:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5599:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5605:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5605:1:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5608:3:13",
																				"nodeType": "YulLiteral",
																				"src": "5608:3:13",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5602:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5602:2:13"
																		},
																		"nativeSrc": "5602:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:10:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5595:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:13"
																},
																"nativeSrc": "5595:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5595:18:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5590:1:13",
																	"nodeType": "YulTypedName",
																	"src": "5590:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5626:17:13",
															"nodeType": "YulAssignment",
															"src": "5626:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5636:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5636:3:13"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5641:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5641:1:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5633:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5633:2:13"
																},
																"nativeSrc": "5633:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5633:10:13"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5626:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5626:3:13"
																}
															]
														},
														{
															"nativeSrc": "5656:14:13",
															"nodeType": "YulAssignment",
															"src": "5656:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "5665:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5665:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "5668:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5668:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5661:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5661:3:13"
																},
																"nativeSrc": "5661:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5661:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5656:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5656:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5626:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5636:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5605:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5656:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5668:1:13",
														"valueSize": 1
													}
												],
												"id": 2559,
												"nodeType": "InlineAssembly",
												"src": "5563:117:13"
											},
											{
												"AST": {
													"nativeSrc": "5698:73:13",
													"nodeType": "YulBlock",
													"src": "5698:73:13",
													"statements": [
														{
															"nativeSrc": "5712:19:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5712:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "5724:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5724:1:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5727:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5727:3:13",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5721:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5721:2:13"
																},
																"nativeSrc": "5721:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5721:10:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5716:1:13",
																	"nodeType": "YulTypedName",
																	"src": "5716:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5744:17:13",
															"nodeType": "YulAssignment",
															"src": "5744:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nativeSrc": "5754:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5754:3:13"
																	},
																	{
																		"name": "f",
																		"nativeSrc": "5759:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5759:1:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5751:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5751:2:13"
																},
																"nativeSrc": "5751:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5751:10:13"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nativeSrc": "5744:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5744:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2550,
														"isOffset": false,
														"isSlot": false,
														"src": "5754:3:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5724:1:13",
														"valueSize": 1
													}
												],
												"id": 2560,
												"nodeType": "InlineAssembly",
												"src": "5689:82:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2561,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2550,
														"src": "5785:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 2562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5792:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5785:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 2580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2573,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "5836:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2574,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "5840:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 2575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5850:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2576,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2550,
																			"src": "5856:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5850:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2578,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5849:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5840:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5836:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2581,
													"nodeType": "ExpressionStatement",
													"src": "5836:24:13"
												},
												"id": 2582,
												"nodeType": "IfStatement",
												"src": "5781:79:13",
												"trueBody": {
													"expression": {
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2564,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "5797:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2565,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "5801:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2566,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2550,
																			"src": "5811:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 2567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5817:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5811:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2569,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5810:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5801:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5797:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2572,
													"nodeType": "ExpressionStatement",
													"src": "5797:24:13"
												}
											},
											{
												"assignments": [
													2584
												],
												"declarations": [
													{
														"constant": false,
														"id": 2584,
														"mutability": "mutable",
														"name": "log_2",
														"nameLocation": "5878:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2655,
														"src": "5871:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2583,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5871:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2594,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2587,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2550,
																			"src": "5894:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5887:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2585,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5887:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5887:11:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5901:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5887:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2591,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5886:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 2592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5909:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5886:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5871:40:13"
											},
											{
												"AST": {
													"nativeSrc": "5931:151:13",
													"nodeType": "YulBlock",
													"src": "5931:151:13",
													"statements": [
														{
															"nativeSrc": "5945:24:13",
															"nodeType": "YulAssignment",
															"src": "5945:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5954:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5954:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "5963:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5963:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "5966:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5966:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5959:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:13"
																		},
																		"nativeSrc": "5959:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5959:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5950:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:13"
																},
																"nativeSrc": "5950:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5950:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5945:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5945:1:13"
																}
															]
														},
														{
															"nativeSrc": "5982:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5982:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5995:3:13",
																		"nodeType": "YulLiteral",
																		"src": "5995:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6000:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6000:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5991:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5991:3:13"
																},
																"nativeSrc": "5991:11:13",
																"nodeType": "YulFunctionCall",
																"src": "5991:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "5986:1:13",
																	"nodeType": "YulTypedName",
																	"src": "5986:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6015:30:13",
															"nodeType": "YulAssignment",
															"src": "6015:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6027:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6027:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6038:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6038:2:13",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6042:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6042:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6034:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:13"
																		},
																		"nativeSrc": "6034:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6034:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6024:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6024:2:13"
																},
																"nativeSrc": "6024:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6024:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6015:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6015:5:13"
																}
															]
														},
														{
															"nativeSrc": "6058:14:13",
															"nodeType": "YulAssignment",
															"src": "6058:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6067:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6067:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6070:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6070:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6063:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6063:3:13"
																},
																"nativeSrc": "6063:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6063:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6058:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6058:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6015:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6027:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5945:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5963:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "5966:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6000:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6058:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6070:1:13",
														"valueSize": 1
													}
												],
												"id": 2595,
												"nodeType": "InlineAssembly",
												"src": "5922:160:13"
											},
											{
												"AST": {
													"nativeSrc": "6100:151:13",
													"nodeType": "YulBlock",
													"src": "6100:151:13",
													"statements": [
														{
															"nativeSrc": "6114:24:13",
															"nodeType": "YulAssignment",
															"src": "6114:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6123:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6123:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6132:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6132:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6135:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6135:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6128:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6128:3:13"
																		},
																		"nativeSrc": "6128:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6128:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6119:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6119:3:13"
																},
																"nativeSrc": "6119:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6119:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6114:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6114:1:13"
																}
															]
														},
														{
															"nativeSrc": "6151:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6151:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6164:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6164:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6169:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6169:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6160:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6160:3:13"
																},
																"nativeSrc": "6160:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6160:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6155:1:13",
																	"nodeType": "YulTypedName",
																	"src": "6155:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6184:30:13",
															"nodeType": "YulAssignment",
															"src": "6184:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6196:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6196:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6207:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:13",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6211:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6211:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6203:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6203:3:13"
																		},
																		"nativeSrc": "6203:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6203:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6193:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6193:2:13"
																},
																"nativeSrc": "6193:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6193:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6184:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6184:5:13"
																}
															]
														},
														{
															"nativeSrc": "6227:14:13",
															"nodeType": "YulAssignment",
															"src": "6227:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6236:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6236:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6239:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6239:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6232:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6232:3:13"
																},
																"nativeSrc": "6232:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6232:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6227:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6227:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6184:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6196:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6114:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6132:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6135:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6169:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6227:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6239:1:13",
														"valueSize": 1
													}
												],
												"id": 2596,
												"nodeType": "InlineAssembly",
												"src": "6091:160:13"
											},
											{
												"AST": {
													"nativeSrc": "6269:151:13",
													"nodeType": "YulBlock",
													"src": "6269:151:13",
													"statements": [
														{
															"nativeSrc": "6283:24:13",
															"nodeType": "YulAssignment",
															"src": "6283:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6292:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6292:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6301:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6301:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6304:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6304:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6297:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6297:3:13"
																		},
																		"nativeSrc": "6297:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6297:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6288:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6288:3:13"
																},
																"nativeSrc": "6288:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6288:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6283:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6283:1:13"
																}
															]
														},
														{
															"nativeSrc": "6320:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6320:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6333:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6333:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6338:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6338:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6329:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:13"
																},
																"nativeSrc": "6329:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6329:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6324:1:13",
																	"nodeType": "YulTypedName",
																	"src": "6324:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6353:30:13",
															"nodeType": "YulAssignment",
															"src": "6353:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6365:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6365:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6376:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6376:2:13",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6380:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6380:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6372:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6372:3:13"
																		},
																		"nativeSrc": "6372:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6372:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6362:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6362:2:13"
																},
																"nativeSrc": "6362:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6362:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6353:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6353:5:13"
																}
															]
														},
														{
															"nativeSrc": "6396:14:13",
															"nodeType": "YulAssignment",
															"src": "6396:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6405:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6405:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6408:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6408:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6401:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6401:3:13"
																},
																"nativeSrc": "6401:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6401:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6396:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6396:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6353:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6365:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6283:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6301:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6304:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6338:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6396:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6408:1:13",
														"valueSize": 1
													}
												],
												"id": 2597,
												"nodeType": "InlineAssembly",
												"src": "6260:160:13"
											},
											{
												"AST": {
													"nativeSrc": "6438:151:13",
													"nodeType": "YulBlock",
													"src": "6438:151:13",
													"statements": [
														{
															"nativeSrc": "6452:24:13",
															"nodeType": "YulAssignment",
															"src": "6452:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6461:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6461:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6470:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6470:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6473:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6473:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:13"
																		},
																		"nativeSrc": "6466:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6466:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6457:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6457:3:13"
																},
																"nativeSrc": "6457:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6457:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6452:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6452:1:13"
																}
															]
														},
														{
															"nativeSrc": "6489:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6489:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6502:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6502:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6507:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6507:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6498:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:13"
																},
																"nativeSrc": "6498:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6498:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6493:1:13",
																	"nodeType": "YulTypedName",
																	"src": "6493:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6522:30:13",
															"nodeType": "YulAssignment",
															"src": "6522:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6534:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6534:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6545:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6545:2:13",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6549:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6549:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6541:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6541:3:13"
																		},
																		"nativeSrc": "6541:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6541:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6531:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6531:2:13"
																},
																"nativeSrc": "6531:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6531:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6522:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6522:5:13"
																}
															]
														},
														{
															"nativeSrc": "6565:14:13",
															"nodeType": "YulAssignment",
															"src": "6565:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6574:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6574:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6577:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6577:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6570:3:13"
																},
																"nativeSrc": "6570:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6570:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6565:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6565:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6522:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6534:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6452:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6470:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6473:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6507:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6565:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6577:1:13",
														"valueSize": 1
													}
												],
												"id": 2598,
												"nodeType": "InlineAssembly",
												"src": "6429:160:13"
											},
											{
												"AST": {
													"nativeSrc": "6607:151:13",
													"nodeType": "YulBlock",
													"src": "6607:151:13",
													"statements": [
														{
															"nativeSrc": "6621:24:13",
															"nodeType": "YulAssignment",
															"src": "6621:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6630:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6630:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6639:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6639:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6642:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6642:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6635:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:13"
																		},
																		"nativeSrc": "6635:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6626:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6626:3:13"
																},
																"nativeSrc": "6626:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6626:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6621:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6621:1:13"
																}
															]
														},
														{
															"nativeSrc": "6658:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6658:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6671:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6671:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6676:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6676:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6667:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6667:3:13"
																},
																"nativeSrc": "6667:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6667:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6662:1:13",
																	"nodeType": "YulTypedName",
																	"src": "6662:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6691:30:13",
															"nodeType": "YulAssignment",
															"src": "6691:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6703:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6703:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6714:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6714:2:13",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6718:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6718:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6710:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:13"
																		},
																		"nativeSrc": "6710:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6710:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6700:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6700:2:13"
																},
																"nativeSrc": "6700:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6700:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6691:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6691:5:13"
																}
															]
														},
														{
															"nativeSrc": "6734:14:13",
															"nodeType": "YulAssignment",
															"src": "6734:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6743:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6743:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6746:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6746:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6739:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6739:3:13"
																},
																"nativeSrc": "6739:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6739:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6734:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6734:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6691:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6703:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6621:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6639:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6642:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6676:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6734:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6746:1:13",
														"valueSize": 1
													}
												],
												"id": 2599,
												"nodeType": "InlineAssembly",
												"src": "6598:160:13"
											},
											{
												"AST": {
													"nativeSrc": "6776:151:13",
													"nodeType": "YulBlock",
													"src": "6776:151:13",
													"statements": [
														{
															"nativeSrc": "6790:24:13",
															"nodeType": "YulAssignment",
															"src": "6790:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6799:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6799:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6808:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6808:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6811:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6811:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6804:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:13"
																		},
																		"nativeSrc": "6804:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6804:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6795:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6795:3:13"
																},
																"nativeSrc": "6795:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6795:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6790:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6790:1:13"
																}
															]
														},
														{
															"nativeSrc": "6827:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6827:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6840:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6840:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6845:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6845:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6836:3:13"
																},
																"nativeSrc": "6836:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6836:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "6831:1:13",
																	"nodeType": "YulTypedName",
																	"src": "6831:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6860:30:13",
															"nodeType": "YulAssignment",
															"src": "6860:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "6872:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6872:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6883:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6883:2:13",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "6887:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6887:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6879:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:13"
																		},
																		"nativeSrc": "6879:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6879:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6869:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6869:2:13"
																},
																"nativeSrc": "6869:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6869:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "6860:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6860:5:13"
																}
															]
														},
														{
															"nativeSrc": "6903:14:13",
															"nodeType": "YulAssignment",
															"src": "6903:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "6912:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6912:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "6915:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6915:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6908:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6908:3:13"
																},
																"nativeSrc": "6908:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6908:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6903:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6903:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6860:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "6872:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6790:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6808:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6811:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6845:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6903:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6915:1:13",
														"valueSize": 1
													}
												],
												"id": 2600,
												"nodeType": "InlineAssembly",
												"src": "6767:160:13"
											},
											{
												"AST": {
													"nativeSrc": "6945:151:13",
													"nodeType": "YulBlock",
													"src": "6945:151:13",
													"statements": [
														{
															"nativeSrc": "6959:24:13",
															"nodeType": "YulAssignment",
															"src": "6959:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6968:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6968:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "6977:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6977:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "6980:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "6980:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6973:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6973:3:13"
																		},
																		"nativeSrc": "6973:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6973:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6964:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6964:3:13"
																},
																"nativeSrc": "6964:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6964:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6959:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6959:1:13"
																}
															]
														},
														{
															"nativeSrc": "6996:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6996:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7009:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7009:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7014:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7014:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7005:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7005:3:13"
																},
																"nativeSrc": "7005:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7005:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7000:1:13",
																	"nodeType": "YulTypedName",
																	"src": "7000:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7029:30:13",
															"nodeType": "YulAssignment",
															"src": "7029:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7041:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7041:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7052:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7052:2:13",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7056:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7056:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7048:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7048:3:13"
																		},
																		"nativeSrc": "7048:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7048:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7038:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7038:2:13"
																},
																"nativeSrc": "7038:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7038:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7029:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7029:5:13"
																}
															]
														},
														{
															"nativeSrc": "7072:14:13",
															"nodeType": "YulAssignment",
															"src": "7072:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7081:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7081:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7084:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7084:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7077:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:13"
																},
																"nativeSrc": "7077:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7077:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7072:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7072:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7029:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7041:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6959:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6977:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "6980:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7014:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7072:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7084:1:13",
														"valueSize": 1
													}
												],
												"id": 2601,
												"nodeType": "InlineAssembly",
												"src": "6936:160:13"
											},
											{
												"AST": {
													"nativeSrc": "7114:151:13",
													"nodeType": "YulBlock",
													"src": "7114:151:13",
													"statements": [
														{
															"nativeSrc": "7128:24:13",
															"nodeType": "YulAssignment",
															"src": "7128:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7137:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7137:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7146:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7146:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7149:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7149:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7142:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:13"
																		},
																		"nativeSrc": "7142:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7142:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7133:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:13"
																},
																"nativeSrc": "7133:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7133:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7128:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7128:1:13"
																}
															]
														},
														{
															"nativeSrc": "7165:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7165:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7178:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7178:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7183:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7183:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7174:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:13"
																},
																"nativeSrc": "7174:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7174:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7169:1:13",
																	"nodeType": "YulTypedName",
																	"src": "7169:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7198:30:13",
															"nodeType": "YulAssignment",
															"src": "7198:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7210:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7210:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7221:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7221:2:13",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7225:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7225:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7217:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7217:3:13"
																		},
																		"nativeSrc": "7217:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7217:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7207:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7207:2:13"
																},
																"nativeSrc": "7207:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7207:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7198:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7198:5:13"
																}
															]
														},
														{
															"nativeSrc": "7241:14:13",
															"nodeType": "YulAssignment",
															"src": "7241:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7250:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7250:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7253:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7253:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7246:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7246:3:13"
																},
																"nativeSrc": "7246:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7246:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7241:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7241:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7198:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7210:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7128:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7146:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7149:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7183:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7241:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7253:1:13",
														"valueSize": 1
													}
												],
												"id": 2602,
												"nodeType": "InlineAssembly",
												"src": "7105:160:13"
											},
											{
												"AST": {
													"nativeSrc": "7283:151:13",
													"nodeType": "YulBlock",
													"src": "7283:151:13",
													"statements": [
														{
															"nativeSrc": "7297:24:13",
															"nodeType": "YulAssignment",
															"src": "7297:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7306:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7306:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7315:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7315:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7318:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7318:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7311:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7311:3:13"
																		},
																		"nativeSrc": "7311:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7311:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7302:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:13"
																},
																"nativeSrc": "7302:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7302:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7297:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7297:1:13"
																}
															]
														},
														{
															"nativeSrc": "7334:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7334:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7347:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7347:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7352:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7352:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7343:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7343:3:13"
																},
																"nativeSrc": "7343:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7343:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7338:1:13",
																	"nodeType": "YulTypedName",
																	"src": "7338:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7367:30:13",
															"nodeType": "YulAssignment",
															"src": "7367:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7379:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7379:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7390:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:13",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7394:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7394:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7386:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7386:3:13"
																		},
																		"nativeSrc": "7386:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7386:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7376:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7376:2:13"
																},
																"nativeSrc": "7376:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7376:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7367:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7367:5:13"
																}
															]
														},
														{
															"nativeSrc": "7410:14:13",
															"nodeType": "YulAssignment",
															"src": "7410:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7419:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7419:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7422:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7422:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7415:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7415:3:13"
																},
																"nativeSrc": "7415:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7415:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7410:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7410:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7367:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7379:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7297:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7315:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7318:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7352:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7410:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7422:1:13",
														"valueSize": 1
													}
												],
												"id": 2603,
												"nodeType": "InlineAssembly",
												"src": "7274:160:13"
											},
											{
												"AST": {
													"nativeSrc": "7452:151:13",
													"nodeType": "YulBlock",
													"src": "7452:151:13",
													"statements": [
														{
															"nativeSrc": "7466:24:13",
															"nodeType": "YulAssignment",
															"src": "7466:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7475:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7475:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7484:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7484:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7487:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7487:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7480:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7480:3:13"
																		},
																		"nativeSrc": "7480:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7480:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7471:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:13"
																},
																"nativeSrc": "7471:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7471:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7466:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7466:1:13"
																}
															]
														},
														{
															"nativeSrc": "7503:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7503:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7516:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7516:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7521:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7521:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7512:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:13"
																},
																"nativeSrc": "7512:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7512:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7507:1:13",
																	"nodeType": "YulTypedName",
																	"src": "7507:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7536:30:13",
															"nodeType": "YulAssignment",
															"src": "7536:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7548:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7548:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7559:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7559:2:13",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7563:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7563:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7555:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:13"
																		},
																		"nativeSrc": "7555:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7555:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7545:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:13"
																},
																"nativeSrc": "7545:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7545:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7536:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7536:5:13"
																}
															]
														},
														{
															"nativeSrc": "7579:14:13",
															"nodeType": "YulAssignment",
															"src": "7579:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7588:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7588:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7591:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7591:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7584:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7584:3:13"
																},
																"nativeSrc": "7584:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7584:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7579:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7579:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7536:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7548:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7466:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7484:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7487:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7521:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7579:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7591:1:13",
														"valueSize": 1
													}
												],
												"id": 2604,
												"nodeType": "InlineAssembly",
												"src": "7443:160:13"
											},
											{
												"AST": {
													"nativeSrc": "7621:151:13",
													"nodeType": "YulBlock",
													"src": "7621:151:13",
													"statements": [
														{
															"nativeSrc": "7635:24:13",
															"nodeType": "YulAssignment",
															"src": "7635:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7644:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7644:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7653:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7653:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7656:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7656:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7649:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7649:3:13"
																		},
																		"nativeSrc": "7649:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7649:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7640:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7640:3:13"
																},
																"nativeSrc": "7640:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7640:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7635:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7635:1:13"
																}
															]
														},
														{
															"nativeSrc": "7672:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7672:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7685:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7685:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7690:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7690:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7681:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:13"
																},
																"nativeSrc": "7681:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7681:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7676:1:13",
																	"nodeType": "YulTypedName",
																	"src": "7676:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7705:30:13",
															"nodeType": "YulAssignment",
															"src": "7705:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7717:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7717:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7728:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7728:2:13",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7732:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7732:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7724:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:13"
																		},
																		"nativeSrc": "7724:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7724:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7714:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7714:2:13"
																},
																"nativeSrc": "7714:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7714:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7705:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7705:5:13"
																}
															]
														},
														{
															"nativeSrc": "7748:14:13",
															"nodeType": "YulAssignment",
															"src": "7748:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7757:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7757:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7760:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7760:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7753:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7753:3:13"
																},
																"nativeSrc": "7753:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7753:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7748:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7748:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7705:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7717:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7635:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7653:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7656:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7690:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7748:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7760:1:13",
														"valueSize": 1
													}
												],
												"id": 2605,
												"nodeType": "InlineAssembly",
												"src": "7612:160:13"
											},
											{
												"AST": {
													"nativeSrc": "7790:151:13",
													"nodeType": "YulBlock",
													"src": "7790:151:13",
													"statements": [
														{
															"nativeSrc": "7804:24:13",
															"nodeType": "YulAssignment",
															"src": "7804:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7813:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7813:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7822:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7822:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7825:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7825:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7818:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7818:3:13"
																		},
																		"nativeSrc": "7818:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7818:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7809:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:13"
																},
																"nativeSrc": "7809:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7809:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7804:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7804:1:13"
																}
															]
														},
														{
															"nativeSrc": "7841:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7841:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7854:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7854:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7859:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7859:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7850:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7850:3:13"
																},
																"nativeSrc": "7850:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7850:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "7845:1:13",
																	"nodeType": "YulTypedName",
																	"src": "7845:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7874:30:13",
															"nodeType": "YulAssignment",
															"src": "7874:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "7886:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7886:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7897:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7897:2:13",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "7901:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7901:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7893:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7893:3:13"
																		},
																		"nativeSrc": "7893:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7893:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7883:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7883:2:13"
																},
																"nativeSrc": "7883:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7883:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "7874:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7874:5:13"
																}
															]
														},
														{
															"nativeSrc": "7917:14:13",
															"nodeType": "YulAssignment",
															"src": "7917:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "7926:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7926:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "7929:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7929:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7922:3:13"
																},
																"nativeSrc": "7922:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7922:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7917:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7917:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7874:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "7886:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7804:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7822:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7825:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7859:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7917:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7929:1:13",
														"valueSize": 1
													}
												],
												"id": 2606,
												"nodeType": "InlineAssembly",
												"src": "7781:160:13"
											},
											{
												"AST": {
													"nativeSrc": "7959:151:13",
													"nodeType": "YulBlock",
													"src": "7959:151:13",
													"statements": [
														{
															"nativeSrc": "7973:24:13",
															"nodeType": "YulAssignment",
															"src": "7973:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7982:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7982:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "7991:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7991:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "7994:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "7994:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7987:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7987:3:13"
																		},
																		"nativeSrc": "7987:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7987:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7978:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7978:3:13"
																},
																"nativeSrc": "7978:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7978:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7973:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7973:1:13"
																}
															]
														},
														{
															"nativeSrc": "8010:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8010:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8023:3:13",
																		"nodeType": "YulLiteral",
																		"src": "8023:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8028:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8028:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8019:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8019:3:13"
																},
																"nativeSrc": "8019:11:13",
																"nodeType": "YulFunctionCall",
																"src": "8019:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "8014:1:13",
																	"nodeType": "YulTypedName",
																	"src": "8014:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8043:30:13",
															"nodeType": "YulAssignment",
															"src": "8043:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "8055:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8055:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8066:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8066:2:13",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "8070:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8070:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8062:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8062:3:13"
																		},
																		"nativeSrc": "8062:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8062:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8052:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8052:2:13"
																},
																"nativeSrc": "8052:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8052:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "8043:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8043:5:13"
																}
															]
														},
														{
															"nativeSrc": "8086:14:13",
															"nodeType": "YulAssignment",
															"src": "8086:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nativeSrc": "8095:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8095:1:13"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8098:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8098:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8091:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:13"
																},
																"nativeSrc": "8091:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8091:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8086:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8086:1:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "8043:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "8055:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7973:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7991:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "7994:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "8028:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "8086:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "8098:1:13",
														"valueSize": 1
													}
												],
												"id": 2607,
												"nodeType": "InlineAssembly",
												"src": "7950:160:13"
											},
											{
												"AST": {
													"nativeSrc": "8128:124:13",
													"nodeType": "YulBlock",
													"src": "8128:124:13",
													"statements": [
														{
															"nativeSrc": "8142:24:13",
															"nodeType": "YulAssignment",
															"src": "8142:24:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8151:3:13",
																		"nodeType": "YulLiteral",
																		"src": "8151:3:13",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nativeSrc": "8160:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8160:1:13"
																			},
																			{
																				"name": "r",
																				"nativeSrc": "8163:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8163:1:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8156:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:13"
																		},
																		"nativeSrc": "8156:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8156:9:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8147:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:13"
																},
																"nativeSrc": "8147:19:13",
																"nodeType": "YulFunctionCall",
																"src": "8147:19:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8142:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8142:1:13"
																}
															]
														},
														{
															"nativeSrc": "8179:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8179:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8192:3:13",
																		"nodeType": "YulLiteral",
																		"src": "8192:3:13",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nativeSrc": "8197:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8197:1:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8188:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:13"
																},
																"nativeSrc": "8188:11:13",
																"nodeType": "YulFunctionCall",
																"src": "8188:11:13"
															},
															"variables": [
																{
																	"name": "f",
																	"nativeSrc": "8183:1:13",
																	"nodeType": "YulTypedName",
																	"src": "8183:1:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8212:30:13",
															"nodeType": "YulAssignment",
															"src": "8212:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nativeSrc": "8224:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8224:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8235:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8235:2:13",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nativeSrc": "8239:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "8239:1:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8231:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8231:3:13"
																		},
																		"nativeSrc": "8231:10:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8231:10:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8221:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8221:2:13"
																},
																"nativeSrc": "8221:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8221:21:13"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nativeSrc": "8212:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8212:5:13"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "8212:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2584,
														"isOffset": false,
														"isSlot": false,
														"src": "8224:5:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "8142:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "8160:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "8163:1:13",
														"valueSize": 1
													},
													{
														"declaration": 2546,
														"isOffset": false,
														"isSlot": false,
														"src": "8197:1:13",
														"valueSize": 1
													}
												],
												"id": 2608,
												"nodeType": "InlineAssembly",
												"src": "8119:133:13"
											},
											{
												"assignments": [
													2610
												],
												"declarations": [
													{
														"constant": false,
														"id": 2610,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nameLocation": "8269:13:13",
														"nodeType": "VariableDeclaration",
														"scope": 2655,
														"src": "8262:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2609,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8262:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2614,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2611,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "8285:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 2612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8293:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8285:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8262:55:13"
											},
											{
												"assignments": [
													2616
												],
												"declarations": [
													{
														"constant": false,
														"id": 2616,
														"mutability": "mutable",
														"name": "tickLow",
														"nameLocation": "8352:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 2655,
														"src": "8346:13:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2615,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8346:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2626,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2619,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2610,
																			"src": "8369:13:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8385:37:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8369:53:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2622,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8368:55:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8427:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8368:62:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8362:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2617,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8362:5:13",
															"typeDescriptions": {}
														}
													},
													"id": 2625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8362:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8346:85:13"
											},
											{
												"assignments": [
													2628
												],
												"declarations": [
													{
														"constant": false,
														"id": 2628,
														"mutability": "mutable",
														"name": "tickHi",
														"nameLocation": "8447:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2655,
														"src": "8441:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2627,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8441:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2638,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2631,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2610,
																			"src": "8463:13:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8479:39:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8463:55:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2634,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8462:57:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8523:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8462:64:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8456:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2629,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8456:5:13",
															"typeDescriptions": {}
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8456:71:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8441:86:13"
											},
											{
												"expression": {
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2639,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2523,
														"src": "8538:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2640,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2616,
																"src": "8545:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2641,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "8556:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8545:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2645,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2628,
																			"src": "8594:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2644,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "8575:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 2646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8575:26:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2647,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2520,
																	"src": "8605:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8575:42:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 2650,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2616,
																"src": "8629:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8575:61:13",
															"trueExpression": {
																"id": 2649,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "8620:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 2652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8545:91:13",
														"trueExpression": {
															"id": 2643,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2616,
															"src": "8565:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8538:98:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2654,
												"nodeType": "ExpressionStatement",
												"src": "8538:98:13"
											}
										]
									},
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "3949:408:13",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nameLocation": "4371:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "4398:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "4390:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2519,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4390:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4389:22:13"
									},
									"returnParameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "4441:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "4435:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2522,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4435:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4434:12:13"
									},
									"scope": 2657,
									"src": "4362:4281:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2658,
							"src": "306:8339:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:8600:13"
				},
				"id": 13
			}
		}
	}
}