{
	"id": "04999f327521a06e5889250c72363d2c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/UniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\nimport \"./lib/Tick.sol\";\r\nimport \"./lib/Position.sol\";\r\nimport \"./lib/TickBitmap.sol\";\r\nimport \"./interfaces/callback/IUniswapV3MintCallback.sol\";\r\nimport \"./interfaces/callback/IUniswapV3SwapCallback.sol\";\r\nimport \"./interfaces/pool/IUniswapV3PoolEvents.sol\";\r\nimport \"./interfaces/IERC20.sol\";\r\n\r\ncontract UniswapV3Pool is \r\n    IUniswapV3PoolEvents\r\n{\r\n    using Tick for mapping(int24 => Tick.Info);\r\n    using Position for mapping(bytes32 => Position.Info);\r\n    using Position for Position.Info;\r\n    using TickBitmap for mapping(int16 => uint256);\r\n\r\n    int24 internal constant MIN_TICK = -887272;\r\n    int24 internal constant MAX_TICK = -MIN_TICK;\r\n\r\n    error InvalidTickRange();\r\n    error ZeroLiquidity();\r\n    error InsufficientInputAmount();\r\n\r\n    // 池子代币，不可变\r\n    address public immutable token0;\r\n    address public immutable token1;\r\n\r\n    // 打包一起读取的变量\r\n    struct Slot0 {\r\n        // 当前 sqrt(P)\r\n        uint160 sqrtPriceX96;\r\n        // 当前 tick\r\n        int24 tick;\r\n    }\r\n    Slot0 public slot0;\r\n\r\n    // 流动性数量，L。\r\n    uint128 public liquidity;\r\n\r\n    // Ticks 信息\r\n    mapping(int24 => Tick.Info) public ticks;\r\n    // Ticks 位图\r\n    mapping(int16 => uint256) public tickBitmap;\r\n    // 头寸信息\r\n    mapping(bytes32 => Position.Info) public positions;\r\n\r\n    //构造函数\r\n    constructor(\r\n        address token0_,\r\n        address token1_,\r\n        uint160 sqrtPriceX96,\r\n        int24 tick\r\n    ) {\r\n        token0 = token0_;\r\n        token1 = token1_;\r\n        slot0 = Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick});\r\n    }\r\n\r\n    //铸造\r\n    function mint(\r\n        address owner,\r\n        int24 lowerTick,\r\n        int24 upperTick,\r\n        uint128 amount,\r\n        bytes calldata data // <--- 新行\r\n    ) external returns (uint256 amount0, uint256 amount1) {\r\n        if (\r\n            lowerTick >= upperTick ||\r\n            lowerTick < MIN_TICK ||\r\n            upperTick > MAX_TICK\r\n        ) revert InvalidTickRange();\r\n        if (amount == 0) revert ZeroLiquidity();\r\n\r\n        bool flippedLower = ticks.update(lowerTick, amount);\r\n        bool flippedUpper = ticks.update(upperTick, amount);\r\n        if(flippedLower) {\r\n            tickBitmap.flipTick(lowerTick, 1);\r\n        }\r\n        if(flippedUpper) {\r\n            tickBitmap.flipTick(upperTick, 1);\r\n        }\r\n\r\n        Position.Info storage position = positions.get(\r\n            owner,\r\n            lowerTick,\r\n            upperTick\r\n        );\r\n        position.update(amount);\r\n\r\n        amount0 = 0.998976618347425280 ether;\r\n        amount1 = 5000 ether;\r\n\r\n        liquidity += uint128(amount);\r\n\r\n        uint256 balance0Before;\r\n        uint256 balance1Before;\r\n        if (amount0 > 0) balance0Before = balance0();\r\n        if (amount1 > 0) balance1Before = balance1();\r\n        IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback(\r\n            amount0,\r\n            amount1,\r\n            data\r\n        );\r\n        if (amount0 > 0 && balance0Before + amount0 > balance0())\r\n            revert InsufficientInputAmount();\r\n        if (amount1 > 0 && balance1Before + amount1 > balance1())\r\n            revert InsufficientInputAmount();\r\n\r\n        emit Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1);\r\n    }\r\n    \r\n    function swap(address recipient, bytes calldata data)\r\n        public\r\n        returns (int256 amount0, int256 amount1)\r\n    {\r\n        int24 nextTick = 85184;\r\n        uint160 nextPrice = 5604469350942327889444743441197;\r\n        amount0 = -0.008396714242162444 ether;\r\n        amount1 = 42 ether;\r\n        (slot0.tick, slot0.sqrtPriceX96) = (nextTick, nextPrice);\r\n        \r\n        IERC20(token0).transfer(recipient, uint256(-amount0));\r\n        uint256 balance1Before = balance1();\r\n        IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(\r\n            amount0,\r\n            amount1,\r\n            data\r\n        );\r\n        if (balance1Before + uint256(amount1) < balance1())\r\n            revert InsufficientInputAmount();\r\n\r\n        emit Swap(\r\n            msg.sender,\r\n            recipient,\r\n            amount0,\r\n            amount1,\r\n            slot0.sqrtPriceX96,\r\n            liquidity,\r\n            slot0.tick\r\n        );\r\n    }\r\n\r\n    //代币0余额\r\n    function balance0() internal view returns (uint256 balance) {\r\n        balance = IERC20(token0).balanceOf(address(this));\r\n    }\r\n\r\n    //代币1余额\r\n    function balance1() internal view returns (uint256 balance) {\r\n        balance = IERC20(token1).balanceOf(address(this));\r\n    }\r\n\r\n}\r\n"
			},
			"src/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Minimal ERC20 interface for Uniswap\r\n/// @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3\r\ninterface IERC20 {\r\n    /// @notice Returns the balance of a token\r\n    /// @param account The account for which to look up the number of tokens it has, i.e. its balance\r\n    /// @return The number of tokens held by the account\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /// @notice Transfers the amount of token from the `msg.sender` to the recipient\r\n    /// @param recipient The account that will receive the amount transferred\r\n    /// @param amount The number of tokens to send from the sender to the recipient\r\n    /// @return Returns true for a successful transfer, false for an unsuccessful transfer\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /// @notice Returns the current allowance given to a spender by an owner\r\n    /// @param owner The account of the token owner\r\n    /// @param spender The account of the token spender\r\n    /// @return The current allowance granted by `owner` to `spender`\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /// @notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\r\n    /// @param spender The account which will be allowed to spend a given amount of the owners tokens\r\n    /// @param amount The amount of tokens allowed to be used by `spender`\r\n    /// @return Returns true for a successful approval, false for unsuccessful\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /// @notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\r\n    /// @param sender The account from which the transfer will be initiated\r\n    /// @param recipient The recipient of the transfer\r\n    /// @param amount The amount of the transfer\r\n    /// @return Returns true for a successful transfer, false for unsuccessful\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /// @notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\r\n    /// @param from The account from which the tokens were sent, i.e. the balance decreased\r\n    /// @param to The account to which the tokens were sent, i.e. the balance increased\r\n    /// @param value The amount of tokens that were transferred\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /// @notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\r\n    /// @param owner The account that approved spending of its tokens\r\n    /// @param spender The account for which the spending allowance was modified\r\n    /// @param value The new allowance from the owner to the spender\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Events emitted by a pool\r\n/// @notice Contains all events emitted by the pool\r\ninterface IUniswapV3PoolEvents {\r\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\r\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\r\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\r\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\r\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\r\n\r\n    /// @notice Emitted when liquidity is minted for a given position\r\n    /// @param sender The address that minted the liquidity\r\n    /// @param owner The owner of the position and recipient of any minted liquidity\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity minted to the position range\r\n    /// @param amount0 How much token0 was required for the minted liquidity\r\n    /// @param amount1 How much token1 was required for the minted liquidity\r\n    event Mint(\r\n        address sender,\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted when fees are collected by the owner of a position\r\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\r\n    /// @param owner The owner of the position for which fees are collected\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount0 The amount of token0 fees collected\r\n    /// @param amount1 The amount of token1 fees collected\r\n    event Collect(\r\n        address indexed owner,\r\n        address recipient,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount0,\r\n        uint128 amount1\r\n    );\r\n\r\n    /// @notice Emitted when a position's liquidity is removed\r\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\r\n    /// @param owner The owner of the position for which liquidity is removed\r\n    /// @param tickLower The lower tick of the position\r\n    /// @param tickUpper The upper tick of the position\r\n    /// @param amount The amount of liquidity to remove\r\n    /// @param amount0 The amount of token0 withdrawn\r\n    /// @param amount1 The amount of token1 withdrawn\r\n    event Burn(\r\n        address indexed owner,\r\n        int24 indexed tickLower,\r\n        int24 indexed tickUpper,\r\n        uint128 amount,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any swaps between token0 and token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the output of the swap\r\n    /// @param amount0 The delta of the token0 balance of the pool\r\n    /// @param amount1 The delta of the token1 balance of the pool\r\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\r\n    /// @param liquidity The liquidity of the pool after the swap\r\n    /// @param tick The log base 1.0001 of price of the pool after the swap\r\n    event Swap(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        int256 amount0,\r\n        int256 amount1,\r\n        uint160 sqrtPriceX96,\r\n        uint128 liquidity,\r\n        int24 tick\r\n    );\r\n\r\n    /// @notice Emitted by the pool for any flashes of token0/token1\r\n    /// @param sender The address that initiated the swap call, and that received the callback\r\n    /// @param recipient The address that received the tokens from flash\r\n    /// @param amount0 The amount of token0 that was flashed\r\n    /// @param amount1 The amount of token1 that was flashed\r\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\r\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\r\n    event Flash(\r\n        address indexed sender,\r\n        address indexed recipient,\r\n        uint256 amount0,\r\n        uint256 amount1,\r\n        uint256 paid0,\r\n        uint256 paid1\r\n    );\r\n\r\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\r\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\r\n    /// just before a mint/swap/burn.\r\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\r\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\r\n    event IncreaseObservationCardinalityNext(\r\n        uint16 observationCardinalityNextOld,\r\n        uint16 observationCardinalityNextNew\r\n    );\r\n\r\n    /// @notice Emitted when the protocol fee is changed by the pool\r\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\r\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\r\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\r\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\r\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\r\n\r\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\r\n    /// @param sender The address that collects the protocol fees\r\n    /// @param recipient The address that receives the collected protocol fees\r\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\r\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\r\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\r\n}\r\n"
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#swap\r\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\r\ninterface IUniswapV3SwapCallback {\r\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\r\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\r\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\r\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\r\n    function uniswapV3SwapCallback(\r\n        int256 amount0Delta,\r\n        int256 amount1Delta,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\r\npragma solidity >=0.5.0;\r\n\r\n/// @title Callback for IUniswapV3PoolActions#mint\r\n/// @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface\r\ninterface IUniswapV3MintCallback {\r\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\r\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\r\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\r\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\r\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\r\n    function uniswapV3MintCallback(\r\n        uint256 amount0Owed,\r\n        uint256 amount1Owed,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"src/lib/TickBitmap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\nimport './BitMath.sol';\r\n\r\n/// @title Packed tick initialized state library\r\n/// @notice Stores a packed mapping of tick index to its initialized state\r\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\r\nlibrary TickBitmap {\r\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\r\n    /// @param tick The tick for which to compute the position\r\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\r\n    /// @return bitPos The bit position in the word where the flag is stored\r\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\r\n        wordPos = int16(tick >> 8);\r\n        bitPos = uint8(uint24(tick % 256));\r\n\r\n    }\r\n\r\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\r\n    /// @param self The mapping in which to flip the tick\r\n    /// @param tick The tick to flip\r\n    /// @param tickSpacing The spacing between usable ticks\r\n    function flipTick(\r\n        mapping(int16 => uint256) storage self,\r\n        int24 tick,\r\n        int24 tickSpacing\r\n    ) internal {\r\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\r\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\r\n        uint256 mask = 1 << bitPos;\r\n        self[wordPos] ^= mask;\r\n    }\r\n\r\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\r\n    /// to the left (less than or equal to) or right (greater than) of the given tick\r\n    /// @param self The mapping in which to compute the next initialized tick\r\n    /// @param tick The starting tick\r\n    /// @param tickSpacing The spacing between usable ticks\r\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\r\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\r\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\r\n    function nextInitializedTickWithinOneWord(\r\n        mapping(int16 => uint256) storage self,\r\n        int24 tick,\r\n        int24 tickSpacing,\r\n        bool lte\r\n    ) internal view returns (int24 next, bool initialized) {\r\n        int24 compressed = tick / tickSpacing;\r\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\r\n\r\n        if (lte) {\r\n            (int16 wordPos, uint8 bitPos) = position(compressed);\r\n            // all the 1s at or to the right of the current bitPos\r\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\r\n            uint256 masked = self[wordPos] & mask;\r\n\r\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\r\n            initialized = masked != 0;\r\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\r\n            next = initialized\r\n                ? (compressed - int24(uint24(bitPos - BitMath.mostSignificantBit(masked)))) * tickSpacing\r\n                : (compressed - int24(uint24(bitPos))) * tickSpacing;\r\n        } else {\r\n            // start from the word of the next tick, since the current tick state doesn't matter\r\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\r\n            // all the 1s at or to the left of the bitPos\r\n            uint256 mask = ~((1 << bitPos) - 1);\r\n            uint256 masked = self[wordPos] & mask;\r\n\r\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\r\n            initialized = masked != 0;\r\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\r\n            next = initialized\r\n                ? (compressed + 1 + int24(uint24((BitMath.leastSignificantBit(masked) - bitPos)))) * tickSpacing\r\n                : (compressed + 1 + int24(uint24((type(uint8).max - bitPos)))) * tickSpacing;\r\n        }\r\n    }\r\n}\r\n"
			},
			"src/lib/Position.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\nlibrary Position {\r\n    struct Info {\r\n        uint128 liquidity;\r\n    }\r\n    \r\n    function update(Info storage self, uint128 liquidityDelta) internal {\r\n        uint128 liquidityBefore = self.liquidity;\r\n        uint128 liquidityAfter = liquidityBefore + liquidityDelta;\r\n        self.liquidity = liquidityAfter;\r\n    }\r\n\r\n    function get(\r\n        mapping(bytes32 => Info) storage self,\r\n        address owner,\r\n        int24 lowerTick,\r\n        int24 upperTick\r\n    ) internal view returns (Position.Info storage position) {\r\n        position = self[\r\n            keccak256(abi.encodePacked(owner, lowerTick, upperTick))\r\n        ];\r\n    }\r\n\r\n}"
			},
			"src/lib/Tick.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\nlibrary Tick {\r\n    struct Info {\r\n        bool initialized;\r\n        uint128 liquidity;\r\n    }\r\n    \r\n    function update(\r\n        mapping(int24 => Tick.Info) storage self,\r\n        int24 tick,\r\n        uint128 liquidityDelta\r\n    ) internal returns (bool flipped) {\r\n        Tick.Info storage tickInfo = self[tick];\r\n        uint128 liquidityBefore = tickInfo.liquidity;\r\n        uint128 liquidityAfter = liquidityBefore + liquidityDelta;\r\n        if (liquidityBefore == 0) {\r\n            tickInfo.initialized = true;\r\n        }\r\n        tickInfo.liquidity = liquidityAfter;\r\n        flipped = (liquidityAfter == 0) != (liquidityBefore == 0);\r\n    }\r\n\r\n}"
			},
			"src/lib/BitMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.14;\r\n\r\n/// @title BitMath\r\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\r\nlibrary BitMath {\r\n    /// @notice Returns the index of the most significant bit of the number,\r\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\r\n    /// @dev The function satisfies the property:\r\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\r\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\r\n    /// @return r the index of the most significant bit\r\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\r\n        require(x > 0);\r\n\r\n        if (x >= 0x100000000000000000000000000000000) {\r\n            x >>= 128;\r\n            r += 128;\r\n        }\r\n        if (x >= 0x10000000000000000) {\r\n            x >>= 64;\r\n            r += 64;\r\n        }\r\n        if (x >= 0x100000000) {\r\n            x >>= 32;\r\n            r += 32;\r\n        }\r\n        if (x >= 0x10000) {\r\n            x >>= 16;\r\n            r += 16;\r\n        }\r\n        if (x >= 0x100) {\r\n            x >>= 8;\r\n            r += 8;\r\n        }\r\n        if (x >= 0x10) {\r\n            x >>= 4;\r\n            r += 4;\r\n        }\r\n        if (x >= 0x4) {\r\n            x >>= 2;\r\n            r += 2;\r\n        }\r\n        if (x >= 0x2) r += 1;\r\n    }\r\n\r\n    /// @notice Returns the index of the least significant bit of the number,\r\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\r\n    /// @dev The function satisfies the property:\r\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\r\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\r\n    /// @return r the index of the least significant bit\r\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\r\n        require(x > 0);\r\n\r\n        r = 255;\r\n        if (x & type(uint128).max > 0) {\r\n            r -= 128;\r\n        } else {\r\n            x >>= 128;\r\n        }\r\n        if (x & type(uint64).max > 0) {\r\n            r -= 64;\r\n        } else {\r\n            x >>= 64;\r\n        }\r\n        if (x & type(uint32).max > 0) {\r\n            r -= 32;\r\n        } else {\r\n            x >>= 32;\r\n        }\r\n        if (x & type(uint16).max > 0) {\r\n            r -= 16;\r\n        } else {\r\n            x >>= 16;\r\n        }\r\n        if (x & type(uint8).max > 0) {\r\n            r -= 8;\r\n        } else {\r\n            x >>= 8;\r\n        }\r\n        if (x & 0xf > 0) {\r\n            r -= 4;\r\n        } else {\r\n            x >>= 4;\r\n        }\r\n        if (x & 0x3 > 0) {\r\n            r -= 2;\r\n        } else {\r\n            x >>= 2;\r\n        }\r\n        if (x & 0x1 > 0) r -= 1;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"src/UniswapV3Pool.sol": {
				"UniswapV3Pool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1_",
									"type": "address"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InsufficientInputAmount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTickRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroLiquidity",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "lowerTick",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "upperTick",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/UniswapV3Pool.sol\":360:4652  contract UniswapV3Pool is ... */\n  mstore(0x40, 0xc0)\n    /* \"src/UniswapV3Pool.sol\":1431:1682  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/UniswapV3Pool.sol\":1574:1581  token0_ */\n  dup4\n    /* \"src/UniswapV3Pool.sol\":1565:1581  token0 = token0_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":1601:1608  token1_ */\n  dup3\n    /* \"src/UniswapV3Pool.sol\":1592:1608  token1 = token1_ */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":1627:1674  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"src/UniswapV3Pool.sol\":1648:1660  sqrtPriceX96 */\n  dup4\n    /* \"src/UniswapV3Pool.sol\":1627:1674  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"src/UniswapV3Pool.sol\":1668:1672  tick */\n  dup3\n    /* \"src/UniswapV3Pool.sol\":1627:1674  Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0x02\n  signextend\n  dup2\n  mstore\n  pop\n    /* \"src/UniswapV3Pool.sol\":1619:1624  slot0 */\n  0x00\n    /* \"src/UniswapV3Pool.sol\":1619:1674  slot0 = Slot0({sqrtPriceX96: sqrtPriceX96, tick: tick}) */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  signextend\n  0xffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":1431:1682  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"src/UniswapV3Pool.sol\":360:4652  contract UniswapV3Pool is ... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_25\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_27\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_28:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_30\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:967   */\ntag_14:\n    /* \"#utility.yul\":918:942   */\n  tag_32\n    /* \"#utility.yul\":936:941   */\n  dup2\n    /* \"#utility.yul\":918:942   */\n  tag_10\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":908:943   */\n  eq\n    /* \"#utility.yul\":898:961   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":957:958   */\n  0x00\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":947:959   */\n  revert\n    /* \"#utility.yul\":898:961   */\ntag_33:\n    /* \"#utility.yul\":845:967   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":973:1116   */\ntag_15:\n    /* \"#utility.yul\":1030:1035   */\n  0x00\n    /* \"#utility.yul\":1061:1067   */\n  dup2\n    /* \"#utility.yul\":1055:1068   */\n  mload\n    /* \"#utility.yul\":1046:1068   */\n  swap1\n  pop\n    /* \"#utility.yul\":1077:1110   */\n  tag_35\n    /* \"#utility.yul\":1104:1109   */\n  dup2\n    /* \"#utility.yul\":1077:1110   */\n  tag_14\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":973:1116   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1122:1212   */\ntag_16:\n    /* \"#utility.yul\":1157:1164   */\n  0x00\n    /* \"#utility.yul\":1200:1205   */\n  dup2\n    /* \"#utility.yul\":1197:1198   */\n  0x02\n    /* \"#utility.yul\":1186:1206   */\n  signextend\n    /* \"#utility.yul\":1175:1206   */\n  swap1\n  pop\n    /* \"#utility.yul\":1122:1212   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1218:1336   */\ntag_17:\n    /* \"#utility.yul\":1289:1311   */\n  tag_38\n    /* \"#utility.yul\":1305:1310   */\n  dup2\n    /* \"#utility.yul\":1289:1311   */\n  tag_16\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1282:1287   */\n  dup2\n    /* \"#utility.yul\":1279:1312   */\n  eq\n    /* \"#utility.yul\":1269:1330   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1326:1327   */\n  0x00\n    /* \"#utility.yul\":1323:1324   */\n  0x00\n    /* \"#utility.yul\":1316:1328   */\n  revert\n    /* \"#utility.yul\":1269:1330   */\ntag_39:\n    /* \"#utility.yul\":1218:1336   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1342:1481   */\ntag_18:\n    /* \"#utility.yul\":1397:1402   */\n  0x00\n    /* \"#utility.yul\":1428:1434   */\n  dup2\n    /* \"#utility.yul\":1422:1435   */\n  mload\n    /* \"#utility.yul\":1413:1435   */\n  swap1\n  pop\n    /* \"#utility.yul\":1444:1475   */\n  tag_41\n    /* \"#utility.yul\":1469:1474   */\n  dup2\n    /* \"#utility.yul\":1444:1475   */\n  tag_17\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1342:1481   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1487:2303   */\ntag_3:\n    /* \"#utility.yul\":1582:1588   */\n  0x00\n    /* \"#utility.yul\":1590:1596   */\n  0x00\n    /* \"#utility.yul\":1598:1604   */\n  0x00\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1655:1658   */\n  0x80\n    /* \"#utility.yul\":1643:1652   */\n  dup6\n    /* \"#utility.yul\":1634:1641   */\n  dup8\n    /* \"#utility.yul\":1630:1653   */\n  sub\n    /* \"#utility.yul\":1626:1659   */\n  slt\n    /* \"#utility.yul\":1623:1743   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1662:1741   */\n  tag_44\n  tag_8\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1623:1743   */\ntag_43:\n    /* \"#utility.yul\":1782:1783   */\n  0x00\n    /* \"#utility.yul\":1807:1871   */\n  tag_45\n    /* \"#utility.yul\":1863:1870   */\n  dup8\n    /* \"#utility.yul\":1854:1860   */\n  dup3\n    /* \"#utility.yul\":1843:1852   */\n  dup9\n    /* \"#utility.yul\":1839:1861   */\n  add\n    /* \"#utility.yul\":1807:1871   */\n  tag_13\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1797:1871   */\n  swap5\n  pop\n    /* \"#utility.yul\":1753:1881   */\n  pop\n    /* \"#utility.yul\":1920:1922   */\n  0x20\n    /* \"#utility.yul\":1946:2010   */\n  tag_46\n    /* \"#utility.yul\":2002:2009   */\n  dup8\n    /* \"#utility.yul\":1993:1999   */\n  dup3\n    /* \"#utility.yul\":1982:1991   */\n  dup9\n    /* \"#utility.yul\":1978:2000   */\n  add\n    /* \"#utility.yul\":1946:2010   */\n  tag_13\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1936:2010   */\n  swap4\n  pop\n    /* \"#utility.yul\":1891:2020   */\n  pop\n    /* \"#utility.yul\":2059:2061   */\n  0x40\n    /* \"#utility.yul\":2085:2149   */\n  tag_47\n    /* \"#utility.yul\":2141:2148   */\n  dup8\n    /* \"#utility.yul\":2132:2138   */\n  dup3\n    /* \"#utility.yul\":2121:2130   */\n  dup9\n    /* \"#utility.yul\":2117:2139   */\n  add\n    /* \"#utility.yul\":2085:2149   */\n  tag_15\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2075:2149   */\n  swap3\n  pop\n    /* \"#utility.yul\":2030:2159   */\n  pop\n    /* \"#utility.yul\":2198:2200   */\n  0x60\n    /* \"#utility.yul\":2224:2286   */\n  tag_48\n    /* \"#utility.yul\":2278:2285   */\n  dup8\n    /* \"#utility.yul\":2269:2275   */\n  dup3\n    /* \"#utility.yul\":2258:2267   */\n  dup9\n    /* \"#utility.yul\":2254:2276   */\n  add\n    /* \"#utility.yul\":2224:2286   */\n  tag_18\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":2214:2286   */\n  swap2\n  pop\n    /* \"#utility.yul\":2169:2296   */\n  pop\n    /* \"#utility.yul\":1487:2303   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"src/UniswapV3Pool.sol\":360:4652  contract UniswapV3Pool is ... */\ntag_6:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n  0x00\n  assignImmutable(\"0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/UniswapV3Pool.sol\":360:4652  contract UniswapV3Pool is ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x514ea4bf\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x514ea4bf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5339c296\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe3547335\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf30dba93\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1a686502\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3850c7bd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3c8a7d8d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"src/UniswapV3Pool.sol\":857:888  address public immutable token0 */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1159:1183  uint128 public liquidity */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1101:1119  Slot0 public slot0 */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1704:3372  function mint(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1352:1402  mapping(bytes32 => Position.Info) public positions */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1281:1324  mapping(int16 => uint256) public tickBitmap */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":895:926  address public immutable token1 */\n    tag_9:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":3384:4333  function swap(address recipient, bytes calldata data)... */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap3\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":1213:1253  mapping(int24 => Tick.Info) public ticks */\n    tag_11:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UniswapV3Pool.sol\":857:888  address public immutable token0 */\n    tag_14:\n      immutable(\"0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31\")\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1159:1183  uint128 public liquidity */\n    tag_18:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1101:1119  Slot0 public slot0 */\n    tag_22:\n      0x00\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1704:3372  function mint(... */\n    tag_28:\n        /* \"src/UniswapV3Pool.sol\":1889:1904  uint256 amount0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":1906:1921  uint256 amount1 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":1965:1974  upperTick */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":1952:1974  lowerTick >= upperTick */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":1952:1961  lowerTick */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":1952:1974  lowerTick >= upperTick */\n      0x02\n      signextend\n      slt\n      iszero\n        /* \"src/UniswapV3Pool.sol\":1952:2011  lowerTick >= upperTick ||... */\n      dup1\n      tag_58\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":658:665  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"src/UniswapV3Pool.sol\":1991:2011  lowerTick < MIN_TICK */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":1991:2000  lowerTick */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":1991:2011  lowerTick < MIN_TICK */\n      0x02\n      signextend\n      slt\n        /* \"src/UniswapV3Pool.sol\":1952:2011  lowerTick >= upperTick ||... */\n    tag_58:\n        /* \"src/UniswapV3Pool.sol\":1952:2048  lowerTick >= upperTick ||... */\n      dup1\n      tag_59\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":658:665  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"src/UniswapV3Pool.sol\":707:716  -MIN_TICK */\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"src/UniswapV3Pool.sol\":2028:2048  upperTick > MAX_TICK */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":2028:2037  upperTick */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":2028:2048  upperTick > MAX_TICK */\n      0x02\n      signextend\n      sgt\n        /* \"src/UniswapV3Pool.sol\":1952:2048  lowerTick >= upperTick ||... */\n    tag_59:\n        /* \"src/UniswapV3Pool.sol\":1934:2085  if (... */\n      iszero\n      tag_62\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2067:2085  InvalidTickRange() */\n      mload(0x40)\n      0x064847d000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":1934:2085  if (... */\n    tag_62:\n        /* \"src/UniswapV3Pool.sol\":2110:2111  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2100:2106  amount */\n      dup6\n        /* \"src/UniswapV3Pool.sol\":2100:2111  amount == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/UniswapV3Pool.sol\":2096:2135  if (amount == 0) revert ZeroLiquidity() */\n      tag_63\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2120:2135  ZeroLiquidity() */\n      mload(0x40)\n      0x1007454800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":2096:2135  if (amount == 0) revert ZeroLiquidity() */\n    tag_63:\n        /* \"src/UniswapV3Pool.sol\":2148:2165  bool flippedLower */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2168:2199  ticks.update(lowerTick, amount) */\n      tag_64\n        /* \"src/UniswapV3Pool.sol\":2181:2190  lowerTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2192:2198  amount */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2168:2173  ticks */\n      0x02\n        /* \"src/UniswapV3Pool.sol\":2168:2180  ticks.update */\n      tag_65\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2168:2199  ticks.update(lowerTick, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_64:\n        /* \"src/UniswapV3Pool.sol\":2148:2199  bool flippedLower = ticks.update(lowerTick, amount) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2210:2227  bool flippedUpper */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2230:2261  ticks.update(upperTick, amount) */\n      tag_66\n        /* \"src/UniswapV3Pool.sol\":2243:2252  upperTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2254:2260  amount */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2230:2235  ticks */\n      0x02\n        /* \"src/UniswapV3Pool.sol\":2230:2242  ticks.update */\n      tag_65\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2230:2261  ticks.update(upperTick, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_66:\n        /* \"src/UniswapV3Pool.sol\":2210:2261  bool flippedUpper = ticks.update(upperTick, amount) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2275:2287  flippedLower */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":2272:2349  if(flippedLower) {... */\n      iszero\n      tag_67\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2304:2337  tickBitmap.flipTick(lowerTick, 1) */\n      tag_68\n        /* \"src/UniswapV3Pool.sol\":2324:2333  lowerTick */\n      dup10\n        /* \"src/UniswapV3Pool.sol\":2335:2336  1 */\n      0x01\n        /* \"src/UniswapV3Pool.sol\":2304:2314  tickBitmap */\n      0x03\n        /* \"src/UniswapV3Pool.sol\":2304:2323  tickBitmap.flipTick */\n      tag_69\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2304:2337  tickBitmap.flipTick(lowerTick, 1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_68:\n        /* \"src/UniswapV3Pool.sol\":2272:2349  if(flippedLower) {... */\n    tag_67:\n        /* \"src/UniswapV3Pool.sol\":2362:2374  flippedUpper */\n      dup1\n        /* \"src/UniswapV3Pool.sol\":2359:2436  if(flippedUpper) {... */\n      iszero\n      tag_70\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2391:2424  tickBitmap.flipTick(upperTick, 1) */\n      tag_71\n        /* \"src/UniswapV3Pool.sol\":2411:2420  upperTick */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2422:2423  1 */\n      0x01\n        /* \"src/UniswapV3Pool.sol\":2391:2401  tickBitmap */\n      0x03\n        /* \"src/UniswapV3Pool.sol\":2391:2410  tickBitmap.flipTick */\n      tag_69\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2391:2424  tickBitmap.flipTick(upperTick, 1) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"src/UniswapV3Pool.sol\":2359:2436  if(flippedUpper) {... */\n    tag_70:\n        /* \"src/UniswapV3Pool.sol\":2448:2478  Position.Info storage position */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2481:2573  positions.get(... */\n      tag_72\n        /* \"src/UniswapV3Pool.sol\":2509:2514  owner */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2529:2538  lowerTick */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2553:2562  upperTick */\n      dup12\n        /* \"src/UniswapV3Pool.sol\":2481:2490  positions */\n      0x04\n        /* \"src/UniswapV3Pool.sol\":2481:2494  positions.get */\n      tag_73\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2481:2573  positions.get(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_72:\n        /* \"src/UniswapV3Pool.sol\":2448:2573  Position.Info storage position = positions.get(... */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2584:2607  position.update(amount) */\n      tag_74\n        /* \"src/UniswapV3Pool.sol\":2600:2606  amount */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":2584:2592  position */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":2584:2599  position.update */\n      tag_75\n      swap1\n        /* \"src/UniswapV3Pool.sol\":2584:2607  position.update(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"src/UniswapV3Pool.sol\":2630:2656  0.998976618347425280 ether */\n      0x0ddd13f10b84ee00\n        /* \"src/UniswapV3Pool.sol\":2620:2656  amount0 = 0.998976618347425280 ether */\n      swap5\n      pop\n        /* \"src/UniswapV3Pool.sol\":2677:2687  5000 ether */\n      0x010f0cf064dd59200000\n        /* \"src/UniswapV3Pool.sol\":2667:2687  amount1 = 5000 ether */\n      swap4\n      pop\n        /* \"src/UniswapV3Pool.sol\":2721:2727  amount */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2700:2709  liquidity */\n      0x01\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2700:2728  liquidity += uint128(amount) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/UniswapV3Pool.sol\":2741:2763  uint256 balance0Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2774:2796  uint256 balance1Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2821:2822  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2811:2818  amount0 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":2811:2822  amount0 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":2807:2851  if (amount0 > 0) balance0Before = balance0() */\n      iszero\n      tag_78\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2841:2851  balance0() */\n      tag_79\n        /* \"src/UniswapV3Pool.sol\":2841:2849  balance0 */\n      tag_80\n        /* \"src/UniswapV3Pool.sol\":2841:2851  balance0() */\n      jump\t// in\n    tag_79:\n        /* \"src/UniswapV3Pool.sol\":2824:2851  balance0Before = balance0() */\n      swap2\n      pop\n        /* \"src/UniswapV3Pool.sol\":2807:2851  if (amount0 > 0) balance0Before = balance0() */\n    tag_78:\n        /* \"src/UniswapV3Pool.sol\":2876:2877  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":2866:2873  amount1 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":2866:2877  amount1 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":2862:2906  if (amount1 > 0) balance1Before = balance1() */\n      iszero\n      tag_81\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":2896:2906  balance1() */\n      tag_82\n        /* \"src/UniswapV3Pool.sol\":2896:2904  balance1 */\n      tag_83\n        /* \"src/UniswapV3Pool.sol\":2896:2906  balance1() */\n      jump\t// in\n    tag_82:\n        /* \"src/UniswapV3Pool.sol\":2879:2906  balance1Before = balance1() */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":2862:2906  if (amount1 > 0) balance1Before = balance1() */\n    tag_81:\n        /* \"src/UniswapV3Pool.sol\":2940:2950  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":2917:2973  IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd3487997\n        /* \"src/UniswapV3Pool.sol\":2988:2995  amount0 */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3010:3017  amount1 */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3032:3036  data */\n      dup13\n      dup13\n        /* \"src/UniswapV3Pool.sol\":2917:3047  IUniswapV3MintCallback(msg.sender).uniswapV3MintCallback(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":3072:3073  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3062:3069  amount0 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":3062:3073  amount0 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3062:3114  amount0 > 0 && balance0Before + amount0 > balance0() */\n      dup1\n      iszero\n      tag_89\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":3104:3114  balance0() */\n      tag_90\n        /* \"src/UniswapV3Pool.sol\":3104:3112  balance0 */\n      tag_80\n        /* \"src/UniswapV3Pool.sol\":3104:3114  balance0() */\n      jump\t// in\n    tag_90:\n        /* \"src/UniswapV3Pool.sol\":3094:3101  amount0 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":3077:3091  balance0Before */\n      dup4\n        /* \"src/UniswapV3Pool.sol\":3077:3101  balance0Before + amount0 */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"src/UniswapV3Pool.sol\":3077:3114  balance0Before + amount0 > balance0() */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3062:3114  amount0 > 0 && balance0Before + amount0 > balance0() */\n    tag_89:\n        /* \"src/UniswapV3Pool.sol\":3058:3161  if (amount0 > 0 && balance0Before + amount0 > balance0())... */\n      iszero\n      tag_93\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":3136:3161  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":3058:3161  if (amount0 > 0 && balance0Before + amount0 > balance0())... */\n    tag_93:\n        /* \"src/UniswapV3Pool.sol\":3186:3187  0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3176:3183  amount1 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":3176:3187  amount1 > 0 */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3176:3228  amount1 > 0 && balance1Before + amount1 > balance1() */\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"src/UniswapV3Pool.sol\":3218:3228  balance1() */\n      tag_95\n        /* \"src/UniswapV3Pool.sol\":3218:3226  balance1 */\n      tag_83\n        /* \"src/UniswapV3Pool.sol\":3218:3228  balance1() */\n      jump\t// in\n    tag_95:\n        /* \"src/UniswapV3Pool.sol\":3208:3215  amount1 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":3191:3205  balance1Before */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":3191:3215  balance1Before + amount1 */\n      tag_96\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_96:\n        /* \"src/UniswapV3Pool.sol\":3191:3228  balance1Before + amount1 > balance1() */\n      gt\n        /* \"src/UniswapV3Pool.sol\":3176:3228  amount1 > 0 && balance1Before + amount1 > balance1() */\n    tag_94:\n        /* \"src/UniswapV3Pool.sol\":3172:3275  if (amount1 > 0 && balance1Before + amount1 > balance1())... */\n      iszero\n      tag_97\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":3250:3275  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":3172:3275  if (amount1 > 0 && balance1Before + amount1 > balance1())... */\n    tag_97:\n        /* \"src/UniswapV3Pool.sol\":3328:3337  upperTick */\n      dup11\n        /* \"src/UniswapV3Pool.sol\":3293:3364  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":3317:3326  lowerTick */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":3293:3364  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":3310:3315  owner */\n      dup15\n        /* \"src/UniswapV3Pool.sol\":3293:3364  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde\n        /* \"src/UniswapV3Pool.sol\":3298:3308  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":3339:3345  amount */\n      dup15\n        /* \"src/UniswapV3Pool.sol\":3347:3354  amount0 */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":3356:3363  amount1 */\n      dup13\n        /* \"src/UniswapV3Pool.sol\":3293:3364  Mint(msg.sender, owner, lowerTick, upperTick, amount, amount0, amount1) */\n      mload(0x40)\n      tag_98\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/UniswapV3Pool.sol\":1923:3372  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":1704:3372  function mint(... */\n      swap7\n      pop\n      swap7\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1352:1402  mapping(bytes32 => Position.Info) public positions */\n    tag_34:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1281:1324  mapping(int16 => uint256) public tickBitmap */\n    tag_39:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":895:926  address public immutable token1 */\n    tag_43:\n      immutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n      dup2\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":3384:4333  function swap(address recipient, bytes calldata data)... */\n    tag_48:\n        /* \"src/UniswapV3Pool.sol\":3472:3486  int256 amount0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3488:3502  int256 amount1 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3520:3534  int24 nextTick */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3537:3542  85184 */\n      0x014cc0\n        /* \"src/UniswapV3Pool.sol\":3520:3542  int24 nextTick = 85184 */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":3553:3570  uint160 nextPrice */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3573:3604  5604469350942327889444743441197 */\n      0x46bd046408013d67ed5d406b2d\n        /* \"src/UniswapV3Pool.sol\":3553:3604  uint160 nextPrice = 5604469350942327889444743441197 */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":3625:3652  -0.008396714242162444 ether */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffe22b3b9e50c0f4\n        /* \"src/UniswapV3Pool.sol\":3615:3652  amount0 = -0.008396714242162444 ether */\n      swap4\n      pop\n        /* \"src/UniswapV3Pool.sol\":3673:3681  42 ether */\n      0x0246ddf97976680000\n        /* \"src/UniswapV3Pool.sol\":3663:3681  amount1 = 42 ether */\n      swap3\n      pop\n        /* \"src/UniswapV3Pool.sol\":3728:3736  nextTick */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":3738:3747  nextPrice */\n      dup2\n        /* \"src/UniswapV3Pool.sol\":3693:3698  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3693:3703  slot0.tick */\n      0x00\n      add\n      0x14\n        /* \"src/UniswapV3Pool.sol\":3705:3710  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3705:3723  slot0.sqrtPriceX96 */\n      0x00\n      add\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3692:3748  (slot0.tick, slot0.sqrtPriceX96) = (nextTick, nextPrice) */\n      dup5\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      dup4\n      swap2\n      swap1\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      signextend\n      0xffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":3776:3782  token0 */\n      immutable(\"0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31\")\n        /* \"src/UniswapV3Pool.sol\":3769:3792  IERC20(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/UniswapV3Pool.sol\":3793:3802  recipient */\n      dup9\n        /* \"src/UniswapV3Pool.sol\":3813:3820  amount0 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":3812:3820  -amount0 */\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"src/UniswapV3Pool.sol\":3769:3822  IERC20(token0).transfer(recipient, uint256(-amount0)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap3\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      pop\n        /* \"src/UniswapV3Pool.sol\":3833:3855  uint256 balance1Before */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":3858:3868  balance1() */\n      tag_109\n        /* \"src/UniswapV3Pool.sol\":3858:3866  balance1 */\n      tag_83\n        /* \"src/UniswapV3Pool.sol\":3858:3868  balance1() */\n      jump\t// in\n    tag_109:\n        /* \"src/UniswapV3Pool.sol\":3833:3868  uint256 balance1Before = balance1() */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":3902:3912  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":3879:3935  IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfa461e33\n        /* \"src/UniswapV3Pool.sol\":3950:3957  amount0 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":3972:3979  amount1 */\n      dup7\n        /* \"src/UniswapV3Pool.sol\":3994:3998  data */\n      dup11\n      dup11\n        /* \"src/UniswapV3Pool.sol\":3879:4009  IUniswapV3SwapCallback(msg.sender).uniswapV3SwapCallback(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      revert(0x00, 0x00)\n    tag_112:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":4060:4070  balance1() */\n      tag_115\n        /* \"src/UniswapV3Pool.sol\":4060:4068  balance1 */\n      tag_83\n        /* \"src/UniswapV3Pool.sol\":4060:4070  balance1() */\n      jump\t// in\n    tag_115:\n        /* \"src/UniswapV3Pool.sol\":4049:4056  amount1 */\n      dup5\n        /* \"src/UniswapV3Pool.sol\":4024:4038  balance1Before */\n      dup3\n        /* \"src/UniswapV3Pool.sol\":4024:4057  balance1Before + uint256(amount1) */\n      tag_116\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_116:\n        /* \"src/UniswapV3Pool.sol\":4024:4070  balance1Before + uint256(amount1) < balance1() */\n      lt\n        /* \"src/UniswapV3Pool.sol\":4020:4117  if (balance1Before + uint256(amount1) < balance1())... */\n      iszero\n      tag_117\n      jumpi\n        /* \"src/UniswapV3Pool.sol\":4092:4117  InsufficientInputAmount() */\n      mload(0x40)\n      0x098fb56100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/UniswapV3Pool.sol\":4020:4117  if (balance1Before + uint256(amount1) < balance1())... */\n    tag_117:\n        /* \"src/UniswapV3Pool.sol\":4179:4188  recipient */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4135:4325  Swap(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":4154:4164  msg.sender */\n      caller\n        /* \"src/UniswapV3Pool.sol\":4135:4325  Swap(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67\n        /* \"src/UniswapV3Pool.sol\":4203:4210  amount0 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4225:4232  amount1 */\n      dup8\n        /* \"src/UniswapV3Pool.sol\":4247:4252  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4247:4265  slot0.sqrtPriceX96 */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":4280:4289  liquidity */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/UniswapV3Pool.sol\":4304:4309  slot0 */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4304:4314  slot0.tick */\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0x02\n      signextend\n        /* \"src/UniswapV3Pool.sol\":4135:4325  Swap(... */\n      mload(0x40)\n      tag_118\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/UniswapV3Pool.sol\":3509:4333  {... */\n      pop\n      pop\n      pop\n        /* \"src/UniswapV3Pool.sol\":3384:4333  function swap(address recipient, bytes calldata data)... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":1213:1253  mapping(int24 => Tick.Info) public ticks */\n    tag_54:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"src/lib/Tick.sol\":168:713  function update(... */\n    tag_65:\n        /* \"src/lib/Tick.sol\":314:326  bool flipped */\n      0x00\n        /* \"src/lib/Tick.sol\":339:365  Tick.Info storage tickInfo */\n      0x00\n        /* \"src/lib/Tick.sol\":368:372  self */\n      dup5\n        /* \"src/lib/Tick.sol\":368:378  self[tick] */\n      0x00\n        /* \"src/lib/Tick.sol\":373:377  tick */\n      dup6\n        /* \"src/lib/Tick.sol\":368:378  self[tick] */\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/lib/Tick.sol\":339:378  Tick.Info storage tickInfo = self[tick] */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":389:412  uint128 liquidityBefore */\n      0x00\n        /* \"src/lib/Tick.sol\":415:423  tickInfo */\n      dup2\n        /* \"src/lib/Tick.sol\":415:433  tickInfo.liquidity */\n      0x00\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Tick.sol\":389:433  uint128 liquidityBefore = tickInfo.liquidity */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":444:466  uint128 liquidityAfter */\n      0x00\n        /* \"src/lib/Tick.sol\":487:501  liquidityDelta */\n      dup5\n        /* \"src/lib/Tick.sol\":469:484  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":469:501  liquidityBefore + liquidityDelta */\n      tag_121\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_121:\n        /* \"src/lib/Tick.sol\":444:501  uint128 liquidityAfter = liquidityBefore + liquidityDelta */\n      swap1\n      pop\n        /* \"src/lib/Tick.sol\":535:536  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":516:531  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":516:536  liquidityBefore == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/lib/Tick.sol\":512:592  if (liquidityBefore == 0) {... */\n      tag_122\n      jumpi\n        /* \"src/lib/Tick.sol\":576:580  true */\n      0x01\n        /* \"src/lib/Tick.sol\":553:561  tickInfo */\n      dup4\n        /* \"src/lib/Tick.sol\":553:573  tickInfo.initialized */\n      0x00\n      add\n      0x00\n        /* \"src/lib/Tick.sol\":553:580  tickInfo.initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Tick.sol\":512:592  if (liquidityBefore == 0) {... */\n    tag_122:\n        /* \"src/lib/Tick.sol\":623:637  liquidityAfter */\n      dup1\n        /* \"src/lib/Tick.sol\":602:610  tickInfo */\n      dup4\n        /* \"src/lib/Tick.sol\":602:620  tickInfo.liquidity */\n      0x00\n      add\n      0x01\n        /* \"src/lib/Tick.sol\":602:637  tickInfo.liquidity = liquidityAfter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Tick.sol\":703:704  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":684:699  liquidityBefore */\n      dup3\n        /* \"src/lib/Tick.sol\":684:704  liquidityBefore == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/lib/Tick.sol\":658:705  (liquidityAfter == 0) != (liquidityBefore == 0) */\n      iszero\n      iszero\n        /* \"src/lib/Tick.sol\":677:678  0 */\n      0x00\n        /* \"src/lib/Tick.sol\":659:673  liquidityAfter */\n      dup3\n        /* \"src/lib/Tick.sol\":659:678  liquidityAfter == 0 */\n      0xffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"src/lib/Tick.sol\":658:705  (liquidityAfter == 0) != (liquidityBefore == 0) */\n      iszero\n      iszero\n      eq\n      iszero\n        /* \"src/lib/Tick.sol\":648:705  flipped = (liquidityAfter == 0) != (liquidityBefore == 0) */\n      swap4\n      pop\n        /* \"src/lib/Tick.sol\":328:713  {... */\n      pop\n      pop\n      pop\n        /* \"src/lib/Tick.sol\":168:713  function update(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":1129:1486  function flipTick(... */\n    tag_69:\n        /* \"src/lib/TickBitmap.sol\":1302:1303  0 */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1287:1298  tickSpacing */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":1280:1284  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":1280:1298  tick % tickSpacing */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"src/lib/TickBitmap.sol\":1280:1303  tick % tickSpacing == 0 */\n      0x02\n      signextend\n      eq\n        /* \"src/lib/TickBitmap.sol\":1272:1304  require(tick % tickSpacing == 0) */\n      tag_126\n      jumpi\n      revert(0x00, 0x00)\n    tag_126:\n        /* \"src/lib/TickBitmap.sol\":1350:1363  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1365:1377  uint8 bitPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1381:1409  position(tick / tickSpacing) */\n      tag_127\n        /* \"src/lib/TickBitmap.sol\":1397:1408  tickSpacing */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":1390:1394  tick */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":1390:1408  tick / tickSpacing */\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"src/lib/TickBitmap.sol\":1381:1389  position */\n      tag_130\n        /* \"src/lib/TickBitmap.sol\":1381:1409  position(tick / tickSpacing) */\n      jump\t// in\n    tag_127:\n        /* \"src/lib/TickBitmap.sol\":1349:1409  (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":1420:1432  uint256 mask */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1440:1446  bitPos */\n      dup2\n        /* \"src/lib/TickBitmap.sol\":1435:1446  1 << bitPos */\n      0xff\n      and\n        /* \"src/lib/TickBitmap.sol\":1435:1436  1 */\n      0x01\n        /* \"src/lib/TickBitmap.sol\":1435:1446  1 << bitPos */\n      swap1\n      shl\n        /* \"src/lib/TickBitmap.sol\":1420:1446  uint256 mask = 1 << bitPos */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":1474:1478  mask */\n      dup1\n        /* \"src/lib/TickBitmap.sol\":1457:1461  self */\n      dup7\n        /* \"src/lib/TickBitmap.sol\":1457:1470  self[wordPos] */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1462:1469  wordPos */\n      dup6\n        /* \"src/lib/TickBitmap.sol\":1457:1470  self[wordPos] */\n      0x01\n      signextend\n      0x01\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/lib/TickBitmap.sol\":1457:1478  self[wordPos] ^= mask */\n      dup3\n      dup3\n      sload\n      xor\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/lib/TickBitmap.sol\":1261:1486  {... */\n      pop\n      pop\n      pop\n        /* \"src/lib/TickBitmap.sol\":1129:1486  function flipTick(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Position.sol\":390:705  function get(... */\n    tag_73:\n        /* \"src/lib/Position.sol\":557:587  Position.Info storage position */\n      0x00\n        /* \"src/lib/Position.sol\":611:615  self */\n      dup5\n        /* \"src/lib/Position.sol\":611:697  self[... */\n      0x00\n        /* \"src/lib/Position.sol\":657:662  owner */\n      dup6\n        /* \"src/lib/Position.sol\":664:673  lowerTick */\n      dup6\n        /* \"src/lib/Position.sol\":675:684  upperTick */\n      dup6\n        /* \"src/lib/Position.sol\":640:685  abi.encodePacked(owner, lowerTick, upperTick) */\n      add(0x20, mload(0x40))\n      tag_132\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/lib/Position.sol\":630:686  keccak256(abi.encodePacked(owner, lowerTick, upperTick)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/lib/Position.sol\":611:697  self[... */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/lib/Position.sol\":600:697  position = self[... */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":390:705  function get(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/lib/Position.sol\":145:382  function update(Info storage self, uint128 liquidityDelta) internal {... */\n    tag_75:\n        /* \"src/lib/Position.sol\":224:247  uint128 liquidityBefore */\n      0x00\n        /* \"src/lib/Position.sol\":250:254  self */\n      dup3\n        /* \"src/lib/Position.sol\":250:264  self.liquidity */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"src/lib/Position.sol\":224:264  uint128 liquidityBefore = self.liquidity */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":275:297  uint128 liquidityAfter */\n      0x00\n        /* \"src/lib/Position.sol\":318:332  liquidityDelta */\n      dup3\n        /* \"src/lib/Position.sol\":300:315  liquidityBefore */\n      dup3\n        /* \"src/lib/Position.sol\":300:332  liquidityBefore + liquidityDelta */\n      tag_135\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_135:\n        /* \"src/lib/Position.sol\":275:332  uint128 liquidityAfter = liquidityBefore + liquidityDelta */\n      swap1\n      pop\n        /* \"src/lib/Position.sol\":360:374  liquidityAfter */\n      dup1\n        /* \"src/lib/Position.sol\":343:347  self */\n      dup5\n        /* \"src/lib/Position.sol\":343:357  self.liquidity */\n      0x00\n      add\n      0x00\n        /* \"src/lib/Position.sol\":343:374  self.liquidity = liquidityAfter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/lib/Position.sol\":213:382  {... */\n      pop\n      pop\n        /* \"src/lib/Position.sol\":145:382  function update(Info storage self, uint128 liquidityDelta) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":4362:4490  function balance0() internal view returns (uint256 balance) {... */\n    tag_80:\n        /* \"src/UniswapV3Pool.sol\":4405:4420  uint256 balance */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4450:4456  token0 */\n      immutable(\"0xeb09910a03c892999c305d4a86a46fa82693119d981eef22c8d043b31f9e8a31\")\n        /* \"src/UniswapV3Pool.sol\":4443:4467  IERC20(token0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/UniswapV3Pool.sol\":4476:4480  this */\n      address\n        /* \"src/UniswapV3Pool.sol\":4443:4482  IERC20(token0).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_137:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"src/UniswapV3Pool.sol\":4433:4482  balance = IERC20(token0).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":4362:4490  function balance0() internal view returns (uint256 balance) {... */\n      swap1\n      jump\t// out\n        /* \"src/UniswapV3Pool.sol\":4519:4647  function balance1() internal view returns (uint256 balance) {... */\n    tag_83:\n        /* \"src/UniswapV3Pool.sol\":4562:4577  uint256 balance */\n      0x00\n        /* \"src/UniswapV3Pool.sol\":4607:4613  token1 */\n      immutable(\"0x59c0d2b7af0a8e6d3d8e710a078764bd67b7223777026c424cdb4f599824bb79\")\n        /* \"src/UniswapV3Pool.sol\":4600:4624  IERC20(token1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"src/UniswapV3Pool.sol\":4633:4637  this */\n      address\n        /* \"src/UniswapV3Pool.sol\":4600:4639  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_146:\n        /* \"src/UniswapV3Pool.sol\":4590:4639  balance = IERC20(token1).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"src/UniswapV3Pool.sol\":4519:4647  function balance1() internal view returns (uint256 balance) {... */\n      swap1\n      jump\t// out\n        /* \"src/lib/TickBitmap.sol\":694:867  function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {... */\n    tag_130:\n        /* \"src/lib/TickBitmap.sol\":746:759  int16 wordPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":761:773  uint8 bitPos */\n      0x00\n        /* \"src/lib/TickBitmap.sol\":810:811  8 */\n      0x08\n        /* \"src/lib/TickBitmap.sol\":802:806  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":802:811  tick >> 8 */\n      0x02\n      signextend\n      swap1\n      sar\n        /* \"src/lib/TickBitmap.sol\":786:812  wordPos = int16(tick >> 8) */\n      swap2\n      pop\n        /* \"src/lib/TickBitmap.sol\":852:855  256 */\n      0x0100\n        /* \"src/lib/TickBitmap.sol\":845:849  tick */\n      dup4\n        /* \"src/lib/TickBitmap.sol\":845:855  tick % 256 */\n      tag_148\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_148:\n        /* \"src/lib/TickBitmap.sol\":823:857  bitPos = uint8(uint24(tick % 256)) */\n      swap1\n      pop\n        /* \"src/lib/TickBitmap.sol\":694:867  function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_149:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_150:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_202\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_149\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_151:\n        /* \"#utility.yul\":328:352   */\n      tag_204\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_150\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_16:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_206\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_151\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:711   */\n    tag_152:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":670:704   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":663:668   */\n      dup3\n        /* \"#utility.yul\":659:705   */\n      and\n        /* \"#utility.yul\":648:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":717:835   */\n    tag_153:\n        /* \"#utility.yul\":804:828   */\n      tag_209\n        /* \"#utility.yul\":822:827   */\n      dup2\n        /* \"#utility.yul\":804:828   */\n      tag_152\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":799:802   */\n      dup3\n        /* \"#utility.yul\":792:829   */\n      mstore\n        /* \"#utility.yul\":717:835   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1063   */\n    tag_20:\n        /* \"#utility.yul\":934:938   */\n      0x00\n        /* \"#utility.yul\":972:974   */\n      0x20\n        /* \"#utility.yul\":961:970   */\n      dup3\n        /* \"#utility.yul\":957:975   */\n      add\n        /* \"#utility.yul\":949:975   */\n      swap1\n      pop\n        /* \"#utility.yul\":985:1056   */\n      tag_211\n        /* \"#utility.yul\":1053:1054   */\n      0x00\n        /* \"#utility.yul\":1042:1051   */\n      dup4\n        /* \"#utility.yul\":1038:1055   */\n      add\n        /* \"#utility.yul\":1029:1035   */\n      dup5\n        /* \"#utility.yul\":985:1056   */\n      tag_153\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":841:1063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1069:1187   */\n    tag_154:\n        /* \"#utility.yul\":1156:1180   */\n      tag_213\n        /* \"#utility.yul\":1174:1179   */\n      dup2\n        /* \"#utility.yul\":1156:1180   */\n      tag_149\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1151:1154   */\n      dup3\n        /* \"#utility.yul\":1144:1181   */\n      mstore\n        /* \"#utility.yul\":1069:1187   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1283   */\n    tag_155:\n        /* \"#utility.yul\":1228:1235   */\n      0x00\n        /* \"#utility.yul\":1271:1276   */\n      dup2\n        /* \"#utility.yul\":1268:1269   */\n      0x02\n        /* \"#utility.yul\":1257:1277   */\n      signextend\n        /* \"#utility.yul\":1246:1277   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1289:1401   */\n    tag_156:\n        /* \"#utility.yul\":1372:1394   */\n      tag_216\n        /* \"#utility.yul\":1388:1393   */\n      dup2\n        /* \"#utility.yul\":1372:1394   */\n      tag_155\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1367:1370   */\n      dup3\n        /* \"#utility.yul\":1360:1395   */\n      mstore\n        /* \"#utility.yul\":1289:1401   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1407:1731   */\n    tag_24:\n        /* \"#utility.yul\":1524:1528   */\n      0x00\n        /* \"#utility.yul\":1562:1564   */\n      0x40\n        /* \"#utility.yul\":1551:1560   */\n      dup3\n        /* \"#utility.yul\":1547:1565   */\n      add\n        /* \"#utility.yul\":1539:1565   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1646   */\n      tag_218\n        /* \"#utility.yul\":1643:1644   */\n      0x00\n        /* \"#utility.yul\":1632:1641   */\n      dup4\n        /* \"#utility.yul\":1628:1645   */\n      add\n        /* \"#utility.yul\":1619:1625   */\n      dup6\n        /* \"#utility.yul\":1575:1646   */\n      tag_154\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":1656:1724   */\n      tag_219\n        /* \"#utility.yul\":1720:1722   */\n      0x20\n        /* \"#utility.yul\":1709:1718   */\n      dup4\n        /* \"#utility.yul\":1705:1723   */\n      add\n        /* \"#utility.yul\":1696:1702   */\n      dup5\n        /* \"#utility.yul\":1656:1724   */\n      tag_156\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1407:1731   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1818:1935   */\n    tag_158:\n        /* \"#utility.yul\":1927:1928   */\n      0x00\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1917:1929   */\n      revert\n        /* \"#utility.yul\":1941:2058   */\n    tag_159:\n        /* \"#utility.yul\":2050:2051   */\n      0x00\n        /* \"#utility.yul\":2047:2048   */\n      0x00\n        /* \"#utility.yul\":2040:2052   */\n      revert\n        /* \"#utility.yul\":2064:2186   */\n    tag_160:\n        /* \"#utility.yul\":2137:2161   */\n      tag_224\n        /* \"#utility.yul\":2155:2160   */\n      dup2\n        /* \"#utility.yul\":2137:2161   */\n      tag_150\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2130:2135   */\n      dup2\n        /* \"#utility.yul\":2127:2162   */\n      eq\n        /* \"#utility.yul\":2117:2180   */\n      tag_225\n      jumpi\n        /* \"#utility.yul\":2176:2177   */\n      0x00\n        /* \"#utility.yul\":2173:2174   */\n      0x00\n        /* \"#utility.yul\":2166:2178   */\n      revert\n        /* \"#utility.yul\":2117:2180   */\n    tag_225:\n        /* \"#utility.yul\":2064:2186   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2192:2331   */\n    tag_161:\n        /* \"#utility.yul\":2238:2243   */\n      0x00\n        /* \"#utility.yul\":2276:2282   */\n      dup2\n        /* \"#utility.yul\":2263:2283   */\n      calldataload\n        /* \"#utility.yul\":2254:2283   */\n      swap1\n      pop\n        /* \"#utility.yul\":2292:2325   */\n      tag_227\n        /* \"#utility.yul\":2319:2324   */\n      dup2\n        /* \"#utility.yul\":2292:2325   */\n      tag_160\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":2192:2331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2337:2455   */\n    tag_162:\n        /* \"#utility.yul\":2408:2430   */\n      tag_229\n        /* \"#utility.yul\":2424:2429   */\n      dup2\n        /* \"#utility.yul\":2408:2430   */\n      tag_155\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2401:2406   */\n      dup2\n        /* \"#utility.yul\":2398:2431   */\n      eq\n        /* \"#utility.yul\":2388:2449   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":2445:2446   */\n      0x00\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2435:2447   */\n      revert\n        /* \"#utility.yul\":2388:2449   */\n    tag_230:\n        /* \"#utility.yul\":2337:2455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2461:2596   */\n    tag_163:\n        /* \"#utility.yul\":2505:2510   */\n      0x00\n        /* \"#utility.yul\":2543:2549   */\n      dup2\n        /* \"#utility.yul\":2530:2550   */\n      calldataload\n        /* \"#utility.yul\":2521:2550   */\n      swap1\n      pop\n        /* \"#utility.yul\":2559:2590   */\n      tag_232\n        /* \"#utility.yul\":2584:2589   */\n      dup2\n        /* \"#utility.yul\":2559:2590   */\n      tag_162\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2461:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2724   */\n    tag_164:\n        /* \"#utility.yul\":2675:2699   */\n      tag_234\n        /* \"#utility.yul\":2693:2698   */\n      dup2\n        /* \"#utility.yul\":2675:2699   */\n      tag_152\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2668:2673   */\n      dup2\n        /* \"#utility.yul\":2665:2700   */\n      eq\n        /* \"#utility.yul\":2655:2718   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2714:2715   */\n      0x00\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2704:2716   */\n      revert\n        /* \"#utility.yul\":2655:2718   */\n    tag_235:\n        /* \"#utility.yul\":2602:2724   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2730:2869   */\n    tag_165:\n        /* \"#utility.yul\":2776:2781   */\n      0x00\n        /* \"#utility.yul\":2814:2820   */\n      dup2\n        /* \"#utility.yul\":2801:2821   */\n      calldataload\n        /* \"#utility.yul\":2792:2821   */\n      swap1\n      pop\n        /* \"#utility.yul\":2830:2863   */\n      tag_237\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2830:2863   */\n      tag_164\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2730:2869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2875:2992   */\n    tag_166:\n        /* \"#utility.yul\":2984:2985   */\n      0x00\n        /* \"#utility.yul\":2981:2982   */\n      0x00\n        /* \"#utility.yul\":2974:2986   */\n      revert\n        /* \"#utility.yul\":2998:3115   */\n    tag_167:\n        /* \"#utility.yul\":3107:3108   */\n      0x00\n        /* \"#utility.yul\":3104:3105   */\n      0x00\n        /* \"#utility.yul\":3097:3109   */\n      revert\n        /* \"#utility.yul\":3121:3238   */\n    tag_168:\n        /* \"#utility.yul\":3230:3231   */\n      0x00\n        /* \"#utility.yul\":3227:3228   */\n      0x00\n        /* \"#utility.yul\":3220:3232   */\n      revert\n        /* \"#utility.yul\":3257:3809   */\n    tag_169:\n        /* \"#utility.yul\":3314:3322   */\n      0x00\n        /* \"#utility.yul\":3324:3330   */\n      0x00\n        /* \"#utility.yul\":3374:3377   */\n      dup4\n        /* \"#utility.yul\":3367:3371   */\n      0x1f\n        /* \"#utility.yul\":3359:3365   */\n      dup5\n        /* \"#utility.yul\":3355:3372   */\n      add\n        /* \"#utility.yul\":3351:3378   */\n      slt\n        /* \"#utility.yul\":3341:3463   */\n      tag_242\n      jumpi\n        /* \"#utility.yul\":3382:3461   */\n      tag_243\n      tag_166\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3341:3463   */\n    tag_242:\n        /* \"#utility.yul\":3495:3501   */\n      dup3\n        /* \"#utility.yul\":3482:3502   */\n      calldataload\n        /* \"#utility.yul\":3472:3502   */\n      swap1\n      pop\n        /* \"#utility.yul\":3525:3543   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3517:3523   */\n      dup2\n        /* \"#utility.yul\":3514:3544   */\n      gt\n        /* \"#utility.yul\":3511:3628   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":3547:3626   */\n      tag_245\n      tag_167\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3511:3628   */\n    tag_244:\n        /* \"#utility.yul\":3661:3665   */\n      0x20\n        /* \"#utility.yul\":3653:3659   */\n      dup4\n        /* \"#utility.yul\":3649:3666   */\n      add\n        /* \"#utility.yul\":3637:3666   */\n      swap2\n      pop\n        /* \"#utility.yul\":3715:3718   */\n      dup4\n        /* \"#utility.yul\":3707:3711   */\n      0x01\n        /* \"#utility.yul\":3699:3705   */\n      dup3\n        /* \"#utility.yul\":3695:3712   */\n      mul\n        /* \"#utility.yul\":3685:3693   */\n      dup4\n        /* \"#utility.yul\":3681:3713   */\n      add\n        /* \"#utility.yul\":3678:3719   */\n      gt\n        /* \"#utility.yul\":3675:3803   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":3722:3801   */\n      tag_247\n      tag_168\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3675:3803   */\n    tag_246:\n        /* \"#utility.yul\":3257:3809   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4916   */\n    tag_27:\n        /* \"#utility.yul\":3917:3923   */\n      0x00\n        /* \"#utility.yul\":3925:3931   */\n      0x00\n        /* \"#utility.yul\":3933:3939   */\n      0x00\n        /* \"#utility.yul\":3941:3947   */\n      0x00\n        /* \"#utility.yul\":3949:3955   */\n      0x00\n        /* \"#utility.yul\":3957:3963   */\n      0x00\n        /* \"#utility.yul\":4006:4009   */\n      0xa0\n        /* \"#utility.yul\":3994:4003   */\n      dup8\n        /* \"#utility.yul\":3985:3992   */\n      dup10\n        /* \"#utility.yul\":3981:4004   */\n      sub\n        /* \"#utility.yul\":3977:4010   */\n      slt\n        /* \"#utility.yul\":3974:4094   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":4013:4092   */\n      tag_250\n      tag_158\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":3974:4094   */\n    tag_249:\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4158:4211   */\n      tag_251\n        /* \"#utility.yul\":4203:4210   */\n      dup10\n        /* \"#utility.yul\":4194:4200   */\n      dup3\n        /* \"#utility.yul\":4183:4192   */\n      dup11\n        /* \"#utility.yul\":4179:4201   */\n      add\n        /* \"#utility.yul\":4158:4211   */\n      tag_161\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4148:4211   */\n      swap7\n      pop\n        /* \"#utility.yul\":4104:4221   */\n      pop\n        /* \"#utility.yul\":4260:4262   */\n      0x20\n        /* \"#utility.yul\":4286:4337   */\n      tag_252\n        /* \"#utility.yul\":4329:4336   */\n      dup10\n        /* \"#utility.yul\":4320:4326   */\n      dup3\n        /* \"#utility.yul\":4309:4318   */\n      dup11\n        /* \"#utility.yul\":4305:4327   */\n      add\n        /* \"#utility.yul\":4286:4337   */\n      tag_163\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4276:4337   */\n      swap6\n      pop\n        /* \"#utility.yul\":4231:4347   */\n      pop\n        /* \"#utility.yul\":4386:4388   */\n      0x40\n        /* \"#utility.yul\":4412:4463   */\n      tag_253\n        /* \"#utility.yul\":4455:4462   */\n      dup10\n        /* \"#utility.yul\":4446:4452   */\n      dup3\n        /* \"#utility.yul\":4435:4444   */\n      dup11\n        /* \"#utility.yul\":4431:4453   */\n      add\n        /* \"#utility.yul\":4412:4463   */\n      tag_163\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4402:4463   */\n      swap5\n      pop\n        /* \"#utility.yul\":4357:4473   */\n      pop\n        /* \"#utility.yul\":4512:4514   */\n      0x60\n        /* \"#utility.yul\":4538:4591   */\n      tag_254\n        /* \"#utility.yul\":4583:4590   */\n      dup10\n        /* \"#utility.yul\":4574:4580   */\n      dup3\n        /* \"#utility.yul\":4563:4572   */\n      dup11\n        /* \"#utility.yul\":4559:4581   */\n      add\n        /* \"#utility.yul\":4538:4591   */\n      tag_165\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":4528:4591   */\n      swap4\n      pop\n        /* \"#utility.yul\":4483:4601   */\n      pop\n        /* \"#utility.yul\":4668:4671   */\n      0x80\n        /* \"#utility.yul\":4657:4666   */\n      dup8\n        /* \"#utility.yul\":4653:4672   */\n      add\n        /* \"#utility.yul\":4640:4673   */\n      calldataload\n        /* \"#utility.yul\":4700:4718   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4692:4698   */\n      dup2\n        /* \"#utility.yul\":4689:4719   */\n      gt\n        /* \"#utility.yul\":4686:4803   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":4722:4801   */\n      tag_256\n      tag_159\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4686:4803   */\n    tag_255:\n        /* \"#utility.yul\":4835:4899   */\n      tag_257\n        /* \"#utility.yul\":4891:4898   */\n      dup10\n        /* \"#utility.yul\":4882:4888   */\n      dup3\n        /* \"#utility.yul\":4871:4880   */\n      dup11\n        /* \"#utility.yul\":4867:4889   */\n      add\n        /* \"#utility.yul\":4835:4899   */\n      tag_169\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4817:4899   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4611:4909   */\n      pop\n        /* \"#utility.yul\":3815:4916   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4922:4999   */\n    tag_170:\n        /* \"#utility.yul\":4959:4966   */\n      0x00\n        /* \"#utility.yul\":4988:4993   */\n      dup2\n        /* \"#utility.yul\":4977:4993   */\n      swap1\n      pop\n        /* \"#utility.yul\":4922:4999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5005:5123   */\n    tag_171:\n        /* \"#utility.yul\":5092:5116   */\n      tag_260\n        /* \"#utility.yul\":5110:5115   */\n      dup2\n        /* \"#utility.yul\":5092:5116   */\n      tag_170\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":5087:5090   */\n      dup3\n        /* \"#utility.yul\":5080:5117   */\n      mstore\n        /* \"#utility.yul\":5005:5123   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5129:5461   */\n    tag_30:\n        /* \"#utility.yul\":5250:5254   */\n      0x00\n        /* \"#utility.yul\":5288:5290   */\n      0x40\n        /* \"#utility.yul\":5277:5286   */\n      dup3\n        /* \"#utility.yul\":5273:5291   */\n      add\n        /* \"#utility.yul\":5265:5291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5301:5372   */\n      tag_262\n        /* \"#utility.yul\":5369:5370   */\n      0x00\n        /* \"#utility.yul\":5358:5367   */\n      dup4\n        /* \"#utility.yul\":5354:5371   */\n      add\n        /* \"#utility.yul\":5345:5351   */\n      dup6\n        /* \"#utility.yul\":5301:5372   */\n      tag_171\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5382:5454   */\n      tag_263\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup4\n        /* \"#utility.yul\":5435:5453   */\n      add\n        /* \"#utility.yul\":5426:5432   */\n      dup5\n        /* \"#utility.yul\":5382:5454   */\n      tag_171\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5129:5461   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5467:5544   */\n    tag_172:\n        /* \"#utility.yul\":5504:5511   */\n      0x00\n        /* \"#utility.yul\":5533:5538   */\n      dup2\n        /* \"#utility.yul\":5522:5538   */\n      swap1\n      pop\n        /* \"#utility.yul\":5467:5544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5550:5672   */\n    tag_173:\n        /* \"#utility.yul\":5623:5647   */\n      tag_266\n        /* \"#utility.yul\":5641:5646   */\n      dup2\n        /* \"#utility.yul\":5623:5647   */\n      tag_172\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5616:5621   */\n      dup2\n        /* \"#utility.yul\":5613:5648   */\n      eq\n        /* \"#utility.yul\":5603:5666   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":5662:5663   */\n      0x00\n        /* \"#utility.yul\":5659:5660   */\n      0x00\n        /* \"#utility.yul\":5652:5664   */\n      revert\n        /* \"#utility.yul\":5603:5666   */\n    tag_267:\n        /* \"#utility.yul\":5550:5672   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5678:5817   */\n    tag_174:\n        /* \"#utility.yul\":5724:5729   */\n      0x00\n        /* \"#utility.yul\":5762:5768   */\n      dup2\n        /* \"#utility.yul\":5749:5769   */\n      calldataload\n        /* \"#utility.yul\":5740:5769   */\n      swap1\n      pop\n        /* \"#utility.yul\":5778:5811   */\n      tag_269\n        /* \"#utility.yul\":5805:5810   */\n      dup2\n        /* \"#utility.yul\":5778:5811   */\n      tag_173\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5678:5817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5823:6152   */\n    tag_33:\n        /* \"#utility.yul\":5882:5888   */\n      0x00\n        /* \"#utility.yul\":5931:5933   */\n      0x20\n        /* \"#utility.yul\":5919:5928   */\n      dup3\n        /* \"#utility.yul\":5910:5917   */\n      dup5\n        /* \"#utility.yul\":5906:5929   */\n      sub\n        /* \"#utility.yul\":5902:5934   */\n      slt\n        /* \"#utility.yul\":5899:6018   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":5937:6016   */\n      tag_272\n      tag_158\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5899:6018   */\n    tag_271:\n        /* \"#utility.yul\":6057:6058   */\n      0x00\n        /* \"#utility.yul\":6082:6135   */\n      tag_273\n        /* \"#utility.yul\":6127:6134   */\n      dup5\n        /* \"#utility.yul\":6118:6124   */\n      dup3\n        /* \"#utility.yul\":6107:6116   */\n      dup6\n        /* \"#utility.yul\":6103:6125   */\n      add\n        /* \"#utility.yul\":6082:6135   */\n      tag_174\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":6072:6135   */\n      swap2\n      pop\n        /* \"#utility.yul\":6028:6145   */\n      pop\n        /* \"#utility.yul\":5823:6152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6158:6248   */\n    tag_175:\n        /* \"#utility.yul\":6193:6200   */\n      0x00\n        /* \"#utility.yul\":6236:6241   */\n      dup2\n        /* \"#utility.yul\":6233:6234   */\n      0x01\n        /* \"#utility.yul\":6222:6242   */\n      signextend\n        /* \"#utility.yul\":6211:6242   */\n      swap1\n      pop\n        /* \"#utility.yul\":6158:6248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6254:6372   */\n    tag_176:\n        /* \"#utility.yul\":6325:6347   */\n      tag_276\n        /* \"#utility.yul\":6341:6346   */\n      dup2\n        /* \"#utility.yul\":6325:6347   */\n      tag_175\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6318:6323   */\n      dup2\n        /* \"#utility.yul\":6315:6348   */\n      eq\n        /* \"#utility.yul\":6305:6366   */\n      tag_277\n      jumpi\n        /* \"#utility.yul\":6362:6363   */\n      0x00\n        /* \"#utility.yul\":6359:6360   */\n      0x00\n        /* \"#utility.yul\":6352:6364   */\n      revert\n        /* \"#utility.yul\":6305:6366   */\n    tag_277:\n        /* \"#utility.yul\":6254:6372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6378:6513   */\n    tag_177:\n        /* \"#utility.yul\":6422:6427   */\n      0x00\n        /* \"#utility.yul\":6460:6466   */\n      dup2\n        /* \"#utility.yul\":6447:6467   */\n      calldataload\n        /* \"#utility.yul\":6438:6467   */\n      swap1\n      pop\n        /* \"#utility.yul\":6476:6507   */\n      tag_279\n        /* \"#utility.yul\":6501:6506   */\n      dup2\n        /* \"#utility.yul\":6476:6507   */\n      tag_176\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6378:6513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6519:6844   */\n    tag_38:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6625:6627   */\n      0x20\n        /* \"#utility.yul\":6613:6622   */\n      dup3\n        /* \"#utility.yul\":6604:6611   */\n      dup5\n        /* \"#utility.yul\":6600:6623   */\n      sub\n        /* \"#utility.yul\":6596:6628   */\n      slt\n        /* \"#utility.yul\":6593:6712   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":6631:6710   */\n      tag_282\n      tag_158\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6593:6712   */\n    tag_281:\n        /* \"#utility.yul\":6751:6752   */\n      0x00\n        /* \"#utility.yul\":6776:6827   */\n      tag_283\n        /* \"#utility.yul\":6819:6826   */\n      dup5\n        /* \"#utility.yul\":6810:6816   */\n      dup3\n        /* \"#utility.yul\":6799:6808   */\n      dup6\n        /* \"#utility.yul\":6795:6817   */\n      add\n        /* \"#utility.yul\":6776:6827   */\n      tag_177\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":6766:6827   */\n      swap2\n      pop\n        /* \"#utility.yul\":6722:6837   */\n      pop\n        /* \"#utility.yul\":6519:6844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6850:7072   */\n    tag_41:\n        /* \"#utility.yul\":6943:6947   */\n      0x00\n        /* \"#utility.yul\":6981:6983   */\n      0x20\n        /* \"#utility.yul\":6970:6979   */\n      dup3\n        /* \"#utility.yul\":6966:6984   */\n      add\n        /* \"#utility.yul\":6958:6984   */\n      swap1\n      pop\n        /* \"#utility.yul\":6994:7065   */\n      tag_285\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7051:7060   */\n      dup4\n        /* \"#utility.yul\":7047:7064   */\n      add\n        /* \"#utility.yul\":7038:7044   */\n      dup5\n        /* \"#utility.yul\":6994:7065   */\n      tag_171\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6850:7072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7078:7750   */\n    tag_47:\n        /* \"#utility.yul\":7157:7163   */\n      0x00\n        /* \"#utility.yul\":7165:7171   */\n      0x00\n        /* \"#utility.yul\":7173:7179   */\n      0x00\n        /* \"#utility.yul\":7222:7224   */\n      0x40\n        /* \"#utility.yul\":7210:7219   */\n      dup5\n        /* \"#utility.yul\":7201:7208   */\n      dup7\n        /* \"#utility.yul\":7197:7220   */\n      sub\n        /* \"#utility.yul\":7193:7225   */\n      slt\n        /* \"#utility.yul\":7190:7309   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":7228:7307   */\n      tag_288\n      tag_158\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7190:7309   */\n    tag_287:\n        /* \"#utility.yul\":7348:7349   */\n      0x00\n        /* \"#utility.yul\":7373:7426   */\n      tag_289\n        /* \"#utility.yul\":7418:7425   */\n      dup7\n        /* \"#utility.yul\":7409:7415   */\n      dup3\n        /* \"#utility.yul\":7398:7407   */\n      dup8\n        /* \"#utility.yul\":7394:7416   */\n      add\n        /* \"#utility.yul\":7373:7426   */\n      tag_161\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7363:7426   */\n      swap4\n      pop\n        /* \"#utility.yul\":7319:7436   */\n      pop\n        /* \"#utility.yul\":7503:7505   */\n      0x20\n        /* \"#utility.yul\":7492:7501   */\n      dup5\n        /* \"#utility.yul\":7488:7506   */\n      add\n        /* \"#utility.yul\":7475:7507   */\n      calldataload\n        /* \"#utility.yul\":7534:7552   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7526:7532   */\n      dup2\n        /* \"#utility.yul\":7523:7553   */\n      gt\n        /* \"#utility.yul\":7520:7637   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":7556:7635   */\n      tag_291\n      tag_159\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7520:7637   */\n    tag_290:\n        /* \"#utility.yul\":7669:7733   */\n      tag_292\n        /* \"#utility.yul\":7725:7732   */\n      dup7\n        /* \"#utility.yul\":7716:7722   */\n      dup3\n        /* \"#utility.yul\":7705:7714   */\n      dup8\n        /* \"#utility.yul\":7701:7723   */\n      add\n        /* \"#utility.yul\":7669:7733   */\n      tag_169\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":7651:7733   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":7446:7743   */\n      pop\n        /* \"#utility.yul\":7078:7750   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7756:7832   */\n    tag_178:\n        /* \"#utility.yul\":7792:7799   */\n      0x00\n        /* \"#utility.yul\":7821:7826   */\n      dup2\n        /* \"#utility.yul\":7810:7826   */\n      swap1\n      pop\n        /* \"#utility.yul\":7756:7832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7838:7953   */\n    tag_179:\n        /* \"#utility.yul\":7923:7946   */\n      tag_295\n        /* \"#utility.yul\":7940:7945   */\n      dup2\n        /* \"#utility.yul\":7923:7946   */\n      tag_178\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7918:7921   */\n      dup3\n        /* \"#utility.yul\":7911:7947   */\n      mstore\n        /* \"#utility.yul\":7838:7953   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7959:8283   */\n    tag_50:\n        /* \"#utility.yul\":8076:8080   */\n      0x00\n        /* \"#utility.yul\":8114:8116   */\n      0x40\n        /* \"#utility.yul\":8103:8112   */\n      dup3\n        /* \"#utility.yul\":8099:8117   */\n      add\n        /* \"#utility.yul\":8091:8117   */\n      swap1\n      pop\n        /* \"#utility.yul\":8127:8196   */\n      tag_297\n        /* \"#utility.yul\":8193:8194   */\n      0x00\n        /* \"#utility.yul\":8182:8191   */\n      dup4\n        /* \"#utility.yul\":8178:8195   */\n      add\n        /* \"#utility.yul\":8169:8175   */\n      dup6\n        /* \"#utility.yul\":8127:8196   */\n      tag_179\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8206:8276   */\n      tag_298\n        /* \"#utility.yul\":8272:8274   */\n      0x20\n        /* \"#utility.yul\":8261:8270   */\n      dup4\n        /* \"#utility.yul\":8257:8275   */\n      add\n        /* \"#utility.yul\":8248:8254   */\n      dup5\n        /* \"#utility.yul\":8206:8276   */\n      tag_179\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7959:8283   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8289:8614   */\n    tag_53:\n        /* \"#utility.yul\":8346:8352   */\n      0x00\n        /* \"#utility.yul\":8395:8397   */\n      0x20\n        /* \"#utility.yul\":8383:8392   */\n      dup3\n        /* \"#utility.yul\":8374:8381   */\n      dup5\n        /* \"#utility.yul\":8370:8393   */\n      sub\n        /* \"#utility.yul\":8366:8398   */\n      slt\n        /* \"#utility.yul\":8363:8482   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":8401:8480   */\n      tag_301\n      tag_158\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":8363:8482   */\n    tag_300:\n        /* \"#utility.yul\":8521:8522   */\n      0x00\n        /* \"#utility.yul\":8546:8597   */\n      tag_302\n        /* \"#utility.yul\":8589:8596   */\n      dup5\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8569:8578   */\n      dup6\n        /* \"#utility.yul\":8565:8587   */\n      add\n        /* \"#utility.yul\":8546:8597   */\n      tag_163\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":8536:8597   */\n      swap2\n      pop\n        /* \"#utility.yul\":8492:8607   */\n      pop\n        /* \"#utility.yul\":8289:8614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8620:8710   */\n    tag_180:\n        /* \"#utility.yul\":8654:8661   */\n      0x00\n        /* \"#utility.yul\":8697:8702   */\n      dup2\n        /* \"#utility.yul\":8690:8703   */\n      iszero\n        /* \"#utility.yul\":8683:8704   */\n      iszero\n        /* \"#utility.yul\":8672:8704   */\n      swap1\n      pop\n        /* \"#utility.yul\":8620:8710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8716:8825   */\n    tag_181:\n        /* \"#utility.yul\":8797:8818   */\n      tag_305\n        /* \"#utility.yul\":8812:8817   */\n      dup2\n        /* \"#utility.yul\":8797:8818   */\n      tag_180\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8792:8795   */\n      dup3\n        /* \"#utility.yul\":8785:8819   */\n      mstore\n        /* \"#utility.yul\":8716:8825   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8831:9151   */\n    tag_56:\n        /* \"#utility.yul\":8946:8950   */\n      0x00\n        /* \"#utility.yul\":8984:8986   */\n      0x40\n        /* \"#utility.yul\":8973:8982   */\n      dup3\n        /* \"#utility.yul\":8969:8987   */\n      add\n        /* \"#utility.yul\":8961:8987   */\n      swap1\n      pop\n        /* \"#utility.yul\":8997:9062   */\n      tag_307\n        /* \"#utility.yul\":9059:9060   */\n      0x00\n        /* \"#utility.yul\":9048:9057   */\n      dup4\n        /* \"#utility.yul\":9044:9061   */\n      add\n        /* \"#utility.yul\":9035:9041   */\n      dup6\n        /* \"#utility.yul\":8997:9062   */\n      tag_181\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":9072:9144   */\n      tag_308\n        /* \"#utility.yul\":9140:9142   */\n      0x20\n        /* \"#utility.yul\":9129:9138   */\n      dup4\n        /* \"#utility.yul\":9125:9143   */\n      add\n        /* \"#utility.yul\":9116:9122   */\n      dup5\n        /* \"#utility.yul\":9072:9144   */\n      tag_153\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":8831:9151   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9157:9337   */\n    tag_182:\n        /* \"#utility.yul\":9205:9282   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9202:9203   */\n      0x00\n        /* \"#utility.yul\":9195:9283   */\n      mstore\n        /* \"#utility.yul\":9302:9306   */\n      0x11\n        /* \"#utility.yul\":9299:9300   */\n      0x04\n        /* \"#utility.yul\":9292:9307   */\n      mstore\n        /* \"#utility.yul\":9326:9330   */\n      0x24\n        /* \"#utility.yul\":9323:9324   */\n      0x00\n        /* \"#utility.yul\":9316:9331   */\n      revert\n        /* \"#utility.yul\":9343:9569   */\n    tag_61:\n        /* \"#utility.yul\":9377:9380   */\n      0x00\n        /* \"#utility.yul\":9400:9422   */\n      tag_311\n        /* \"#utility.yul\":9416:9421   */\n      dup3\n        /* \"#utility.yul\":9400:9422   */\n      tag_155\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":9391:9422   */\n      swap2\n      pop\n        /* \"#utility.yul\":9444:9510   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":9437:9442   */\n      dup3\n        /* \"#utility.yul\":9434:9511   */\n      sub\n        /* \"#utility.yul\":9431:9534   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":9514:9532   */\n      tag_313\n      tag_182\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9431:9534   */\n    tag_312:\n        /* \"#utility.yul\":9557:9562   */\n      dup2\n        /* \"#utility.yul\":9554:9555   */\n      0x00\n        /* \"#utility.yul\":9550:9563   */\n      sub\n        /* \"#utility.yul\":9543:9563   */\n      swap1\n      pop\n        /* \"#utility.yul\":9343:9569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9575:9799   */\n    tag_77:\n        /* \"#utility.yul\":9615:9618   */\n      0x00\n        /* \"#utility.yul\":9634:9654   */\n      tag_315\n        /* \"#utility.yul\":9652:9653   */\n      dup3\n        /* \"#utility.yul\":9634:9654   */\n      tag_152\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":9629:9654   */\n      swap2\n      pop\n        /* \"#utility.yul\":9668:9688   */\n      tag_316\n        /* \"#utility.yul\":9686:9687   */\n      dup4\n        /* \"#utility.yul\":9668:9688   */\n      tag_152\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9663:9688   */\n      swap3\n      pop\n        /* \"#utility.yul\":9711:9712   */\n      dup3\n        /* \"#utility.yul\":9708:9709   */\n      dup3\n        /* \"#utility.yul\":9704:9713   */\n      add\n        /* \"#utility.yul\":9697:9713   */\n      swap1\n      pop\n        /* \"#utility.yul\":9734:9768   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9729:9732   */\n      dup2\n        /* \"#utility.yul\":9726:9769   */\n      gt\n        /* \"#utility.yul\":9723:9792   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":9772:9790   */\n      tag_318\n      tag_182\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9723:9792   */\n    tag_317:\n        /* \"#utility.yul\":9575:9799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9805:9973   */\n    tag_183:\n        /* \"#utility.yul\":9888:9899   */\n      0x00\n        /* \"#utility.yul\":9922:9928   */\n      dup3\n        /* \"#utility.yul\":9917:9920   */\n      dup3\n        /* \"#utility.yul\":9910:9929   */\n      mstore\n        /* \"#utility.yul\":9962:9966   */\n      0x20\n        /* \"#utility.yul\":9957:9960   */\n      dup3\n        /* \"#utility.yul\":9953:9967   */\n      add\n        /* \"#utility.yul\":9938:9967   */\n      swap1\n      pop\n        /* \"#utility.yul\":9805:9973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9979:10127   */\n    tag_184:\n        /* \"#utility.yul\":10077:10083   */\n      dup3\n        /* \"#utility.yul\":10072:10075   */\n      dup2\n        /* \"#utility.yul\":10067:10070   */\n      dup4\n        /* \"#utility.yul\":10054:10084   */\n      calldatacopy\n        /* \"#utility.yul\":10118:10119   */\n      0x00\n        /* \"#utility.yul\":10109:10115   */\n      dup4\n        /* \"#utility.yul\":10104:10107   */\n      dup4\n        /* \"#utility.yul\":10100:10116   */\n      add\n        /* \"#utility.yul\":10093:10120   */\n      mstore\n        /* \"#utility.yul\":9979:10127   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10133:10235   */\n    tag_185:\n        /* \"#utility.yul\":10174:10180   */\n      0x00\n        /* \"#utility.yul\":10225:10227   */\n      0x1f\n        /* \"#utility.yul\":10221:10228   */\n      not\n        /* \"#utility.yul\":10216:10218   */\n      0x1f\n        /* \"#utility.yul\":10209:10214   */\n      dup4\n        /* \"#utility.yul\":10205:10219   */\n      add\n        /* \"#utility.yul\":10201:10229   */\n      and\n        /* \"#utility.yul\":10191:10229   */\n      swap1\n      pop\n        /* \"#utility.yul\":10133:10235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10263:10577   */\n    tag_186:\n        /* \"#utility.yul\":10359:10362   */\n      0x00\n        /* \"#utility.yul\":10380:10450   */\n      tag_323\n        /* \"#utility.yul\":10443:10449   */\n      dup4\n        /* \"#utility.yul\":10438:10441   */\n      dup6\n        /* \"#utility.yul\":10380:10450   */\n      tag_183\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":10373:10450   */\n      swap4\n      pop\n        /* \"#utility.yul\":10460:10516   */\n      tag_324\n        /* \"#utility.yul\":10509:10515   */\n      dup4\n        /* \"#utility.yul\":10504:10507   */\n      dup6\n        /* \"#utility.yul\":10497:10502   */\n      dup5\n        /* \"#utility.yul\":10460:10516   */\n      tag_184\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10541:10570   */\n      tag_325\n        /* \"#utility.yul\":10563:10569   */\n      dup4\n        /* \"#utility.yul\":10541:10570   */\n      tag_185\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10536:10539   */\n      dup5\n        /* \"#utility.yul\":10532:10571   */\n      add\n        /* \"#utility.yul\":10525:10571   */\n      swap1\n      pop\n        /* \"#utility.yul\":10263:10577   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10583:11132   */\n    tag_85:\n        /* \"#utility.yul\":10760:10764   */\n      0x00\n        /* \"#utility.yul\":10798:10800   */\n      0x60\n        /* \"#utility.yul\":10787:10796   */\n      dup3\n        /* \"#utility.yul\":10783:10801   */\n      add\n        /* \"#utility.yul\":10775:10801   */\n      swap1\n      pop\n        /* \"#utility.yul\":10811:10882   */\n      tag_327\n        /* \"#utility.yul\":10879:10880   */\n      0x00\n        /* \"#utility.yul\":10868:10877   */\n      dup4\n        /* \"#utility.yul\":10864:10881   */\n      add\n        /* \"#utility.yul\":10855:10861   */\n      dup8\n        /* \"#utility.yul\":10811:10882   */\n      tag_171\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":10892:10964   */\n      tag_328\n        /* \"#utility.yul\":10960:10962   */\n      0x20\n        /* \"#utility.yul\":10949:10958   */\n      dup4\n        /* \"#utility.yul\":10945:10963   */\n      add\n        /* \"#utility.yul\":10936:10942   */\n      dup7\n        /* \"#utility.yul\":10892:10964   */\n      tag_171\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11011:11020   */\n      dup2\n        /* \"#utility.yul\":11005:11009   */\n      dup2\n        /* \"#utility.yul\":11001:11021   */\n      sub\n        /* \"#utility.yul\":10996:10998   */\n      0x40\n        /* \"#utility.yul\":10985:10994   */\n      dup4\n        /* \"#utility.yul\":10981:10999   */\n      add\n        /* \"#utility.yul\":10974:11022   */\n      mstore\n        /* \"#utility.yul\":11039:11125   */\n      tag_329\n        /* \"#utility.yul\":11120:11124   */\n      dup2\n        /* \"#utility.yul\":11111:11117   */\n      dup5\n        /* \"#utility.yul\":11103:11109   */\n      dup7\n        /* \"#utility.yul\":11039:11125   */\n      tag_186\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":11031:11125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10583:11132   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11138:11329   */\n    tag_92:\n        /* \"#utility.yul\":11178:11181   */\n      0x00\n        /* \"#utility.yul\":11197:11217   */\n      tag_331\n        /* \"#utility.yul\":11215:11216   */\n      dup3\n        /* \"#utility.yul\":11197:11217   */\n      tag_170\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":11192:11217   */\n      swap2\n      pop\n        /* \"#utility.yul\":11231:11251   */\n      tag_332\n        /* \"#utility.yul\":11249:11250   */\n      dup4\n        /* \"#utility.yul\":11231:11251   */\n      tag_170\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":11226:11251   */\n      swap3\n      pop\n        /* \"#utility.yul\":11274:11275   */\n      dup3\n        /* \"#utility.yul\":11271:11272   */\n      dup3\n        /* \"#utility.yul\":11267:11276   */\n      add\n        /* \"#utility.yul\":11260:11276   */\n      swap1\n      pop\n        /* \"#utility.yul\":11295:11298   */\n      dup1\n        /* \"#utility.yul\":11292:11293   */\n      dup3\n        /* \"#utility.yul\":11289:11299   */\n      gt\n        /* \"#utility.yul\":11286:11322   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":11302:11320   */\n      tag_334\n      tag_182\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":11286:11322   */\n    tag_333:\n        /* \"#utility.yul\":11138:11329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11335:11888   */\n    tag_99:\n        /* \"#utility.yul\":11512:11516   */\n      0x00\n        /* \"#utility.yul\":11550:11553   */\n      0x80\n        /* \"#utility.yul\":11539:11548   */\n      dup3\n        /* \"#utility.yul\":11535:11554   */\n      add\n        /* \"#utility.yul\":11527:11554   */\n      swap1\n      pop\n        /* \"#utility.yul\":11564:11635   */\n      tag_336\n        /* \"#utility.yul\":11632:11633   */\n      0x00\n        /* \"#utility.yul\":11621:11630   */\n      dup4\n        /* \"#utility.yul\":11617:11634   */\n      add\n        /* \"#utility.yul\":11608:11614   */\n      dup8\n        /* \"#utility.yul\":11564:11635   */\n      tag_151\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":11645:11717   */\n      tag_337\n        /* \"#utility.yul\":11713:11715   */\n      0x20\n        /* \"#utility.yul\":11702:11711   */\n      dup4\n        /* \"#utility.yul\":11698:11716   */\n      add\n        /* \"#utility.yul\":11689:11695   */\n      dup7\n        /* \"#utility.yul\":11645:11717   */\n      tag_153\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":11727:11799   */\n      tag_338\n        /* \"#utility.yul\":11795:11797   */\n      0x40\n        /* \"#utility.yul\":11784:11793   */\n      dup4\n        /* \"#utility.yul\":11780:11798   */\n      add\n        /* \"#utility.yul\":11771:11777   */\n      dup6\n        /* \"#utility.yul\":11727:11799   */\n      tag_171\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11809:11881   */\n      tag_339\n        /* \"#utility.yul\":11877:11879   */\n      0x60\n        /* \"#utility.yul\":11866:11875   */\n      dup4\n        /* \"#utility.yul\":11862:11880   */\n      add\n        /* \"#utility.yul\":11853:11859   */\n      dup5\n        /* \"#utility.yul\":11809:11881   */\n      tag_171\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":11335:11888   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11894:12122   */\n    tag_102:\n        /* \"#utility.yul\":11929:11932   */\n      0x00\n        /* \"#utility.yul\":11952:11975   */\n      tag_341\n        /* \"#utility.yul\":11969:11974   */\n      dup3\n        /* \"#utility.yul\":11952:11975   */\n      tag_178\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":11943:11975   */\n      swap2\n      pop\n        /* \"#utility.yul\":11997:12063   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11990:11995   */\n      dup3\n        /* \"#utility.yul\":11987:12064   */\n      sub\n        /* \"#utility.yul\":11984:12087   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":12067:12085   */\n      tag_343\n      tag_182\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11984:12087   */\n    tag_342:\n        /* \"#utility.yul\":12110:12115   */\n      dup2\n        /* \"#utility.yul\":12107:12108   */\n      0x00\n        /* \"#utility.yul\":12103:12116   */\n      sub\n        /* \"#utility.yul\":12096:12116   */\n      swap1\n      pop\n        /* \"#utility.yul\":11894:12122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12128:12460   */\n    tag_104:\n        /* \"#utility.yul\":12249:12253   */\n      0x00\n        /* \"#utility.yul\":12287:12289   */\n      0x40\n        /* \"#utility.yul\":12276:12285   */\n      dup3\n        /* \"#utility.yul\":12272:12290   */\n      add\n        /* \"#utility.yul\":12264:12290   */\n      swap1\n      pop\n        /* \"#utility.yul\":12300:12371   */\n      tag_345\n        /* \"#utility.yul\":12368:12369   */\n      0x00\n        /* \"#utility.yul\":12357:12366   */\n      dup4\n        /* \"#utility.yul\":12353:12370   */\n      add\n        /* \"#utility.yul\":12344:12350   */\n      dup6\n        /* \"#utility.yul\":12300:12371   */\n      tag_151\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":12381:12453   */\n      tag_346\n        /* \"#utility.yul\":12449:12451   */\n      0x20\n        /* \"#utility.yul\":12438:12447   */\n      dup4\n        /* \"#utility.yul\":12434:12452   */\n      add\n        /* \"#utility.yul\":12425:12431   */\n      dup5\n        /* \"#utility.yul\":12381:12453   */\n      tag_171\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":12128:12460   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12466:12582   */\n    tag_187:\n        /* \"#utility.yul\":12536:12557   */\n      tag_348\n        /* \"#utility.yul\":12551:12556   */\n      dup2\n        /* \"#utility.yul\":12536:12557   */\n      tag_180\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":12529:12534   */\n      dup2\n        /* \"#utility.yul\":12526:12558   */\n      eq\n        /* \"#utility.yul\":12516:12576   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":12572:12573   */\n      0x00\n        /* \"#utility.yul\":12569:12570   */\n      0x00\n        /* \"#utility.yul\":12562:12574   */\n      revert\n        /* \"#utility.yul\":12516:12576   */\n    tag_349:\n        /* \"#utility.yul\":12466:12582   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12588:12725   */\n    tag_188:\n        /* \"#utility.yul\":12642:12647   */\n      0x00\n        /* \"#utility.yul\":12673:12679   */\n      dup2\n        /* \"#utility.yul\":12667:12680   */\n      mload\n        /* \"#utility.yul\":12658:12680   */\n      swap1\n      pop\n        /* \"#utility.yul\":12689:12719   */\n      tag_351\n        /* \"#utility.yul\":12713:12718   */\n      dup2\n        /* \"#utility.yul\":12689:12719   */\n      tag_187\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":12588:12725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12731:13076   */\n    tag_108:\n        /* \"#utility.yul\":12798:12804   */\n      0x00\n        /* \"#utility.yul\":12847:12849   */\n      0x20\n        /* \"#utility.yul\":12835:12844   */\n      dup3\n        /* \"#utility.yul\":12826:12833   */\n      dup5\n        /* \"#utility.yul\":12822:12845   */\n      sub\n        /* \"#utility.yul\":12818:12850   */\n      slt\n        /* \"#utility.yul\":12815:12934   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":12853:12932   */\n      tag_354\n      tag_158\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":12815:12934   */\n    tag_353:\n        /* \"#utility.yul\":12973:12974   */\n      0x00\n        /* \"#utility.yul\":12998:13059   */\n      tag_355\n        /* \"#utility.yul\":13051:13058   */\n      dup5\n        /* \"#utility.yul\":13042:13048   */\n      dup3\n        /* \"#utility.yul\":13031:13040   */\n      dup6\n        /* \"#utility.yul\":13027:13049   */\n      add\n        /* \"#utility.yul\":12998:13059   */\n      tag_188\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":12988:13059   */\n      swap2\n      pop\n        /* \"#utility.yul\":12944:13069   */\n      pop\n        /* \"#utility.yul\":12731:13076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13082:13623   */\n    tag_111:\n        /* \"#utility.yul\":13255:13259   */\n      0x00\n        /* \"#utility.yul\":13293:13295   */\n      0x60\n        /* \"#utility.yul\":13282:13291   */\n      dup3\n        /* \"#utility.yul\":13278:13296   */\n      add\n        /* \"#utility.yul\":13270:13296   */\n      swap1\n      pop\n        /* \"#utility.yul\":13306:13375   */\n      tag_357\n        /* \"#utility.yul\":13372:13373   */\n      0x00\n        /* \"#utility.yul\":13361:13370   */\n      dup4\n        /* \"#utility.yul\":13357:13374   */\n      add\n        /* \"#utility.yul\":13348:13354   */\n      dup8\n        /* \"#utility.yul\":13306:13375   */\n      tag_179\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":13385:13455   */\n      tag_358\n        /* \"#utility.yul\":13451:13453   */\n      0x20\n        /* \"#utility.yul\":13440:13449   */\n      dup4\n        /* \"#utility.yul\":13436:13454   */\n      add\n        /* \"#utility.yul\":13427:13433   */\n      dup7\n        /* \"#utility.yul\":13385:13455   */\n      tag_179\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":13502:13511   */\n      dup2\n        /* \"#utility.yul\":13496:13500   */\n      dup2\n        /* \"#utility.yul\":13492:13512   */\n      sub\n        /* \"#utility.yul\":13487:13489   */\n      0x40\n        /* \"#utility.yul\":13476:13485   */\n      dup4\n        /* \"#utility.yul\":13472:13490   */\n      add\n        /* \"#utility.yul\":13465:13513   */\n      mstore\n        /* \"#utility.yul\":13530:13616   */\n      tag_359\n        /* \"#utility.yul\":13611:13615   */\n      dup2\n        /* \"#utility.yul\":13602:13608   */\n      dup5\n        /* \"#utility.yul\":13594:13600   */\n      dup7\n        /* \"#utility.yul\":13530:13616   */\n      tag_186\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":13522:13616   */\n      swap1\n      pop\n        /* \"#utility.yul\":13082:13623   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13629:14277   */\n    tag_119:\n        /* \"#utility.yul\":13826:13830   */\n      0x00\n        /* \"#utility.yul\":13864:13867   */\n      0xa0\n        /* \"#utility.yul\":13853:13862   */\n      dup3\n        /* \"#utility.yul\":13849:13868   */\n      add\n        /* \"#utility.yul\":13841:13868   */\n      swap1\n      pop\n        /* \"#utility.yul\":13878:13947   */\n      tag_361\n        /* \"#utility.yul\":13944:13945   */\n      0x00\n        /* \"#utility.yul\":13933:13942   */\n      dup4\n        /* \"#utility.yul\":13929:13946   */\n      add\n        /* \"#utility.yul\":13920:13926   */\n      dup9\n        /* \"#utility.yul\":13878:13947   */\n      tag_179\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13957:14027   */\n      tag_362\n        /* \"#utility.yul\":14023:14025   */\n      0x20\n        /* \"#utility.yul\":14012:14021   */\n      dup4\n        /* \"#utility.yul\":14008:14026   */\n      add\n        /* \"#utility.yul\":13999:14005   */\n      dup8\n        /* \"#utility.yul\":13957:14027   */\n      tag_179\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":14037:14109   */\n      tag_363\n        /* \"#utility.yul\":14105:14107   */\n      0x40\n        /* \"#utility.yul\":14094:14103   */\n      dup4\n        /* \"#utility.yul\":14090:14108   */\n      add\n        /* \"#utility.yul\":14081:14087   */\n      dup7\n        /* \"#utility.yul\":14037:14109   */\n      tag_154\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":14119:14191   */\n      tag_364\n        /* \"#utility.yul\":14187:14189   */\n      0x60\n        /* \"#utility.yul\":14176:14185   */\n      dup4\n        /* \"#utility.yul\":14172:14190   */\n      add\n        /* \"#utility.yul\":14163:14169   */\n      dup6\n        /* \"#utility.yul\":14119:14191   */\n      tag_153\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":14201:14270   */\n      tag_365\n        /* \"#utility.yul\":14265:14268   */\n      0x80\n        /* \"#utility.yul\":14254:14263   */\n      dup4\n        /* \"#utility.yul\":14250:14269   */\n      add\n        /* \"#utility.yul\":14241:14247   */\n      dup5\n        /* \"#utility.yul\":14201:14270   */\n      tag_156\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":13629:14277   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14283:14463   */\n    tag_189:\n        /* \"#utility.yul\":14331:14408   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14328:14329   */\n      0x00\n        /* \"#utility.yul\":14321:14409   */\n      mstore\n        /* \"#utility.yul\":14428:14432   */\n      0x12\n        /* \"#utility.yul\":14425:14426   */\n      0x04\n        /* \"#utility.yul\":14418:14433   */\n      mstore\n        /* \"#utility.yul\":14452:14456   */\n      0x24\n        /* \"#utility.yul\":14449:14450   */\n      0x00\n        /* \"#utility.yul\":14442:14457   */\n      revert\n        /* \"#utility.yul\":14469:14640   */\n    tag_125:\n        /* \"#utility.yul\":14499:14500   */\n      0x00\n        /* \"#utility.yul\":14516:14534   */\n      tag_368\n        /* \"#utility.yul\":14532:14533   */\n      dup3\n        /* \"#utility.yul\":14516:14534   */\n      tag_155\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":14511:14534   */\n      swap2\n      pop\n        /* \"#utility.yul\":14548:14566   */\n      tag_369\n        /* \"#utility.yul\":14564:14565   */\n      dup4\n        /* \"#utility.yul\":14548:14566   */\n      tag_155\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":14543:14566   */\n      swap3\n      pop\n        /* \"#utility.yul\":14585:14586   */\n      dup3\n        /* \"#utility.yul\":14575:14610   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":14590:14608   */\n      tag_371\n      tag_189\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":14575:14610   */\n    tag_370:\n        /* \"#utility.yul\":14632:14633   */\n      dup3\n        /* \"#utility.yul\":14629:14630   */\n      dup3\n        /* \"#utility.yul\":14624:14634   */\n      smod\n        /* \"#utility.yul\":14619:14634   */\n      swap1\n      pop\n        /* \"#utility.yul\":14469:14640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14646:15028   */\n    tag_129:\n        /* \"#utility.yul\":14684:14685   */\n      0x00\n        /* \"#utility.yul\":14701:14719   */\n      tag_373\n        /* \"#utility.yul\":14717:14718   */\n      dup3\n        /* \"#utility.yul\":14701:14719   */\n      tag_155\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":14696:14719   */\n      swap2\n      pop\n        /* \"#utility.yul\":14733:14751   */\n      tag_374\n        /* \"#utility.yul\":14749:14750   */\n      dup4\n        /* \"#utility.yul\":14733:14751   */\n      tag_155\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":14728:14751   */\n      swap3\n      pop\n        /* \"#utility.yul\":14770:14771   */\n      dup3\n        /* \"#utility.yul\":14760:14795   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":14775:14793   */\n      tag_376\n      tag_189\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":14760:14795   */\n    tag_375:\n        /* \"#utility.yul\":14961:14962   */\n      0x01\n        /* \"#utility.yul\":14958:14959   */\n      0x00\n        /* \"#utility.yul\":14954:14963   */\n      sub\n        /* \"#utility.yul\":14951:14952   */\n      dup4\n        /* \"#utility.yul\":14948:14964   */\n      eq\n        /* \"#utility.yul\":14867:14933   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000\n        /* \"#utility.yul\":14864:14865   */\n      dup4\n        /* \"#utility.yul\":14861:14934   */\n      eq\n        /* \"#utility.yul\":14844:14974   */\n      and\n        /* \"#utility.yul\":14841:14997   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":14977:14995   */\n      tag_378\n      tag_182\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":14841:14997   */\n    tag_377:\n        /* \"#utility.yul\":15020:15021   */\n      dup3\n        /* \"#utility.yul\":15017:15018   */\n      dup3\n        /* \"#utility.yul\":15012:15022   */\n      sdiv\n        /* \"#utility.yul\":15007:15022   */\n      swap1\n      pop\n        /* \"#utility.yul\":14646:15028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15034:15128   */\n    tag_190:\n        /* \"#utility.yul\":15067:15075   */\n      0x00\n        /* \"#utility.yul\":15115:15120   */\n      dup2\n        /* \"#utility.yul\":15111:15113   */\n      0x60\n        /* \"#utility.yul\":15107:15121   */\n      shl\n        /* \"#utility.yul\":15086:15121   */\n      swap1\n      pop\n        /* \"#utility.yul\":15034:15128   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15134:15228   */\n    tag_191:\n        /* \"#utility.yul\":15173:15180   */\n      0x00\n        /* \"#utility.yul\":15202:15222   */\n      tag_381\n        /* \"#utility.yul\":15216:15221   */\n      dup3\n        /* \"#utility.yul\":15202:15222   */\n      tag_190\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":15191:15222   */\n      swap1\n      pop\n        /* \"#utility.yul\":15134:15228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15234:15334   */\n    tag_192:\n        /* \"#utility.yul\":15273:15280   */\n      0x00\n        /* \"#utility.yul\":15302:15328   */\n      tag_383\n        /* \"#utility.yul\":15322:15327   */\n      dup3\n        /* \"#utility.yul\":15302:15328   */\n      tag_191\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":15291:15328   */\n      swap1\n      pop\n        /* \"#utility.yul\":15234:15334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15340:15497   */\n    tag_193:\n        /* \"#utility.yul\":15445:15490   */\n      tag_385\n        /* \"#utility.yul\":15465:15489   */\n      tag_386\n        /* \"#utility.yul\":15483:15488   */\n      dup3\n        /* \"#utility.yul\":15465:15489   */\n      tag_150\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":15445:15490   */\n      tag_192\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":15440:15443   */\n      dup3\n        /* \"#utility.yul\":15433:15491   */\n      mstore\n        /* \"#utility.yul\":15340:15497   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15503:15599   */\n    tag_194:\n        /* \"#utility.yul\":15537:15545   */\n      0x00\n        /* \"#utility.yul\":15586:15591   */\n      dup2\n        /* \"#utility.yul\":15581:15584   */\n      0xe8\n        /* \"#utility.yul\":15577:15592   */\n      shl\n        /* \"#utility.yul\":15556:15592   */\n      swap1\n      pop\n        /* \"#utility.yul\":15503:15599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15605:15698   */\n    tag_195:\n        /* \"#utility.yul\":15642:15649   */\n      0x00\n        /* \"#utility.yul\":15671:15692   */\n      tag_389\n        /* \"#utility.yul\":15686:15691   */\n      dup3\n        /* \"#utility.yul\":15671:15692   */\n      tag_194\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":15660:15692   */\n      swap1\n      pop\n        /* \"#utility.yul\":15605:15698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15704:15853   */\n    tag_196:\n        /* \"#utility.yul\":15805:15846   */\n      tag_391\n        /* \"#utility.yul\":15823:15845   */\n      tag_392\n        /* \"#utility.yul\":15839:15844   */\n      dup3\n        /* \"#utility.yul\":15823:15845   */\n      tag_155\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":15805:15846   */\n      tag_195\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":15800:15803   */\n      dup3\n        /* \"#utility.yul\":15793:15847   */\n      mstore\n        /* \"#utility.yul\":15704:15853   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15859:16379   */\n    tag_133:\n        /* \"#utility.yul\":16019:16022   */\n      0x00\n        /* \"#utility.yul\":16034:16109   */\n      tag_394\n        /* \"#utility.yul\":16105:16108   */\n      dup3\n        /* \"#utility.yul\":16096:16102   */\n      dup7\n        /* \"#utility.yul\":16034:16109   */\n      tag_193\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":16134:16136   */\n      0x14\n        /* \"#utility.yul\":16129:16132   */\n      dup3\n        /* \"#utility.yul\":16125:16137   */\n      add\n        /* \"#utility.yul\":16118:16137   */\n      swap2\n      pop\n        /* \"#utility.yul\":16147:16218   */\n      tag_395\n        /* \"#utility.yul\":16214:16217   */\n      dup3\n        /* \"#utility.yul\":16205:16211   */\n      dup6\n        /* \"#utility.yul\":16147:16218   */\n      tag_196\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":16243:16244   */\n      0x03\n        /* \"#utility.yul\":16238:16241   */\n      dup3\n        /* \"#utility.yul\":16234:16245   */\n      add\n        /* \"#utility.yul\":16227:16245   */\n      swap2\n      pop\n        /* \"#utility.yul\":16255:16326   */\n      tag_396\n        /* \"#utility.yul\":16322:16325   */\n      dup3\n        /* \"#utility.yul\":16313:16319   */\n      dup5\n        /* \"#utility.yul\":16255:16326   */\n      tag_196\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":16351:16352   */\n      0x03\n        /* \"#utility.yul\":16346:16349   */\n      dup3\n        /* \"#utility.yul\":16342:16353   */\n      add\n        /* \"#utility.yul\":16335:16353   */\n      swap2\n      pop\n        /* \"#utility.yul\":16370:16373   */\n      dup2\n        /* \"#utility.yul\":16363:16373   */\n      swap1\n      pop\n        /* \"#utility.yul\":15859:16379   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16385:16507   */\n    tag_197:\n        /* \"#utility.yul\":16458:16482   */\n      tag_398\n        /* \"#utility.yul\":16476:16481   */\n      dup2\n        /* \"#utility.yul\":16458:16482   */\n      tag_170\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":16451:16456   */\n      dup2\n        /* \"#utility.yul\":16448:16483   */\n      eq\n        /* \"#utility.yul\":16438:16501   */\n      tag_399\n      jumpi\n        /* \"#utility.yul\":16497:16498   */\n      0x00\n        /* \"#utility.yul\":16494:16495   */\n      0x00\n        /* \"#utility.yul\":16487:16499   */\n      revert\n        /* \"#utility.yul\":16438:16501   */\n    tag_399:\n        /* \"#utility.yul\":16385:16507   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16513:16656   */\n    tag_198:\n        /* \"#utility.yul\":16570:16575   */\n      0x00\n        /* \"#utility.yul\":16601:16607   */\n      dup2\n        /* \"#utility.yul\":16595:16608   */\n      mload\n        /* \"#utility.yul\":16586:16608   */\n      swap1\n      pop\n        /* \"#utility.yul\":16617:16650   */\n      tag_401\n        /* \"#utility.yul\":16644:16649   */\n      dup2\n        /* \"#utility.yul\":16617:16650   */\n      tag_197\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":16513:16656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16662:17013   */\n    tag_141:\n        /* \"#utility.yul\":16732:16738   */\n      0x00\n        /* \"#utility.yul\":16781:16783   */\n      0x20\n        /* \"#utility.yul\":16769:16778   */\n      dup3\n        /* \"#utility.yul\":16760:16767   */\n      dup5\n        /* \"#utility.yul\":16756:16779   */\n      sub\n        /* \"#utility.yul\":16752:16784   */\n      slt\n        /* \"#utility.yul\":16749:16868   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":16787:16866   */\n      tag_404\n      tag_158\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":16749:16868   */\n    tag_403:\n        /* \"#utility.yul\":16907:16908   */\n      0x00\n        /* \"#utility.yul\":16932:16996   */\n      tag_405\n        /* \"#utility.yul\":16988:16995   */\n      dup5\n        /* \"#utility.yul\":16979:16985   */\n      dup3\n        /* \"#utility.yul\":16968:16977   */\n      dup6\n        /* \"#utility.yul\":16964:16986   */\n      add\n        /* \"#utility.yul\":16932:16996   */\n      tag_198\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":16922:16996   */\n      swap2\n      pop\n        /* \"#utility.yul\":16878:17006   */\n      pop\n        /* \"#utility.yul\":16662:17013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220548f10117ac320c92447cf5b9e5bbf4eebee36430bdf9f9664ba1542d0fa9e9e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_100": {
									"entryPoint": null,
									"id": 100,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2306:9",
										"nodeType": "YulBlock",
										"src": "0:2306:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "888:79:9",
													"nodeType": "YulBlock",
													"src": "888:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "945:16:9",
																"nodeType": "YulBlock",
																"src": "945:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:9",
																					"nodeType": "YulLiteral",
																					"src": "954:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "957:1:9",
																					"nodeType": "YulLiteral",
																					"src": "957:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "947:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "947:6:9"
																			},
																			"nativeSrc": "947:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "947:12:9"
																		},
																		"nativeSrc": "947:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "947:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "911:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "911:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "936:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "936:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "918:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "918:17:9"
																				},
																				"nativeSrc": "918:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "918:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "908:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "908:2:9"
																		},
																		"nativeSrc": "908:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "908:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "901:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "901:6:9"
																},
																"nativeSrc": "901:43:9",
																"nodeType": "YulFunctionCall",
																"src": "901:43:9"
															},
															"nativeSrc": "898:63:9",
															"nodeType": "YulIf",
															"src": "898:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "845:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "881:5:9",
														"nodeType": "YulTypedName",
														"src": "881:5:9",
														"type": ""
													}
												],
												"src": "845:122:9"
											},
											{
												"body": {
													"nativeSrc": "1036:80:9",
													"nodeType": "YulBlock",
													"src": "1036:80:9",
													"statements": [
														{
															"nativeSrc": "1046:22:9",
															"nodeType": "YulAssignment",
															"src": "1046:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1061:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1061:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1055:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1055:5:9"
																},
																"nativeSrc": "1055:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1055:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1046:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1046:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1104:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1104:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "1077:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1077:26:9"
																},
																"nativeSrc": "1077:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1077:33:9"
															},
															"nativeSrc": "1077:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1077:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "973:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1014:6:9",
														"nodeType": "YulTypedName",
														"src": "1014:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1022:3:9",
														"nodeType": "YulTypedName",
														"src": "1022:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1030:5:9",
														"nodeType": "YulTypedName",
														"src": "1030:5:9",
														"type": ""
													}
												],
												"src": "973:143:9"
											},
											{
												"body": {
													"nativeSrc": "1165:47:9",
													"nodeType": "YulBlock",
													"src": "1165:47:9",
													"statements": [
														{
															"nativeSrc": "1175:31:9",
															"nodeType": "YulAssignment",
															"src": "1175:31:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1197:1:9",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1200:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1200:5:9"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1186:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "1186:10:9"
																},
																"nativeSrc": "1186:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1186:20:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1175:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1175:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "1122:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1147:5:9",
														"nodeType": "YulTypedName",
														"src": "1147:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1157:7:9",
														"nodeType": "YulTypedName",
														"src": "1157:7:9",
														"type": ""
													}
												],
												"src": "1122:90:9"
											},
											{
												"body": {
													"nativeSrc": "1259:77:9",
													"nodeType": "YulBlock",
													"src": "1259:77:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1314:16:9",
																"nodeType": "YulBlock",
																"src": "1314:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1323:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1323:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1326:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1326:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1316:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1316:6:9"
																			},
																			"nativeSrc": "1316:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1316:12:9"
																		},
																		"nativeSrc": "1316:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1316:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1282:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1282:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1305:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1305:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "1289:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "1289:15:9"
																				},
																				"nativeSrc": "1289:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1289:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1279:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1279:2:9"
																		},
																		"nativeSrc": "1279:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1279:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1272:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:9"
																},
																"nativeSrc": "1272:41:9",
																"nodeType": "YulFunctionCall",
																"src": "1272:41:9"
															},
															"nativeSrc": "1269:61:9",
															"nodeType": "YulIf",
															"src": "1269:61:9"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "1218:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1252:5:9",
														"nodeType": "YulTypedName",
														"src": "1252:5:9",
														"type": ""
													}
												],
												"src": "1218:118:9"
											},
											{
												"body": {
													"nativeSrc": "1403:78:9",
													"nodeType": "YulBlock",
													"src": "1403:78:9",
													"statements": [
														{
															"nativeSrc": "1413:22:9",
															"nodeType": "YulAssignment",
															"src": "1413:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1428:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1428:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1422:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:5:9"
																},
																"nativeSrc": "1422:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1413:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1413:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1469:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1469:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "1444:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "1444:24:9"
																},
																"nativeSrc": "1444:31:9",
																"nodeType": "YulFunctionCall",
																"src": "1444:31:9"
															},
															"nativeSrc": "1444:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "1444:31:9"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "1342:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1381:6:9",
														"nodeType": "YulTypedName",
														"src": "1381:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1389:3:9",
														"nodeType": "YulTypedName",
														"src": "1389:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1397:5:9",
														"nodeType": "YulTypedName",
														"src": "1397:5:9",
														"type": ""
													}
												],
												"src": "1342:139:9"
											},
											{
												"body": {
													"nativeSrc": "1613:690:9",
													"nodeType": "YulBlock",
													"src": "1613:690:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1660:83:9",
																"nodeType": "YulBlock",
																"src": "1660:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1662:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1662:77:9"
																			},
																			"nativeSrc": "1662:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1662:79:9"
																		},
																		"nativeSrc": "1662:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1634:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1634:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1643:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1643:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1630:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:9"
																		},
																		"nativeSrc": "1630:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1655:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1655:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1626:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1626:3:9"
																},
																"nativeSrc": "1626:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1626:33:9"
															},
															"nativeSrc": "1623:120:9",
															"nodeType": "YulIf",
															"src": "1623:120:9"
														},
														{
															"nativeSrc": "1753:128:9",
															"nodeType": "YulBlock",
															"src": "1753:128:9",
															"statements": [
																{
																	"nativeSrc": "1768:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1768:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1782:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1782:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1772:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1772:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1797:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1797:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1843:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1843:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1854:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1854:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1839:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1839:3:9"
																				},
																				"nativeSrc": "1839:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1839:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1863:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1863:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1807:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1807:31:9"
																		},
																		"nativeSrc": "1807:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1807:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1797:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1797:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1891:129:9",
															"nodeType": "YulBlock",
															"src": "1891:129:9",
															"statements": [
																{
																	"nativeSrc": "1906:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1906:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1920:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1920:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1910:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1910:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1936:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1936:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1982:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1982:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1993:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1993:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1978:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1978:3:9"
																				},
																				"nativeSrc": "1978:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1978:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2002:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2002:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1946:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1946:31:9"
																		},
																		"nativeSrc": "1946:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1946:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1936:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1936:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2030:129:9",
															"nodeType": "YulBlock",
															"src": "2030:129:9",
															"statements": [
																{
																	"nativeSrc": "2045:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2045:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2059:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2059:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2049:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2049:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2075:74:9",
																	"nodeType": "YulAssignment",
																	"src": "2075:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2121:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2121:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2132:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2132:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2117:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2117:3:9"
																				},
																				"nativeSrc": "2117:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2117:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2141:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2141:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "2085:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "2085:31:9"
																		},
																		"nativeSrc": "2085:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2085:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2075:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2075:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2169:127:9",
															"nodeType": "YulBlock",
															"src": "2169:127:9",
															"statements": [
																{
																	"nativeSrc": "2184:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2184:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2198:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2198:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2188:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2188:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2214:72:9",
																	"nodeType": "YulAssignment",
																	"src": "2214:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2258:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2258:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2269:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2269:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2254:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2254:3:9"
																				},
																				"nativeSrc": "2254:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2254:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2278:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2278:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "2224:29:9",
																			"nodeType": "YulIdentifier",
																			"src": "2224:29:9"
																		},
																		"nativeSrc": "2224:62:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2224:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2214:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2214:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory",
												"nativeSrc": "1487:816:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1559:9:9",
														"nodeType": "YulTypedName",
														"src": "1559:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1570:7:9",
														"nodeType": "YulTypedName",
														"src": "1570:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1582:6:9",
														"nodeType": "YulTypedName",
														"src": "1582:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1590:6:9",
														"nodeType": "YulTypedName",
														"src": "1590:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1598:6:9",
														"nodeType": "YulTypedName",
														"src": "1598:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1606:6:9",
														"nodeType": "YulTypedName",
														"src": "1606:6:9",
														"type": ""
													}
												],
												"src": "1487:816:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint160t_int24_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051611980380380611980833981810160405281019061003191906101fd565b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505060405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018260020b8152505f5f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548162ffffff021916908360020b62ffffff16021790555090505050505050610261565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61016c82610143565b9050919050565b61017c81610162565b8114610186575f5ffd5b50565b5f8151905061019781610173565b92915050565b6101a681610143565b81146101b0575f5ffd5b50565b5f815190506101c18161019d565b92915050565b5f8160020b9050919050565b6101dc816101c7565b81146101e6575f5ffd5b50565b5f815190506101f7816101d3565b92915050565b5f5f5f5f608085870312156102155761021461013f565b5b5f61022287828801610189565b945050602061023387828801610189565b9350506040610244878288016101b3565b9250506060610255878288016101e9565b91505092959194509250565b60805160a0516116e96102975f395f81816106880152610c8b01525f8181610203015281816107610152610bed01526116e95ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063514ea4bf11610064578063514ea4bf146101215780635339c29614610151578063d21220a714610181578063e35473351461019f578063f30dba93146101d057610091565b80630dfe1681146100955780631a686502146100b35780633850c7bd146100d15780633c8a7d8d146100f0575b5f5ffd5b61009d610201565b6040516100aa9190610d86565b60405180910390f35b6100bb610225565b6040516100c89190610dc9565b60405180910390f35b6100d9610246565b6040516100e7929190610e0c565b60405180910390f35b61010a60048036038101906101059190610f1a565b610281565b604051610118929190610fc8565b60405180910390f35b61013b60048036038101906101369190611022565b61063c565b6040516101489190610dc9565b60405180910390f35b61016b60048036038101906101669190611083565b610671565b60405161017891906110ae565b60405180910390f35b610189610686565b6040516101969190610d86565b60405180910390f35b6101b960048036038101906101b491906110c7565b6106aa565b6040516101c792919061113c565b60405180910390f35b6101ea60048036038101906101e59190611163565b61098e565b6040516101f89291906111a8565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60015f9054906101000a90046fffffffffffffffffffffffffffffffff1681565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460020b905082565b5f5f8560020b8760020b1215806102bd57507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8760020b125b806102f657507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186102ed906111fc565b60020b8660020b135b1561032d576040517f064847d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f856fffffffffffffffffffffffffffffffff1603610378576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61038f888760026109d59092919063ffffffff16565b90505f6103a8888860026109d59092919063ffffffff16565b905081156103c8576103c78960016003610acc9092919063ffffffff16565b5b80156103e6576103e58860016003610acc9092919063ffffffff16565b5b5f6103ff8b8b8b6004610b35909392919063ffffffff16565b90506104148882610b7a90919063ffffffff16565b670ddd13f10b84ee00945069010f0cf064dd5920000093508760015f8282829054906101000a90046fffffffffffffffffffffffffffffffff166104589190611242565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505f5f5f8711156104a3576104a0610bea565b91505b5f8611156104b6576104b3610c88565b90505b3373ffffffffffffffffffffffffffffffffffffffff1663d348799788888c8c6040518563ffffffff1660e01b81526004016104f594939291906112df565b5f604051808303815f87803b15801561050c575f5ffd5b505af115801561051e573d5f5f3e3d5ffd5b505050505f871180156105425750610534610bea565b8783610540919061131d565b115b15610579576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f86118015610599575061058b610c88565b8682610597919061131d565b115b156105d0576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a60020b8c60020b8e73ffffffffffffffffffffffffffffffffffffffff167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338e8c8c6040516106249493929190611350565b60405180910390a45050505050965096945050505050565b6004602052805f5260405f205f91509050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff16905081565b6003602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f62014cc090505f6c46bd046408013d67ed5d406b2d90507fffffffffffffffffffffffffffffffffffffffffffffffffffe22b3b9e50c0f49350680246ddf97976680000925081815f5f0160145f5f015f8491906101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508391906101000a81548162ffffff021916908360020b62ffffff16021790555050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88866107a690611393565b6040518363ffffffff1660e01b81526004016107c39291906113d9565b6020604051808303815f875af11580156107df573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610803919061142a565b505f61080d610c88565b90503373ffffffffffffffffffffffffffffffffffffffff1663fa461e3386868a8a6040518563ffffffff1660e01b815260040161084e9493929190611455565b5f604051808303815f87803b158015610865575f5ffd5b505af1158015610877573d5f5f3e3d5ffd5b50505050610883610c88565b848261088f919061131d565b10156108c7576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca6787875f5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a90046fffffffffffffffffffffffffffffffff165f5f0160149054906101000a900460020b60405161097b959493929190611493565b60405180910390a3505050935093915050565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a90046fffffffffffffffffffffffffffffffff16905082565b5f5f845f8560020b60020b81526020019081526020015f2090505f815f0160019054906101000a90046fffffffffffffffffffffffffffffffff1690505f8482610a1f9190611242565b90505f826fffffffffffffffffffffffffffffffff1603610a56576001835f015f6101000a81548160ff0219169083151502179055505b80835f0160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505f826fffffffffffffffffffffffffffffffff161415155f826fffffffffffffffffffffffffffffffff16141515141593505050509392505050565b5f8183610ad99190611511565b60020b14610ae5575f5ffd5b5f5f610afb8385610af69190611541565b610d26565b915091505f8160ff166001901b905080865f8560010b60010b81526020019081526020015f205f8282541892505081905550505050505050565b5f845f858585604051602001610b4d93929190611622565b6040516020818303038152906040528051906020012081526020019081526020015f209050949350505050565b5f825f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690505f8282610ba99190611242565b905080845f015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c449190610d86565b602060405180830381865afa158015610c5f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c839190611688565b905090565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ce29190610d86565b602060405180830381865afa158015610cfd573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d219190611688565b905090565b5f5f60088360020b901d915061010083610d409190611511565b9050915091565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d7082610d47565b9050919050565b610d8081610d66565b82525050565b5f602082019050610d995f830184610d77565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b610dc381610d9f565b82525050565b5f602082019050610ddc5f830184610dba565b92915050565b610deb81610d47565b82525050565b5f8160020b9050919050565b610e0681610df1565b82525050565b5f604082019050610e1f5f830185610de2565b610e2c6020830184610dfd565b9392505050565b5f5ffd5b5f5ffd5b610e4481610d66565b8114610e4e575f5ffd5b50565b5f81359050610e5f81610e3b565b92915050565b610e6e81610df1565b8114610e78575f5ffd5b50565b5f81359050610e8981610e65565b92915050565b610e9881610d9f565b8114610ea2575f5ffd5b50565b5f81359050610eb381610e8f565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610eda57610ed9610eb9565b5b8235905067ffffffffffffffff811115610ef757610ef6610ebd565b5b602083019150836001820283011115610f1357610f12610ec1565b5b9250929050565b5f5f5f5f5f5f60a08789031215610f3457610f33610e33565b5b5f610f4189828a01610e51565b9650506020610f5289828a01610e7b565b9550506040610f6389828a01610e7b565b9450506060610f7489828a01610ea5565b935050608087013567ffffffffffffffff811115610f9557610f94610e37565b5b610fa189828a01610ec5565b92509250509295509295509295565b5f819050919050565b610fc281610fb0565b82525050565b5f604082019050610fdb5f830185610fb9565b610fe86020830184610fb9565b9392505050565b5f819050919050565b61100181610fef565b811461100b575f5ffd5b50565b5f8135905061101c81610ff8565b92915050565b5f6020828403121561103757611036610e33565b5b5f6110448482850161100e565b91505092915050565b5f8160010b9050919050565b6110628161104d565b811461106c575f5ffd5b50565b5f8135905061107d81611059565b92915050565b5f6020828403121561109857611097610e33565b5b5f6110a58482850161106f565b91505092915050565b5f6020820190506110c15f830184610fb9565b92915050565b5f5f5f604084860312156110de576110dd610e33565b5b5f6110eb86828701610e51565b935050602084013567ffffffffffffffff81111561110c5761110b610e37565b5b61111886828701610ec5565b92509250509250925092565b5f819050919050565b61113681611124565b82525050565b5f60408201905061114f5f83018561112d565b61115c602083018461112d565b9392505050565b5f6020828403121561117857611177610e33565b5b5f61118584828501610e7b565b91505092915050565b5f8115159050919050565b6111a28161118e565b82525050565b5f6040820190506111bb5f830185611199565b6111c86020830184610dba565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61120682610df1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008203611238576112376111cf565b5b815f039050919050565b5f61124c82610d9f565b915061125783610d9f565b925082820190506fffffffffffffffffffffffffffffffff81111561127f5761127e6111cf565b5b92915050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f6112be8385611285565b93506112cb838584611295565b6112d4836112a3565b840190509392505050565b5f6060820190506112f25f830187610fb9565b6112ff6020830186610fb9565b81810360408301526113128184866112b3565b905095945050505050565b5f61132782610fb0565b915061133283610fb0565b925082820190508082111561134a576113496111cf565b5b92915050565b5f6080820190506113635f830187610d77565b6113706020830186610dba565b61137d6040830185610fb9565b61138a6060830184610fb9565b95945050505050565b5f61139d82611124565b91507f800000000000000000000000000000000000000000000000000000000000000082036113cf576113ce6111cf565b5b815f039050919050565b5f6040820190506113ec5f830185610d77565b6113f96020830184610fb9565b9392505050565b6114098161118e565b8114611413575f5ffd5b50565b5f8151905061142481611400565b92915050565b5f6020828403121561143f5761143e610e33565b5b5f61144c84828501611416565b91505092915050565b5f6060820190506114685f83018761112d565b611475602083018661112d565b81810360408301526114888184866112b3565b905095945050505050565b5f60a0820190506114a65f83018861112d565b6114b3602083018761112d565b6114c06040830186610de2565b6114cd6060830185610dba565b6114da6080830184610dfd565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61151b82610df1565b915061152683610df1565b925082611536576115356114e4565b5b828207905092915050565b5f61154b82610df1565b915061155683610df1565b925082611566576115656114e4565b5b60015f0383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008314161561159e5761159d6111cf565b5b828205905092915050565b5f8160601b9050919050565b5f6115bf826115a9565b9050919050565b5f6115d0826115b5565b9050919050565b6115e86115e382610d66565b6115c6565b82525050565b5f8160e81b9050919050565b5f611604826115ee565b9050919050565b61161c61161782610df1565b6115fa565b82525050565b5f61162d82866115d7565b60148201915061163d828561160b565b60038201915061164d828461160b565b600382019150819050949350505050565b61166781610fb0565b8114611671575f5ffd5b50565b5f815190506116828161165e565b92915050565b5f6020828403121561169d5761169c610e33565b5b5f6116aa84828501611674565b9150509291505056fea2646970667358221220548f10117ac320c92447cf5b9e5bbf4eebee36430bdf9f9664ba1542d0fa9e9e64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1980 CODESIZE SUB DUP1 PUSH2 0x1980 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1FD JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP PUSH0 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP PUSH2 0x261 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16C DUP3 PUSH2 0x143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C DUP2 PUSH2 0x162 JUMP JUMPDEST DUP2 EQ PUSH2 0x186 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x197 DUP2 PUSH2 0x173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x143 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C1 DUP2 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC DUP2 PUSH2 0x1C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F7 DUP2 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x215 JUMPI PUSH2 0x214 PUSH2 0x13F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222 DUP8 DUP3 DUP9 ADD PUSH2 0x189 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x233 DUP8 DUP3 DUP9 ADD PUSH2 0x189 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x244 DUP8 DUP3 DUP9 ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x255 DUP8 DUP3 DUP9 ADD PUSH2 0x1E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x16E9 PUSH2 0x297 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x688 ADD MSTORE PUSH2 0xC8B ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x203 ADD MSTORE DUP2 DUP2 PUSH2 0x761 ADD MSTORE PUSH2 0xBED ADD MSTORE PUSH2 0x16E9 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x514EA4BF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x514EA4BF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x5339C296 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xE3547335 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF30DBA93 EQ PUSH2 0x1D0 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x3850C7BD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3C8A7D8D EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP3 SWAP2 SWAP1 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP3 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP3 SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP3 SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT ISZERO DUP1 PUSH2 0x2BD JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST DUP1 PUSH2 0x2F6 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x2ED SWAP1 PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH32 0x64847D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1007454800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x38F DUP9 DUP8 PUSH1 0x2 PUSH2 0x9D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3A8 DUP9 DUP9 PUSH1 0x2 PUSH2 0x9D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C7 DUP10 PUSH1 0x1 PUSH1 0x3 PUSH2 0xACC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E5 DUP9 PUSH1 0x1 PUSH1 0x3 PUSH2 0xACC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FF DUP12 DUP12 DUP12 PUSH1 0x4 PUSH2 0xB35 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP9 DUP3 PUSH2 0xB7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xDDD13F10B84EE00 SWAP5 POP PUSH10 0x10F0CF064DD59200000 SWAP4 POP DUP8 PUSH1 0x1 PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 PUSH0 DUP8 GT ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x4A0 PUSH2 0xBEA JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP7 GT ISZERO PUSH2 0x4B6 JUMPI PUSH2 0x4B3 PUSH2 0xC88 JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD3487997 DUP9 DUP9 DUP13 DUP13 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP8 GT DUP1 ISZERO PUSH2 0x542 JUMPI POP PUSH2 0x534 PUSH2 0xBEA JUMP JUMPDEST DUP8 DUP4 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 GT DUP1 ISZERO PUSH2 0x599 JUMPI POP PUSH2 0x58B PUSH2 0xC88 JUMP JUMPDEST DUP7 DUP3 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP11 PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE CALLER DUP15 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x624 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH3 0x14CC0 SWAP1 POP PUSH0 PUSH13 0x46BD046408013D67ED5D406B2D SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE22B3B9E50C0F4 SWAP4 POP PUSH9 0x246DDF97976680000 SWAP3 POP DUP2 DUP2 PUSH0 PUSH0 ADD PUSH1 0x14 PUSH0 PUSH0 ADD PUSH0 DUP5 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP9 DUP7 PUSH2 0x7A6 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP3 SWAP2 SWAP1 PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST POP PUSH0 PUSH2 0x80D PUSH2 0xC88 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFA461E33 DUP7 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x883 PUSH2 0xC88 JUMP JUMPDEST DUP5 DUP3 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST LT ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67 DUP8 DUP8 PUSH0 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x40 MLOAD PUSH2 0x97B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP5 DUP3 PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA56 JUMPI PUSH1 0x1 DUP4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP4 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO EQ ISZERO SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND EQ PUSH2 0xAE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH2 0xAFB DUP4 DUP6 PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xD26 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL SWAP1 POP DUP1 DUP7 PUSH0 DUP6 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD XOR SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC83 SWAP2 SWAP1 PUSH2 0x1688 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCFD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0x1688 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 DUP4 PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP2 POP PUSH2 0x100 DUP4 PUSH2 0xD40 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD70 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD99 PUSH0 DUP4 ADD DUP5 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC3 DUP2 PUSH2 0xD9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDC PUSH0 DUP4 ADD DUP5 PUSH2 0xDBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDEB DUP2 PUSH2 0xD47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE06 DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE1F PUSH0 DUP4 ADD DUP6 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xE2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xD66 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5F DUP2 PUSH2 0xE3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6E DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xE78 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE89 DUP2 PUSH2 0xE65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xD9F JUMP JUMPDEST DUP2 EQ PUSH2 0xEA2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB3 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xEDA JUMPI PUSH2 0xED9 PUSH2 0xEB9 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF7 JUMPI PUSH2 0xEF6 PUSH2 0xEBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF33 PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF41 DUP10 DUP3 DUP11 ADD PUSH2 0xE51 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xF52 DUP10 DUP3 DUP11 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xF63 DUP10 DUP3 DUP11 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xF74 DUP10 DUP3 DUP11 ADD PUSH2 0xEA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF95 JUMPI PUSH2 0xF94 PUSH2 0xE37 JUMP JUMPDEST JUMPDEST PUSH2 0xFA1 DUP10 DUP3 DUP11 ADD PUSH2 0xEC5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFDB PUSH0 DUP4 ADD DUP6 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0xFE8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1001 DUP2 PUSH2 0xFEF JUMP JUMPDEST DUP2 EQ PUSH2 0x100B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101C DUP2 PUSH2 0xFF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1036 PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1044 DUP5 DUP3 DUP6 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1062 DUP2 PUSH2 0x104D JUMP JUMPDEST DUP2 EQ PUSH2 0x106C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x107D DUP2 PUSH2 0x1059 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1098 JUMPI PUSH2 0x1097 PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A5 DUP5 DUP3 DUP6 ADD PUSH2 0x106F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C1 PUSH0 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10DE JUMPI PUSH2 0x10DD PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10EB DUP7 DUP3 DUP8 ADD PUSH2 0xE51 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x110C JUMPI PUSH2 0x110B PUSH2 0xE37 JUMP JUMPDEST JUMPDEST PUSH2 0x1118 DUP7 DUP3 DUP8 ADD PUSH2 0xEC5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1136 DUP2 PUSH2 0x1124 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x114F PUSH0 DUP4 ADD DUP6 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x115C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1178 JUMPI PUSH2 0x1177 PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1185 DUP5 DUP3 DUP6 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A2 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH0 DUP4 ADD DUP6 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1206 DUP3 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x1238 JUMPI PUSH2 0x1237 PUSH2 0x11CF JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x124C DUP3 PUSH2 0xD9F JUMP JUMPDEST SWAP2 POP PUSH2 0x1257 DUP4 PUSH2 0xD9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127F JUMPI PUSH2 0x127E PUSH2 0x11CF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BE DUP4 DUP6 PUSH2 0x1285 JUMP JUMPDEST SWAP4 POP PUSH2 0x12CB DUP4 DUP6 DUP5 PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x12D4 DUP4 PUSH2 0x12A3 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12F2 PUSH0 DUP4 ADD DUP8 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x12FF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFB9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1312 DUP2 DUP5 DUP7 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1327 DUP3 PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1332 DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x134A JUMPI PUSH2 0x1349 PUSH2 0x11CF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1363 PUSH0 DUP4 ADD DUP8 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x1370 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x137D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x138A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x139D DUP3 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x13CF JUMPI PUSH2 0x13CE PUSH2 0x11CF JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13EC PUSH0 DUP4 ADD DUP6 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x13F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP2 EQ PUSH2 0x1413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1424 DUP2 PUSH2 0x1400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144C DUP5 DUP3 DUP6 ADD PUSH2 0x1416 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1468 PUSH0 DUP4 ADD DUP8 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x1475 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x112D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1488 DUP2 DUP5 DUP7 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x14A6 PUSH0 DUP4 ADD DUP9 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x14B3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x14C0 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x14CD PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x14DA PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xDFD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x151B DUP3 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1526 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1536 JUMPI PUSH2 0x1535 PUSH2 0x14E4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SMOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x154B DUP3 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1556 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1566 JUMPI PUSH2 0x1565 PUSH2 0x14E4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP4 EQ AND ISZERO PUSH2 0x159E JUMPI PUSH2 0x159D PUSH2 0x11CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15BF DUP3 PUSH2 0x15A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15D0 DUP3 PUSH2 0x15B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E8 PUSH2 0x15E3 DUP3 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x15C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1604 DUP3 PUSH2 0x15EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C PUSH2 0x1617 DUP3 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x15FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x162D DUP3 DUP7 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x163D DUP3 DUP6 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x164D DUP3 DUP5 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1667 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1671 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1682 DUP2 PUSH2 0x165E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169D JUMPI PUSH2 0x169C PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16AA DUP5 DUP3 DUP6 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP16 LT GT PUSH27 0xC320C92447CF5B9E5BBF4EEBEE36430BDF9F9664BA1542D0FA9E9E PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "360:4292:0:-:0;;;1431:251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1574:7;1565:16;;;;;;;;;;1601:7;1592:16;;;;;;;;;;1627:47;;;;;;;;1648:12;1627:47;;;;;;1668:4;1627:47;;;;;1619:5;:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:251;;;;360:4292;;88:117:9;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:122::-;918:24;936:5;918:24;:::i;:::-;911:5;908:35;898:63;;957:1;954;947:12;898:63;845:122;:::o;973:143::-;1030:5;1061:6;1055:13;1046:22;;1077:33;1104:5;1077:33;:::i;:::-;973:143;;;;:::o;1122:90::-;1157:7;1200:5;1197:1;1186:20;1175:31;;1122:90;;;:::o;1218:118::-;1289:22;1305:5;1289:22;:::i;:::-;1282:5;1279:33;1269:61;;1326:1;1323;1316:12;1269:61;1218:118;:::o;1342:139::-;1397:5;1428:6;1422:13;1413:22;;1444:31;1469:5;1444:31;:::i;:::-;1342:139;;;;:::o;1487:816::-;1582:6;1590;1598;1606;1655:3;1643:9;1634:7;1630:23;1626:33;1623:120;;;1662:79;;:::i;:::-;1623:120;1782:1;1807:64;1863:7;1854:6;1843:9;1839:22;1807:64;:::i;:::-;1797:74;;1753:128;1920:2;1946:64;2002:7;1993:6;1982:9;1978:22;1946:64;:::i;:::-;1936:74;;1891:129;2059:2;2085:64;2141:7;2132:6;2121:9;2117:22;2085:64;:::i;:::-;2075:74;;2030:129;2198:2;2224:62;2278:7;2269:6;2258:9;2254:22;2224:62;:::i;:::-;2214:72;;2169:127;1487:816;;;;;;;:::o;360:4292:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balance0_393": {
									"entryPoint": 3050,
									"id": 393,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balance1_411": {
									"entryPoint": 3208,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@flipTick_1124": {
									"entryPoint": 2764,
									"id": 1124,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@get_972": {
									"entryPoint": 2869,
									"id": 972,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@liquidity_59": {
									"entryPoint": 549,
									"id": 59,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_282": {
									"entryPoint": 641,
									"id": 282,
									"parameterSlots": 6,
									"returnSlots": 2
								},
								"@position_1081": {
									"entryPoint": 3366,
									"id": 1081,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@positions_73": {
									"entryPoint": 1596,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@slot0_57": {
									"entryPoint": 582,
									"id": 57,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swap_375": {
									"entryPoint": 1706,
									"id": 375,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@tickBitmap_68": {
									"entryPoint": 1649,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ticks_64": {
									"entryPoint": 2446,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token0_47": {
									"entryPoint": 513,
									"id": 47,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_49": {
									"entryPoint": 1670,
									"id": 49,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@update_1044": {
									"entryPoint": 2517,
									"id": 1044,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@update_941": {
									"entryPoint": 2938,
									"id": 941,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 3781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_int16": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint128": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int16": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int24": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 5591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_int24_to_t_int24_fromStack": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint128_to_t_uint128_fromStack": {
									"entryPoint": 3514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160_fromStack": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4944,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5081,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed": {
									"entryPoint": 4412,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5205,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
									"entryPoint": 3529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4040,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4831,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint128": {
									"entryPoint": 4674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int24": {
									"entryPoint": 5441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int16": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 4388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint128": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"leftAlign_t_address": {
									"entryPoint": 5574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_int24": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_int24": {
									"entryPoint": 5393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"negate_t_int24": {
									"entryPoint": 4604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_232": {
									"entryPoint": 5614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 5545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int16": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 3685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint128": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17016:9",
										"nodeType": "YulBlock",
										"src": "0:17016:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:9",
													"nodeType": "YulBlock",
													"src": "52:81:9",
													"statements": [
														{
															"nativeSrc": "62:65:9",
															"nodeType": "YulAssignment",
															"src": "62:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:9",
																		"nodeType": "YulLiteral",
																		"src": "84:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:9"
																},
																"nativeSrc": "73:54:9",
																"nodeType": "YulFunctionCall",
																"src": "73:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:9",
														"nodeType": "YulTypedName",
														"src": "34:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:9",
														"nodeType": "YulTypedName",
														"src": "44:7:9",
														"type": ""
													}
												],
												"src": "7:126:9"
											},
											{
												"body": {
													"nativeSrc": "184:51:9",
													"nodeType": "YulBlock",
													"src": "184:51:9",
													"statements": [
														{
															"nativeSrc": "194:35:9",
															"nodeType": "YulAssignment",
															"src": "194:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:9"
																},
																"nativeSrc": "205:24:9",
																"nodeType": "YulFunctionCall",
																"src": "205:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:9",
														"nodeType": "YulTypedName",
														"src": "166:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:9",
														"nodeType": "YulTypedName",
														"src": "176:7:9",
														"type": ""
													}
												],
												"src": "139:96:9"
											},
											{
												"body": {
													"nativeSrc": "306:53:9",
													"nodeType": "YulBlock",
													"src": "306:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:9"
																		},
																		"nativeSrc": "328:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:9"
																},
																"nativeSrc": "316:37:9",
																"nodeType": "YulFunctionCall",
																"src": "316:37:9"
															},
															"nativeSrc": "316:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:9",
														"nodeType": "YulTypedName",
														"src": "294:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:9",
														"nodeType": "YulTypedName",
														"src": "301:3:9",
														"type": ""
													}
												],
												"src": "241:118:9"
											},
											{
												"body": {
													"nativeSrc": "463:124:9",
													"nodeType": "YulBlock",
													"src": "463:124:9",
													"statements": [
														{
															"nativeSrc": "473:26:9",
															"nodeType": "YulAssignment",
															"src": "473:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:9",
																		"nodeType": "YulLiteral",
																		"src": "496:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:9"
																},
																"nativeSrc": "481:18:9",
																"nodeType": "YulFunctionCall",
																"src": "481:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:9",
																				"nodeType": "YulLiteral",
																				"src": "577:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:9"
																		},
																		"nativeSrc": "562:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:9"
																},
																"nativeSrc": "509:71:9",
																"nodeType": "YulFunctionCall",
																"src": "509:71:9"
															},
															"nativeSrc": "509:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:9",
														"nodeType": "YulTypedName",
														"src": "435:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:9",
														"nodeType": "YulTypedName",
														"src": "447:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:9",
														"nodeType": "YulTypedName",
														"src": "458:4:9",
														"type": ""
													}
												],
												"src": "365:222:9"
											},
											{
												"body": {
													"nativeSrc": "638:73:9",
													"nodeType": "YulBlock",
													"src": "638:73:9",
													"statements": [
														{
															"nativeSrc": "648:57:9",
															"nodeType": "YulAssignment",
															"src": "648:57:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "663:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "663:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "670:34:9",
																		"nodeType": "YulLiteral",
																		"src": "670:34:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "659:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "659:3:9"
																},
																"nativeSrc": "659:46:9",
																"nodeType": "YulFunctionCall",
																"src": "659:46:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint128",
												"nativeSrc": "593:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:9",
														"nodeType": "YulTypedName",
														"src": "620:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:9",
														"nodeType": "YulTypedName",
														"src": "630:7:9",
														"type": ""
													}
												],
												"src": "593:118:9"
											},
											{
												"body": {
													"nativeSrc": "782:53:9",
													"nodeType": "YulBlock",
													"src": "782:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "799:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "799:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "822:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "822:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint128",
																			"nativeSrc": "804:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "804:17:9"
																		},
																		"nativeSrc": "804:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "804:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "792:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "792:6:9"
																},
																"nativeSrc": "792:37:9",
																"nodeType": "YulFunctionCall",
																"src": "792:37:9"
															},
															"nativeSrc": "792:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "792:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
												"nativeSrc": "717:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "770:5:9",
														"nodeType": "YulTypedName",
														"src": "770:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "777:3:9",
														"nodeType": "YulTypedName",
														"src": "777:3:9",
														"type": ""
													}
												],
												"src": "717:118:9"
											},
											{
												"body": {
													"nativeSrc": "939:124:9",
													"nodeType": "YulBlock",
													"src": "939:124:9",
													"statements": [
														{
															"nativeSrc": "949:26:9",
															"nodeType": "YulAssignment",
															"src": "949:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "961:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "961:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "972:2:9",
																		"nodeType": "YulLiteral",
																		"src": "972:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "957:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "957:3:9"
																},
																"nativeSrc": "957:18:9",
																"nodeType": "YulFunctionCall",
																"src": "957:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "949:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "949:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1029:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1029:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1042:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1042:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1053:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1053:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1038:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:9"
																		},
																		"nativeSrc": "1038:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1038:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "985:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "985:43:9"
																},
																"nativeSrc": "985:71:9",
																"nodeType": "YulFunctionCall",
																"src": "985:71:9"
															},
															"nativeSrc": "985:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "985:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nativeSrc": "841:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "911:9:9",
														"nodeType": "YulTypedName",
														"src": "911:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "923:6:9",
														"nodeType": "YulTypedName",
														"src": "923:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "934:4:9",
														"nodeType": "YulTypedName",
														"src": "934:4:9",
														"type": ""
													}
												],
												"src": "841:222:9"
											},
											{
												"body": {
													"nativeSrc": "1134:53:9",
													"nodeType": "YulBlock",
													"src": "1134:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1151:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1151:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1174:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1174:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "1156:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1156:17:9"
																		},
																		"nativeSrc": "1156:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1156:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:9"
																},
																"nativeSrc": "1144:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1144:37:9"
															},
															"nativeSrc": "1144:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1144:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
												"nativeSrc": "1069:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:9",
														"nodeType": "YulTypedName",
														"src": "1122:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1129:3:9",
														"nodeType": "YulTypedName",
														"src": "1129:3:9",
														"type": ""
													}
												],
												"src": "1069:118:9"
											},
											{
												"body": {
													"nativeSrc": "1236:47:9",
													"nodeType": "YulBlock",
													"src": "1236:47:9",
													"statements": [
														{
															"nativeSrc": "1246:31:9",
															"nodeType": "YulAssignment",
															"src": "1246:31:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1268:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1268:1:9",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1271:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1271:5:9"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "1257:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "1257:10:9"
																},
																"nativeSrc": "1257:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1257:20:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1246:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1246:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "1193:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1218:5:9",
														"nodeType": "YulTypedName",
														"src": "1218:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1228:7:9",
														"nodeType": "YulTypedName",
														"src": "1228:7:9",
														"type": ""
													}
												],
												"src": "1193:90:9"
											},
											{
												"body": {
													"nativeSrc": "1350:51:9",
													"nodeType": "YulBlock",
													"src": "1350:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1367:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1388:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1388:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int24",
																			"nativeSrc": "1372:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "1372:15:9"
																		},
																		"nativeSrc": "1372:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1372:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:9"
																},
																"nativeSrc": "1360:35:9",
																"nodeType": "YulFunctionCall",
																"src": "1360:35:9"
															},
															"nativeSrc": "1360:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "1360:35:9"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24_fromStack",
												"nativeSrc": "1289:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1338:5:9",
														"nodeType": "YulTypedName",
														"src": "1338:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1345:3:9",
														"nodeType": "YulTypedName",
														"src": "1345:3:9",
														"type": ""
													}
												],
												"src": "1289:112:9"
											},
											{
												"body": {
													"nativeSrc": "1529:202:9",
													"nodeType": "YulBlock",
													"src": "1529:202:9",
													"statements": [
														{
															"nativeSrc": "1539:26:9",
															"nodeType": "YulAssignment",
															"src": "1539:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1551:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1551:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1562:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1562:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1547:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1547:3:9"
																},
																"nativeSrc": "1547:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1547:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1539:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1539:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1619:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1619:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1632:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1632:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1643:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1643:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1628:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:9"
																		},
																		"nativeSrc": "1628:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "1575:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1575:43:9"
																},
																"nativeSrc": "1575:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1575:71:9"
															},
															"nativeSrc": "1575:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1575:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1696:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1696:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1709:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1709:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1720:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1720:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1705:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1705:3:9"
																		},
																		"nativeSrc": "1705:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1705:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "1656:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "1656:39:9"
																},
																"nativeSrc": "1656:68:9",
																"nodeType": "YulFunctionCall",
																"src": "1656:68:9"
															},
															"nativeSrc": "1656:68:9",
															"nodeType": "YulExpressionStatement",
															"src": "1656:68:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed",
												"nativeSrc": "1407:324:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1493:9:9",
														"nodeType": "YulTypedName",
														"src": "1493:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1505:6:9",
														"nodeType": "YulTypedName",
														"src": "1505:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1513:6:9",
														"nodeType": "YulTypedName",
														"src": "1513:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1524:4:9",
														"nodeType": "YulTypedName",
														"src": "1524:4:9",
														"type": ""
													}
												],
												"src": "1407:324:9"
											},
											{
												"body": {
													"nativeSrc": "1777:35:9",
													"nodeType": "YulBlock",
													"src": "1777:35:9",
													"statements": [
														{
															"nativeSrc": "1787:19:9",
															"nodeType": "YulAssignment",
															"src": "1787:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1797:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1797:5:9"
																},
																"nativeSrc": "1797:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1797:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1787:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1787:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1737:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1770:6:9",
														"nodeType": "YulTypedName",
														"src": "1770:6:9",
														"type": ""
													}
												],
												"src": "1737:75:9"
											},
											{
												"body": {
													"nativeSrc": "1907:28:9",
													"nodeType": "YulBlock",
													"src": "1907:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1924:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1924:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1927:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1927:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1917:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1917:6:9"
																},
																"nativeSrc": "1917:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1917:12:9"
															},
															"nativeSrc": "1917:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1917:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1818:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1818:117:9"
											},
											{
												"body": {
													"nativeSrc": "2030:28:9",
													"nodeType": "YulBlock",
													"src": "2030:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2047:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2047:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2050:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2040:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:9"
																},
																"nativeSrc": "2040:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2040:12:9"
															},
															"nativeSrc": "2040:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2040:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1941:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1941:117:9"
											},
											{
												"body": {
													"nativeSrc": "2107:79:9",
													"nodeType": "YulBlock",
													"src": "2107:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2164:16:9",
																"nodeType": "YulBlock",
																"src": "2164:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2173:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2173:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2176:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2176:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2166:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2166:6:9"
																			},
																			"nativeSrc": "2166:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2166:12:9"
																		},
																		"nativeSrc": "2166:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2166:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2130:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2130:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2155:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2155:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2137:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2137:17:9"
																				},
																				"nativeSrc": "2137:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2137:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2127:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2127:2:9"
																		},
																		"nativeSrc": "2127:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2127:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2120:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:9"
																},
																"nativeSrc": "2120:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2120:43:9"
															},
															"nativeSrc": "2117:63:9",
															"nodeType": "YulIf",
															"src": "2117:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2064:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2100:5:9",
														"nodeType": "YulTypedName",
														"src": "2100:5:9",
														"type": ""
													}
												],
												"src": "2064:122:9"
											},
											{
												"body": {
													"nativeSrc": "2244:87:9",
													"nodeType": "YulBlock",
													"src": "2244:87:9",
													"statements": [
														{
															"nativeSrc": "2254:29:9",
															"nodeType": "YulAssignment",
															"src": "2254:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2276:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2276:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2263:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2263:12:9"
																},
																"nativeSrc": "2263:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2263:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2254:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2254:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2319:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2319:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2292:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2292:26:9"
																},
																"nativeSrc": "2292:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2292:33:9"
															},
															"nativeSrc": "2292:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2292:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2192:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2222:6:9",
														"nodeType": "YulTypedName",
														"src": "2222:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2230:3:9",
														"nodeType": "YulTypedName",
														"src": "2230:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2238:5:9",
														"nodeType": "YulTypedName",
														"src": "2238:5:9",
														"type": ""
													}
												],
												"src": "2192:139:9"
											},
											{
												"body": {
													"nativeSrc": "2378:77:9",
													"nodeType": "YulBlock",
													"src": "2378:77:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2433:16:9",
																"nodeType": "YulBlock",
																"src": "2433:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2442:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2442:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2445:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2445:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2435:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2435:6:9"
																			},
																			"nativeSrc": "2435:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2435:12:9"
																		},
																		"nativeSrc": "2435:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2435:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2401:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2401:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2424:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2424:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "2408:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "2408:15:9"
																				},
																				"nativeSrc": "2408:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2408:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2398:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2398:2:9"
																		},
																		"nativeSrc": "2398:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2398:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2391:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:9"
																},
																"nativeSrc": "2391:41:9",
																"nodeType": "YulFunctionCall",
																"src": "2391:41:9"
															},
															"nativeSrc": "2388:61:9",
															"nodeType": "YulIf",
															"src": "2388:61:9"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "2337:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2371:5:9",
														"nodeType": "YulTypedName",
														"src": "2371:5:9",
														"type": ""
													}
												],
												"src": "2337:118:9"
											},
											{
												"body": {
													"nativeSrc": "2511:85:9",
													"nodeType": "YulBlock",
													"src": "2511:85:9",
													"statements": [
														{
															"nativeSrc": "2521:29:9",
															"nodeType": "YulAssignment",
															"src": "2521:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2543:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2543:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2530:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2530:12:9"
																},
																"nativeSrc": "2530:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2530:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2584:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2584:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "2559:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "2559:24:9"
																},
																"nativeSrc": "2559:31:9",
																"nodeType": "YulFunctionCall",
																"src": "2559:31:9"
															},
															"nativeSrc": "2559:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "2559:31:9"
														}
													]
												},
												"name": "abi_decode_t_int24",
												"nativeSrc": "2461:135:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2489:6:9",
														"nodeType": "YulTypedName",
														"src": "2489:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2497:3:9",
														"nodeType": "YulTypedName",
														"src": "2497:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2505:5:9",
														"nodeType": "YulTypedName",
														"src": "2505:5:9",
														"type": ""
													}
												],
												"src": "2461:135:9"
											},
											{
												"body": {
													"nativeSrc": "2645:79:9",
													"nodeType": "YulBlock",
													"src": "2645:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2702:16:9",
																"nodeType": "YulBlock",
																"src": "2702:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2711:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2711:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2714:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2714:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2704:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2704:6:9"
																			},
																			"nativeSrc": "2704:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2704:12:9"
																		},
																		"nativeSrc": "2704:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2704:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2668:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2668:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2693:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2693:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint128",
																					"nativeSrc": "2675:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2675:17:9"
																				},
																				"nativeSrc": "2675:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2675:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2665:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2665:2:9"
																		},
																		"nativeSrc": "2665:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2658:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:9"
																},
																"nativeSrc": "2658:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2658:43:9"
															},
															"nativeSrc": "2655:63:9",
															"nodeType": "YulIf",
															"src": "2655:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint128",
												"nativeSrc": "2602:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2638:5:9",
														"nodeType": "YulTypedName",
														"src": "2638:5:9",
														"type": ""
													}
												],
												"src": "2602:122:9"
											},
											{
												"body": {
													"nativeSrc": "2782:87:9",
													"nodeType": "YulBlock",
													"src": "2782:87:9",
													"statements": [
														{
															"nativeSrc": "2792:29:9",
															"nodeType": "YulAssignment",
															"src": "2792:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2814:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2814:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2801:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2801:12:9"
																},
																"nativeSrc": "2801:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2801:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2792:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2792:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2857:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2857:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint128",
																	"nativeSrc": "2830:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2830:26:9"
																},
																"nativeSrc": "2830:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2830:33:9"
															},
															"nativeSrc": "2830:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2830:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint128",
												"nativeSrc": "2730:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2760:6:9",
														"nodeType": "YulTypedName",
														"src": "2760:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2768:3:9",
														"nodeType": "YulTypedName",
														"src": "2768:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2776:5:9",
														"nodeType": "YulTypedName",
														"src": "2776:5:9",
														"type": ""
													}
												],
												"src": "2730:139:9"
											},
											{
												"body": {
													"nativeSrc": "2964:28:9",
													"nodeType": "YulBlock",
													"src": "2964:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2981:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2981:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2984:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2984:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2974:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:9"
																},
																"nativeSrc": "2974:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2974:12:9"
															},
															"nativeSrc": "2974:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "2974:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "2875:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2875:117:9"
											},
											{
												"body": {
													"nativeSrc": "3087:28:9",
													"nodeType": "YulBlock",
													"src": "3087:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3104:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3104:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3107:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3107:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3097:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3097:6:9"
																},
																"nativeSrc": "3097:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3097:12:9"
															},
															"nativeSrc": "3097:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "3097:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "2998:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2998:117:9"
											},
											{
												"body": {
													"nativeSrc": "3210:28:9",
													"nodeType": "YulBlock",
													"src": "3210:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3227:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3230:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3230:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3220:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:9"
																},
																"nativeSrc": "3220:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3220:12:9"
															},
															"nativeSrc": "3220:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "3220:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "3121:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "3121:117:9"
											},
											{
												"body": {
													"nativeSrc": "3331:478:9",
													"nodeType": "YulBlock",
													"src": "3331:478:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3380:83:9",
																"nodeType": "YulBlock",
																"src": "3380:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3382:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3382:77:9"
																			},
																			"nativeSrc": "3382:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3382:79:9"
																		},
																		"nativeSrc": "3382:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3382:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3359:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3359:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3367:4:9",
																						"nodeType": "YulLiteral",
																						"src": "3367:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3355:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3355:3:9"
																				},
																				"nativeSrc": "3355:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3355:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3374:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3374:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3351:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:9"
																		},
																		"nativeSrc": "3351:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3351:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3344:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:9"
																},
																"nativeSrc": "3344:35:9",
																"nodeType": "YulFunctionCall",
																"src": "3344:35:9"
															},
															"nativeSrc": "3341:122:9",
															"nodeType": "YulIf",
															"src": "3341:122:9"
														},
														{
															"nativeSrc": "3472:30:9",
															"nodeType": "YulAssignment",
															"src": "3472:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3495:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3495:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3482:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "3482:12:9"
																},
																"nativeSrc": "3482:20:9",
																"nodeType": "YulFunctionCall",
																"src": "3482:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3472:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3472:6:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3545:83:9",
																"nodeType": "YulBlock",
																"src": "3545:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "3547:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3547:77:9"
																			},
																			"nativeSrc": "3547:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3547:79:9"
																		},
																		"nativeSrc": "3547:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3517:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3517:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3525:18:9",
																		"nodeType": "YulLiteral",
																		"src": "3525:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3514:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3514:2:9"
																},
																"nativeSrc": "3514:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3514:30:9"
															},
															"nativeSrc": "3511:117:9",
															"nodeType": "YulIf",
															"src": "3511:117:9"
														},
														{
															"nativeSrc": "3637:29:9",
															"nodeType": "YulAssignment",
															"src": "3637:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3653:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3653:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3661:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3661:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3649:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3649:3:9"
																},
																"nativeSrc": "3649:17:9",
																"nodeType": "YulFunctionCall",
																"src": "3649:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3637:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3637:8:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3720:83:9",
																"nodeType": "YulBlock",
																"src": "3720:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "3722:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3722:77:9"
																			},
																			"nativeSrc": "3722:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3722:79:9"
																		},
																		"nativeSrc": "3722:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3722:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "3685:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "3685:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "3699:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3699:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3707:4:9",
																						"nodeType": "YulLiteral",
																						"src": "3707:4:9",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3695:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3695:3:9"
																				},
																				"nativeSrc": "3695:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3695:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3681:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3681:3:9"
																		},
																		"nativeSrc": "3681:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:32:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3715:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3715:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3678:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3678:2:9"
																},
																"nativeSrc": "3678:41:9",
																"nodeType": "YulFunctionCall",
																"src": "3678:41:9"
															},
															"nativeSrc": "3675:128:9",
															"nodeType": "YulIf",
															"src": "3675:128:9"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "3257:552:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3298:6:9",
														"nodeType": "YulTypedName",
														"src": "3298:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3306:3:9",
														"nodeType": "YulTypedName",
														"src": "3306:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3314:8:9",
														"nodeType": "YulTypedName",
														"src": "3314:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3324:6:9",
														"nodeType": "YulTypedName",
														"src": "3324:6:9",
														"type": ""
													}
												],
												"src": "3257:552:9"
											},
											{
												"body": {
													"nativeSrc": "3964:952:9",
													"nodeType": "YulBlock",
													"src": "3964:952:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4011:83:9",
																"nodeType": "YulBlock",
																"src": "4011:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4013:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4013:77:9"
																			},
																			"nativeSrc": "4013:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4013:79:9"
																		},
																		"nativeSrc": "4013:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4013:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3985:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3985:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3994:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3994:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3981:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3981:3:9"
																		},
																		"nativeSrc": "3981:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3981:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4006:3:9",
																		"nodeType": "YulLiteral",
																		"src": "4006:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3977:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3977:3:9"
																},
																"nativeSrc": "3977:33:9",
																"nodeType": "YulFunctionCall",
																"src": "3977:33:9"
															},
															"nativeSrc": "3974:120:9",
															"nodeType": "YulIf",
															"src": "3974:120:9"
														},
														{
															"nativeSrc": "4104:117:9",
															"nodeType": "YulBlock",
															"src": "4104:117:9",
															"statements": [
																{
																	"nativeSrc": "4119:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4119:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4133:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4133:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4123:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4123:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4148:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4148:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4183:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4183:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4194:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4194:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4179:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4179:3:9"
																				},
																				"nativeSrc": "4179:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4179:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4203:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4203:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4158:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4158:20:9"
																		},
																		"nativeSrc": "4158:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4148:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4148:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4231:116:9",
															"nodeType": "YulBlock",
															"src": "4231:116:9",
															"statements": [
																{
																	"nativeSrc": "4246:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4246:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4260:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4260:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4250:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4250:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4276:61:9",
																	"nodeType": "YulAssignment",
																	"src": "4276:61:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4309:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4309:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4320:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4320:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4305:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4305:3:9"
																				},
																				"nativeSrc": "4305:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4305:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4329:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4329:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "4286:18:9",
																			"nodeType": "YulIdentifier",
																			"src": "4286:18:9"
																		},
																		"nativeSrc": "4286:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:51:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4276:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4276:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4357:116:9",
															"nodeType": "YulBlock",
															"src": "4357:116:9",
															"statements": [
																{
																	"nativeSrc": "4372:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4372:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4386:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4386:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4376:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4376:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4402:61:9",
																	"nodeType": "YulAssignment",
																	"src": "4402:61:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4435:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4435:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4446:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4446:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4431:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4431:3:9"
																				},
																				"nativeSrc": "4431:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4431:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4455:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4455:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "4412:18:9",
																			"nodeType": "YulIdentifier",
																			"src": "4412:18:9"
																		},
																		"nativeSrc": "4412:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4412:51:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4402:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4402:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4483:118:9",
															"nodeType": "YulBlock",
															"src": "4483:118:9",
															"statements": [
																{
																	"nativeSrc": "4498:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4498:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4512:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4512:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4502:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4502:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4528:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4528:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4563:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4563:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4574:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4574:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4559:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4559:3:9"
																				},
																				"nativeSrc": "4559:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4559:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4583:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4583:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint128",
																			"nativeSrc": "4538:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4538:20:9"
																		},
																		"nativeSrc": "4538:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4538:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4528:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4528:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4611:298:9",
															"nodeType": "YulBlock",
															"src": "4611:298:9",
															"statements": [
																{
																	"nativeSrc": "4626:47:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4626:47:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4657:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4657:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4668:3:9",
																						"nodeType": "YulLiteral",
																						"src": "4668:3:9",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4653:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4653:3:9"
																				},
																				"nativeSrc": "4653:19:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4653:19:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4640:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "4640:12:9"
																		},
																		"nativeSrc": "4640:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4640:33:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4630:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4630:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4720:83:9",
																		"nodeType": "YulBlock",
																		"src": "4720:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4722:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "4722:77:9"
																					},
																					"nativeSrc": "4722:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4722:79:9"
																				},
																				"nativeSrc": "4722:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "4722:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4692:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4692:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4700:18:9",
																				"nodeType": "YulLiteral",
																				"src": "4700:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4689:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "4689:2:9"
																		},
																		"nativeSrc": "4689:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4689:30:9"
																	},
																	"nativeSrc": "4686:117:9",
																	"nodeType": "YulIf",
																	"src": "4686:117:9"
																},
																{
																	"nativeSrc": "4817:82:9",
																	"nodeType": "YulAssignment",
																	"src": "4817:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4871:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4871:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4882:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4882:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4867:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4867:3:9"
																				},
																				"nativeSrc": "4867:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4867:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4891:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4891:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "4835:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "4835:31:9"
																		},
																		"nativeSrc": "4835:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4835:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4817:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4817:6:9"
																		},
																		{
																			"name": "value5",
																			"nativeSrc": "4825:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4825:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr",
												"nativeSrc": "3815:1101:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3894:9:9",
														"nodeType": "YulTypedName",
														"src": "3894:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3905:7:9",
														"nodeType": "YulTypedName",
														"src": "3905:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3917:6:9",
														"nodeType": "YulTypedName",
														"src": "3917:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3925:6:9",
														"nodeType": "YulTypedName",
														"src": "3925:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3933:6:9",
														"nodeType": "YulTypedName",
														"src": "3933:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3941:6:9",
														"nodeType": "YulTypedName",
														"src": "3941:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3949:6:9",
														"nodeType": "YulTypedName",
														"src": "3949:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3957:6:9",
														"nodeType": "YulTypedName",
														"src": "3957:6:9",
														"type": ""
													}
												],
												"src": "3815:1101:9"
											},
											{
												"body": {
													"nativeSrc": "4967:32:9",
													"nodeType": "YulBlock",
													"src": "4967:32:9",
													"statements": [
														{
															"nativeSrc": "4977:16:9",
															"nodeType": "YulAssignment",
															"src": "4977:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "4988:5:9",
																"nodeType": "YulIdentifier",
																"src": "4988:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4977:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4977:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4922:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4949:5:9",
														"nodeType": "YulTypedName",
														"src": "4949:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4959:7:9",
														"nodeType": "YulTypedName",
														"src": "4959:7:9",
														"type": ""
													}
												],
												"src": "4922:77:9"
											},
											{
												"body": {
													"nativeSrc": "5070:53:9",
													"nodeType": "YulBlock",
													"src": "5070:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5087:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5087:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5110:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5110:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5092:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5092:17:9"
																		},
																		"nativeSrc": "5092:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5092:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5080:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5080:6:9"
																},
																"nativeSrc": "5080:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5080:37:9"
															},
															"nativeSrc": "5080:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5080:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5005:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5058:5:9",
														"nodeType": "YulTypedName",
														"src": "5058:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5065:3:9",
														"nodeType": "YulTypedName",
														"src": "5065:3:9",
														"type": ""
													}
												],
												"src": "5005:118:9"
											},
											{
												"body": {
													"nativeSrc": "5255:206:9",
													"nodeType": "YulBlock",
													"src": "5255:206:9",
													"statements": [
														{
															"nativeSrc": "5265:26:9",
															"nodeType": "YulAssignment",
															"src": "5265:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5277:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5288:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5288:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5273:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5273:3:9"
																},
																"nativeSrc": "5273:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5273:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5265:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5265:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5345:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5345:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5358:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5358:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5369:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5369:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5354:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:9"
																		},
																		"nativeSrc": "5354:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5354:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5301:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5301:43:9"
																},
																"nativeSrc": "5301:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5301:71:9"
															},
															"nativeSrc": "5301:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5301:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5426:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5426:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5439:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5439:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5450:2:9",
																				"nodeType": "YulLiteral",
																				"src": "5450:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5435:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:9"
																		},
																		"nativeSrc": "5435:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5435:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5382:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5382:43:9"
																},
																"nativeSrc": "5382:72:9",
																"nodeType": "YulFunctionCall",
																"src": "5382:72:9"
															},
															"nativeSrc": "5382:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "5382:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5129:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5219:9:9",
														"nodeType": "YulTypedName",
														"src": "5219:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5231:6:9",
														"nodeType": "YulTypedName",
														"src": "5231:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5239:6:9",
														"nodeType": "YulTypedName",
														"src": "5239:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5250:4:9",
														"nodeType": "YulTypedName",
														"src": "5250:4:9",
														"type": ""
													}
												],
												"src": "5129:332:9"
											},
											{
												"body": {
													"nativeSrc": "5512:32:9",
													"nodeType": "YulBlock",
													"src": "5512:32:9",
													"statements": [
														{
															"nativeSrc": "5522:16:9",
															"nodeType": "YulAssignment",
															"src": "5522:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "5533:5:9",
																"nodeType": "YulIdentifier",
																"src": "5533:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5522:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "5522:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5467:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5494:5:9",
														"nodeType": "YulTypedName",
														"src": "5494:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5504:7:9",
														"nodeType": "YulTypedName",
														"src": "5504:7:9",
														"type": ""
													}
												],
												"src": "5467:77:9"
											},
											{
												"body": {
													"nativeSrc": "5593:79:9",
													"nodeType": "YulBlock",
													"src": "5593:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5650:16:9",
																"nodeType": "YulBlock",
																"src": "5650:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5659:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5659:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5662:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5662:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5652:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5652:6:9"
																			},
																			"nativeSrc": "5652:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5652:12:9"
																		},
																		"nativeSrc": "5652:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5652:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5616:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5616:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5641:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5641:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5623:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5623:17:9"
																				},
																				"nativeSrc": "5623:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5623:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5613:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "5613:2:9"
																		},
																		"nativeSrc": "5613:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5613:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5606:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:9"
																},
																"nativeSrc": "5606:43:9",
																"nodeType": "YulFunctionCall",
																"src": "5606:43:9"
															},
															"nativeSrc": "5603:63:9",
															"nodeType": "YulIf",
															"src": "5603:63:9"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5550:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5586:5:9",
														"nodeType": "YulTypedName",
														"src": "5586:5:9",
														"type": ""
													}
												],
												"src": "5550:122:9"
											},
											{
												"body": {
													"nativeSrc": "5730:87:9",
													"nodeType": "YulBlock",
													"src": "5730:87:9",
													"statements": [
														{
															"nativeSrc": "5740:29:9",
															"nodeType": "YulAssignment",
															"src": "5740:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5762:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5762:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5749:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "5749:12:9"
																},
																"nativeSrc": "5749:20:9",
																"nodeType": "YulFunctionCall",
																"src": "5749:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5740:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "5740:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5805:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5805:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5778:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "5778:26:9"
																},
																"nativeSrc": "5778:33:9",
																"nodeType": "YulFunctionCall",
																"src": "5778:33:9"
															},
															"nativeSrc": "5778:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "5778:33:9"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5678:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5708:6:9",
														"nodeType": "YulTypedName",
														"src": "5708:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5716:3:9",
														"nodeType": "YulTypedName",
														"src": "5716:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5724:5:9",
														"nodeType": "YulTypedName",
														"src": "5724:5:9",
														"type": ""
													}
												],
												"src": "5678:139:9"
											},
											{
												"body": {
													"nativeSrc": "5889:263:9",
													"nodeType": "YulBlock",
													"src": "5889:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5935:83:9",
																"nodeType": "YulBlock",
																"src": "5935:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5937:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5937:77:9"
																			},
																			"nativeSrc": "5937:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5937:79:9"
																		},
																		"nativeSrc": "5937:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5937:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5910:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5910:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5919:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5919:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5906:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5906:3:9"
																		},
																		"nativeSrc": "5906:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5906:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5931:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5902:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5902:3:9"
																},
																"nativeSrc": "5902:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5902:32:9"
															},
															"nativeSrc": "5899:119:9",
															"nodeType": "YulIf",
															"src": "5899:119:9"
														},
														{
															"nativeSrc": "6028:117:9",
															"nodeType": "YulBlock",
															"src": "6028:117:9",
															"statements": [
																{
																	"nativeSrc": "6043:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6043:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6057:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6057:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6047:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6047:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6072:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6072:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6107:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6107:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6118:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6118:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6103:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6103:3:9"
																				},
																				"nativeSrc": "6103:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6103:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6127:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6127:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6082:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6082:20:9"
																		},
																		"nativeSrc": "6082:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6072:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6072:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5823:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5859:9:9",
														"nodeType": "YulTypedName",
														"src": "5859:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5870:7:9",
														"nodeType": "YulTypedName",
														"src": "5870:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5882:6:9",
														"nodeType": "YulTypedName",
														"src": "5882:6:9",
														"type": ""
													}
												],
												"src": "5823:329:9"
											},
											{
												"body": {
													"nativeSrc": "6201:47:9",
													"nodeType": "YulBlock",
													"src": "6201:47:9",
													"statements": [
														{
															"nativeSrc": "6211:31:9",
															"nodeType": "YulAssignment",
															"src": "6211:31:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6233:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6233:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6236:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6236:5:9"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "6222:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "6222:10:9"
																},
																"nativeSrc": "6222:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6222:20:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6211:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "6211:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int16",
												"nativeSrc": "6158:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6183:5:9",
														"nodeType": "YulTypedName",
														"src": "6183:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6193:7:9",
														"nodeType": "YulTypedName",
														"src": "6193:7:9",
														"type": ""
													}
												],
												"src": "6158:90:9"
											},
											{
												"body": {
													"nativeSrc": "6295:77:9",
													"nodeType": "YulBlock",
													"src": "6295:77:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6350:16:9",
																"nodeType": "YulBlock",
																"src": "6350:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6359:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6359:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6362:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6362:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6352:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6352:6:9"
																			},
																			"nativeSrc": "6352:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6352:12:9"
																		},
																		"nativeSrc": "6352:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6352:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6318:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6318:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6341:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "6341:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int16",
																					"nativeSrc": "6325:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "6325:15:9"
																				},
																				"nativeSrc": "6325:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6325:22:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6315:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6315:2:9"
																		},
																		"nativeSrc": "6315:33:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:33:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6308:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6308:6:9"
																},
																"nativeSrc": "6308:41:9",
																"nodeType": "YulFunctionCall",
																"src": "6308:41:9"
															},
															"nativeSrc": "6305:61:9",
															"nodeType": "YulIf",
															"src": "6305:61:9"
														}
													]
												},
												"name": "validator_revert_t_int16",
												"nativeSrc": "6254:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6288:5:9",
														"nodeType": "YulTypedName",
														"src": "6288:5:9",
														"type": ""
													}
												],
												"src": "6254:118:9"
											},
											{
												"body": {
													"nativeSrc": "6428:85:9",
													"nodeType": "YulBlock",
													"src": "6428:85:9",
													"statements": [
														{
															"nativeSrc": "6438:29:9",
															"nodeType": "YulAssignment",
															"src": "6438:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6460:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6460:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6447:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "6447:12:9"
																},
																"nativeSrc": "6447:20:9",
																"nodeType": "YulFunctionCall",
																"src": "6447:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6438:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "6438:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6501:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6501:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int16",
																	"nativeSrc": "6476:24:9",
																	"nodeType": "YulIdentifier",
																	"src": "6476:24:9"
																},
																"nativeSrc": "6476:31:9",
																"nodeType": "YulFunctionCall",
																"src": "6476:31:9"
															},
															"nativeSrc": "6476:31:9",
															"nodeType": "YulExpressionStatement",
															"src": "6476:31:9"
														}
													]
												},
												"name": "abi_decode_t_int16",
												"nativeSrc": "6378:135:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6406:6:9",
														"nodeType": "YulTypedName",
														"src": "6406:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6414:3:9",
														"nodeType": "YulTypedName",
														"src": "6414:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6422:5:9",
														"nodeType": "YulTypedName",
														"src": "6422:5:9",
														"type": ""
													}
												],
												"src": "6378:135:9"
											},
											{
												"body": {
													"nativeSrc": "6583:261:9",
													"nodeType": "YulBlock",
													"src": "6583:261:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6629:83:9",
																"nodeType": "YulBlock",
																"src": "6629:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6631:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6631:77:9"
																			},
																			"nativeSrc": "6631:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6631:79:9"
																		},
																		"nativeSrc": "6631:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6604:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6604:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6613:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6613:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6600:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:9"
																		},
																		"nativeSrc": "6600:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6625:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6596:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:9"
																},
																"nativeSrc": "6596:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6596:32:9"
															},
															"nativeSrc": "6593:119:9",
															"nodeType": "YulIf",
															"src": "6593:119:9"
														},
														{
															"nativeSrc": "6722:115:9",
															"nodeType": "YulBlock",
															"src": "6722:115:9",
															"statements": [
																{
																	"nativeSrc": "6737:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6737:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6751:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6751:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6741:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6741:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6766:61:9",
																	"nodeType": "YulAssignment",
																	"src": "6766:61:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6799:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6799:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6810:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6810:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6795:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6795:3:9"
																				},
																				"nativeSrc": "6795:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6795:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6819:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6819:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int16",
																			"nativeSrc": "6776:18:9",
																			"nodeType": "YulIdentifier",
																			"src": "6776:18:9"
																		},
																		"nativeSrc": "6776:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6776:51:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6766:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6766:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int16",
												"nativeSrc": "6519:325:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6553:9:9",
														"nodeType": "YulTypedName",
														"src": "6553:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6564:7:9",
														"nodeType": "YulTypedName",
														"src": "6564:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6576:6:9",
														"nodeType": "YulTypedName",
														"src": "6576:6:9",
														"type": ""
													}
												],
												"src": "6519:325:9"
											},
											{
												"body": {
													"nativeSrc": "6948:124:9",
													"nodeType": "YulBlock",
													"src": "6948:124:9",
													"statements": [
														{
															"nativeSrc": "6958:26:9",
															"nodeType": "YulAssignment",
															"src": "6958:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6970:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6970:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6981:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6981:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6966:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6966:3:9"
																},
																"nativeSrc": "6966:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6966:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6958:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6958:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7038:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7038:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7051:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7051:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7062:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7062:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7047:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:9"
																		},
																		"nativeSrc": "7047:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7047:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6994:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6994:43:9"
																},
																"nativeSrc": "6994:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6994:71:9"
															},
															"nativeSrc": "6994:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6994:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6850:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6920:9:9",
														"nodeType": "YulTypedName",
														"src": "6920:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6932:6:9",
														"nodeType": "YulTypedName",
														"src": "6932:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6943:4:9",
														"nodeType": "YulTypedName",
														"src": "6943:4:9",
														"type": ""
													}
												],
												"src": "6850:222:9"
											},
											{
												"body": {
													"nativeSrc": "7180:570:9",
													"nodeType": "YulBlock",
													"src": "7180:570:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7226:83:9",
																"nodeType": "YulBlock",
																"src": "7226:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7228:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7228:77:9"
																			},
																			"nativeSrc": "7228:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7228:79:9"
																		},
																		"nativeSrc": "7228:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7228:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7201:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7201:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7210:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7210:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7197:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7197:3:9"
																		},
																		"nativeSrc": "7197:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7197:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7222:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7222:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7193:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7193:3:9"
																},
																"nativeSrc": "7193:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7193:32:9"
															},
															"nativeSrc": "7190:119:9",
															"nodeType": "YulIf",
															"src": "7190:119:9"
														},
														{
															"nativeSrc": "7319:117:9",
															"nodeType": "YulBlock",
															"src": "7319:117:9",
															"statements": [
																{
																	"nativeSrc": "7334:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7334:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7348:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7348:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7338:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7338:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7363:63:9",
																	"nodeType": "YulAssignment",
																	"src": "7363:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7398:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7398:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7409:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7409:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7394:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7394:3:9"
																				},
																				"nativeSrc": "7394:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7394:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7418:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7418:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7373:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "7373:20:9"
																		},
																		"nativeSrc": "7373:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7373:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7363:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7363:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7446:297:9",
															"nodeType": "YulBlock",
															"src": "7446:297:9",
															"statements": [
																{
																	"nativeSrc": "7461:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7461:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7492:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7492:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7503:2:9",
																						"nodeType": "YulLiteral",
																						"src": "7503:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7488:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7488:3:9"
																				},
																				"nativeSrc": "7488:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7488:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7475:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "7475:12:9"
																		},
																		"nativeSrc": "7475:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7475:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7465:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7465:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7554:83:9",
																		"nodeType": "YulBlock",
																		"src": "7554:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7556:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "7556:77:9"
																					},
																					"nativeSrc": "7556:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7556:79:9"
																				},
																				"nativeSrc": "7556:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7556:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7526:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7526:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7534:18:9",
																				"nodeType": "YulLiteral",
																				"src": "7534:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7523:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7523:2:9"
																		},
																		"nativeSrc": "7523:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7523:30:9"
																	},
																	"nativeSrc": "7520:117:9",
																	"nodeType": "YulIf",
																	"src": "7520:117:9"
																},
																{
																	"nativeSrc": "7651:82:9",
																	"nodeType": "YulAssignment",
																	"src": "7651:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7705:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7705:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7716:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7716:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7701:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7701:3:9"
																				},
																				"nativeSrc": "7701:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7701:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7725:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7725:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "7669:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "7669:31:9"
																		},
																		"nativeSrc": "7669:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7651:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7651:6:9"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "7659:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7659:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
												"nativeSrc": "7078:672:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7134:9:9",
														"nodeType": "YulTypedName",
														"src": "7134:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7145:7:9",
														"nodeType": "YulTypedName",
														"src": "7145:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7157:6:9",
														"nodeType": "YulTypedName",
														"src": "7157:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7165:6:9",
														"nodeType": "YulTypedName",
														"src": "7165:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7173:6:9",
														"nodeType": "YulTypedName",
														"src": "7173:6:9",
														"type": ""
													}
												],
												"src": "7078:672:9"
											},
											{
												"body": {
													"nativeSrc": "7800:32:9",
													"nodeType": "YulBlock",
													"src": "7800:32:9",
													"statements": [
														{
															"nativeSrc": "7810:16:9",
															"nodeType": "YulAssignment",
															"src": "7810:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "7821:5:9",
																"nodeType": "YulIdentifier",
																"src": "7821:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7810:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "7810:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "7756:76:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7782:5:9",
														"nodeType": "YulTypedName",
														"src": "7782:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7792:7:9",
														"nodeType": "YulTypedName",
														"src": "7792:7:9",
														"type": ""
													}
												],
												"src": "7756:76:9"
											},
											{
												"body": {
													"nativeSrc": "7901:52:9",
													"nodeType": "YulBlock",
													"src": "7901:52:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7918:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7918:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7940:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7940:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "7923:16:9",
																			"nodeType": "YulIdentifier",
																			"src": "7923:16:9"
																		},
																		"nativeSrc": "7923:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7923:23:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7911:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:9"
																},
																"nativeSrc": "7911:36:9",
																"nodeType": "YulFunctionCall",
																"src": "7911:36:9"
															},
															"nativeSrc": "7911:36:9",
															"nodeType": "YulExpressionStatement",
															"src": "7911:36:9"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "7838:115:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7889:5:9",
														"nodeType": "YulTypedName",
														"src": "7889:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7896:3:9",
														"nodeType": "YulTypedName",
														"src": "7896:3:9",
														"type": ""
													}
												],
												"src": "7838:115:9"
											},
											{
												"body": {
													"nativeSrc": "8081:202:9",
													"nodeType": "YulBlock",
													"src": "8081:202:9",
													"statements": [
														{
															"nativeSrc": "8091:26:9",
															"nodeType": "YulAssignment",
															"src": "8091:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8103:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8103:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8114:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8114:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8099:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8099:3:9"
																},
																"nativeSrc": "8099:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8099:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8091:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8091:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8169:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8169:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8182:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8182:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8193:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8193:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8178:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8178:3:9"
																		},
																		"nativeSrc": "8178:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8178:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "8127:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "8127:41:9"
																},
																"nativeSrc": "8127:69:9",
																"nodeType": "YulFunctionCall",
																"src": "8127:69:9"
															},
															"nativeSrc": "8127:69:9",
															"nodeType": "YulExpressionStatement",
															"src": "8127:69:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8248:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8261:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8261:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8272:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8272:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8257:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8257:3:9"
																		},
																		"nativeSrc": "8257:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8257:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "8206:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "8206:41:9"
																},
																"nativeSrc": "8206:70:9",
																"nodeType": "YulFunctionCall",
																"src": "8206:70:9"
															},
															"nativeSrc": "8206:70:9",
															"nodeType": "YulExpressionStatement",
															"src": "8206:70:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed",
												"nativeSrc": "7959:324:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8045:9:9",
														"nodeType": "YulTypedName",
														"src": "8045:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8057:6:9",
														"nodeType": "YulTypedName",
														"src": "8057:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8065:6:9",
														"nodeType": "YulTypedName",
														"src": "8065:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8076:4:9",
														"nodeType": "YulTypedName",
														"src": "8076:4:9",
														"type": ""
													}
												],
												"src": "7959:324:9"
											},
											{
												"body": {
													"nativeSrc": "8353:261:9",
													"nodeType": "YulBlock",
													"src": "8353:261:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "8399:83:9",
																"nodeType": "YulBlock",
																"src": "8399:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8401:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "8401:77:9"
																			},
																			"nativeSrc": "8401:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8401:79:9"
																		},
																		"nativeSrc": "8401:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8401:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8374:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8374:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8383:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8383:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8370:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8370:3:9"
																		},
																		"nativeSrc": "8370:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8370:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8395:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8395:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8366:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8366:3:9"
																},
																"nativeSrc": "8366:32:9",
																"nodeType": "YulFunctionCall",
																"src": "8366:32:9"
															},
															"nativeSrc": "8363:119:9",
															"nodeType": "YulIf",
															"src": "8363:119:9"
														},
														{
															"nativeSrc": "8492:115:9",
															"nodeType": "YulBlock",
															"src": "8492:115:9",
															"statements": [
																{
																	"nativeSrc": "8507:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8507:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8521:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8521:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8511:6:9",
																			"nodeType": "YulTypedName",
																			"src": "8511:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8536:61:9",
																	"nodeType": "YulAssignment",
																	"src": "8536:61:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8569:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8569:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8580:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "8580:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8565:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8565:3:9"
																				},
																				"nativeSrc": "8565:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8565:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8589:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "8589:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24",
																			"nativeSrc": "8546:18:9",
																			"nodeType": "YulIdentifier",
																			"src": "8546:18:9"
																		},
																		"nativeSrc": "8546:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8546:51:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8536:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8536:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int24",
												"nativeSrc": "8289:325:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8323:9:9",
														"nodeType": "YulTypedName",
														"src": "8323:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8334:7:9",
														"nodeType": "YulTypedName",
														"src": "8334:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8346:6:9",
														"nodeType": "YulTypedName",
														"src": "8346:6:9",
														"type": ""
													}
												],
												"src": "8289:325:9"
											},
											{
												"body": {
													"nativeSrc": "8662:48:9",
													"nodeType": "YulBlock",
													"src": "8662:48:9",
													"statements": [
														{
															"nativeSrc": "8672:32:9",
															"nodeType": "YulAssignment",
															"src": "8672:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8697:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8697:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8690:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8690:6:9"
																		},
																		"nativeSrc": "8690:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8690:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8683:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8683:6:9"
																},
																"nativeSrc": "8683:21:9",
																"nodeType": "YulFunctionCall",
																"src": "8683:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8672:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "8672:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8620:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8644:5:9",
														"nodeType": "YulTypedName",
														"src": "8644:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8654:7:9",
														"nodeType": "YulTypedName",
														"src": "8654:7:9",
														"type": ""
													}
												],
												"src": "8620:90:9"
											},
											{
												"body": {
													"nativeSrc": "8775:50:9",
													"nodeType": "YulBlock",
													"src": "8775:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8792:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8792:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8812:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8812:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "8797:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "8797:14:9"
																		},
																		"nativeSrc": "8797:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8797:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8785:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8785:6:9"
																},
																"nativeSrc": "8785:34:9",
																"nodeType": "YulFunctionCall",
																"src": "8785:34:9"
															},
															"nativeSrc": "8785:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "8785:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "8716:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8763:5:9",
														"nodeType": "YulTypedName",
														"src": "8763:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8770:3:9",
														"nodeType": "YulTypedName",
														"src": "8770:3:9",
														"type": ""
													}
												],
												"src": "8716:109:9"
											},
											{
												"body": {
													"nativeSrc": "8951:200:9",
													"nodeType": "YulBlock",
													"src": "8951:200:9",
													"statements": [
														{
															"nativeSrc": "8961:26:9",
															"nodeType": "YulAssignment",
															"src": "8961:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8973:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8973:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8984:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8984:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8969:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:9"
																},
																"nativeSrc": "8969:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8969:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8961:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8961:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9035:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9035:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9048:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9048:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9059:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9059:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9044:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9044:3:9"
																		},
																		"nativeSrc": "9044:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9044:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8997:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "8997:37:9"
																},
																"nativeSrc": "8997:65:9",
																"nodeType": "YulFunctionCall",
																"src": "8997:65:9"
															},
															"nativeSrc": "8997:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "8997:65:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9116:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9116:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9129:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9129:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9140:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9140:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9125:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9125:3:9"
																		},
																		"nativeSrc": "9125:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9125:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "9072:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "9072:43:9"
																},
																"nativeSrc": "9072:72:9",
																"nodeType": "YulFunctionCall",
																"src": "9072:72:9"
															},
															"nativeSrc": "9072:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "9072:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed",
												"nativeSrc": "8831:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8915:9:9",
														"nodeType": "YulTypedName",
														"src": "8915:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8927:6:9",
														"nodeType": "YulTypedName",
														"src": "8927:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8935:6:9",
														"nodeType": "YulTypedName",
														"src": "8935:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8946:4:9",
														"nodeType": "YulTypedName",
														"src": "8946:4:9",
														"type": ""
													}
												],
												"src": "8831:320:9"
											},
											{
												"body": {
													"nativeSrc": "9185:152:9",
													"nodeType": "YulBlock",
													"src": "9185:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9202:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9202:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9205:77:9",
																		"nodeType": "YulLiteral",
																		"src": "9205:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9195:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:9"
																},
																"nativeSrc": "9195:88:9",
																"nodeType": "YulFunctionCall",
																"src": "9195:88:9"
															},
															"nativeSrc": "9195:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "9195:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9299:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9299:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9302:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9302:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9292:6:9"
																},
																"nativeSrc": "9292:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9292:15:9"
															},
															"nativeSrc": "9292:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9292:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9323:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9323:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9326:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9326:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9316:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9316:6:9"
																},
																"nativeSrc": "9316:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9316:15:9"
															},
															"nativeSrc": "9316:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9316:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9157:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "9157:180:9"
											},
											{
												"body": {
													"nativeSrc": "9381:188:9",
													"nodeType": "YulBlock",
													"src": "9381:188:9",
													"statements": [
														{
															"nativeSrc": "9391:31:9",
															"nodeType": "YulAssignment",
															"src": "9391:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9416:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9416:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "9400:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "9400:15:9"
																},
																"nativeSrc": "9400:22:9",
																"nodeType": "YulFunctionCall",
																"src": "9400:22:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9391:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9391:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9512:22:9",
																"nodeType": "YulBlock",
																"src": "9512:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9514:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9514:16:9"
																			},
																			"nativeSrc": "9514:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9514:18:9"
																		},
																		"nativeSrc": "9514:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9514:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9437:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9437:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9444:66:9",
																		"nodeType": "YulLiteral",
																		"src": "9444:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9434:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9434:2:9"
																},
																"nativeSrc": "9434:77:9",
																"nodeType": "YulFunctionCall",
																"src": "9434:77:9"
															},
															"nativeSrc": "9431:103:9",
															"nodeType": "YulIf",
															"src": "9431:103:9"
														},
														{
															"nativeSrc": "9543:20:9",
															"nodeType": "YulAssignment",
															"src": "9543:20:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9554:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9554:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9557:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9557:5:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9550:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9550:3:9"
																},
																"nativeSrc": "9550:13:9",
																"nodeType": "YulFunctionCall",
																"src": "9550:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9543:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9543:3:9"
																}
															]
														}
													]
												},
												"name": "negate_t_int24",
												"nativeSrc": "9343:226:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9367:5:9",
														"nodeType": "YulTypedName",
														"src": "9367:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9377:3:9",
														"nodeType": "YulTypedName",
														"src": "9377:3:9",
														"type": ""
													}
												],
												"src": "9343:226:9"
											},
											{
												"body": {
													"nativeSrc": "9619:180:9",
													"nodeType": "YulBlock",
													"src": "9619:180:9",
													"statements": [
														{
															"nativeSrc": "9629:25:9",
															"nodeType": "YulAssignment",
															"src": "9629:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9652:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9652:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nativeSrc": "9634:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9634:17:9"
																},
																"nativeSrc": "9634:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9634:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9629:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9629:1:9"
																}
															]
														},
														{
															"nativeSrc": "9663:25:9",
															"nodeType": "YulAssignment",
															"src": "9663:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9686:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9686:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint128",
																	"nativeSrc": "9668:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9668:17:9"
																},
																"nativeSrc": "9668:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9668:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9663:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9663:1:9"
																}
															]
														},
														{
															"nativeSrc": "9697:16:9",
															"nodeType": "YulAssignment",
															"src": "9697:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9708:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9708:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9711:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9711:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:9"
																},
																"nativeSrc": "9704:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9704:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9697:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9697:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9770:22:9",
																"nodeType": "YulBlock",
																"src": "9770:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9772:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9772:16:9"
																			},
																			"nativeSrc": "9772:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9772:18:9"
																		},
																		"nativeSrc": "9772:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9772:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nativeSrc": "9729:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9729:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9734:34:9",
																		"nodeType": "YulLiteral",
																		"src": "9734:34:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9726:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9726:2:9"
																},
																"nativeSrc": "9726:43:9",
																"nodeType": "YulFunctionCall",
																"src": "9726:43:9"
															},
															"nativeSrc": "9723:69:9",
															"nodeType": "YulIf",
															"src": "9723:69:9"
														}
													]
												},
												"name": "checked_add_t_uint128",
												"nativeSrc": "9575:224:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9606:1:9",
														"nodeType": "YulTypedName",
														"src": "9606:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9609:1:9",
														"nodeType": "YulTypedName",
														"src": "9609:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9615:3:9",
														"nodeType": "YulTypedName",
														"src": "9615:3:9",
														"type": ""
													}
												],
												"src": "9575:224:9"
											},
											{
												"body": {
													"nativeSrc": "9900:73:9",
													"nodeType": "YulBlock",
													"src": "9900:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9917:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9917:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9922:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "9922:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9910:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9910:6:9"
																},
																"nativeSrc": "9910:19:9",
																"nodeType": "YulFunctionCall",
																"src": "9910:19:9"
															},
															"nativeSrc": "9910:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "9910:19:9"
														},
														{
															"nativeSrc": "9938:29:9",
															"nodeType": "YulAssignment",
															"src": "9938:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9957:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9957:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9962:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9962:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9953:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9953:3:9"
																},
																"nativeSrc": "9953:14:9",
																"nodeType": "YulFunctionCall",
																"src": "9953:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9938:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "9938:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "9805:168:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9872:3:9",
														"nodeType": "YulTypedName",
														"src": "9872:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9877:6:9",
														"nodeType": "YulTypedName",
														"src": "9877:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9888:11:9",
														"nodeType": "YulTypedName",
														"src": "9888:11:9",
														"type": ""
													}
												],
												"src": "9805:168:9"
											},
											{
												"body": {
													"nativeSrc": "10043:84:9",
													"nodeType": "YulBlock",
													"src": "10043:84:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10067:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10067:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10072:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10072:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10077:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10077:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10054:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "10054:12:9"
																},
																"nativeSrc": "10054:30:9",
																"nodeType": "YulFunctionCall",
																"src": "10054:30:9"
															},
															"nativeSrc": "10054:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "10054:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10104:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "10104:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10109:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10109:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10100:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10100:3:9"
																		},
																		"nativeSrc": "10100:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10100:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10118:1:9",
																		"nodeType": "YulLiteral",
																		"src": "10118:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10093:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10093:6:9"
																},
																"nativeSrc": "10093:27:9",
																"nodeType": "YulFunctionCall",
																"src": "10093:27:9"
															},
															"nativeSrc": "10093:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "10093:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9979:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10025:3:9",
														"nodeType": "YulTypedName",
														"src": "10025:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10030:3:9",
														"nodeType": "YulTypedName",
														"src": "10030:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10035:6:9",
														"nodeType": "YulTypedName",
														"src": "10035:6:9",
														"type": ""
													}
												],
												"src": "9979:148:9"
											},
											{
												"body": {
													"nativeSrc": "10181:54:9",
													"nodeType": "YulBlock",
													"src": "10181:54:9",
													"statements": [
														{
															"nativeSrc": "10191:38:9",
															"nodeType": "YulAssignment",
															"src": "10191:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10209:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "10209:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10216:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10216:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10205:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10205:3:9"
																		},
																		"nativeSrc": "10205:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10205:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10225:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10225:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10221:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10221:3:9"
																		},
																		"nativeSrc": "10221:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10221:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10201:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10201:3:9"
																},
																"nativeSrc": "10201:28:9",
																"nodeType": "YulFunctionCall",
																"src": "10201:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10191:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10191:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "10133:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10164:5:9",
														"nodeType": "YulTypedName",
														"src": "10164:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10174:6:9",
														"nodeType": "YulTypedName",
														"src": "10174:6:9",
														"type": ""
													}
												],
												"src": "10133:102:9"
											},
											{
												"body": {
													"nativeSrc": "10363:214:9",
													"nodeType": "YulBlock",
													"src": "10363:214:9",
													"statements": [
														{
															"nativeSrc": "10373:77:9",
															"nodeType": "YulAssignment",
															"src": "10373:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10438:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10438:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10443:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10443:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "10380:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "10380:57:9"
																},
																"nativeSrc": "10380:70:9",
																"nodeType": "YulFunctionCall",
																"src": "10380:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10373:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10373:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "10497:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10497:5:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10504:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10504:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10509:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10509:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10460:36:9",
																	"nodeType": "YulIdentifier",
																	"src": "10460:36:9"
																},
																"nativeSrc": "10460:56:9",
																"nodeType": "YulFunctionCall",
																"src": "10460:56:9"
															},
															"nativeSrc": "10460:56:9",
															"nodeType": "YulExpressionStatement",
															"src": "10460:56:9"
														},
														{
															"nativeSrc": "10525:46:9",
															"nodeType": "YulAssignment",
															"src": "10525:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10536:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10536:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10563:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10563:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10541:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "10541:21:9"
																		},
																		"nativeSrc": "10541:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10541:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10532:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10532:3:9"
																},
																"nativeSrc": "10532:39:9",
																"nodeType": "YulFunctionCall",
																"src": "10532:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10525:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10525:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "10263:314:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "10336:5:9",
														"nodeType": "YulTypedName",
														"src": "10336:5:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10343:6:9",
														"nodeType": "YulTypedName",
														"src": "10343:6:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10351:3:9",
														"nodeType": "YulTypedName",
														"src": "10351:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10359:3:9",
														"nodeType": "YulTypedName",
														"src": "10359:3:9",
														"type": ""
													}
												],
												"src": "10263:314:9"
											},
											{
												"body": {
													"nativeSrc": "10765:367:9",
													"nodeType": "YulBlock",
													"src": "10765:367:9",
													"statements": [
														{
															"nativeSrc": "10775:26:9",
															"nodeType": "YulAssignment",
															"src": "10775:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10787:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10787:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10798:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10798:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10783:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10783:3:9"
																},
																"nativeSrc": "10783:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10783:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10775:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10775:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10855:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10855:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10868:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10868:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10879:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10879:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10864:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10864:3:9"
																		},
																		"nativeSrc": "10864:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10864:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10811:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10811:43:9"
																},
																"nativeSrc": "10811:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10811:71:9"
															},
															"nativeSrc": "10811:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10811:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10936:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10936:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10949:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10949:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10960:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10960:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10945:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10945:3:9"
																		},
																		"nativeSrc": "10945:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10945:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10892:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10892:43:9"
																},
																"nativeSrc": "10892:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10892:72:9"
															},
															"nativeSrc": "10892:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10892:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10985:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10985:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10996:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10996:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10981:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10981:3:9"
																		},
																		"nativeSrc": "10981:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10981:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11005:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11005:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11011:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11011:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11001:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11001:3:9"
																		},
																		"nativeSrc": "11001:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11001:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10974:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10974:6:9"
																},
																"nativeSrc": "10974:48:9",
																"nodeType": "YulFunctionCall",
																"src": "10974:48:9"
															},
															"nativeSrc": "10974:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "10974:48:9"
														},
														{
															"nativeSrc": "11031:94:9",
															"nodeType": "YulAssignment",
															"src": "11031:94:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11103:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11103:6:9"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11111:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11111:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11120:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11120:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "11039:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "11039:63:9"
																},
																"nativeSrc": "11039:86:9",
																"nodeType": "YulFunctionCall",
																"src": "11039:86:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11031:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11031:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10583:549:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10713:9:9",
														"nodeType": "YulTypedName",
														"src": "10713:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10725:6:9",
														"nodeType": "YulTypedName",
														"src": "10725:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10733:6:9",
														"nodeType": "YulTypedName",
														"src": "10733:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10741:6:9",
														"nodeType": "YulTypedName",
														"src": "10741:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10749:6:9",
														"nodeType": "YulTypedName",
														"src": "10749:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10760:4:9",
														"nodeType": "YulTypedName",
														"src": "10760:4:9",
														"type": ""
													}
												],
												"src": "10583:549:9"
											},
											{
												"body": {
													"nativeSrc": "11182:147:9",
													"nodeType": "YulBlock",
													"src": "11182:147:9",
													"statements": [
														{
															"nativeSrc": "11192:25:9",
															"nodeType": "YulAssignment",
															"src": "11192:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11215:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11215:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11197:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11197:17:9"
																},
																"nativeSrc": "11197:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11197:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11192:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11192:1:9"
																}
															]
														},
														{
															"nativeSrc": "11226:25:9",
															"nodeType": "YulAssignment",
															"src": "11226:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11249:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11249:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11231:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "11231:17:9"
																},
																"nativeSrc": "11231:20:9",
																"nodeType": "YulFunctionCall",
																"src": "11231:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11226:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "11226:1:9"
																}
															]
														},
														{
															"nativeSrc": "11260:16:9",
															"nodeType": "YulAssignment",
															"src": "11260:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11271:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11271:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11274:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11274:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11267:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11267:3:9"
																},
																"nativeSrc": "11267:9:9",
																"nodeType": "YulFunctionCall",
																"src": "11267:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11260:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11260:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11300:22:9",
																"nodeType": "YulBlock",
																"src": "11300:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11302:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "11302:16:9"
																			},
																			"nativeSrc": "11302:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "11302:18:9"
																		},
																		"nativeSrc": "11302:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "11302:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11292:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "11292:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11295:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11295:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11289:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11289:2:9"
																},
																"nativeSrc": "11289:10:9",
																"nodeType": "YulFunctionCall",
																"src": "11289:10:9"
															},
															"nativeSrc": "11286:36:9",
															"nodeType": "YulIf",
															"src": "11286:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11138:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11169:1:9",
														"nodeType": "YulTypedName",
														"src": "11169:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11172:1:9",
														"nodeType": "YulTypedName",
														"src": "11172:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11178:3:9",
														"nodeType": "YulTypedName",
														"src": "11178:3:9",
														"type": ""
													}
												],
												"src": "11138:191:9"
											},
											{
												"body": {
													"nativeSrc": "11517:371:9",
													"nodeType": "YulBlock",
													"src": "11517:371:9",
													"statements": [
														{
															"nativeSrc": "11527:27:9",
															"nodeType": "YulAssignment",
															"src": "11527:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11539:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11539:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11550:3:9",
																		"nodeType": "YulLiteral",
																		"src": "11550:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11535:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11535:3:9"
																},
																"nativeSrc": "11535:19:9",
																"nodeType": "YulFunctionCall",
																"src": "11535:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11527:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11527:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11608:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11608:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11621:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11621:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11632:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11632:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11617:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11617:3:9"
																		},
																		"nativeSrc": "11617:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11617:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11564:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11564:43:9"
																},
																"nativeSrc": "11564:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11564:71:9"
															},
															"nativeSrc": "11564:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11564:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11689:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11689:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11702:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11702:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11713:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11713:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11698:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11698:3:9"
																		},
																		"nativeSrc": "11698:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11698:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "11645:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11645:43:9"
																},
																"nativeSrc": "11645:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11645:72:9"
															},
															"nativeSrc": "11645:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11645:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11771:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11771:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11784:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11784:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11795:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11795:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11780:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11780:3:9"
																		},
																		"nativeSrc": "11780:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11780:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11727:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11727:43:9"
																},
																"nativeSrc": "11727:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11727:72:9"
															},
															"nativeSrc": "11727:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11727:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11853:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11853:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11866:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11866:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11877:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11877:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11862:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11862:3:9"
																		},
																		"nativeSrc": "11862:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11862:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11809:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11809:43:9"
																},
																"nativeSrc": "11809:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11809:72:9"
															},
															"nativeSrc": "11809:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11809:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11335:553:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11465:9:9",
														"nodeType": "YulTypedName",
														"src": "11465:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11477:6:9",
														"nodeType": "YulTypedName",
														"src": "11477:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11485:6:9",
														"nodeType": "YulTypedName",
														"src": "11485:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11493:6:9",
														"nodeType": "YulTypedName",
														"src": "11493:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11501:6:9",
														"nodeType": "YulTypedName",
														"src": "11501:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11512:4:9",
														"nodeType": "YulTypedName",
														"src": "11512:4:9",
														"type": ""
													}
												],
												"src": "11335:553:9"
											},
											{
												"body": {
													"nativeSrc": "11933:189:9",
													"nodeType": "YulBlock",
													"src": "11933:189:9",
													"statements": [
														{
															"nativeSrc": "11943:32:9",
															"nodeType": "YulAssignment",
															"src": "11943:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11969:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11969:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nativeSrc": "11952:16:9",
																	"nodeType": "YulIdentifier",
																	"src": "11952:16:9"
																},
																"nativeSrc": "11952:23:9",
																"nodeType": "YulFunctionCall",
																"src": "11952:23:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11943:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "11943:5:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12065:22:9",
																"nodeType": "YulBlock",
																"src": "12065:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12067:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "12067:16:9"
																			},
																			"nativeSrc": "12067:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12067:18:9"
																		},
																		"nativeSrc": "12067:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12067:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11990:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "11990:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11997:66:9",
																		"nodeType": "YulLiteral",
																		"src": "11997:66:9",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11987:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "11987:2:9"
																},
																"nativeSrc": "11987:77:9",
																"nodeType": "YulFunctionCall",
																"src": "11987:77:9"
															},
															"nativeSrc": "11984:103:9",
															"nodeType": "YulIf",
															"src": "11984:103:9"
														},
														{
															"nativeSrc": "12096:20:9",
															"nodeType": "YulAssignment",
															"src": "12096:20:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12107:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12107:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12110:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12110:5:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12103:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12103:3:9"
																},
																"nativeSrc": "12103:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12103:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12096:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12096:3:9"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nativeSrc": "11894:228:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11919:5:9",
														"nodeType": "YulTypedName",
														"src": "11919:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11929:3:9",
														"nodeType": "YulTypedName",
														"src": "11929:3:9",
														"type": ""
													}
												],
												"src": "11894:228:9"
											},
											{
												"body": {
													"nativeSrc": "12254:206:9",
													"nodeType": "YulBlock",
													"src": "12254:206:9",
													"statements": [
														{
															"nativeSrc": "12264:26:9",
															"nodeType": "YulAssignment",
															"src": "12264:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12276:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12276:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12287:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12287:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12272:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12272:3:9"
																},
																"nativeSrc": "12272:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12272:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12264:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12264:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12344:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12344:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12357:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12357:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12368:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12368:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12353:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12353:3:9"
																		},
																		"nativeSrc": "12353:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12353:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12300:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12300:43:9"
																},
																"nativeSrc": "12300:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12300:71:9"
															},
															"nativeSrc": "12300:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12300:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12425:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12425:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12438:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12438:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12449:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12449:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12434:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12434:3:9"
																		},
																		"nativeSrc": "12434:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12434:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12381:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12381:43:9"
																},
																"nativeSrc": "12381:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12381:72:9"
															},
															"nativeSrc": "12381:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12381:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12128:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12218:9:9",
														"nodeType": "YulTypedName",
														"src": "12218:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12230:6:9",
														"nodeType": "YulTypedName",
														"src": "12230:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12238:6:9",
														"nodeType": "YulTypedName",
														"src": "12238:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12249:4:9",
														"nodeType": "YulTypedName",
														"src": "12249:4:9",
														"type": ""
													}
												],
												"src": "12128:332:9"
											},
											{
												"body": {
													"nativeSrc": "12506:76:9",
													"nodeType": "YulBlock",
													"src": "12506:76:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12560:16:9",
																"nodeType": "YulBlock",
																"src": "12560:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12569:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12569:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12572:1:9",
																					"nodeType": "YulLiteral",
																					"src": "12572:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12562:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12562:6:9"
																			},
																			"nativeSrc": "12562:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12562:12:9"
																		},
																		"nativeSrc": "12562:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12562:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12529:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "12529:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12551:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "12551:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12536:14:9",
																					"nodeType": "YulIdentifier",
																					"src": "12536:14:9"
																				},
																				"nativeSrc": "12536:21:9",
																				"nodeType": "YulFunctionCall",
																				"src": "12536:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12526:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "12526:2:9"
																		},
																		"nativeSrc": "12526:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12526:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12519:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12519:6:9"
																},
																"nativeSrc": "12519:40:9",
																"nodeType": "YulFunctionCall",
																"src": "12519:40:9"
															},
															"nativeSrc": "12516:60:9",
															"nodeType": "YulIf",
															"src": "12516:60:9"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12466:116:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12499:5:9",
														"nodeType": "YulTypedName",
														"src": "12499:5:9",
														"type": ""
													}
												],
												"src": "12466:116:9"
											},
											{
												"body": {
													"nativeSrc": "12648:77:9",
													"nodeType": "YulBlock",
													"src": "12648:77:9",
													"statements": [
														{
															"nativeSrc": "12658:22:9",
															"nodeType": "YulAssignment",
															"src": "12658:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12673:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12673:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12667:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12667:5:9"
																},
																"nativeSrc": "12667:13:9",
																"nodeType": "YulFunctionCall",
																"src": "12667:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12658:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "12658:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12713:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "12713:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12689:23:9",
																	"nodeType": "YulIdentifier",
																	"src": "12689:23:9"
																},
																"nativeSrc": "12689:30:9",
																"nodeType": "YulFunctionCall",
																"src": "12689:30:9"
															},
															"nativeSrc": "12689:30:9",
															"nodeType": "YulExpressionStatement",
															"src": "12689:30:9"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12588:137:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12626:6:9",
														"nodeType": "YulTypedName",
														"src": "12626:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12634:3:9",
														"nodeType": "YulTypedName",
														"src": "12634:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12642:5:9",
														"nodeType": "YulTypedName",
														"src": "12642:5:9",
														"type": ""
													}
												],
												"src": "12588:137:9"
											},
											{
												"body": {
													"nativeSrc": "12805:271:9",
													"nodeType": "YulBlock",
													"src": "12805:271:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "12851:83:9",
																"nodeType": "YulBlock",
																"src": "12851:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12853:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "12853:77:9"
																			},
																			"nativeSrc": "12853:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "12853:79:9"
																		},
																		"nativeSrc": "12853:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "12853:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12826:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "12826:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12835:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12835:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12822:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12822:3:9"
																		},
																		"nativeSrc": "12822:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12822:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12847:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12847:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12818:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12818:3:9"
																},
																"nativeSrc": "12818:32:9",
																"nodeType": "YulFunctionCall",
																"src": "12818:32:9"
															},
															"nativeSrc": "12815:119:9",
															"nodeType": "YulIf",
															"src": "12815:119:9"
														},
														{
															"nativeSrc": "12944:125:9",
															"nodeType": "YulBlock",
															"src": "12944:125:9",
															"statements": [
																{
																	"nativeSrc": "12959:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12959:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12973:1:9",
																		"nodeType": "YulLiteral",
																		"src": "12973:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12963:6:9",
																			"nodeType": "YulTypedName",
																			"src": "12963:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12988:71:9",
																	"nodeType": "YulAssignment",
																	"src": "12988:71:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13031:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "13031:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13042:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "13042:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13027:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "13027:3:9"
																				},
																				"nativeSrc": "13027:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "13027:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13051:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "13051:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12998:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "12998:28:9"
																		},
																		"nativeSrc": "12998:61:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12998:61:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12988:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "12988:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12731:345:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12775:9:9",
														"nodeType": "YulTypedName",
														"src": "12775:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12786:7:9",
														"nodeType": "YulTypedName",
														"src": "12786:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12798:6:9",
														"nodeType": "YulTypedName",
														"src": "12798:6:9",
														"type": ""
													}
												],
												"src": "12731:345:9"
											},
											{
												"body": {
													"nativeSrc": "13260:363:9",
													"nodeType": "YulBlock",
													"src": "13260:363:9",
													"statements": [
														{
															"nativeSrc": "13270:26:9",
															"nodeType": "YulAssignment",
															"src": "13270:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13282:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13282:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13293:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13293:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13278:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13278:3:9"
																},
																"nativeSrc": "13278:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13278:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13270:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13270:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13348:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13348:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13361:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13361:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13372:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13372:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13357:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13357:3:9"
																		},
																		"nativeSrc": "13357:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13357:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "13306:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "13306:41:9"
																},
																"nativeSrc": "13306:69:9",
																"nodeType": "YulFunctionCall",
																"src": "13306:69:9"
															},
															"nativeSrc": "13306:69:9",
															"nodeType": "YulExpressionStatement",
															"src": "13306:69:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13427:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13427:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13440:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13440:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13451:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13451:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13436:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13436:3:9"
																		},
																		"nativeSrc": "13436:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13436:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "13385:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "13385:41:9"
																},
																"nativeSrc": "13385:70:9",
																"nodeType": "YulFunctionCall",
																"src": "13385:70:9"
															},
															"nativeSrc": "13385:70:9",
															"nodeType": "YulExpressionStatement",
															"src": "13385:70:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13476:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13476:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13487:2:9",
																				"nodeType": "YulLiteral",
																				"src": "13487:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13472:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13472:3:9"
																		},
																		"nativeSrc": "13472:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13472:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13496:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13496:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13502:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13502:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13492:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13492:3:9"
																		},
																		"nativeSrc": "13492:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13492:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13465:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13465:6:9"
																},
																"nativeSrc": "13465:48:9",
																"nodeType": "YulFunctionCall",
																"src": "13465:48:9"
															},
															"nativeSrc": "13465:48:9",
															"nodeType": "YulExpressionStatement",
															"src": "13465:48:9"
														},
														{
															"nativeSrc": "13522:94:9",
															"nodeType": "YulAssignment",
															"src": "13522:94:9",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13594:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13594:6:9"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "13602:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13602:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13611:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13611:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13530:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "13530:63:9"
																},
																"nativeSrc": "13530:86:9",
																"nodeType": "YulFunctionCall",
																"src": "13530:86:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13522:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13522:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "13082:541:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13208:9:9",
														"nodeType": "YulTypedName",
														"src": "13208:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13220:6:9",
														"nodeType": "YulTypedName",
														"src": "13220:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13228:6:9",
														"nodeType": "YulTypedName",
														"src": "13228:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13236:6:9",
														"nodeType": "YulTypedName",
														"src": "13236:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13244:6:9",
														"nodeType": "YulTypedName",
														"src": "13244:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13255:4:9",
														"nodeType": "YulTypedName",
														"src": "13255:4:9",
														"type": ""
													}
												],
												"src": "13082:541:9"
											},
											{
												"body": {
													"nativeSrc": "13831:446:9",
													"nodeType": "YulBlock",
													"src": "13831:446:9",
													"statements": [
														{
															"nativeSrc": "13841:27:9",
															"nodeType": "YulAssignment",
															"src": "13841:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13853:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13853:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13864:3:9",
																		"nodeType": "YulLiteral",
																		"src": "13864:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13849:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13849:3:9"
																},
																"nativeSrc": "13849:19:9",
																"nodeType": "YulFunctionCall",
																"src": "13849:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13841:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13841:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13920:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13920:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13933:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13933:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13944:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13944:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13929:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13929:3:9"
																		},
																		"nativeSrc": "13929:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13929:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "13878:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "13878:41:9"
																},
																"nativeSrc": "13878:69:9",
																"nodeType": "YulFunctionCall",
																"src": "13878:69:9"
															},
															"nativeSrc": "13878:69:9",
															"nodeType": "YulExpressionStatement",
															"src": "13878:69:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13999:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "13999:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14012:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14012:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14023:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14023:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14008:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14008:3:9"
																		},
																		"nativeSrc": "14008:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14008:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "13957:41:9",
																	"nodeType": "YulIdentifier",
																	"src": "13957:41:9"
																},
																"nativeSrc": "13957:70:9",
																"nodeType": "YulFunctionCall",
																"src": "13957:70:9"
															},
															"nativeSrc": "13957:70:9",
															"nodeType": "YulExpressionStatement",
															"src": "13957:70:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14081:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14081:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14094:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14094:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14105:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14105:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14090:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14090:3:9"
																		},
																		"nativeSrc": "14090:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14090:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint160_to_t_uint160_fromStack",
																	"nativeSrc": "14037:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14037:43:9"
																},
																"nativeSrc": "14037:72:9",
																"nodeType": "YulFunctionCall",
																"src": "14037:72:9"
															},
															"nativeSrc": "14037:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "14037:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14163:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14163:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14176:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14176:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14187:2:9",
																				"nodeType": "YulLiteral",
																				"src": "14187:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14172:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14172:3:9"
																		},
																		"nativeSrc": "14172:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14172:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint128_to_t_uint128_fromStack",
																	"nativeSrc": "14119:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "14119:43:9"
																},
																"nativeSrc": "14119:72:9",
																"nodeType": "YulFunctionCall",
																"src": "14119:72:9"
															},
															"nativeSrc": "14119:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "14119:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14241:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "14241:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14254:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14254:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14265:3:9",
																				"nodeType": "YulLiteral",
																				"src": "14265:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14250:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14250:3:9"
																		},
																		"nativeSrc": "14250:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14250:19:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_fromStack",
																	"nativeSrc": "14201:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "14201:39:9"
																},
																"nativeSrc": "14201:69:9",
																"nodeType": "YulFunctionCall",
																"src": "14201:69:9"
															},
															"nativeSrc": "14201:69:9",
															"nodeType": "YulExpressionStatement",
															"src": "14201:69:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed",
												"nativeSrc": "13629:648:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13771:9:9",
														"nodeType": "YulTypedName",
														"src": "13771:9:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13783:6:9",
														"nodeType": "YulTypedName",
														"src": "13783:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13791:6:9",
														"nodeType": "YulTypedName",
														"src": "13791:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13799:6:9",
														"nodeType": "YulTypedName",
														"src": "13799:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13807:6:9",
														"nodeType": "YulTypedName",
														"src": "13807:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13815:6:9",
														"nodeType": "YulTypedName",
														"src": "13815:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13826:4:9",
														"nodeType": "YulTypedName",
														"src": "13826:4:9",
														"type": ""
													}
												],
												"src": "13629:648:9"
											},
											{
												"body": {
													"nativeSrc": "14311:152:9",
													"nodeType": "YulBlock",
													"src": "14311:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14328:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14328:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14331:77:9",
																		"nodeType": "YulLiteral",
																		"src": "14331:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14321:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14321:6:9"
																},
																"nativeSrc": "14321:88:9",
																"nodeType": "YulFunctionCall",
																"src": "14321:88:9"
															},
															"nativeSrc": "14321:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "14321:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14425:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14425:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14428:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14428:4:9",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14418:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14418:6:9"
																},
																"nativeSrc": "14418:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14418:15:9"
															},
															"nativeSrc": "14418:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14418:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14449:1:9",
																		"nodeType": "YulLiteral",
																		"src": "14449:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14452:4:9",
																		"nodeType": "YulLiteral",
																		"src": "14452:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14442:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14442:6:9"
																},
																"nativeSrc": "14442:15:9",
																"nodeType": "YulFunctionCall",
																"src": "14442:15:9"
															},
															"nativeSrc": "14442:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "14442:15:9"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14283:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "14283:180:9"
											},
											{
												"body": {
													"nativeSrc": "14501:139:9",
													"nodeType": "YulBlock",
													"src": "14501:139:9",
													"statements": [
														{
															"nativeSrc": "14511:23:9",
															"nodeType": "YulAssignment",
															"src": "14511:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14532:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14532:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "14516:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "14516:15:9"
																},
																"nativeSrc": "14516:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14516:18:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14511:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14511:1:9"
																}
															]
														},
														{
															"nativeSrc": "14543:23:9",
															"nodeType": "YulAssignment",
															"src": "14543:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14564:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14564:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "14548:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "14548:15:9"
																},
																"nativeSrc": "14548:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14548:18:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14543:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14543:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14588:22:9",
																"nodeType": "YulBlock",
																"src": "14588:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14590:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14590:16:9"
																			},
																			"nativeSrc": "14590:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14590:18:9"
																		},
																		"nativeSrc": "14590:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14590:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14585:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14585:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14578:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14578:6:9"
																},
																"nativeSrc": "14578:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14578:9:9"
															},
															"nativeSrc": "14575:35:9",
															"nodeType": "YulIf",
															"src": "14575:35:9"
														},
														{
															"nativeSrc": "14619:15:9",
															"nodeType": "YulAssignment",
															"src": "14619:15:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14629:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14629:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14632:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14632:1:9"
																	}
																],
																"functionName": {
																	"name": "smod",
																	"nativeSrc": "14624:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14624:4:9"
																},
																"nativeSrc": "14624:10:9",
																"nodeType": "YulFunctionCall",
																"src": "14624:10:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14619:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14619:1:9"
																}
															]
														}
													]
												},
												"name": "mod_t_int24",
												"nativeSrc": "14469:171:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14490:1:9",
														"nodeType": "YulTypedName",
														"src": "14490:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14493:1:9",
														"nodeType": "YulTypedName",
														"src": "14493:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14499:1:9",
														"nodeType": "YulTypedName",
														"src": "14499:1:9",
														"type": ""
													}
												],
												"src": "14469:171:9"
											},
											{
												"body": {
													"nativeSrc": "14686:342:9",
													"nodeType": "YulBlock",
													"src": "14686:342:9",
													"statements": [
														{
															"nativeSrc": "14696:23:9",
															"nodeType": "YulAssignment",
															"src": "14696:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14717:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14717:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "14701:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "14701:15:9"
																},
																"nativeSrc": "14701:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14701:18:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14696:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14696:1:9"
																}
															]
														},
														{
															"nativeSrc": "14728:23:9",
															"nodeType": "YulAssignment",
															"src": "14728:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14749:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14749:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int24",
																	"nativeSrc": "14733:15:9",
																	"nodeType": "YulIdentifier",
																	"src": "14733:15:9"
																},
																"nativeSrc": "14733:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14733:18:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14728:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "14728:1:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14773:22:9",
																"nodeType": "YulBlock",
																"src": "14773:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14775:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14775:16:9"
																			},
																			"nativeSrc": "14775:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14775:18:9"
																		},
																		"nativeSrc": "14775:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14775:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14770:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "14770:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14763:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14763:6:9"
																},
																"nativeSrc": "14763:9:9",
																"nodeType": "YulFunctionCall",
																"src": "14763:9:9"
															},
															"nativeSrc": "14760:35:9",
															"nodeType": "YulIf",
															"src": "14760:35:9"
														},
														{
															"body": {
																"nativeSrc": "14975:22:9",
																"nodeType": "YulBlock",
																"src": "14975:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14977:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "14977:16:9"
																			},
																			"nativeSrc": "14977:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "14977:18:9"
																		},
																		"nativeSrc": "14977:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "14977:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "14864:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "14864:1:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14867:66:9",
																				"nodeType": "YulLiteral",
																				"src": "14867:66:9",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14861:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "14861:2:9"
																		},
																		"nativeSrc": "14861:73:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14861:73:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nativeSrc": "14951:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "14951:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14958:1:9",
																						"nodeType": "YulLiteral",
																						"src": "14958:1:9",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14961:1:9",
																						"nodeType": "YulLiteral",
																						"src": "14961:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14954:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "14954:3:9"
																				},
																				"nativeSrc": "14954:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "14954:9:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14948:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "14948:2:9"
																		},
																		"nativeSrc": "14948:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14948:16:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14844:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14844:3:9"
																},
																"nativeSrc": "14844:130:9",
																"nodeType": "YulFunctionCall",
																"src": "14844:130:9"
															},
															"nativeSrc": "14841:156:9",
															"nodeType": "YulIf",
															"src": "14841:156:9"
														},
														{
															"nativeSrc": "15007:15:9",
															"nodeType": "YulAssignment",
															"src": "15007:15:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15017:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15017:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15020:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "15020:1:9"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nativeSrc": "15012:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "15012:4:9"
																},
																"nativeSrc": "15012:10:9",
																"nodeType": "YulFunctionCall",
																"src": "15012:10:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15007:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "15007:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int24",
												"nativeSrc": "14646:382:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14675:1:9",
														"nodeType": "YulTypedName",
														"src": "14675:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14678:1:9",
														"nodeType": "YulTypedName",
														"src": "14678:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14684:1:9",
														"nodeType": "YulTypedName",
														"src": "14684:1:9",
														"type": ""
													}
												],
												"src": "14646:382:9"
											},
											{
												"body": {
													"nativeSrc": "15076:52:9",
													"nodeType": "YulBlock",
													"src": "15076:52:9",
													"statements": [
														{
															"nativeSrc": "15086:35:9",
															"nodeType": "YulAssignment",
															"src": "15086:35:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15111:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15111:2:9",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15115:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15115:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15107:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15107:3:9"
																},
																"nativeSrc": "15107:14:9",
																"nodeType": "YulFunctionCall",
																"src": "15107:14:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15086:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "15086:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "15034:94:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15057:5:9",
														"nodeType": "YulTypedName",
														"src": "15057:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15067:8:9",
														"nodeType": "YulTypedName",
														"src": "15067:8:9",
														"type": ""
													}
												],
												"src": "15034:94:9"
											},
											{
												"body": {
													"nativeSrc": "15181:47:9",
													"nodeType": "YulBlock",
													"src": "15181:47:9",
													"statements": [
														{
															"nativeSrc": "15191:31:9",
															"nodeType": "YulAssignment",
															"src": "15191:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15216:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15216:5:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "15202:13:9",
																	"nodeType": "YulIdentifier",
																	"src": "15202:13:9"
																},
																"nativeSrc": "15202:20:9",
																"nodeType": "YulFunctionCall",
																"src": "15202:20:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15191:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "15191:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "15134:94:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15163:5:9",
														"nodeType": "YulTypedName",
														"src": "15163:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15173:7:9",
														"nodeType": "YulTypedName",
														"src": "15173:7:9",
														"type": ""
													}
												],
												"src": "15134:94:9"
											},
											{
												"body": {
													"nativeSrc": "15281:53:9",
													"nodeType": "YulBlock",
													"src": "15281:53:9",
													"statements": [
														{
															"nativeSrc": "15291:37:9",
															"nodeType": "YulAssignment",
															"src": "15291:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15322:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15322:5:9"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "15302:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "15302:19:9"
																},
																"nativeSrc": "15302:26:9",
																"nodeType": "YulFunctionCall",
																"src": "15302:26:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15291:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "15291:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "15234:100:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15263:5:9",
														"nodeType": "YulTypedName",
														"src": "15263:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15273:7:9",
														"nodeType": "YulTypedName",
														"src": "15273:7:9",
														"type": ""
													}
												],
												"src": "15234:100:9"
											},
											{
												"body": {
													"nativeSrc": "15423:74:9",
													"nodeType": "YulBlock",
													"src": "15423:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15440:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15440:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15483:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "15483:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "15465:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "15465:17:9"
																				},
																				"nativeSrc": "15465:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15465:24:9"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "15445:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "15445:19:9"
																		},
																		"nativeSrc": "15445:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15445:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15433:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15433:6:9"
																},
																"nativeSrc": "15433:58:9",
																"nodeType": "YulFunctionCall",
																"src": "15433:58:9"
															},
															"nativeSrc": "15433:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "15433:58:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "15340:157:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15411:5:9",
														"nodeType": "YulTypedName",
														"src": "15411:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15418:3:9",
														"nodeType": "YulTypedName",
														"src": "15418:3:9",
														"type": ""
													}
												],
												"src": "15340:157:9"
											},
											{
												"body": {
													"nativeSrc": "15546:53:9",
													"nodeType": "YulBlock",
													"src": "15546:53:9",
													"statements": [
														{
															"nativeSrc": "15556:36:9",
															"nodeType": "YulAssignment",
															"src": "15556:36:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15581:3:9",
																		"nodeType": "YulLiteral",
																		"src": "15581:3:9",
																		"type": "",
																		"value": "232"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15586:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15586:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15577:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15577:3:9"
																},
																"nativeSrc": "15577:15:9",
																"nodeType": "YulFunctionCall",
																"src": "15577:15:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15556:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "15556:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_232",
												"nativeSrc": "15503:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15527:5:9",
														"nodeType": "YulTypedName",
														"src": "15527:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15537:8:9",
														"nodeType": "YulTypedName",
														"src": "15537:8:9",
														"type": ""
													}
												],
												"src": "15503:96:9"
											},
											{
												"body": {
													"nativeSrc": "15650:48:9",
													"nodeType": "YulBlock",
													"src": "15650:48:9",
													"statements": [
														{
															"nativeSrc": "15660:32:9",
															"nodeType": "YulAssignment",
															"src": "15660:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15686:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "15686:5:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_232",
																	"nativeSrc": "15671:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "15671:14:9"
																},
																"nativeSrc": "15671:21:9",
																"nodeType": "YulFunctionCall",
																"src": "15671:21:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15660:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "15660:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_int24",
												"nativeSrc": "15605:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15632:5:9",
														"nodeType": "YulTypedName",
														"src": "15632:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15642:7:9",
														"nodeType": "YulTypedName",
														"src": "15642:7:9",
														"type": ""
													}
												],
												"src": "15605:93:9"
											},
											{
												"body": {
													"nativeSrc": "15783:70:9",
													"nodeType": "YulBlock",
													"src": "15783:70:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15800:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15800:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15839:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "15839:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "15823:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "15823:15:9"
																				},
																				"nativeSrc": "15823:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15823:22:9"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_int24",
																			"nativeSrc": "15805:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "15805:17:9"
																		},
																		"nativeSrc": "15805:41:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15805:41:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15793:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15793:6:9"
																},
																"nativeSrc": "15793:54:9",
																"nodeType": "YulFunctionCall",
																"src": "15793:54:9"
															},
															"nativeSrc": "15793:54:9",
															"nodeType": "YulExpressionStatement",
															"src": "15793:54:9"
														}
													]
												},
												"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
												"nativeSrc": "15704:149:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15771:5:9",
														"nodeType": "YulTypedName",
														"src": "15771:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15778:3:9",
														"nodeType": "YulTypedName",
														"src": "15778:3:9",
														"type": ""
													}
												],
												"src": "15704:149:9"
											},
											{
												"body": {
													"nativeSrc": "16023:356:9",
													"nodeType": "YulBlock",
													"src": "16023:356:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16096:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16096:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16105:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16105:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "16034:61:9",
																	"nodeType": "YulIdentifier",
																	"src": "16034:61:9"
																},
																"nativeSrc": "16034:75:9",
																"nodeType": "YulFunctionCall",
																"src": "16034:75:9"
															},
															"nativeSrc": "16034:75:9",
															"nodeType": "YulExpressionStatement",
															"src": "16034:75:9"
														},
														{
															"nativeSrc": "16118:19:9",
															"nodeType": "YulAssignment",
															"src": "16118:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16129:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16129:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16134:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16134:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16125:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16125:3:9"
																},
																"nativeSrc": "16125:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16125:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16118:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16118:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16205:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16205:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16214:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16214:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
																	"nativeSrc": "16147:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "16147:57:9"
																},
																"nativeSrc": "16147:71:9",
																"nodeType": "YulFunctionCall",
																"src": "16147:71:9"
															},
															"nativeSrc": "16147:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "16147:71:9"
														},
														{
															"nativeSrc": "16227:18:9",
															"nodeType": "YulAssignment",
															"src": "16227:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16238:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16238:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16243:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16243:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16234:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16234:3:9"
																},
																"nativeSrc": "16234:11:9",
																"nodeType": "YulFunctionCall",
																"src": "16234:11:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16227:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16227:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16313:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16313:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16322:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16322:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack",
																	"nativeSrc": "16255:57:9",
																	"nodeType": "YulIdentifier",
																	"src": "16255:57:9"
																},
																"nativeSrc": "16255:71:9",
																"nodeType": "YulFunctionCall",
																"src": "16255:71:9"
															},
															"nativeSrc": "16255:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "16255:71:9"
														},
														{
															"nativeSrc": "16335:18:9",
															"nodeType": "YulAssignment",
															"src": "16335:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16346:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16346:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16351:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16351:1:9",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16342:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16342:3:9"
																},
																"nativeSrc": "16342:11:9",
																"nodeType": "YulFunctionCall",
																"src": "16342:11:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16335:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16335:3:9"
																}
															]
														},
														{
															"nativeSrc": "16363:10:9",
															"nodeType": "YulAssignment",
															"src": "16363:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "16370:3:9",
																"nodeType": "YulIdentifier",
																"src": "16370:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16363:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16363:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15859:520:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15986:3:9",
														"nodeType": "YulTypedName",
														"src": "15986:3:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15992:6:9",
														"nodeType": "YulTypedName",
														"src": "15992:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16000:6:9",
														"nodeType": "YulTypedName",
														"src": "16000:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16008:6:9",
														"nodeType": "YulTypedName",
														"src": "16008:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16019:3:9",
														"nodeType": "YulTypedName",
														"src": "16019:3:9",
														"type": ""
													}
												],
												"src": "15859:520:9"
											},
											{
												"body": {
													"nativeSrc": "16428:79:9",
													"nodeType": "YulBlock",
													"src": "16428:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "16485:16:9",
																"nodeType": "YulBlock",
																"src": "16485:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16494:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16494:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16497:1:9",
																					"nodeType": "YulLiteral",
																					"src": "16497:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16487:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16487:6:9"
																			},
																			"nativeSrc": "16487:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16487:12:9"
																		},
																		"nativeSrc": "16487:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16487:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16451:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "16451:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16476:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "16476:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16458:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "16458:17:9"
																				},
																				"nativeSrc": "16458:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16458:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16448:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "16448:2:9"
																		},
																		"nativeSrc": "16448:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16448:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16441:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16441:6:9"
																},
																"nativeSrc": "16441:43:9",
																"nodeType": "YulFunctionCall",
																"src": "16441:43:9"
															},
															"nativeSrc": "16438:63:9",
															"nodeType": "YulIf",
															"src": "16438:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "16385:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16421:5:9",
														"nodeType": "YulTypedName",
														"src": "16421:5:9",
														"type": ""
													}
												],
												"src": "16385:122:9"
											},
											{
												"body": {
													"nativeSrc": "16576:80:9",
													"nodeType": "YulBlock",
													"src": "16576:80:9",
													"statements": [
														{
															"nativeSrc": "16586:22:9",
															"nodeType": "YulAssignment",
															"src": "16586:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16601:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16601:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16595:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "16595:5:9"
																},
																"nativeSrc": "16595:13:9",
																"nodeType": "YulFunctionCall",
																"src": "16595:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16586:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "16586:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16644:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "16644:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "16617:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "16617:26:9"
																},
																"nativeSrc": "16617:33:9",
																"nodeType": "YulFunctionCall",
																"src": "16617:33:9"
															},
															"nativeSrc": "16617:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "16617:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "16513:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16554:6:9",
														"nodeType": "YulTypedName",
														"src": "16554:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16562:3:9",
														"nodeType": "YulTypedName",
														"src": "16562:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16570:5:9",
														"nodeType": "YulTypedName",
														"src": "16570:5:9",
														"type": ""
													}
												],
												"src": "16513:143:9"
											},
											{
												"body": {
													"nativeSrc": "16739:274:9",
													"nodeType": "YulBlock",
													"src": "16739:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "16785:83:9",
																"nodeType": "YulBlock",
																"src": "16785:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16787:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "16787:77:9"
																			},
																			"nativeSrc": "16787:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "16787:79:9"
																		},
																		"nativeSrc": "16787:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "16787:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16760:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "16760:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16769:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "16769:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16756:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16756:3:9"
																		},
																		"nativeSrc": "16756:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16756:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16781:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16781:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16752:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16752:3:9"
																},
																"nativeSrc": "16752:32:9",
																"nodeType": "YulFunctionCall",
																"src": "16752:32:9"
															},
															"nativeSrc": "16749:119:9",
															"nodeType": "YulIf",
															"src": "16749:119:9"
														},
														{
															"nativeSrc": "16878:128:9",
															"nodeType": "YulBlock",
															"src": "16878:128:9",
															"statements": [
																{
																	"nativeSrc": "16893:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16893:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16907:1:9",
																		"nodeType": "YulLiteral",
																		"src": "16907:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16897:6:9",
																			"nodeType": "YulTypedName",
																			"src": "16897:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16922:74:9",
																	"nodeType": "YulAssignment",
																	"src": "16922:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16968:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "16968:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16979:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "16979:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16964:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "16964:3:9"
																				},
																				"nativeSrc": "16964:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "16964:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16988:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "16988:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16932:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "16932:31:9"
																		},
																		"nativeSrc": "16932:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16932:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16922:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "16922:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "16662:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16709:9:9",
														"nodeType": "YulTypedName",
														"src": "16709:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16720:7:9",
														"nodeType": "YulTypedName",
														"src": "16720:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16732:6:9",
														"nodeType": "YulTypedName",
														"src": "16732:6:9",
														"type": ""
													}
												],
												"src": "16662:351:9"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function abi_encode_t_int24_to_t_int24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int24(value))\n    }\n\n    function abi_encode_tuple_t_uint160_t_int24__to_t_uint160_t_int24__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_int24t_int24t_uint128t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int16(value) -> cleaned {\n        cleaned := signextend(1, value)\n    }\n\n    function validator_revert_t_int16(value) {\n        if iszero(eq(value, cleanup_t_int16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int16(value)\n    }\n\n    function abi_decode_tuple_t_int16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_int24(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int24(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint128__to_t_bool_t_uint128__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function negate_t_int24(value) -> ret {\n        value := cleanup_t_int24(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function checked_add_t_uint128(x, y) -> sum {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint128_t_uint256_t_uint256__to_t_address_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function negate_t_int256(value) -> ret {\n        value := cleanup_t_int256(value)\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_int256_t_int256_t_bytes_calldata_ptr__to_t_int256_t_int256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_int256_t_int256_t_uint160_t_uint128_t_int24__to_t_int256_t_int256_t_uint160_t_uint128_t_int24__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint160_to_t_uint160_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_int24_to_t_int24_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_int24(x, y) -> r {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        if iszero(y) { panic_error_0x12() }\n        r := smod(x, y)\n    }\n\n    function checked_div_t_int24(x, y) -> r {\n        x := cleanup_t_int24(x)\n        y := cleanup_t_int24(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function shift_left_232(value) -> newValue {\n        newValue :=\n\n        shl(232, value)\n\n    }\n\n    function leftAlign_t_int24(value) -> aligned {\n        aligned := shift_left_232(value)\n    }\n\n    function abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_int24(cleanup_t_int24(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_int24_t_int24__to_t_address_t_int24_t_int24__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 3)\n\n        abi_encode_t_int24_to_t_int24_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 3)\n\n        end := pos\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"47": [
									{
										"length": 32,
										"start": 515
									},
									{
										"length": 32,
										"start": 1889
									},
									{
										"length": 32,
										"start": 3053
									}
								],
								"49": [
									{
										"length": 32,
										"start": 1672
									},
									{
										"length": 32,
										"start": 3211
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610091575f3560e01c8063514ea4bf11610064578063514ea4bf146101215780635339c29614610151578063d21220a714610181578063e35473351461019f578063f30dba93146101d057610091565b80630dfe1681146100955780631a686502146100b35780633850c7bd146100d15780633c8a7d8d146100f0575b5f5ffd5b61009d610201565b6040516100aa9190610d86565b60405180910390f35b6100bb610225565b6040516100c89190610dc9565b60405180910390f35b6100d9610246565b6040516100e7929190610e0c565b60405180910390f35b61010a60048036038101906101059190610f1a565b610281565b604051610118929190610fc8565b60405180910390f35b61013b60048036038101906101369190611022565b61063c565b6040516101489190610dc9565b60405180910390f35b61016b60048036038101906101669190611083565b610671565b60405161017891906110ae565b60405180910390f35b610189610686565b6040516101969190610d86565b60405180910390f35b6101b960048036038101906101b491906110c7565b6106aa565b6040516101c792919061113c565b60405180910390f35b6101ea60048036038101906101e59190611163565b61098e565b6040516101f89291906111a8565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60015f9054906101000a90046fffffffffffffffffffffffffffffffff1681565b5f805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460020b905082565b5f5f8560020b8760020b1215806102bd57507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860020b8760020b125b806102f657507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff276186102ed906111fc565b60020b8660020b135b1561032d576040517f064847d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f856fffffffffffffffffffffffffffffffff1603610378576040517f1007454800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61038f888760026109d59092919063ffffffff16565b90505f6103a8888860026109d59092919063ffffffff16565b905081156103c8576103c78960016003610acc9092919063ffffffff16565b5b80156103e6576103e58860016003610acc9092919063ffffffff16565b5b5f6103ff8b8b8b6004610b35909392919063ffffffff16565b90506104148882610b7a90919063ffffffff16565b670ddd13f10b84ee00945069010f0cf064dd5920000093508760015f8282829054906101000a90046fffffffffffffffffffffffffffffffff166104589190611242565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505f5f5f8711156104a3576104a0610bea565b91505b5f8611156104b6576104b3610c88565b90505b3373ffffffffffffffffffffffffffffffffffffffff1663d348799788888c8c6040518563ffffffff1660e01b81526004016104f594939291906112df565b5f604051808303815f87803b15801561050c575f5ffd5b505af115801561051e573d5f5f3e3d5ffd5b505050505f871180156105425750610534610bea565b8783610540919061131d565b115b15610579576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f86118015610599575061058b610c88565b8682610597919061131d565b115b156105d0576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8a60020b8c60020b8e73ffffffffffffffffffffffffffffffffffffffff167f7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde338e8c8c6040516106249493929190611350565b60405180910390a45050505050965096945050505050565b6004602052805f5260405f205f91509050805f015f9054906101000a90046fffffffffffffffffffffffffffffffff16905081565b6003602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f62014cc090505f6c46bd046408013d67ed5d406b2d90507fffffffffffffffffffffffffffffffffffffffffffffffffffe22b3b9e50c0f49350680246ddf97976680000925081815f5f0160145f5f015f8491906101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508391906101000a81548162ffffff021916908360020b62ffffff16021790555050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb88866107a690611393565b6040518363ffffffff1660e01b81526004016107c39291906113d9565b6020604051808303815f875af11580156107df573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610803919061142a565b505f61080d610c88565b90503373ffffffffffffffffffffffffffffffffffffffff1663fa461e3386868a8a6040518563ffffffff1660e01b815260040161084e9493929190611455565b5f604051808303815f87803b158015610865575f5ffd5b505af1158015610877573d5f5f3e3d5ffd5b50505050610883610c88565b848261088f919061131d565b10156108c7576040517f098fb56100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca6787875f5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a90046fffffffffffffffffffffffffffffffff165f5f0160149054906101000a900460020b60405161097b959493929190611493565b60405180910390a3505050935093915050565b6002602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a90046fffffffffffffffffffffffffffffffff16905082565b5f5f845f8560020b60020b81526020019081526020015f2090505f815f0160019054906101000a90046fffffffffffffffffffffffffffffffff1690505f8482610a1f9190611242565b90505f826fffffffffffffffffffffffffffffffff1603610a56576001835f015f6101000a81548160ff0219169083151502179055505b80835f0160016101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505f826fffffffffffffffffffffffffffffffff161415155f826fffffffffffffffffffffffffffffffff16141515141593505050509392505050565b5f8183610ad99190611511565b60020b14610ae5575f5ffd5b5f5f610afb8385610af69190611541565b610d26565b915091505f8160ff166001901b905080865f8560010b60010b81526020019081526020015f205f8282541892505081905550505050505050565b5f845f858585604051602001610b4d93929190611622565b6040516020818303038152906040528051906020012081526020019081526020015f209050949350505050565b5f825f015f9054906101000a90046fffffffffffffffffffffffffffffffff1690505f8282610ba99190611242565b905080845f015f6101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555050505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c449190610d86565b602060405180830381865afa158015610c5f573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c839190611688565b905090565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ce29190610d86565b602060405180830381865afa158015610cfd573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d219190611688565b905090565b5f5f60088360020b901d915061010083610d409190611511565b9050915091565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d7082610d47565b9050919050565b610d8081610d66565b82525050565b5f602082019050610d995f830184610d77565b92915050565b5f6fffffffffffffffffffffffffffffffff82169050919050565b610dc381610d9f565b82525050565b5f602082019050610ddc5f830184610dba565b92915050565b610deb81610d47565b82525050565b5f8160020b9050919050565b610e0681610df1565b82525050565b5f604082019050610e1f5f830185610de2565b610e2c6020830184610dfd565b9392505050565b5f5ffd5b5f5ffd5b610e4481610d66565b8114610e4e575f5ffd5b50565b5f81359050610e5f81610e3b565b92915050565b610e6e81610df1565b8114610e78575f5ffd5b50565b5f81359050610e8981610e65565b92915050565b610e9881610d9f565b8114610ea2575f5ffd5b50565b5f81359050610eb381610e8f565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610eda57610ed9610eb9565b5b8235905067ffffffffffffffff811115610ef757610ef6610ebd565b5b602083019150836001820283011115610f1357610f12610ec1565b5b9250929050565b5f5f5f5f5f5f60a08789031215610f3457610f33610e33565b5b5f610f4189828a01610e51565b9650506020610f5289828a01610e7b565b9550506040610f6389828a01610e7b565b9450506060610f7489828a01610ea5565b935050608087013567ffffffffffffffff811115610f9557610f94610e37565b5b610fa189828a01610ec5565b92509250509295509295509295565b5f819050919050565b610fc281610fb0565b82525050565b5f604082019050610fdb5f830185610fb9565b610fe86020830184610fb9565b9392505050565b5f819050919050565b61100181610fef565b811461100b575f5ffd5b50565b5f8135905061101c81610ff8565b92915050565b5f6020828403121561103757611036610e33565b5b5f6110448482850161100e565b91505092915050565b5f8160010b9050919050565b6110628161104d565b811461106c575f5ffd5b50565b5f8135905061107d81611059565b92915050565b5f6020828403121561109857611097610e33565b5b5f6110a58482850161106f565b91505092915050565b5f6020820190506110c15f830184610fb9565b92915050565b5f5f5f604084860312156110de576110dd610e33565b5b5f6110eb86828701610e51565b935050602084013567ffffffffffffffff81111561110c5761110b610e37565b5b61111886828701610ec5565b92509250509250925092565b5f819050919050565b61113681611124565b82525050565b5f60408201905061114f5f83018561112d565b61115c602083018461112d565b9392505050565b5f6020828403121561117857611177610e33565b5b5f61118584828501610e7b565b91505092915050565b5f8115159050919050565b6111a28161118e565b82525050565b5f6040820190506111bb5f830185611199565b6111c86020830184610dba565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61120682610df1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008203611238576112376111cf565b5b815f039050919050565b5f61124c82610d9f565b915061125783610d9f565b925082820190506fffffffffffffffffffffffffffffffff81111561127f5761127e6111cf565b5b92915050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f6112be8385611285565b93506112cb838584611295565b6112d4836112a3565b840190509392505050565b5f6060820190506112f25f830187610fb9565b6112ff6020830186610fb9565b81810360408301526113128184866112b3565b905095945050505050565b5f61132782610fb0565b915061133283610fb0565b925082820190508082111561134a576113496111cf565b5b92915050565b5f6080820190506113635f830187610d77565b6113706020830186610dba565b61137d6040830185610fb9565b61138a6060830184610fb9565b95945050505050565b5f61139d82611124565b91507f800000000000000000000000000000000000000000000000000000000000000082036113cf576113ce6111cf565b5b815f039050919050565b5f6040820190506113ec5f830185610d77565b6113f96020830184610fb9565b9392505050565b6114098161118e565b8114611413575f5ffd5b50565b5f8151905061142481611400565b92915050565b5f6020828403121561143f5761143e610e33565b5b5f61144c84828501611416565b91505092915050565b5f6060820190506114685f83018761112d565b611475602083018661112d565b81810360408301526114888184866112b3565b905095945050505050565b5f60a0820190506114a65f83018861112d565b6114b3602083018761112d565b6114c06040830186610de2565b6114cd6060830185610dba565b6114da6080830184610dfd565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61151b82610df1565b915061152683610df1565b925082611536576115356114e4565b5b828207905092915050565b5f61154b82610df1565b915061155683610df1565b925082611566576115656114e4565b5b60015f0383147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000008314161561159e5761159d6111cf565b5b828205905092915050565b5f8160601b9050919050565b5f6115bf826115a9565b9050919050565b5f6115d0826115b5565b9050919050565b6115e86115e382610d66565b6115c6565b82525050565b5f8160e81b9050919050565b5f611604826115ee565b9050919050565b61161c61161782610df1565b6115fa565b82525050565b5f61162d82866115d7565b60148201915061163d828561160b565b60038201915061164d828461160b565b600382019150819050949350505050565b61166781610fb0565b8114611671575f5ffd5b50565b5f815190506116828161165e565b92915050565b5f6020828403121561169d5761169c610e33565b5b5f6116aa84828501611674565b9150509291505056fea2646970667358221220548f10117ac320c92447cf5b9e5bbf4eebee36430bdf9f9664ba1542d0fa9e9e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x514EA4BF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x514EA4BF EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0x5339C296 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0xE3547335 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF30DBA93 EQ PUSH2 0x1D0 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x3850C7BD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x3C8A7D8D EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x9D PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC8 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP3 SWAP2 SWAP1 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x118 SWAP3 SWAP2 SWAP1 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x136 SWAP2 SWAP1 PUSH2 0x1022 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP3 SWAP2 SWAP1 PUSH2 0x113C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP3 SWAP2 SWAP1 PUSH2 0x11A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT ISZERO DUP1 PUSH2 0x2BD JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x2 SIGNEXTEND DUP8 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST DUP1 PUSH2 0x2F6 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH2 0x2ED SWAP1 PUSH2 0x11FC JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST ISZERO PUSH2 0x32D JUMPI PUSH1 0x40 MLOAD PUSH32 0x64847D000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1007454800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x38F DUP9 DUP8 PUSH1 0x2 PUSH2 0x9D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3A8 DUP9 DUP9 PUSH1 0x2 PUSH2 0x9D5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x3C8 JUMPI PUSH2 0x3C7 DUP10 PUSH1 0x1 PUSH1 0x3 PUSH2 0xACC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E5 DUP9 PUSH1 0x1 PUSH1 0x3 PUSH2 0xACC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3FF DUP12 DUP12 DUP12 PUSH1 0x4 PUSH2 0xB35 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x414 DUP9 DUP3 PUSH2 0xB7A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH8 0xDDD13F10B84EE00 SWAP5 POP PUSH10 0x10F0CF064DD59200000 SWAP4 POP DUP8 PUSH1 0x1 PUSH0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 PUSH0 DUP8 GT ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x4A0 PUSH2 0xBEA JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP7 GT ISZERO PUSH2 0x4B6 JUMPI PUSH2 0x4B3 PUSH2 0xC88 JUMP JUMPDEST SWAP1 POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD3487997 DUP9 DUP9 DUP13 DUP13 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12DF JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x51E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 DUP8 GT DUP1 ISZERO PUSH2 0x542 JUMPI POP PUSH2 0x534 PUSH2 0xBEA JUMP JUMPDEST DUP8 DUP4 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 GT DUP1 ISZERO PUSH2 0x599 JUMPI POP PUSH2 0x58B PUSH2 0xC88 JUMP JUMPDEST DUP7 DUP3 PUSH2 0x597 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP11 PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE CALLER DUP15 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH2 0x624 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP SWAP7 POP SWAP7 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH3 0x14CC0 SWAP1 POP PUSH0 PUSH13 0x46BD046408013D67ED5D406B2D SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE22B3B9E50C0F4 SWAP4 POP PUSH9 0x246DDF97976680000 SWAP3 POP DUP2 DUP2 PUSH0 PUSH0 ADD PUSH1 0x14 PUSH0 PUSH0 ADD PUSH0 DUP5 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP9 DUP7 PUSH2 0x7A6 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C3 SWAP3 SWAP2 SWAP1 PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x803 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST POP PUSH0 PUSH2 0x80D PUSH2 0xC88 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFA461E33 DUP7 DUP7 DUP11 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1455 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x865 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x877 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0x883 PUSH2 0xC88 JUMP JUMPDEST DUP5 DUP3 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST LT ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x98FB56100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67 DUP8 DUP8 PUSH0 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x2 SIGNEXTEND PUSH1 0x40 MLOAD PUSH2 0x97B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 PUSH0 DUP5 PUSH0 DUP6 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP5 DUP3 PUSH2 0xA1F SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA56 JUMPI PUSH1 0x1 DUP4 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 DUP4 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO EQ ISZERO SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND EQ PUSH2 0xAE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH2 0xAFB DUP4 DUP6 PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x1541 JUMP JUMPDEST PUSH2 0xD26 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL SWAP1 POP DUP1 DUP7 PUSH0 DUP6 PUSH1 0x1 SIGNEXTEND PUSH1 0x1 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD XOR SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0xBA9 SWAP2 SWAP1 PUSH2 0x1242 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC44 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC5F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC83 SWAP2 SWAP1 PUSH2 0x1688 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCFD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD21 SWAP2 SWAP1 PUSH2 0x1688 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 DUP4 PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP2 POP PUSH2 0x100 DUP4 PUSH2 0xD40 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD70 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0xD66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD99 PUSH0 DUP4 ADD DUP5 PUSH2 0xD77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC3 DUP2 PUSH2 0xD9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDC PUSH0 DUP4 ADD DUP5 PUSH2 0xDBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDEB DUP2 PUSH2 0xD47 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE06 DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xE1F PUSH0 DUP4 ADD DUP6 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0xE2C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDFD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xD66 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5F DUP2 PUSH2 0xE3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6E DUP2 PUSH2 0xDF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xE78 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE89 DUP2 PUSH2 0xE65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xD9F JUMP JUMPDEST DUP2 EQ PUSH2 0xEA2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB3 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xEDA JUMPI PUSH2 0xED9 PUSH2 0xEB9 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEF7 JUMPI PUSH2 0xEF6 PUSH2 0xEBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF13 JUMPI PUSH2 0xF12 PUSH2 0xEC1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xF34 JUMPI PUSH2 0xF33 PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF41 DUP10 DUP3 DUP11 ADD PUSH2 0xE51 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xF52 DUP10 DUP3 DUP11 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xF63 DUP10 DUP3 DUP11 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xF74 DUP10 DUP3 DUP11 ADD PUSH2 0xEA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF95 JUMPI PUSH2 0xF94 PUSH2 0xE37 JUMP JUMPDEST JUMPDEST PUSH2 0xFA1 DUP10 DUP3 DUP11 ADD PUSH2 0xEC5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC2 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xFDB PUSH0 DUP4 ADD DUP6 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0xFE8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1001 DUP2 PUSH2 0xFEF JUMP JUMPDEST DUP2 EQ PUSH2 0x100B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101C DUP2 PUSH2 0xFF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1037 JUMPI PUSH2 0x1036 PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1044 DUP5 DUP3 DUP6 ADD PUSH2 0x100E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1062 DUP2 PUSH2 0x104D JUMP JUMPDEST DUP2 EQ PUSH2 0x106C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x107D DUP2 PUSH2 0x1059 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1098 JUMPI PUSH2 0x1097 PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10A5 DUP5 DUP3 DUP6 ADD PUSH2 0x106F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10C1 PUSH0 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10DE JUMPI PUSH2 0x10DD PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10EB DUP7 DUP3 DUP8 ADD PUSH2 0xE51 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x110C JUMPI PUSH2 0x110B PUSH2 0xE37 JUMP JUMPDEST JUMPDEST PUSH2 0x1118 DUP7 DUP3 DUP8 ADD PUSH2 0xEC5 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1136 DUP2 PUSH2 0x1124 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x114F PUSH0 DUP4 ADD DUP6 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x115C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x112D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1178 JUMPI PUSH2 0x1177 PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1185 DUP5 DUP3 DUP6 ADD PUSH2 0xE7B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11A2 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11BB PUSH0 DUP4 ADD DUP6 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x11C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1206 DUP3 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP3 SUB PUSH2 0x1238 JUMPI PUSH2 0x1237 PUSH2 0x11CF JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x124C DUP3 PUSH2 0xD9F JUMP JUMPDEST SWAP2 POP PUSH2 0x1257 DUP4 PUSH2 0xD9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127F JUMPI PUSH2 0x127E PUSH2 0x11CF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12BE DUP4 DUP6 PUSH2 0x1285 JUMP JUMPDEST SWAP4 POP PUSH2 0x12CB DUP4 DUP6 DUP5 PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x12D4 DUP4 PUSH2 0x12A3 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12F2 PUSH0 DUP4 ADD DUP8 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x12FF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFB9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1312 DUP2 DUP5 DUP7 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1327 DUP3 PUSH2 0xFB0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1332 DUP4 PUSH2 0xFB0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x134A JUMPI PUSH2 0x1349 PUSH2 0x11CF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1363 PUSH0 DUP4 ADD DUP8 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x1370 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x137D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x138A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x139D DUP3 PUSH2 0x1124 JUMP JUMPDEST SWAP2 POP PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 SUB PUSH2 0x13CF JUMPI PUSH2 0x13CE PUSH2 0x11CF JUMP JUMPDEST JUMPDEST DUP2 PUSH0 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13EC PUSH0 DUP4 ADD DUP6 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x13F9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFB9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP2 EQ PUSH2 0x1413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1424 DUP2 PUSH2 0x1400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x144C DUP5 DUP3 DUP6 ADD PUSH2 0x1416 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1468 PUSH0 DUP4 ADD DUP8 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x1475 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x112D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1488 DUP2 DUP5 DUP7 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x14A6 PUSH0 DUP4 ADD DUP9 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x14B3 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x112D JUMP JUMPDEST PUSH2 0x14C0 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xDE2 JUMP JUMPDEST PUSH2 0x14CD PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x14DA PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xDFD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x151B DUP3 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1526 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1536 JUMPI PUSH2 0x1535 PUSH2 0x14E4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SMOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x154B DUP3 PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1556 DUP4 PUSH2 0xDF1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1566 JUMPI PUSH2 0x1565 PUSH2 0x14E4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH0 SUB DUP4 EQ PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000 DUP4 EQ AND ISZERO PUSH2 0x159E JUMPI PUSH2 0x159D PUSH2 0x11CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15BF DUP3 PUSH2 0x15A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15D0 DUP3 PUSH2 0x15B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E8 PUSH2 0x15E3 DUP3 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x15C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xE8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1604 DUP3 PUSH2 0x15EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C PUSH2 0x1617 DUP3 PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x15FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x162D DUP3 DUP7 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x163D DUP3 DUP6 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP PUSH2 0x164D DUP3 DUP5 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1667 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1671 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1682 DUP2 PUSH2 0x165E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x169D JUMPI PUSH2 0x169C PUSH2 0xE33 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16AA DUP5 DUP3 DUP6 ADD PUSH2 0x1674 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP16 LT GT PUSH27 0xC320C92447CF5B9E5BBF4EEBEE36430BDF9F9664BA1542D0FA9E9E PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "360:4292:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;857:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1159:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1101:18;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1704:1668;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1352:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1281:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;895:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3384:949;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1213:40;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;857:31;;;:::o;1159:24::-;;;;;;;;;;;;;:::o;1101:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1704:1668::-;1889:15;1906;1965:9;1952:22;;:9;:22;;;;:59;;;;658:7;1991:20;;:9;:20;;;1952:59;:96;;;;658:7;707:9;;;:::i;:::-;2028:20;;:9;:20;;;1952:96;1934:151;;;2067:18;;;;;;;;;;;;;;1934:151;2110:1;2100:6;:11;;;2096:39;;2120:15;;;;;;;;;;;;;;2096:39;2148:17;2168:31;2181:9;2192:6;2168:5;:12;;:31;;;;;:::i;:::-;2148:51;;2210:17;2230:31;2243:9;2254:6;2230:5;:12;;:31;;;;;:::i;:::-;2210:51;;2275:12;2272:77;;;2304:33;2324:9;2335:1;2304:10;:19;;:33;;;;;:::i;:::-;2272:77;2362:12;2359:77;;;2391:33;2411:9;2422:1;2391:10;:19;;:33;;;;;:::i;:::-;2359:77;2448:30;2481:92;2509:5;2529:9;2553;2481;:13;;:92;;;;;;:::i;:::-;2448:125;;2584:23;2600:6;2584:8;:15;;:23;;;;:::i;:::-;2630:26;2620:36;;2677:10;2667:20;;2721:6;2700:9;;:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2741:22;2774;2821:1;2811:7;:11;2807:44;;;2841:10;:8;:10::i;:::-;2824:27;;2807:44;2876:1;2866:7;:11;2862:44;;;2896:10;:8;:10::i;:::-;2879:27;;2862:44;2940:10;2917:56;;;2988:7;3010;3032:4;;2917:130;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3072:1;3062:7;:11;:52;;;;;3104:10;:8;:10::i;:::-;3094:7;3077:14;:24;;;;:::i;:::-;:37;3062:52;3058:103;;;3136:25;;;;;;;;;;;;;;3058:103;3186:1;3176:7;:11;:52;;;;;3218:10;:8;:10::i;:::-;3208:7;3191:14;:24;;;;:::i;:::-;:37;3176:52;3172:103;;;3250:25;;;;;;;;;;;;;;3172:103;3328:9;3293:71;;3317:9;3293:71;;3310:5;3293:71;;;3298:10;3339:6;3347:7;3356;3293:71;;;;;;;;;:::i;:::-;;;;;;;;1923:1449;;;;;1704:1668;;;;;;;;;:::o;1352:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1281:43::-;;;;;;;;;;;;;;;;;:::o;895:31::-;;;:::o;3384:949::-;3472:14;3488;3520;3537:5;3520:22;;3553:17;3573:31;3553:51;;3625:27;3615:37;;3673:8;3663:18;;3728:8;3738:9;3693:5;:10;;;3705:5;:18;;;3692:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3776:6;3769:23;;;3793:9;3813:7;3812:8;;;:::i;:::-;3769:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3833:22;3858:10;:8;:10::i;:::-;3833:35;;3902:10;3879:56;;;3950:7;3972;3994:4;;3879:130;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:10;:8;:10::i;:::-;4049:7;4024:14;:33;;;;:::i;:::-;:46;4020:97;;;4092:25;;;;;;;;;;;;;;4020:97;4179:9;4135:190;;4154:10;4135:190;;;4203:7;4225;4247:5;:18;;;;;;;;;;;;4280:9;;;;;;;;;;;4304:5;:10;;;;;;;;;;;;4135:190;;;;;;;;;;:::i;:::-;;;;;;;;3509:824;;;3384:949;;;;;;:::o;1213:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;168:545:7:-;314:12;339:26;368:4;:10;373:4;368:10;;;;;;;;;;;;;;;339:39;;389:23;415:8;:18;;;;;;;;;;;;389:44;;444:22;487:14;469:15;:32;;;;:::i;:::-;444:57;;535:1;516:15;:20;;;512:80;;576:4;553:8;:20;;;:27;;;;;;;;;;;;;;;;;;512:80;623:14;602:8;:18;;;:35;;;;;;;;;;;;;;;;;;703:1;684:15;:20;;;658:47;;677:1;659:14;:19;;;658:47;;;;648:57;;328:385;;;168:545;;;;;:::o;1129:357:8:-;1302:1;1287:11;1280:4;:18;;;;:::i;:::-;:23;;;1272:32;;;;;;1350:13;1365:12;1381:28;1397:11;1390:4;:18;;;;:::i;:::-;1381:8;:28::i;:::-;1349:60;;;;1420:12;1440:6;1435:11;;:1;:11;;1420:26;;1474:4;1457;:13;1462:7;1457:13;;;;;;;;;;;;;;;;:21;;;;;;;;;;;1261:225;;;1129:357;;;:::o;390:315:6:-;557:30;611:4;:86;657:5;664:9;675;640:45;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;630:56;;;;;;611:86;;;;;;;;;;;600:97;;390:315;;;;;;:::o;145:237::-;224:23;250:4;:14;;;;;;;;;;;;224:40;;275:22;318:14;300:15;:32;;;;:::i;:::-;275:57;;360:14;343:4;:14;;;:31;;;;;;;;;;;;;;;;;;213:169;;145:237;;:::o;4362:128:0:-;4405:15;4450:6;4443:24;;;4476:4;4443:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4433:49;;4362:128;:::o;4519:::-;4562:15;4607:6;4600:24;;;4633:4;4600:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4590:49;;4519:128;:::o;694:173:8:-;746:13;761:12;810:1;802:4;:9;;;;786:26;;852:3;845:4;:10;;;;:::i;:::-;823:34;;694:173;;;:::o;7:126:9:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:118::-;630:7;670:34;663:5;659:46;648:57;;593:118;;;:::o;717:::-;804:24;822:5;804:24;:::i;:::-;799:3;792:37;717:118;;:::o;841:222::-;934:4;972:2;961:9;957:18;949:26;;985:71;1053:1;1042:9;1038:17;1029:6;985:71;:::i;:::-;841:222;;;;:::o;1069:118::-;1156:24;1174:5;1156:24;:::i;:::-;1151:3;1144:37;1069:118;;:::o;1193:90::-;1228:7;1271:5;1268:1;1257:20;1246:31;;1193:90;;;:::o;1289:112::-;1372:22;1388:5;1372:22;:::i;:::-;1367:3;1360:35;1289:112;;:::o;1407:324::-;1524:4;1562:2;1551:9;1547:18;1539:26;;1575:71;1643:1;1632:9;1628:17;1619:6;1575:71;:::i;:::-;1656:68;1720:2;1709:9;1705:18;1696:6;1656:68;:::i;:::-;1407:324;;;;;:::o;1818:117::-;1927:1;1924;1917:12;1941:117;2050:1;2047;2040:12;2064:122;2137:24;2155:5;2137:24;:::i;:::-;2130:5;2127:35;2117:63;;2176:1;2173;2166:12;2117:63;2064:122;:::o;2192:139::-;2238:5;2276:6;2263:20;2254:29;;2292:33;2319:5;2292:33;:::i;:::-;2192:139;;;;:::o;2337:118::-;2408:22;2424:5;2408:22;:::i;:::-;2401:5;2398:33;2388:61;;2445:1;2442;2435:12;2388:61;2337:118;:::o;2461:135::-;2505:5;2543:6;2530:20;2521:29;;2559:31;2584:5;2559:31;:::i;:::-;2461:135;;;;:::o;2602:122::-;2675:24;2693:5;2675:24;:::i;:::-;2668:5;2665:35;2655:63;;2714:1;2711;2704:12;2655:63;2602:122;:::o;2730:139::-;2776:5;2814:6;2801:20;2792:29;;2830:33;2857:5;2830:33;:::i;:::-;2730:139;;;;:::o;2875:117::-;2984:1;2981;2974:12;2998:117;3107:1;3104;3097:12;3121:117;3230:1;3227;3220:12;3257:552;3314:8;3324:6;3374:3;3367:4;3359:6;3355:17;3351:27;3341:122;;3382:79;;:::i;:::-;3341:122;3495:6;3482:20;3472:30;;3525:18;3517:6;3514:30;3511:117;;;3547:79;;:::i;:::-;3511:117;3661:4;3653:6;3649:17;3637:29;;3715:3;3707:4;3699:6;3695:17;3685:8;3681:32;3678:41;3675:128;;;3722:79;;:::i;:::-;3675:128;3257:552;;;;;:::o;3815:1101::-;3917:6;3925;3933;3941;3949;3957;4006:3;3994:9;3985:7;3981:23;3977:33;3974:120;;;4013:79;;:::i;:::-;3974:120;4133:1;4158:53;4203:7;4194:6;4183:9;4179:22;4158:53;:::i;:::-;4148:63;;4104:117;4260:2;4286:51;4329:7;4320:6;4309:9;4305:22;4286:51;:::i;:::-;4276:61;;4231:116;4386:2;4412:51;4455:7;4446:6;4435:9;4431:22;4412:51;:::i;:::-;4402:61;;4357:116;4512:2;4538:53;4583:7;4574:6;4563:9;4559:22;4538:53;:::i;:::-;4528:63;;4483:118;4668:3;4657:9;4653:19;4640:33;4700:18;4692:6;4689:30;4686:117;;;4722:79;;:::i;:::-;4686:117;4835:64;4891:7;4882:6;4871:9;4867:22;4835:64;:::i;:::-;4817:82;;;;4611:298;3815:1101;;;;;;;;:::o;4922:77::-;4959:7;4988:5;4977:16;;4922:77;;;:::o;5005:118::-;5092:24;5110:5;5092:24;:::i;:::-;5087:3;5080:37;5005:118;;:::o;5129:332::-;5250:4;5288:2;5277:9;5273:18;5265:26;;5301:71;5369:1;5358:9;5354:17;5345:6;5301:71;:::i;:::-;5382:72;5450:2;5439:9;5435:18;5426:6;5382:72;:::i;:::-;5129:332;;;;;:::o;5467:77::-;5504:7;5533:5;5522:16;;5467:77;;;:::o;5550:122::-;5623:24;5641:5;5623:24;:::i;:::-;5616:5;5613:35;5603:63;;5662:1;5659;5652:12;5603:63;5550:122;:::o;5678:139::-;5724:5;5762:6;5749:20;5740:29;;5778:33;5805:5;5778:33;:::i;:::-;5678:139;;;;:::o;5823:329::-;5882:6;5931:2;5919:9;5910:7;5906:23;5902:32;5899:119;;;5937:79;;:::i;:::-;5899:119;6057:1;6082:53;6127:7;6118:6;6107:9;6103:22;6082:53;:::i;:::-;6072:63;;6028:117;5823:329;;;;:::o;6158:90::-;6193:7;6236:5;6233:1;6222:20;6211:31;;6158:90;;;:::o;6254:118::-;6325:22;6341:5;6325:22;:::i;:::-;6318:5;6315:33;6305:61;;6362:1;6359;6352:12;6305:61;6254:118;:::o;6378:135::-;6422:5;6460:6;6447:20;6438:29;;6476:31;6501:5;6476:31;:::i;:::-;6378:135;;;;:::o;6519:325::-;6576:6;6625:2;6613:9;6604:7;6600:23;6596:32;6593:119;;;6631:79;;:::i;:::-;6593:119;6751:1;6776:51;6819:7;6810:6;6799:9;6795:22;6776:51;:::i;:::-;6766:61;;6722:115;6519:325;;;;:::o;6850:222::-;6943:4;6981:2;6970:9;6966:18;6958:26;;6994:71;7062:1;7051:9;7047:17;7038:6;6994:71;:::i;:::-;6850:222;;;;:::o;7078:672::-;7157:6;7165;7173;7222:2;7210:9;7201:7;7197:23;7193:32;7190:119;;;7228:79;;:::i;:::-;7190:119;7348:1;7373:53;7418:7;7409:6;7398:9;7394:22;7373:53;:::i;:::-;7363:63;;7319:117;7503:2;7492:9;7488:18;7475:32;7534:18;7526:6;7523:30;7520:117;;;7556:79;;:::i;:::-;7520:117;7669:64;7725:7;7716:6;7705:9;7701:22;7669:64;:::i;:::-;7651:82;;;;7446:297;7078:672;;;;;:::o;7756:76::-;7792:7;7821:5;7810:16;;7756:76;;;:::o;7838:115::-;7923:23;7940:5;7923:23;:::i;:::-;7918:3;7911:36;7838:115;;:::o;7959:324::-;8076:4;8114:2;8103:9;8099:18;8091:26;;8127:69;8193:1;8182:9;8178:17;8169:6;8127:69;:::i;:::-;8206:70;8272:2;8261:9;8257:18;8248:6;8206:70;:::i;:::-;7959:324;;;;;:::o;8289:325::-;8346:6;8395:2;8383:9;8374:7;8370:23;8366:32;8363:119;;;8401:79;;:::i;:::-;8363:119;8521:1;8546:51;8589:7;8580:6;8569:9;8565:22;8546:51;:::i;:::-;8536:61;;8492:115;8289:325;;;;:::o;8620:90::-;8654:7;8697:5;8690:13;8683:21;8672:32;;8620:90;;;:::o;8716:109::-;8797:21;8812:5;8797:21;:::i;:::-;8792:3;8785:34;8716:109;;:::o;8831:320::-;8946:4;8984:2;8973:9;8969:18;8961:26;;8997:65;9059:1;9048:9;9044:17;9035:6;8997:65;:::i;:::-;9072:72;9140:2;9129:9;9125:18;9116:6;9072:72;:::i;:::-;8831:320;;;;;:::o;9157:180::-;9205:77;9202:1;9195:88;9302:4;9299:1;9292:15;9326:4;9323:1;9316:15;9343:226;9377:3;9400:22;9416:5;9400:22;:::i;:::-;9391:31;;9444:66;9437:5;9434:77;9431:103;;9514:18;;:::i;:::-;9431:103;9557:5;9554:1;9550:13;9543:20;;9343:226;;;:::o;9575:224::-;9615:3;9634:20;9652:1;9634:20;:::i;:::-;9629:25;;9668:20;9686:1;9668:20;:::i;:::-;9663:25;;9711:1;9708;9704:9;9697:16;;9734:34;9729:3;9726:43;9723:69;;;9772:18;;:::i;:::-;9723:69;9575:224;;;;:::o;9805:168::-;9888:11;9922:6;9917:3;9910:19;9962:4;9957:3;9953:14;9938:29;;9805:168;;;;:::o;9979:148::-;10077:6;10072:3;10067;10054:30;10118:1;10109:6;10104:3;10100:16;10093:27;9979:148;;;:::o;10133:102::-;10174:6;10225:2;10221:7;10216:2;10209:5;10205:14;10201:28;10191:38;;10133:102;;;:::o;10263:314::-;10359:3;10380:70;10443:6;10438:3;10380:70;:::i;:::-;10373:77;;10460:56;10509:6;10504:3;10497:5;10460:56;:::i;:::-;10541:29;10563:6;10541:29;:::i;:::-;10536:3;10532:39;10525:46;;10263:314;;;;;:::o;10583:549::-;10760:4;10798:2;10787:9;10783:18;10775:26;;10811:71;10879:1;10868:9;10864:17;10855:6;10811:71;:::i;:::-;10892:72;10960:2;10949:9;10945:18;10936:6;10892:72;:::i;:::-;11011:9;11005:4;11001:20;10996:2;10985:9;10981:18;10974:48;11039:86;11120:4;11111:6;11103;11039:86;:::i;:::-;11031:94;;10583:549;;;;;;;:::o;11138:191::-;11178:3;11197:20;11215:1;11197:20;:::i;:::-;11192:25;;11231:20;11249:1;11231:20;:::i;:::-;11226:25;;11274:1;11271;11267:9;11260:16;;11295:3;11292:1;11289:10;11286:36;;;11302:18;;:::i;:::-;11286:36;11138:191;;;;:::o;11335:553::-;11512:4;11550:3;11539:9;11535:19;11527:27;;11564:71;11632:1;11621:9;11617:17;11608:6;11564:71;:::i;:::-;11645:72;11713:2;11702:9;11698:18;11689:6;11645:72;:::i;:::-;11727;11795:2;11784:9;11780:18;11771:6;11727:72;:::i;:::-;11809;11877:2;11866:9;11862:18;11853:6;11809:72;:::i;:::-;11335:553;;;;;;;:::o;11894:228::-;11929:3;11952:23;11969:5;11952:23;:::i;:::-;11943:32;;11997:66;11990:5;11987:77;11984:103;;12067:18;;:::i;:::-;11984:103;12110:5;12107:1;12103:13;12096:20;;11894:228;;;:::o;12128:332::-;12249:4;12287:2;12276:9;12272:18;12264:26;;12300:71;12368:1;12357:9;12353:17;12344:6;12300:71;:::i;:::-;12381:72;12449:2;12438:9;12434:18;12425:6;12381:72;:::i;:::-;12128:332;;;;;:::o;12466:116::-;12536:21;12551:5;12536:21;:::i;:::-;12529:5;12526:32;12516:60;;12572:1;12569;12562:12;12516:60;12466:116;:::o;12588:137::-;12642:5;12673:6;12667:13;12658:22;;12689:30;12713:5;12689:30;:::i;:::-;12588:137;;;;:::o;12731:345::-;12798:6;12847:2;12835:9;12826:7;12822:23;12818:32;12815:119;;;12853:79;;:::i;:::-;12815:119;12973:1;12998:61;13051:7;13042:6;13031:9;13027:22;12998:61;:::i;:::-;12988:71;;12944:125;12731:345;;;;:::o;13082:541::-;13255:4;13293:2;13282:9;13278:18;13270:26;;13306:69;13372:1;13361:9;13357:17;13348:6;13306:69;:::i;:::-;13385:70;13451:2;13440:9;13436:18;13427:6;13385:70;:::i;:::-;13502:9;13496:4;13492:20;13487:2;13476:9;13472:18;13465:48;13530:86;13611:4;13602:6;13594;13530:86;:::i;:::-;13522:94;;13082:541;;;;;;;:::o;13629:648::-;13826:4;13864:3;13853:9;13849:19;13841:27;;13878:69;13944:1;13933:9;13929:17;13920:6;13878:69;:::i;:::-;13957:70;14023:2;14012:9;14008:18;13999:6;13957:70;:::i;:::-;14037:72;14105:2;14094:9;14090:18;14081:6;14037:72;:::i;:::-;14119;14187:2;14176:9;14172:18;14163:6;14119:72;:::i;:::-;14201:69;14265:3;14254:9;14250:19;14241:6;14201:69;:::i;:::-;13629:648;;;;;;;;:::o;14283:180::-;14331:77;14328:1;14321:88;14428:4;14425:1;14418:15;14452:4;14449:1;14442:15;14469:171;14499:1;14516:18;14532:1;14516:18;:::i;:::-;14511:23;;14548:18;14564:1;14548:18;:::i;:::-;14543:23;;14585:1;14575:35;;14590:18;;:::i;:::-;14575:35;14632:1;14629;14624:10;14619:15;;14469:171;;;;:::o;14646:382::-;14684:1;14701:18;14717:1;14701:18;:::i;:::-;14696:23;;14733:18;14749:1;14733:18;:::i;:::-;14728:23;;14770:1;14760:35;;14775:18;;:::i;:::-;14760:35;14961:1;14958;14954:9;14951:1;14948:16;14867:66;14864:1;14861:73;14844:130;14841:156;;;14977:18;;:::i;:::-;14841:156;15020:1;15017;15012:10;15007:15;;14646:382;;;;:::o;15034:94::-;15067:8;15115:5;15111:2;15107:14;15086:35;;15034:94;;;:::o;15134:::-;15173:7;15202:20;15216:5;15202:20;:::i;:::-;15191:31;;15134:94;;;:::o;15234:100::-;15273:7;15302:26;15322:5;15302:26;:::i;:::-;15291:37;;15234:100;;;:::o;15340:157::-;15445:45;15465:24;15483:5;15465:24;:::i;:::-;15445:45;:::i;:::-;15440:3;15433:58;15340:157;;:::o;15503:96::-;15537:8;15586:5;15581:3;15577:15;15556:36;;15503:96;;;:::o;15605:93::-;15642:7;15671:21;15686:5;15671:21;:::i;:::-;15660:32;;15605:93;;;:::o;15704:149::-;15805:41;15823:22;15839:5;15823:22;:::i;:::-;15805:41;:::i;:::-;15800:3;15793:54;15704:149;;:::o;15859:520::-;16019:3;16034:75;16105:3;16096:6;16034:75;:::i;:::-;16134:2;16129:3;16125:12;16118:19;;16147:71;16214:3;16205:6;16147:71;:::i;:::-;16243:1;16238:3;16234:11;16227:18;;16255:71;16322:3;16313:6;16255:71;:::i;:::-;16351:1;16346:3;16342:11;16335:18;;16370:3;16363:10;;15859:520;;;;;;:::o;16385:122::-;16458:24;16476:5;16458:24;:::i;:::-;16451:5;16448:35;16438:63;;16497:1;16494;16487:12;16438:63;16385:122;:::o;16513:143::-;16570:5;16601:6;16595:13;16586:22;;16617:33;16644:5;16617:33;:::i;:::-;16513:143;;;;:::o;16662:351::-;16732:6;16781:2;16769:9;16760:7;16756:23;16752:32;16749:119;;;16787:79;;:::i;:::-;16749:119;16907:1;16932:64;16988:7;16979:6;16968:9;16964:22;16932:64;:::i;:::-;16922:74;;16878:128;16662:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1173000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"liquidity()": "2489",
								"mint(address,int24,int24,uint128,bytes)": "infinite",
								"positions(bytes32)": "2808",
								"slot0()": "4829",
								"swap(address,bytes)": "infinite",
								"tickBitmap(int16)": "2784",
								"ticks(int24)": "5206",
								"token0()": "infinite",
								"token1()": "infinite"
							},
							"internal": {
								"balance0()": "infinite",
								"balance1()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1431,
									"end": 1682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1574,
									"end": 1581,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1565,
									"end": 1581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1601,
									"end": 1608,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1592,
									"end": 1608,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1648,
									"end": 1660,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "SIGNEXTEND",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1627,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1624,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFF"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SIGNEXTEND",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFF"
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1674,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1431,
									"end": 1682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 967,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 845,
									"end": 967,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 918,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 936,
									"end": 941,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 918,
									"end": 942,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 918,
									"end": 942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 918,
									"end": 942,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 918,
									"end": 942,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 908,
									"end": 943,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 898,
									"end": 961,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 898,
									"end": 961,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 957,
									"end": 958,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 947,
									"end": 959,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 898,
									"end": 961,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 898,
									"end": 961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 845,
									"end": 967,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 967,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1035,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1067,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1055,
									"end": 1068,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1046,
									"end": 1068,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1046,
									"end": 1068,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 1077,
									"end": 1110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1077,
									"end": 1110,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 973,
									"end": 1116,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 973,
									"end": 1116,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1200,
									"end": 1205,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1197,
									"end": 1198,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1186,
									"end": 1206,
									"name": "SIGNEXTEND",
									"source": 9
								},
								{
									"begin": 1175,
									"end": 1206,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1175,
									"end": 1206,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1212,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1305,
									"end": 1310,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1289,
									"end": 1311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1289,
									"end": 1311,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1282,
									"end": 1287,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1279,
									"end": 1312,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1327,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1324,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1316,
									"end": 1328,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1269,
									"end": 1330,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1218,
									"end": 1336,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1218,
									"end": 1336,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1397,
									"end": 1402,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1434,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1422,
									"end": 1435,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1413,
									"end": 1435,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1469,
									"end": 1474,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1444,
									"end": 1475,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1444,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1481,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1481,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1588,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1590,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1655,
									"end": 1658,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1643,
									"end": 1652,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1634,
									"end": 1641,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1630,
									"end": 1653,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1626,
									"end": 1659,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1662,
									"end": 1741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 1662,
									"end": 1741,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1623,
									"end": 1743,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1782,
									"end": 1783,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1863,
									"end": 1870,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1854,
									"end": 1860,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1843,
									"end": 1852,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1839,
									"end": 1861,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1807,
									"end": 1871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1807,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1797,
									"end": 1871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1753,
									"end": 1881,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1920,
									"end": 1922,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2002,
									"end": 2009,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1993,
									"end": 1999,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1982,
									"end": 1991,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1978,
									"end": 2000,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 1946,
									"end": 2010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1946,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1936,
									"end": 2010,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1891,
									"end": 2020,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2059,
									"end": 2061,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2141,
									"end": 2148,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2121,
									"end": 2130,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2139,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 2085,
									"end": 2149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2085,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2075,
									"end": 2149,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2075,
									"end": 2149,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2030,
									"end": 2159,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2198,
									"end": 2200,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2278,
									"end": 2285,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2258,
									"end": 2267,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2254,
									"end": 2276,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 2224,
									"end": 2286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2224,
									"end": 2286,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2214,
									"end": 2286,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2214,
									"end": 2286,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2169,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1487,
									"end": 2303,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 360,
									"end": 4652,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220548f10117ac320c92447cf5b9e5bbf4eebee36430bdf9f9664ba1542d0fa9e9e64736f6c634300081e0033",
									".code": [
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "514EA4BF"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "514EA4BF"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "5339C296"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "E3547335"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "F30DBA93"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "1A686502"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "3C8A7D8D"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 4652,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 857,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 857,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1159,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1159,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1101,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1101,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1704,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1704,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1704,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1352,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1352,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1281,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1281,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1281,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 895,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3384,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3384,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3384,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1213,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1213,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1213,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 857,
											"end": 888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1965,
											"end": 1974,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1974,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1952,
											"end": 2011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 1991,
											"end": 2011,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1991,
											"end": 2011,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2000,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2011,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1991,
											"end": 2011,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 1991,
											"end": 2011,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2011,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1952,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1952,
											"end": 2048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 658,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 707,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 707,
											"end": 716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 707,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 707,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 716,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 707,
											"end": 716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2048,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2028,
											"end": 2048,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2048,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2028,
											"end": 2048,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 2028,
											"end": 2048,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 2048,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1952,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2085,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1934,
											"end": 2085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "64847D000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 2085,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1934,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2110,
											"end": 2111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2106,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2100,
											"end": 2111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2111,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2096,
											"end": 2135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "PUSH",
											"source": 0,
											"value": "1007454800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2096,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2181,
											"end": 2190,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2168,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2243,
											"end": 2252,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2230,
											"end": 2242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2261,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2261,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2230,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2210,
											"end": 2261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2324,
											"end": 2333,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2304,
											"end": 2314,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2304,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2304,
											"end": 2323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2304,
											"end": 2337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2304,
											"end": 2337,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2304,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2272,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2411,
											"end": 2420,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2391,
											"end": 2401,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2391,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2391,
											"end": 2410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2424,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2391,
											"end": 2424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2424,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2391,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2359,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2529,
											"end": 2538,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2553,
											"end": 2562,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2481,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2481,
											"end": 2494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2481,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2448,
											"end": 2573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2600,
											"end": 2606,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "PUSH",
											"source": 0,
											"value": "DDD13F10B84EE00"
										},
										{
											"begin": 2620,
											"end": 2656,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2620,
											"end": 2656,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2687,
											"name": "PUSH",
											"source": 0,
											"value": "10F0CF064DD59200000"
										},
										{
											"begin": 2667,
											"end": 2687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2667,
											"end": 2687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2700,
											"end": 2728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2818,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2822,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2807,
											"end": 2851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2841,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2841,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2807,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2876,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2873,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2866,
											"end": 2877,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2862,
											"end": 2906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2896,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2896,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2906,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2896,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2862,
											"end": 2906,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2862,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2940,
											"end": 2950,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 2973,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2917,
											"end": 2973,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 2973,
											"name": "PUSH",
											"source": 0,
											"value": "D3487997"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3010,
											"end": 3017,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3036,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3032,
											"end": 3036,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2917,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 3047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3062,
											"end": 3069,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3073,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3104,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3104,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3114,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3104,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3077,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3077,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3114,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3058,
											"end": 3161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3136,
											"end": 3161,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3161,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3058,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3183,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3187,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3176,
											"end": 3228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3218,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3218,
											"end": 3228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3228,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3218,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3208,
											"end": 3215,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3205,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3191,
											"end": 3215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3191,
											"end": 3215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3215,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3191,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3228,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3228,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3176,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3275,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3172,
											"end": 3275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3250,
											"end": 3275,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3172,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3328,
											"end": 3337,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3326,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "7A53080BA414158BE7EC69B987B5FB7D07DEE101FE85488F0853AE16239D0BDE"
										},
										{
											"begin": 3298,
											"end": 3308,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3339,
											"end": 3345,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3356,
											"end": 3363,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3293,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3293,
											"end": 3364,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 3372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1281,
											"end": 1324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 895,
											"end": 926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 895,
											"end": 926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3520,
											"end": 3534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3542,
											"name": "PUSH",
											"source": 0,
											"value": "14CC0"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3604,
											"name": "PUSH",
											"source": 0,
											"value": "46BD046408013D67ED5D406B2D"
										},
										{
											"begin": 3553,
											"end": 3604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3625,
											"end": 3652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE22B3B9E50C0F4"
										},
										{
											"begin": 3615,
											"end": 3652,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3673,
											"end": 3681,
											"name": "PUSH",
											"source": 0,
											"value": "246DDF97976680000"
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3663,
											"end": 3681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3728,
											"end": 3736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 3698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3693,
											"end": 3703,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3692,
											"end": 3748,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3769,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3769,
											"end": 3792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3820,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3812,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3812,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3769,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3769,
											"end": 3822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3858,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3858,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3858,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3833,
											"end": 3868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3902,
											"end": 3912,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3879,
											"end": 3935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3935,
											"name": "PUSH",
											"source": 0,
											"value": "FA461E33"
										},
										{
											"begin": 3950,
											"end": 3957,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3979,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 3998,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 3998,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 3879,
											"end": 4009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4060,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4060,
											"end": 4070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4070,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4060,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4049,
											"end": 4056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4024,
											"end": 4057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4024,
											"end": 4057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4057,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4024,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4070,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4020,
											"end": 4117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "98FB56100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4117,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4020,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4188,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4154,
											"end": 4164,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "PUSH",
											"source": 0,
											"value": "C42079F94A6350D7E6235F29174924F928CC2AC818EB64FED8004E115FBCCA67"
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4232,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4135,
											"end": 4325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4135,
											"end": 4325,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3384,
											"end": 4333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 168,
											"end": 713,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 168,
											"end": 713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 314,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 365,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 372,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 377,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 378,
											"name": "SIGNEXTEND",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 368,
											"end": 378,
											"name": "SIGNEXTEND",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 368,
											"end": 378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 368,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 378,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 339,
											"end": 378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 339,
											"end": 378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 389,
											"end": 412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 415,
											"end": 433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 415,
											"end": 433,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 415,
											"end": 433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 415,
											"end": 433,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 415,
											"end": 433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 415,
											"end": 433,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 415,
											"end": 433,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 415,
											"end": 433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 415,
											"end": 433,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 415,
											"end": 433,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 433,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 501,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 469,
											"end": 484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 469,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 469,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 469,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 469,
											"end": 501,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 469,
											"end": 501,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 444,
											"end": 501,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 444,
											"end": 501,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 516,
											"end": 536,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 516,
											"end": 536,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 516,
											"end": 536,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 512,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 512,
											"end": 592,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 576,
											"end": 580,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 553,
											"end": 561,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 580,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 553,
											"end": 580,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 553,
											"end": 580,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 512,
											"end": 592,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 512,
											"end": 592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 623,
											"end": 637,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 602,
											"end": 620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 620,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 602,
											"end": 637,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 602,
											"end": 637,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 602,
											"end": 637,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 602,
											"end": 637,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 602,
											"end": 637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 703,
											"end": 704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 684,
											"end": 704,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 658,
											"end": 705,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 658,
											"end": 705,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 659,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 659,
											"end": 678,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 659,
											"end": 678,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 658,
											"end": 705,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 658,
											"end": 705,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 658,
											"end": 705,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 658,
											"end": 705,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 648,
											"end": 705,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 648,
											"end": 705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 328,
											"end": 713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 328,
											"end": 713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 328,
											"end": 713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 168,
											"end": 713,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 168,
											"end": 713,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 168,
											"end": 713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 168,
											"end": 713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 168,
											"end": 713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 168,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1129,
											"end": 1486,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 1129,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1302,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1298,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1284,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1280,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1280,
											"end": 1303,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1365,
											"end": 1377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1397,
											"end": 1408,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1394,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 1390,
											"end": 1408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1381,
											"end": 1409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1432,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1446,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 1446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1461,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1469,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1470,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "XOR",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 390,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 390,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 557,
											"end": 587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 615,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 662,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 664,
											"end": 673,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 675,
											"end": 684,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 685,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 640,
											"end": 685,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 640,
											"end": 685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 640,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 640,
											"end": 685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 640,
											"end": 685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 630,
											"end": 686,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 630,
											"end": 686,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 630,
											"end": 686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 630,
											"end": 686,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 630,
											"end": 686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 630,
											"end": 686,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 611,
											"end": 697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 611,
											"end": 697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 697,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 600,
											"end": 697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 600,
											"end": 697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 390,
											"end": 705,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 390,
											"end": 705,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 390,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 390,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 390,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 390,
											"end": 705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 390,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 145,
											"end": 382,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 145,
											"end": 382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 224,
											"end": 247,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 250,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 250,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 264,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 250,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 250,
											"end": 264,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 250,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 250,
											"end": 264,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 250,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 250,
											"end": 264,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 224,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 224,
											"end": 264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 275,
											"end": 297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 318,
											"end": 332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 300,
											"end": 315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 300,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 300,
											"end": 332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 300,
											"end": 332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 300,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 300,
											"end": 332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 300,
											"end": 332,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 300,
											"end": 332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 275,
											"end": 332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 275,
											"end": 332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 360,
											"end": 374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 347,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 343,
											"end": 357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 343,
											"end": 357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 374,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 343,
											"end": 374,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 374,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 343,
											"end": 374,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 343,
											"end": 374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 213,
											"end": 382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 213,
											"end": 382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 145,
											"end": 382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 145,
											"end": 382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 145,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4490,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4362,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4405,
											"end": 4420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4443,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4443,
											"end": 4467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4467,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4476,
											"end": 4480,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4443,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4443,
											"end": 4482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4443,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4362,
											"end": 4490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4519,
											"end": 4647,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4519,
											"end": 4647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4562,
											"end": 4577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4613,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4633,
											"end": 4637,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4600,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4600,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4600,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4590,
											"end": 4639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4519,
											"end": 4647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4519,
											"end": 4647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 694,
											"end": 867,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 694,
											"end": 867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 746,
											"end": 759,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 802,
											"end": 806,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 802,
											"end": 811,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 802,
											"end": 811,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 802,
											"end": 811,
											"name": "SAR",
											"source": 8
										},
										{
											"begin": 786,
											"end": 812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 786,
											"end": 812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 852,
											"end": 855,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 845,
											"end": 849,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 845,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 845,
											"end": 855,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 845,
											"end": 855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 845,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 845,
											"end": 855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 855,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 845,
											"end": 855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 823,
											"end": 857,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 823,
											"end": 857,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 694,
											"end": 867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 694,
											"end": 867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 694,
											"end": 867,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 694,
											"end": 867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 593,
											"end": 711,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 593,
											"end": 711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 668,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 659,
											"end": 705,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 648,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 648,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 593,
											"end": 711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 593,
											"end": 711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 593,
											"end": 711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 593,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 717,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 717,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 804,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 804,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 804,
											"end": 828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 804,
											"end": 828,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 804,
											"end": 828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 799,
											"end": 802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 792,
											"end": 829,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 717,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 717,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 717,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 934,
											"end": 938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 957,
											"end": 975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 949,
											"end": 975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 949,
											"end": 975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 1053,
											"end": 1054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1051,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1038,
											"end": 1055,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1029,
											"end": 1035,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 985,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 985,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 1063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1174,
											"end": 1179,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 1156,
											"end": 1180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1156,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1154,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1181,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1187,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1277,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1277,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1246,
											"end": 1277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1372,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 1372,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1370,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1360,
											"end": 1395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1524,
											"end": 1528,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1564,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1551,
											"end": 1560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1565,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1539,
											"end": 1565,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1643,
											"end": 1644,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1645,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1625,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1575,
											"end": 1646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1575,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1709,
											"end": 1718,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1656,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1656,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1818,
											"end": 1935,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1818,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1927,
											"end": 1928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1929,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1941,
											"end": 2058,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1941,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2052,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2137,
											"end": 2161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2137,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2127,
											"end": 2162,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2177,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2178,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 2117,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2283,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2254,
											"end": 2283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2292,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2292,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2331,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2192,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2424,
											"end": 2429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 2408,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2408,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2406,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2431,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2445,
											"end": 2446,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2388,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2505,
											"end": 2510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2550,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2559,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2559,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2461,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2675,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2675,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2665,
											"end": 2700,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2714,
											"end": 2715,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2716,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2655,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2724,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2821,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2830,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 2830,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2869,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2730,
											"end": 2869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2992,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2875,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2984,
											"end": 2985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 2982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2986,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3115,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2998,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3105,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3109,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3238,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3121,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3377,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3359,
											"end": 3365,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3378,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3382,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3382,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3341,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3482,
											"end": 3502,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3502,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3472,
											"end": 3502,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3525,
											"end": 3543,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3517,
											"end": 3523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3544,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3547,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3547,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3511,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3666,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3637,
											"end": 3666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3707,
											"end": 3711,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3699,
											"end": 3705,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3695,
											"end": 3712,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3693,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3681,
											"end": 3713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3719,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3722,
											"end": 3801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3722,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3675,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3257,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4009,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3994,
											"end": 4003,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3985,
											"end": 3992,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 4004,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 4010,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4013,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4013,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3974,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 4203,
											"end": 4210,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4183,
											"end": 4192,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4179,
											"end": 4201,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4158,
											"end": 4211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 4158,
											"end": 4211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4211,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4104,
											"end": 4221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4262,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4329,
											"end": 4336,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4318,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4327,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 4286,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4286,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4337,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4276,
											"end": 4337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4231,
											"end": 4347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4388,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4455,
											"end": 4462,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 4412,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4412,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4463,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4463,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4357,
											"end": 4473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4512,
											"end": 4514,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4583,
											"end": 4590,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4572,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 4538,
											"end": 4591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 4538,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4528,
											"end": 4591,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4668,
											"end": 4671,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4653,
											"end": 4672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4640,
											"end": 4673,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4700,
											"end": 4718,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4689,
											"end": 4719,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4722,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4722,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 4686,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4891,
											"end": 4898,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 4880,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4835,
											"end": 4899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 4835,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4817,
											"end": 4899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3815,
											"end": 4916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4959,
											"end": 4966,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4977,
											"end": 4993,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4977,
											"end": 4993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4922,
											"end": 4999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5110,
											"end": 5115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5092,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5092,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5087,
											"end": 5090,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5080,
											"end": 5117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5250,
											"end": 5254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5290,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5273,
											"end": 5291,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5265,
											"end": 5291,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 5369,
											"end": 5370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5367,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5354,
											"end": 5371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5345,
											"end": 5351,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5301,
											"end": 5372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 5301,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5432,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5382,
											"end": 5454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 5382,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5504,
											"end": 5511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 5538,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5538,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5538,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5544,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 5623,
											"end": 5647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5623,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5616,
											"end": 5621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5613,
											"end": 5648,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5663,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5659,
											"end": 5660,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5664,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 5603,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5550,
											"end": 5672,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5550,
											"end": 5672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5724,
											"end": 5729,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5769,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5769,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5805,
											"end": 5810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 5778,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 5778,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5817,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5910,
											"end": 5917,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5929,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5902,
											"end": 5934,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5937,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5937,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 5899,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 6127,
											"end": 6134,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6118,
											"end": 6124,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6107,
											"end": 6116,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6103,
											"end": 6125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6082,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 6082,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6135,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6072,
											"end": 6135,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6028,
											"end": 6145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 6152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6200,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6236,
											"end": 6241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6222,
											"end": 6242,
											"name": "SIGNEXTEND",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6211,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6158,
											"end": 6248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6341,
											"end": 6346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 6325,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 6325,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6318,
											"end": 6323,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6315,
											"end": 6348,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6363,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6360,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6364,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 6305,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6254,
											"end": 6372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6254,
											"end": 6372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6460,
											"end": 6466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6447,
											"end": 6467,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6438,
											"end": 6467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 6501,
											"end": 6506,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 6476,
											"end": 6507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 6476,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6513,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6378,
											"end": 6513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6604,
											"end": 6611,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6623,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6596,
											"end": 6628,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 6631,
											"end": 6710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6631,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 6593,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 6752,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6819,
											"end": 6826,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6795,
											"end": 6817,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 6776,
											"end": 6827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6776,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6722,
											"end": 6837,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6519,
											"end": 6844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6519,
											"end": 6844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6943,
											"end": 6947,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6984,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6958,
											"end": 6984,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7051,
											"end": 7060,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7044,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 6994,
											"end": 7065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6994,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 7072,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6850,
											"end": 7072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7157,
											"end": 7163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7224,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7201,
											"end": 7208,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7197,
											"end": 7220,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7193,
											"end": 7225,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7228,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 7228,
											"end": 7307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7228,
											"end": 7307,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 7228,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 7190,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7373,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7418,
											"end": 7425,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7409,
											"end": 7415,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7407,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7394,
											"end": 7416,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7373,
											"end": 7426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7373,
											"end": 7426,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7373,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7363,
											"end": 7426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7319,
											"end": 7436,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7503,
											"end": 7505,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7492,
											"end": 7501,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7488,
											"end": 7506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7507,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7526,
											"end": 7532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7523,
											"end": 7553,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7556,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7556,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 7556,
											"end": 7635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7556,
											"end": 7635,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7556,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7520,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7725,
											"end": 7732,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7716,
											"end": 7722,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7705,
											"end": 7714,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 7669,
											"end": 7733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 7669,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7651,
											"end": 7733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7446,
											"end": 7743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7750,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7792,
											"end": 7799,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 7826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7832,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 7832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7953,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7838,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7940,
											"end": 7945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 7923,
											"end": 7946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 7946,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 7923,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7918,
											"end": 7921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7911,
											"end": 7947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7838,
											"end": 7953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8076,
											"end": 8080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8103,
											"end": 8112,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8091,
											"end": 8117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8178,
											"end": 8195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8127,
											"end": 8196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8196,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 8127,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 8272,
											"end": 8274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8261,
											"end": 8270,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8257,
											"end": 8275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8248,
											"end": 8254,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8206,
											"end": 8276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8276,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 8206,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8283,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7959,
											"end": 8283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8346,
											"end": 8352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8397,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8383,
											"end": 8392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8374,
											"end": 8381,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8393,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8366,
											"end": 8398,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 8401,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 8401,
											"end": 8480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8480,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 8401,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 8363,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8521,
											"end": 8522,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 8589,
											"end": 8596,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8569,
											"end": 8578,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8587,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 8597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 8546,
											"end": 8597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 8597,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 8546,
											"end": 8597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8536,
											"end": 8597,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8536,
											"end": 8597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8492,
											"end": 8607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8614,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8289,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8654,
											"end": 8661,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8702,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8690,
											"end": 8703,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8704,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8620,
											"end": 8710,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8620,
											"end": 8710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8825,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 8716,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8812,
											"end": 8817,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 8797,
											"end": 8818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8792,
											"end": 8795,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8785,
											"end": 8819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8716,
											"end": 8825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 8986,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8973,
											"end": 8982,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8969,
											"end": 8987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8961,
											"end": 8987,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8961,
											"end": 8987,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 9059,
											"end": 9060,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9057,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9044,
											"end": 9061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9035,
											"end": 9041,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 8997,
											"end": 9062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 9062,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 8997,
											"end": 9062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9072,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 9140,
											"end": 9142,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9129,
											"end": 9138,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9125,
											"end": 9143,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9116,
											"end": 9122,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9072,
											"end": 9144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 9072,
											"end": 9144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9072,
											"end": 9144,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 9072,
											"end": 9144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9151,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9157,
											"end": 9337,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9157,
											"end": 9337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9282,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9202,
											"end": 9203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9195,
											"end": 9283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9302,
											"end": 9306,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9299,
											"end": 9300,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9292,
											"end": 9307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9330,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9323,
											"end": 9324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9331,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9380,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 9416,
											"end": 9421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 9400,
											"end": 9422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 9400,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9422,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9391,
											"end": 9422,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9444,
											"end": 9510,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 9437,
											"end": 9442,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9511,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 9431,
											"end": 9534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9514,
											"end": 9532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9431,
											"end": 9534,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 9431,
											"end": 9534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9557,
											"end": 9562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9554,
											"end": 9555,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9563,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9543,
											"end": 9563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9543,
											"end": 9563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9569,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9343,
											"end": 9569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9615,
											"end": 9618,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9652,
											"end": 9653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 9634,
											"end": 9654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9634,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9629,
											"end": 9654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9629,
											"end": 9654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9686,
											"end": 9687,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 9668,
											"end": 9688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9668,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9663,
											"end": 9688,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9663,
											"end": 9688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9711,
											"end": 9712,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9708,
											"end": 9709,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9713,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9713,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9697,
											"end": 9713,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9734,
											"end": 9768,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9729,
											"end": 9732,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9726,
											"end": 9769,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 9772,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 9772,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 9723,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9799,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9888,
											"end": 9899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9917,
											"end": 9920,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9910,
											"end": 9929,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9962,
											"end": 9966,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9957,
											"end": 9960,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9953,
											"end": 9967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9938,
											"end": 9967,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9938,
											"end": 9967,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9805,
											"end": 9973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10077,
											"end": 10083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10072,
											"end": 10075,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10067,
											"end": 10070,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10054,
											"end": 10084,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10115,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10104,
											"end": 10107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10100,
											"end": 10116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10093,
											"end": 10120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10127,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9979,
											"end": 10127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10174,
											"end": 10180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10227,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10221,
											"end": 10228,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10216,
											"end": 10218,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10209,
											"end": 10214,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10205,
											"end": 10219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10201,
											"end": 10229,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10133,
											"end": 10235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10359,
											"end": 10362,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10380,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 10443,
											"end": 10449,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10441,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 10380,
											"end": 10450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10380,
											"end": 10450,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 10380,
											"end": 10450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10450,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10373,
											"end": 10450,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 10509,
											"end": 10515,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10504,
											"end": 10507,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10497,
											"end": 10502,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 10460,
											"end": 10516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10460,
											"end": 10516,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 10460,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10541,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 10563,
											"end": 10569,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10541,
											"end": 10570,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 10541,
											"end": 10570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10541,
											"end": 10570,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 10541,
											"end": 10570,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10539,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10532,
											"end": 10571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10525,
											"end": 10571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10577,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10760,
											"end": 10764,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10798,
											"end": 10800,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10787,
											"end": 10796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10783,
											"end": 10801,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10775,
											"end": 10801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10775,
											"end": 10801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10811,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 10879,
											"end": 10880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10877,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10864,
											"end": 10881,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10855,
											"end": 10861,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10811,
											"end": 10882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 10811,
											"end": 10882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10811,
											"end": 10882,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 10811,
											"end": 10882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10892,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 10960,
											"end": 10962,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10949,
											"end": 10958,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 10963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10936,
											"end": 10942,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10892,
											"end": 10964,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 10892,
											"end": 10964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10892,
											"end": 10964,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 10892,
											"end": 10964,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11011,
											"end": 11020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11005,
											"end": 11009,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11001,
											"end": 11021,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10996,
											"end": 10998,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10985,
											"end": 10994,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10981,
											"end": 10999,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10974,
											"end": 11022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11039,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 11120,
											"end": 11124,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11103,
											"end": 11109,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11039,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 11039,
											"end": 11125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11039,
											"end": 11125,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 11039,
											"end": 11125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11031,
											"end": 11125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11031,
											"end": 11125,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10583,
											"end": 11132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11178,
											"end": 11181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 11197,
											"end": 11217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 11197,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11217,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11192,
											"end": 11217,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 11249,
											"end": 11250,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 11231,
											"end": 11251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 11231,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11226,
											"end": 11251,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11226,
											"end": 11251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11274,
											"end": 11275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11271,
											"end": 11272,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11267,
											"end": 11276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11260,
											"end": 11276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11260,
											"end": 11276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11295,
											"end": 11298,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11289,
											"end": 11299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 11302,
											"end": 11320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 11286,
											"end": 11322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11138,
											"end": 11329,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11138,
											"end": 11329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11512,
											"end": 11516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11553,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 11539,
											"end": 11548,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11535,
											"end": 11554,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11527,
											"end": 11554,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11527,
											"end": 11554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 11632,
											"end": 11633,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11621,
											"end": 11630,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11617,
											"end": 11634,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11608,
											"end": 11614,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 11564,
											"end": 11635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 11564,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 11713,
											"end": 11715,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11702,
											"end": 11711,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11698,
											"end": 11716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11689,
											"end": 11695,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 11645,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11717,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 11645,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11727,
											"end": 11799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11795,
											"end": 11797,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11784,
											"end": 11793,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11771,
											"end": 11777,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11727,
											"end": 11799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 11727,
											"end": 11799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11727,
											"end": 11799,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11727,
											"end": 11799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 11877,
											"end": 11879,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11866,
											"end": 11875,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11862,
											"end": 11880,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11853,
											"end": 11859,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 11809,
											"end": 11881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11809,
											"end": 11881,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 11809,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11335,
											"end": 11888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11929,
											"end": 11932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11952,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 11969,
											"end": 11974,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11952,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 11952,
											"end": 11975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11952,
											"end": 11975,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 11952,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11943,
											"end": 11975,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11997,
											"end": 12063,
											"name": "PUSH",
											"source": 9,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11990,
											"end": 11995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11987,
											"end": 12064,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11984,
											"end": 12087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 11984,
											"end": 12087,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 12067,
											"end": 12085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 12067,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11984,
											"end": 12087,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 11984,
											"end": 12087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12110,
											"end": 12115,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12107,
											"end": 12108,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12103,
											"end": 12116,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12096,
											"end": 12116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12096,
											"end": 12116,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11894,
											"end": 12122,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11894,
											"end": 12122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12249,
											"end": 12253,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12287,
											"end": 12289,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12276,
											"end": 12285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12264,
											"end": 12290,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12264,
											"end": 12290,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12353,
											"end": 12370,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12344,
											"end": 12350,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 12300,
											"end": 12371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12300,
											"end": 12371,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 12300,
											"end": 12371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12381,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 12449,
											"end": 12451,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12438,
											"end": 12447,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12434,
											"end": 12452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12425,
											"end": 12431,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12381,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 12381,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12381,
											"end": 12453,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 12381,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12128,
											"end": 12460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12128,
											"end": 12460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12466,
											"end": 12582,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 12466,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12536,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 12551,
											"end": 12556,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12536,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 12536,
											"end": 12557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12536,
											"end": 12557,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 12536,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12529,
											"end": 12534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12526,
											"end": 12558,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 12516,
											"end": 12576,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12572,
											"end": 12573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12569,
											"end": 12570,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12562,
											"end": 12574,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 12516,
											"end": 12576,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 12516,
											"end": 12576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12466,
											"end": 12582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12466,
											"end": 12582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12642,
											"end": 12647,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12673,
											"end": 12679,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12667,
											"end": 12680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12658,
											"end": 12680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12689,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 12713,
											"end": 12718,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12689,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 12689,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12689,
											"end": 12719,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 12689,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12588,
											"end": 12725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12798,
											"end": 12804,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12847,
											"end": 12849,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12835,
											"end": 12844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12826,
											"end": 12833,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12822,
											"end": 12845,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12818,
											"end": 12850,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12853,
											"end": 12932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 12853,
											"end": 12932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 12853,
											"end": 12932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12853,
											"end": 12932,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 12853,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 12815,
											"end": 12934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12973,
											"end": 12974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 13051,
											"end": 13058,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13048,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13031,
											"end": 13040,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13027,
											"end": 13049,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 12998,
											"end": 13059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12998,
											"end": 13059,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 12998,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12988,
											"end": 13059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12988,
											"end": 13059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12944,
											"end": 13069,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 13076,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12731,
											"end": 13076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13255,
											"end": 13259,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13293,
											"end": 13295,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13282,
											"end": 13291,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13278,
											"end": 13296,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13270,
											"end": 13296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13270,
											"end": 13296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13306,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 13372,
											"end": 13373,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13361,
											"end": 13370,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13357,
											"end": 13374,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13348,
											"end": 13354,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13306,
											"end": 13375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 13306,
											"end": 13375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13306,
											"end": 13375,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 13306,
											"end": 13375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13385,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 13451,
											"end": 13453,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13440,
											"end": 13449,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13436,
											"end": 13454,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13427,
											"end": 13433,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13385,
											"end": 13455,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 13385,
											"end": 13455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13385,
											"end": 13455,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 13385,
											"end": 13455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13502,
											"end": 13511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13496,
											"end": 13500,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13492,
											"end": 13512,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13487,
											"end": 13489,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13476,
											"end": 13485,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13472,
											"end": 13490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13465,
											"end": 13513,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 13611,
											"end": 13615,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13602,
											"end": 13608,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13594,
											"end": 13600,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 13530,
											"end": 13616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13530,
											"end": 13616,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 13530,
											"end": 13616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13522,
											"end": 13616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13522,
											"end": 13616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13082,
											"end": 13623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13826,
											"end": 13830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13864,
											"end": 13867,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 13853,
											"end": 13862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13849,
											"end": 13868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13841,
											"end": 13868,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13841,
											"end": 13868,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13878,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 13944,
											"end": 13945,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13942,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13929,
											"end": 13946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13920,
											"end": 13926,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 13878,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 13878,
											"end": 13947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13878,
											"end": 13947,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 13878,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13957,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 14023,
											"end": 14025,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14012,
											"end": 14021,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14008,
											"end": 14026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13999,
											"end": 14005,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 13957,
											"end": 14027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 13957,
											"end": 14027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13957,
											"end": 14027,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 13957,
											"end": 14027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14037,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 14105,
											"end": 14107,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14094,
											"end": 14103,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14090,
											"end": 14108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14081,
											"end": 14087,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 14037,
											"end": 14109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 14037,
											"end": 14109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14037,
											"end": 14109,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 14037,
											"end": 14109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14119,
											"end": 14191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 14187,
											"end": 14189,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14176,
											"end": 14185,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14172,
											"end": 14190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14163,
											"end": 14169,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 14119,
											"end": 14191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 14119,
											"end": 14191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14119,
											"end": 14191,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 14119,
											"end": 14191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14201,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 14265,
											"end": 14268,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 14254,
											"end": 14263,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14250,
											"end": 14269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14241,
											"end": 14247,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14201,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 14201,
											"end": 14270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14201,
											"end": 14270,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 14201,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 14277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14283,
											"end": 14463,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 14283,
											"end": 14463,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14331,
											"end": 14408,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14328,
											"end": 14329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14321,
											"end": 14409,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14428,
											"end": 14432,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 14425,
											"end": 14426,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14418,
											"end": 14433,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14452,
											"end": 14456,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14449,
											"end": 14450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14442,
											"end": 14457,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14499,
											"end": 14500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 14532,
											"end": 14533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 14516,
											"end": 14534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 14516,
											"end": 14534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14511,
											"end": 14534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14511,
											"end": 14534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 14564,
											"end": 14565,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 14548,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 14548,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14543,
											"end": 14566,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14543,
											"end": 14566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14585,
											"end": 14586,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14575,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 14575,
											"end": 14610,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 14590,
											"end": 14608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14575,
											"end": 14610,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 14575,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14632,
											"end": 14633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14629,
											"end": 14630,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14624,
											"end": 14634,
											"name": "SMOD",
											"source": 9
										},
										{
											"begin": 14619,
											"end": 14634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14619,
											"end": 14634,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14640,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14684,
											"end": 14685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 14717,
											"end": 14718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 14701,
											"end": 14719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 14701,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14696,
											"end": 14719,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14696,
											"end": 14719,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 14749,
											"end": 14750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 14733,
											"end": 14751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 14733,
											"end": 14751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14728,
											"end": 14751,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14728,
											"end": 14751,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14770,
											"end": 14771,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14760,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 14760,
											"end": 14795,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14775,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 14775,
											"end": 14793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 14775,
											"end": 14793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14775,
											"end": 14793,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 14775,
											"end": 14793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14760,
											"end": 14795,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 14760,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14961,
											"end": 14962,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14958,
											"end": 14959,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14954,
											"end": 14963,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14951,
											"end": 14952,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14948,
											"end": 14964,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14867,
											"end": 14933,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000"
										},
										{
											"begin": 14864,
											"end": 14865,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14861,
											"end": 14934,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14844,
											"end": 14974,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 14977,
											"end": 14995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 14977,
											"end": 14995,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 14841,
											"end": 14997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15020,
											"end": 15021,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15017,
											"end": 15018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15012,
											"end": 15022,
											"name": "SDIV",
											"source": 9
										},
										{
											"begin": 15007,
											"end": 15022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15007,
											"end": 15022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15028,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14646,
											"end": 15028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15067,
											"end": 15075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15111,
											"end": 15113,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 15107,
											"end": 15121,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15086,
											"end": 15121,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15086,
											"end": 15121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15034,
											"end": 15128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15173,
											"end": 15180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15202,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 15216,
											"end": 15221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15202,
											"end": 15222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 15202,
											"end": 15222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15202,
											"end": 15222,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 15202,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15191,
											"end": 15222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15191,
											"end": 15222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15134,
											"end": 15228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15273,
											"end": 15280,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15302,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 15322,
											"end": 15327,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15302,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 15302,
											"end": 15328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15302,
											"end": 15328,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 15302,
											"end": 15328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15291,
											"end": 15328,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15291,
											"end": 15328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15334,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15234,
											"end": 15334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15340,
											"end": 15497,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 15340,
											"end": 15497,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15445,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 15465,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 15483,
											"end": 15488,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15465,
											"end": 15489,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 15465,
											"end": 15489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15465,
											"end": 15489,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 15465,
											"end": 15489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15445,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 15445,
											"end": 15490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15445,
											"end": 15490,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 15445,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15440,
											"end": 15443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15433,
											"end": 15491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15340,
											"end": 15497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15340,
											"end": 15497,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15340,
											"end": 15497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15537,
											"end": 15545,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15586,
											"end": 15591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15581,
											"end": 15584,
											"name": "PUSH",
											"source": 9,
											"value": "E8"
										},
										{
											"begin": 15577,
											"end": 15592,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 15556,
											"end": 15592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15556,
											"end": 15592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15503,
											"end": 15599,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15503,
											"end": 15599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15642,
											"end": 15649,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15671,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 15686,
											"end": 15691,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15671,
											"end": 15692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 15671,
											"end": 15692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15671,
											"end": 15692,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 15671,
											"end": 15692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15660,
											"end": 15692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15660,
											"end": 15692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15605,
											"end": 15698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15605,
											"end": 15698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15704,
											"end": 15853,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 15704,
											"end": 15853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15805,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 15823,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 15839,
											"end": 15844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15823,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 15823,
											"end": 15845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15823,
											"end": 15845,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 15823,
											"end": 15845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15805,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 15805,
											"end": 15846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15805,
											"end": 15846,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 15805,
											"end": 15846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15800,
											"end": 15803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15793,
											"end": 15847,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15704,
											"end": 15853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15704,
											"end": 15853,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15704,
											"end": 15853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16019,
											"end": 16022,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16034,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 16105,
											"end": 16108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16096,
											"end": 16102,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 16034,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 16034,
											"end": 16109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16034,
											"end": 16109,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 16034,
											"end": 16109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16134,
											"end": 16136,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 16129,
											"end": 16132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16125,
											"end": 16137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16118,
											"end": 16137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16118,
											"end": 16137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16147,
											"end": 16218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 16214,
											"end": 16217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16205,
											"end": 16211,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16147,
											"end": 16218,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 16147,
											"end": 16218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16147,
											"end": 16218,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 16147,
											"end": 16218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16243,
											"end": 16244,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 16238,
											"end": 16241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16234,
											"end": 16245,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16227,
											"end": 16245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16255,
											"end": 16326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 16322,
											"end": 16325,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16313,
											"end": 16319,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16255,
											"end": 16326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 16255,
											"end": 16326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16255,
											"end": 16326,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 16255,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16351,
											"end": 16352,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 16346,
											"end": 16349,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16342,
											"end": 16353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16335,
											"end": 16353,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16335,
											"end": 16353,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16370,
											"end": 16373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16363,
											"end": 16373,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16363,
											"end": 16373,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 16379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15859,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16385,
											"end": 16507,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 16385,
											"end": 16507,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 16476,
											"end": 16481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 16458,
											"end": 16482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16458,
											"end": 16482,
											"name": "tag",
											"source": 9,
											"value": "398"
										},
										{
											"begin": 16458,
											"end": 16482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16451,
											"end": 16456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16448,
											"end": 16483,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 16438,
											"end": 16501,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 16438,
											"end": 16501,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16497,
											"end": 16498,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16494,
											"end": 16495,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16487,
											"end": 16499,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 16438,
											"end": 16501,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 16438,
											"end": 16501,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16385,
											"end": 16507,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16385,
											"end": 16507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16656,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 16513,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16570,
											"end": 16575,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16595,
											"end": 16608,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 16608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 16608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16617,
											"end": 16650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 16644,
											"end": 16649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16617,
											"end": 16650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 16617,
											"end": 16650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16617,
											"end": 16650,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 16617,
											"end": 16650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16656,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16656,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16656,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16513,
											"end": 16656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 17013,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 16662,
											"end": 17013,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16732,
											"end": 16738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16781,
											"end": 16783,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16769,
											"end": 16778,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16760,
											"end": 16767,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16756,
											"end": 16779,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16752,
											"end": 16784,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 16749,
											"end": 16868,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 16749,
											"end": 16868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 16749,
											"end": 16868,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 16787,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 16787,
											"end": 16866,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 16787,
											"end": 16866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16787,
											"end": 16866,
											"name": "tag",
											"source": 9,
											"value": "404"
										},
										{
											"begin": 16787,
											"end": 16866,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16749,
											"end": 16868,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 16749,
											"end": 16868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16907,
											"end": 16908,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16932,
											"end": 16996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 16988,
											"end": 16995,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16979,
											"end": 16985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16968,
											"end": 16977,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 16964,
											"end": 16986,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16932,
											"end": 16996,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 16932,
											"end": 16996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16932,
											"end": 16996,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 16932,
											"end": 16996,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16922,
											"end": 16996,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16922,
											"end": 16996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16878,
											"end": 17006,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 17013,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 17013,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 17013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 17013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16662,
											"end": 17013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"liquidity()": "1a686502",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"positions(bytes32)": "514ea4bf",
							"slot0()": "3850c7bd",
							"swap(address,bytes)": "e3547335",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1_\",\"type\":\"address\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientInputAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTickRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroLiquidity\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/UniswapV3Pool.sol\":\"UniswapV3Pool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/UniswapV3Pool.sol\":{\"keccak256\":\"0xc8a1716c374e4ca48d1f76d38c57a7362a2309bb3ca6e62621625f1d79655ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddf0a2618081178158f5da4e20c6aa7f9986f5f4f618dc06c85336d3d43b6b10\",\"dweb:/ipfs/QmRmNsJxpeK7cqFN4rJHSK5KRHTXXNA3nponE5LKDWzDxv\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x8f7e66ebc62dc73aa8871ca29cc1f93d1fffa19a569972bfd58dcbb674329a90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6b8cc533e3d0d71cbe0663f17395713b798dfc419cc543d79bd145c2062ffcab\",\"dweb:/ipfs/QmRHswF3a49hkXrBGssMSu1r2H2gBWBVbHJ3MrF56L5HRW\"]},\"src/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x8dbe3d6c23da7bb08718f050ff8474f94367f833c0587670435eb2d4b4b3ae79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://928a138d8c7953049f7f06dc4b1c9fdc244c129edbecf550b5cc9d079bed3405\",\"dweb:/ipfs/QmZM7eTaxzp9LeQqrrzKuJt15P7BvT6Ba32hazdKrfsJuz\"]},\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x825cf10c30e3c8676fb8a9055948a59841c44387bdc50a2271345282753c38ed\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8379da8abbc993cb98540120ab4a0cdaee66e8a53a1792fb099089f626d946c4\",\"dweb:/ipfs/QmSSb8GPR4S6WCpgrYZwhYiDPMKqkX3Pm3bsMVcPuvrWuj\"]},\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xb8e8f6f7326fc86450a2e8daba3194709c9c92f552fe8aea44cb7c77dbff4ad2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8ef383b9b4142ea5774816a87d48b64a29e922edc83af6fb15b3098cef9819f\",\"dweb:/ipfs/QmdZXMdDWgMEFMS8rQtR5QN5KdLSZUuSmd6dQsjAKN8DFA\"]},\"src/lib/BitMath.sol\":{\"keccak256\":\"0xa7a534c102dd551dafdaaff699edcc72bf0afb84cd809571ccb51fcbd3d3492d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe1c48b78bb6612983e8038b57ea5953e835b1f23439001f292423b257e9760a\",\"dweb:/ipfs/QmSPSFfzEyZLm3bCyiKN9ZQYQZPH7u5gtTFPcbGZwQ3xFW\"]},\"src/lib/Position.sol\":{\"keccak256\":\"0xea50f3e9b175546df60c8fe16fca5b9576fcd4c53d5ae1d2173c01d26285c2b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fe96cedd3f53db248781943b7c37d91aa5ccb31e97d337b33c355f1474144dc\",\"dweb:/ipfs/QmWMiQj3FPhTUDt5HU7e4YMnYnbnheVBQfEpmr6H7YqBPz\"]},\"src/lib/Tick.sol\":{\"keccak256\":\"0xa09b808fdacbbbf05e3ba74eb3ea8b2923e44a4b079d473e4dc2e4ed5520278b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06e44fb015c0913fd35b84cbc465ec7e9f03a26edcbad02656538cce38c34bae\",\"dweb:/ipfs/Qmer6rzh8Hkz7ujnSKPfbgsouA7ddXyd1jPVP45wohepCd\"]},\"src/lib/TickBitmap.sol\":{\"keccak256\":\"0xf63f8d8cb330be487f1b4a660d8111113859a5c9ca824a9be61a29a78bccf817\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7b1c4eb00789e300286caea09f20219755a6c60a316bd3e4d9d2e013e868ef\",\"dweb:/ipfs/QmTUG4kNxVtAbSyv9KyZ4xk3GXARj2ZoW8WuwaSik5nfkt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 57,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "slot0",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Slot0)54_storage"
							},
							{
								"astId": 59,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "liquidity",
								"offset": 0,
								"slot": "1",
								"type": "t_uint128"
							},
							{
								"astId": 64,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "ticks",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_int24,t_struct(Info)980_storage)"
							},
							{
								"astId": 68,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "tickBitmap",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_int16,t_uint256)"
							},
							{
								"astId": 73,
								"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
								"label": "positions",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_bytes32,t_struct(Info)915_storage)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_int16": {
								"encoding": "inplace",
								"label": "int16",
								"numberOfBytes": "2"
							},
							"t_int24": {
								"encoding": "inplace",
								"label": "int24",
								"numberOfBytes": "3"
							},
							"t_mapping(t_bytes32,t_struct(Info)915_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct Position.Info)",
								"numberOfBytes": "32",
								"value": "t_struct(Info)915_storage"
							},
							"t_mapping(t_int16,t_uint256)": {
								"encoding": "mapping",
								"key": "t_int16",
								"label": "mapping(int16 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_int24,t_struct(Info)980_storage)": {
								"encoding": "mapping",
								"key": "t_int24",
								"label": "mapping(int24 => struct Tick.Info)",
								"numberOfBytes": "32",
								"value": "t_struct(Info)980_storage"
							},
							"t_struct(Info)915_storage": {
								"encoding": "inplace",
								"label": "struct Position.Info",
								"members": [
									{
										"astId": 914,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "liquidity",
										"offset": 0,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Info)980_storage": {
								"encoding": "inplace",
								"label": "struct Tick.Info",
								"members": [
									{
										"astId": 977,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "initialized",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 979,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "liquidity",
										"offset": 1,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Slot0)54_storage": {
								"encoding": "inplace",
								"label": "struct UniswapV3Pool.Slot0",
								"members": [
									{
										"astId": 51,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "sqrtPriceX96",
										"offset": 0,
										"slot": "0",
										"type": "t_uint160"
									},
									{
										"astId": 53,
										"contract": "src/UniswapV3Pool.sol:UniswapV3Pool",
										"label": "tick",
										"offset": 20,
										"slot": "0",
										"type": "t_int24"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint160": {
								"encoding": "inplace",
								"label": "uint160",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"params": {
									"owner": "The account that approved spending of its tokens",
									"spender": "The account for which the spending allowance was modified",
									"value": "The new allowance from the owner to the spender"
								}
							},
							"Transfer(address,address,uint256)": {
								"params": {
									"from": "The account from which the tokens were sent, i.e. the balance decreased",
									"to": "The account to which the tokens were sent, i.e. the balance increased",
									"value": "The amount of tokens that were transferred"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"params": {
									"owner": "The account of the token owner",
									"spender": "The account of the token spender"
								},
								"returns": {
									"_0": "The current allowance granted by `owner` to `spender`"
								}
							},
							"approve(address,uint256)": {
								"params": {
									"amount": "The amount of tokens allowed to be used by `spender`",
									"spender": "The account which will be allowed to spend a given amount of the owners tokens"
								},
								"returns": {
									"_0": "Returns true for a successful approval, false for unsuccessful"
								}
							},
							"balanceOf(address)": {
								"params": {
									"account": "The account for which to look up the number of tokens it has, i.e. its balance"
								},
								"returns": {
									"_0": "The number of tokens held by the account"
								}
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "The number of tokens to send from the sender to the recipient",
									"recipient": "The account that will receive the amount transferred"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
								}
							},
							"transferFrom(address,address,uint256)": {
								"params": {
									"amount": "The amount of the transfer",
									"recipient": "The recipient of the transfer",
									"sender": "The account from which the transfer will be initiated"
								},
								"returns": {
									"_0": "Returns true for a successful transfer, false for unsuccessful"
								}
							}
						},
						"title": "Minimal ERC20 interface for Uniswap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"params\":{\"owner\":\"The account that approved spending of its tokens\",\"spender\":\"The account for which the spending allowance was modified\",\"value\":\"The new allowance from the owner to the spender\"}},\"Transfer(address,address,uint256)\":{\"params\":{\"from\":\"The account from which the tokens were sent, i.e. the balance decreased\",\"to\":\"The account to which the tokens were sent, i.e. the balance increased\",\"value\":\"The amount of tokens that were transferred\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"params\":{\"owner\":\"The account of the token owner\",\"spender\":\"The account of the token spender\"},\"returns\":{\"_0\":\"The current allowance granted by `owner` to `spender`\"}},\"approve(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens allowed to be used by `spender`\",\"spender\":\"The account which will be allowed to spend a given amount of the owners tokens\"},\"returns\":{\"_0\":\"Returns true for a successful approval, false for unsuccessful\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"The account for which to look up the number of tokens it has, i.e. its balance\"},\"returns\":{\"_0\":\"The number of tokens held by the account\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to send from the sender to the recipient\",\"recipient\":\"The account that will receive the amount transferred\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for an unsuccessful transfer\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of the transfer\",\"recipient\":\"The recipient of the transfer\",\"sender\":\"The account from which the transfer will be initiated\"},\"returns\":{\"_0\":\"Returns true for a successful transfer, false for unsuccessful\"}}},\"title\":\"Minimal ERC20 interface for Uniswap\",\"version\":1},\"userdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"notice\":\"Event emitted when the approval amount for the spender of a given owner's tokens changes.\"},\"Transfer(address,address,uint256)\":{\"notice\":\"Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\"}},\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the current allowance given to a spender by an owner\"},\"approve(address,uint256)\":{\"notice\":\"Sets the allowance of a spender from the `msg.sender` to the value `amount`\"},\"balanceOf(address)\":{\"notice\":\"Returns the balance of a token\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers the amount of token from the `msg.sender` to the recipient\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\"}},\"notice\":\"Contains a subset of the full ERC20 interface that is used in Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x8f7e66ebc62dc73aa8871ca29cc1f93d1fffa19a569972bfd58dcbb674329a90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6b8cc533e3d0d71cbe0663f17395713b798dfc419cc543d79bd145c2062ffcab\",\"dweb:/ipfs/QmRHswF3a49hkXrBGssMSu1r2H2gBWBVbHJ3MrF56L5HRW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
							},
							"Transfer(address,address,uint256)": {
								"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
							}
						},
						"kind": "user",
						"methods": {
							"allowance(address,address)": {
								"notice": "Returns the current allowance given to a spender by an owner"
							},
							"approve(address,uint256)": {
								"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
							},
							"balanceOf(address)": {
								"notice": "Returns the balance of a token"
							},
							"transfer(address,uint256)": {
								"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
							},
							"transferFrom(address,address,uint256)": {
								"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
							}
						},
						"notice": "Contains a subset of the full ERC20 interface that is used in Uniswap V3",
						"version": 1
					}
				}
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"IUniswapV3MintCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Owed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Owed",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3MintCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.",
								"params": {
									"amount0Owed": "The amount of token0 due to the pool for the minted liquidity",
									"amount1Owed": "The amount of token1 due to the pool for the minted liquidity"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#mint",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": "d3487997"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\"}}},\"title\":\"Callback for IUniswapV3PoolActions#mint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#mint must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/callback/IUniswapV3MintCallback.sol\":\"IUniswapV3MintCallback\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/callback/IUniswapV3MintCallback.sol\":{\"keccak256\":\"0x8dbe3d6c23da7bb08718f050ff8474f94367f833c0587670435eb2d4b4b3ae79\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://928a138d8c7953049f7f06dc4b1c9fdc244c129edbecf550b5cc9d079bed3405\",\"dweb:/ipfs/QmZM7eTaxzp9LeQqrrzKuJt15P7BvT6Ba32hazdKrfsJuz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3MintCallback(uint256,uint256,bytes)": {
								"notice": "Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#mint must implement this interface",
						"version": 1
					}
				}
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool."
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x825cf10c30e3c8676fb8a9055948a59841c44387bdc50a2271345282753c38ed\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8379da8abbc993cb98540120ab4a0cdaee66e8a53a1792fb099089f626d946c4\",\"dweb:/ipfs/QmSSb8GPR4S6WCpgrYZwhYiDPMKqkX3Pm3bsMVcPuvrWuj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0xb8e8f6f7326fc86450a2e8daba3194709c9c92f552fe8aea44cb7c77dbff4ad2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8ef383b9b4142ea5774816a87d48b64a29e922edc83af6fb15b3098cef9819f\",\"dweb:/ipfs/QmdZXMdDWgMEFMS8rQtR5QN5KdLSZUuSmd6dQsjAKN8DFA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"src/lib/BitMath.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/BitMath.sol\":179:2869  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/BitMath.sol\":179:2869  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220567dc9445519b3deac1481fa6859598bd9247be748b16e329b0a3cd228a4ff5164736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220567dc9445519b3deac1481fa6859598bd9247be748b16e329b0a3cd228a4ff5164736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP PUSH30 0xC9445519B3DEAC1481FA6859598BD9247BE748B16E329B0A3CD228A4FF51 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "179:2690:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220567dc9445519b3deac1481fa6859598bd9247be748b16e329b0a3cd228a4ff5164736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP PUSH30 0xC9445519B3DEAC1481FA6859598BD9247BE748B16E329B0A3CD228A4FF51 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "179:2690:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 2869,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220567dc9445519b3deac1481fa6859598bd9247be748b16e329b0a3cd228a4ff5164736f6c634300081e0033",
									".code": [
										{
											"begin": 179,
											"end": 2869,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 2869,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 2869,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 179,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 2869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 179,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 2869,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/BitMath.sol\":\"BitMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/BitMath.sol\":{\"keccak256\":\"0xa7a534c102dd551dafdaaff699edcc72bf0afb84cd809571ccb51fcbd3d3492d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe1c48b78bb6612983e8038b57ea5953e835b1f23439001f292423b257e9760a\",\"dweb:/ipfs/QmSPSFfzEyZLm3bCyiKN9ZQYQZPH7u5gtTFPcbGZwQ3xFW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/Position.sol": {
				"Position": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/Position.sol\":61:710  library Position {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/Position.sol\":61:710  library Position {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205b267e1da2143a74665dc80b645e8bbd1fe57f933c232eea65095f4becc4b7ae64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205b267e1da2143a74665dc80b645e8bbd1fe57f933c232eea65095f4becc4b7ae64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0x26 PUSH31 0x1DA2143A74665DC80B645E8BBD1FE57F933C232EEA65095F4BECC4B7AE6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "61:649:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205b267e1da2143a74665dc80b645e8bbd1fe57f933c232eea65095f4becc4b7ae64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0x26 PUSH31 0x1DA2143A74665DC80B645E8BBD1FE57F933C232EEA65095F4BECC4B7AE6473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "61:649:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"get(mapping(bytes32 => struct Position.Info storage ref),address,int24,int24)": "infinite",
								"update(struct Position.Info storage pointer,uint128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 710,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 61,
									"end": 710,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b267e1da2143a74665dc80b645e8bbd1fe57f933c232eea65095f4becc4b7ae64736f6c634300081e0033",
									".code": [
										{
											"begin": 61,
											"end": 710,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 61,
											"end": 710,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 61,
											"end": 710,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 61,
											"end": 710,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 710,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 61,
											"end": 710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 710,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Position.sol\":\"Position\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/Position.sol\":{\"keccak256\":\"0xea50f3e9b175546df60c8fe16fca5b9576fcd4c53d5ae1d2173c01d26285c2b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fe96cedd3f53db248781943b7c37d91aa5ccb31e97d337b33c355f1474144dc\",\"dweb:/ipfs/QmWMiQj3FPhTUDt5HU7e4YMnYnbnheVBQfEpmr6H7YqBPz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/Tick.sol": {
				"Tick": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/Tick.sol\":61:718  library Tick {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/Tick.sol\":61:718  library Tick {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b0dcd75211ccf5a0b649fd1cb45366942e124d831f621baae4bff6bfc490651764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b0dcd75211ccf5a0b649fd1cb45366942e124d831f621baae4bff6bfc490651764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xDC 0xD7 MSTORE GT 0xCC CREATE2 LOG0 0xB6 BLOBHASH REVERT SHR 0xB4 MSTORE8 PUSH7 0x942E124D831F62 SHL 0xAA RETF 0xBF 0xF6 0xBF 0xC4 SWAP1 PUSH6 0x1764736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "61:657:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b0dcd75211ccf5a0b649fd1cb45366942e124d831f621baae4bff6bfc490651764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xDC 0xD7 MSTORE GT 0xCC CREATE2 LOG0 0xB6 BLOBHASH REVERT SHR 0xB4 MSTORE8 PUSH7 0x942E124D831F62 SHL 0xAA RETF 0xBF 0xF6 0xBF 0xC4 SWAP1 PUSH6 0x1764736F6C63 NUMBER STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "61:657:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"update(mapping(int24 => struct Tick.Info storage ref),int24,uint128)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 61,
									"end": 718,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 61,
									"end": 718,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0dcd75211ccf5a0b649fd1cb45366942e124d831f621baae4bff6bfc490651764736f6c634300081e0033",
									".code": [
										{
											"begin": 61,
											"end": 718,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 61,
											"end": 718,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 61,
											"end": 718,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 61,
											"end": 718,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 61,
											"end": 718,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 61,
											"end": 718,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 61,
											"end": 718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 61,
											"end": 718,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/Tick.sol\":\"Tick\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/Tick.sol\":{\"keccak256\":\"0xa09b808fdacbbbf05e3ba74eb3ea8b2923e44a4b079d473e4dc2e4ed5520278b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06e44fb015c0913fd35b84cbc465ec7e9f03a26edcbad02656538cce38c34bae\",\"dweb:/ipfs/Qmer6rzh8Hkz7ujnSKPfbgsouA7ddXyd1jPVP45wohepCd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/lib/TickBitmap.sol": {
				"TickBitmap": {
					"abi": [],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/lib/TickBitmap.sol\":334:4229  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/lib/TickBitmap.sol\":334:4229  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fa3086e2b1b47455a7c7262ea3fde5cbca1f3e479e281448394465582a23929564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fa3086e2b1b47455a7c7262ea3fde5cbca1f3e479e281448394465582a23929564736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL ADDRESS DUP7 0xE2 0xB1 0xB4 PUSH21 0x55A7C7262EA3FDE5CBCA1F3E479E28144839446558 0x2A 0x23 SWAP3 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "334:3895:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fa3086e2b1b47455a7c7262ea3fde5cbca1f3e479e281448394465582a23929564736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL ADDRESS DUP7 0xE2 0xB1 0xB4 PUSH21 0x55A7C7262EA3FDE5CBCA1F3E479E28144839446558 0x2A 0x23 SWAP3 SWAP6 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "334:3895:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"flipTick(mapping(int16 => uint256),int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256),int24,int24,bool)": "infinite",
								"position(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 4229,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa3086e2b1b47455a7c7262ea3fde5cbca1f3e479e281448394465582a23929564736f6c634300081e0033",
									".code": [
										{
											"begin": 334,
											"end": 4229,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 334,
											"end": 4229,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 334,
											"end": 4229,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 334,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 334,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 4229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 334,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 4229,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"src/UniswapV3Pool.sol",
								"src/interfaces/IERC20.sol",
								"src/interfaces/callback/IUniswapV3MintCallback.sol",
								"src/interfaces/callback/IUniswapV3SwapCallback.sol",
								"src/interfaces/pool/IUniswapV3PoolEvents.sol",
								"src/lib/BitMath.sol",
								"src/lib/Position.sol",
								"src/lib/Tick.sol",
								"src/lib/TickBitmap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TickBitmap.sol\":\"TickBitmap\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/lib/BitMath.sol\":{\"keccak256\":\"0xa7a534c102dd551dafdaaff699edcc72bf0afb84cd809571ccb51fcbd3d3492d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe1c48b78bb6612983e8038b57ea5953e835b1f23439001f292423b257e9760a\",\"dweb:/ipfs/QmSPSFfzEyZLm3bCyiKN9ZQYQZPH7u5gtTFPcbGZwQ3xFW\"]},\"src/lib/TickBitmap.sol\":{\"keccak256\":\"0xf63f8d8cb330be487f1b4a660d8111113859a5c9ca824a9be61a29a78bccf817\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7b1c4eb00789e300286caea09f20219755a6c60a316bd3e4d9d2e013e868ef\",\"dweb:/ipfs/QmTUG4kNxVtAbSyv9KyZ4xk3GXARj2ZoW8WuwaSik5nfkt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"src/UniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "src/UniswapV3Pool.sol",
					"exportedSymbols": {
						"BitMath": [
							910
						],
						"IERC20": [
							484
						],
						"IUniswapV3MintCallback": [
							498
						],
						"IUniswapV3PoolEvents": [
							631
						],
						"IUniswapV3SwapCallback": [
							512
						],
						"Position": [
							973
						],
						"Tick": [
							1045
						],
						"TickBitmap": [
							1318
						],
						"UniswapV3Pool": [
							412
						]
					},
					"id": 413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "src/lib/Tick.sol",
							"file": "./lib/Tick.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 1046,
							"src": "61:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/Position.sol",
							"file": "./lib/Position.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 974,
							"src": "87:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/lib/TickBitmap.sol",
							"file": "./lib/TickBitmap.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 1319,
							"src": "117:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/callback/IUniswapV3MintCallback.sol",
							"file": "./interfaces/callback/IUniswapV3MintCallback.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 499,
							"src": "149:58:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "./interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 513,
							"src": "209:58:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./interfaces/pool/IUniswapV3PoolEvents.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 632,
							"src": "269:52:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 485,
							"src": "323:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"392:20:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "392:20:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "392:20:0"
								}
							],
							"canonicalName": "UniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 412,
							"linearizedBaseContracts": [
								412,
								631
							],
							"name": "UniswapV3Pool",
							"nameLocation": "369:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 16,
									"libraryName": {
										"id": 11,
										"name": "Tick",
										"nameLocations": [
											"427:4:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1045,
										"src": "427:4:0"
									},
									"nodeType": "UsingForDirective",
									"src": "421:43:0",
									"typeName": {
										"id": 15,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "int24",
											"nodeType": "ElementaryTypeName",
											"src": "444:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"nodeType": "Mapping",
										"src": "436:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$",
											"typeString": "mapping(int24 => struct Tick.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 14,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 13,
												"name": "Tick.Info",
												"nameLocations": [
													"453:4:0",
													"458:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 980,
												"src": "453:9:0"
											},
											"referencedDeclaration": 980,
											"src": "453:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$980_storage_ptr",
												"typeString": "struct Tick.Info"
											}
										}
									}
								},
								{
									"global": false,
									"id": 22,
									"libraryName": {
										"id": 17,
										"name": "Position",
										"nameLocations": [
											"476:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 973,
										"src": "476:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "470:53:0",
									"typeName": {
										"id": 21,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 18,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "497:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "489:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$",
											"typeString": "mapping(bytes32 => struct Position.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 20,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 19,
												"name": "Position.Info",
												"nameLocations": [
													"508:8:0",
													"517:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 915,
												"src": "508:13:0"
											},
											"referencedDeclaration": 915,
											"src": "508:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
												"typeString": "struct Position.Info"
											}
										}
									}
								},
								{
									"global": false,
									"id": 26,
									"libraryName": {
										"id": 23,
										"name": "Position",
										"nameLocations": [
											"535:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 973,
										"src": "535:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "529:33:0",
									"typeName": {
										"id": 25,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 24,
											"name": "Position.Info",
											"nameLocations": [
												"548:8:0",
												"557:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 915,
											"src": "548:13:0"
										},
										"referencedDeclaration": 915,
										"src": "548:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
											"typeString": "struct Position.Info"
										}
									}
								},
								{
									"global": false,
									"id": 31,
									"libraryName": {
										"id": 27,
										"name": "TickBitmap",
										"nameLocations": [
											"574:10:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1318,
										"src": "574:10:0"
									},
									"nodeType": "UsingForDirective",
									"src": "568:47:0",
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "int16",
											"nodeType": "ElementaryTypeName",
											"src": "597:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int16",
												"typeString": "int16"
											}
										},
										"nodeType": "Mapping",
										"src": "589:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
											"typeString": "mapping(int16 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "606:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									}
								},
								{
									"constant": true,
									"id": 35,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "647:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "623:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 32,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "623:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "658:7:0",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 33,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "659:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 39,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "696:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "672:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 36,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "672:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 38,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "707:9:0",
										"subExpression": {
											"id": 37,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 35,
											"src": "708:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "064847d0",
									"id": 41,
									"name": "InvalidTickRange",
									"nameLocation": "731:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "747:2:0"
									},
									"src": "725:25:0"
								},
								{
									"errorSelector": "10074548",
									"id": 43,
									"name": "ZeroLiquidity",
									"nameLocation": "762:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:0"
									},
									"src": "756:22:0"
								},
								{
									"errorSelector": "098fb561",
									"id": 45,
									"name": "InsufficientInputAmount",
									"nameLocation": "790:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "813:2:0"
									},
									"src": "784:32:0"
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 47,
									"mutability": "immutable",
									"name": "token0",
									"nameLocation": "882:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "857:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 46,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "857:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 49,
									"mutability": "immutable",
									"name": "token1",
									"nameLocation": "920:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "895:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 48,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "895:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "UniswapV3Pool.Slot0",
									"id": 54,
									"members": [
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "sqrtPriceX96",
											"nameLocation": "1030:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "1022:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 50,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "tick",
											"nameLocation": "1083:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "1077:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 52,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "1077:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Slot0",
									"nameLocation": "978:5:0",
									"nodeType": "StructDefinition",
									"scope": 412,
									"src": "971:124:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3850c7bd",
									"id": 57,
									"mutability": "mutable",
									"name": "slot0",
									"nameLocation": "1114:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "1101:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Slot0_$54_storage",
										"typeString": "struct UniswapV3Pool.Slot0"
									},
									"typeName": {
										"id": 56,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 55,
											"name": "Slot0",
											"nameLocations": [
												"1101:5:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 54,
											"src": "1101:5:0"
										},
										"referencedDeclaration": 54,
										"src": "1101:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Slot0_$54_storage_ptr",
											"typeString": "struct UniswapV3Pool.Slot0"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a686502",
									"id": 59,
									"mutability": "mutable",
									"name": "liquidity",
									"nameLocation": "1174:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "1159:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint128",
										"typeString": "uint128"
									},
									"typeName": {
										"id": 58,
										"name": "uint128",
										"nodeType": "ElementaryTypeName",
										"src": "1159:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint128",
											"typeString": "uint128"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f30dba93",
									"id": 64,
									"mutability": "mutable",
									"name": "ticks",
									"nameLocation": "1248:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "1213:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$",
										"typeString": "mapping(int24 => struct Tick.Info)"
									},
									"typeName": {
										"id": 63,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 60,
											"name": "int24",
											"nodeType": "ElementaryTypeName",
											"src": "1221:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"nodeType": "Mapping",
										"src": "1213:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$",
											"typeString": "mapping(int24 => struct Tick.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 62,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 61,
												"name": "Tick.Info",
												"nameLocations": [
													"1230:4:0",
													"1235:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 980,
												"src": "1230:9:0"
											},
											"referencedDeclaration": 980,
											"src": "1230:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$980_storage_ptr",
												"typeString": "struct Tick.Info"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5339c296",
									"id": 68,
									"mutability": "mutable",
									"name": "tickBitmap",
									"nameLocation": "1314:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "1281:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
										"typeString": "mapping(int16 => uint256)"
									},
									"typeName": {
										"id": 67,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 65,
											"name": "int16",
											"nodeType": "ElementaryTypeName",
											"src": "1289:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int16",
												"typeString": "int16"
											}
										},
										"nodeType": "Mapping",
										"src": "1281:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
											"typeString": "mapping(int16 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 66,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1298:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "514ea4bf",
									"id": 73,
									"mutability": "mutable",
									"name": "positions",
									"nameLocation": "1393:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 412,
									"src": "1352:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$",
										"typeString": "mapping(bytes32 => struct Position.Info)"
									},
									"typeName": {
										"id": 72,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 69,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1360:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1352:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$",
											"typeString": "mapping(bytes32 => struct Position.Info)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 71,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 70,
												"name": "Position.Info",
												"nameLocations": [
													"1371:8:0",
													"1380:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 915,
												"src": "1371:13:0"
											},
											"referencedDeclaration": 915,
											"src": "1371:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
												"typeString": "struct Position.Info"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1554:128:0",
										"statements": [
											{
												"expression": {
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 84,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1565:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 85,
														"name": "token0_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "1574:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1565:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "1565:16:0"
											},
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 88,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1592:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 89,
														"name": "token1_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1592:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1592:16:0"
											},
											{
												"expression": {
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "slot0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1619:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$54_storage",
															"typeString": "struct UniswapV3Pool.Slot0 storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 94,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1648:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 95,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 81,
																"src": "1668:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 93,
															"name": "Slot0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "1627:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Slot0_$54_storage_ptr_$",
																"typeString": "type(struct UniswapV3Pool.Slot0 storage pointer)"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1634:12:0",
															"1662:4:0"
														],
														"names": [
															"sqrtPriceX96",
															"tick"
														],
														"nodeType": "FunctionCall",
														"src": "1627:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Slot0_$54_memory_ptr",
															"typeString": "struct UniswapV3Pool.Slot0 memory"
														}
													},
													"src": "1619:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Slot0_$54_storage",
														"typeString": "struct UniswapV3Pool.Slot0 storage ref"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1619:55:0"
											}
										]
									},
									"id": 100,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "token0_",
												"nameLocation": "1461:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1453:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "token1_",
												"nameLocation": "1487:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1479:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1513:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1505:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 78,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1542:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1536:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 80,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1536:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:111:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1554:0:0"
									},
									"scope": 412,
									"src": "1431:251:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "1923:1449:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "lowerTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1952:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 118,
																"name": "upperTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "1965:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1952:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 120,
																"name": "lowerTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1991:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 121,
																"name": "MIN_TICK",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "2003:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1991:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1952:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 124,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2028:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 125,
															"name": "MAX_TICK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2040:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"src": "2028:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1952:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 131,
												"nodeType": "IfStatement",
												"src": "1934:151:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 128,
															"name": "InvalidTickRange",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2067:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2067:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 130,
													"nodeType": "RevertStatement",
													"src": "2060:25:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 132,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2100:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2110:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2100:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 138,
												"nodeType": "IfStatement",
												"src": "2096:39:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 135,
															"name": "ZeroLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2120:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2120:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 137,
													"nodeType": "RevertStatement",
													"src": "2113:22:0"
												}
											},
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "flippedLower",
														"nameLocation": "2153:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "2148:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 139,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2148:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 146,
												"initialValue": {
													"arguments": [
														{
															"id": 143,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2181:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 144,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 141,
															"name": "ticks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "2168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2174:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "2168:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$_$_t_int24_$_t_uint128_$returns$_t_bool_$attached_to$_t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$_$",
															"typeString": "function (mapping(int24 => struct Tick.Info storage ref),int24,uint128) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:51:0"
											},
											{
												"assignments": [
													148
												],
												"declarations": [
													{
														"constant": false,
														"id": 148,
														"mutability": "mutable",
														"name": "flippedUpper",
														"nameLocation": "2215:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "2210:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 147,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2210:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 154,
												"initialValue": {
													"arguments": [
														{
															"id": 151,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2243:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 152,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 149,
															"name": "ticks",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "2230:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$",
																"typeString": "mapping(int24 => struct Tick.Info storage ref)"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2236:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1044,
														"src": "2230:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$_$_t_int24_$_t_uint128_$returns$_t_bool_$attached_to$_t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$_$",
															"typeString": "function (mapping(int24 => struct Tick.Info storage ref),int24,uint128) returns (bool)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2230:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:51:0"
											},
											{
												"condition": {
													"id": 155,
													"name": "flippedLower",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2275:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "IfStatement",
												"src": "2272:77:0",
												"trueBody": {
													"id": 163,
													"nodeType": "Block",
													"src": "2289:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 159,
																		"name": "lowerTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "2324:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2335:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 156,
																		"name": "tickBitmap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 68,
																		"src": "2304:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2315:8:0",
																	"memberName": "flipTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1124,
																	"src": "2304:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$returns$__$attached_to$_t_mapping$_t_int16_$_t_uint256_$_$",
																		"typeString": "function (mapping(int16 => uint256),int24,int24)"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2304:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 162,
															"nodeType": "ExpressionStatement",
															"src": "2304:33:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 165,
													"name": "flippedUpper",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 148,
													"src": "2362:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 174,
												"nodeType": "IfStatement",
												"src": "2359:77:0",
												"trueBody": {
													"id": 173,
													"nodeType": "Block",
													"src": "2376:60:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 169,
																		"name": "upperTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 106,
																		"src": "2411:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2422:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 166,
																		"name": "tickBitmap",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 68,
																		"src": "2391:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2402:8:0",
																	"memberName": "flipTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1124,
																	"src": "2391:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_int16_$_t_uint256_$_$_t_int24_$_t_int24_$returns$__$attached_to$_t_mapping$_t_int16_$_t_uint256_$_$",
																		"typeString": "function (mapping(int16 => uint256),int24,int24)"
																	}
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2391:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 172,
															"nodeType": "ExpressionStatement",
															"src": "2391:33:0"
														}
													]
												}
											},
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2470:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "2448:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
															"typeString": "struct Position.Info"
														},
														"typeName": {
															"id": 178,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 177,
																"name": "Position.Info",
																"nameLocations": [
																	"2448:8:0",
																	"2457:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 915,
																"src": "2448:13:0"
															},
															"referencedDeclaration": 915,
															"src": "2448:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
																"typeString": "struct Position.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 186,
												"initialValue": {
													"arguments": [
														{
															"id": 182,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "2509:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 183,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2529:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 184,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2553:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 180,
															"name": "positions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "2481:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2491:3:0",
														"memberName": "get",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 972,
														"src": "2481:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$_$_t_address_$_t_int24_$_t_int24_$returns$_t_struct$_Info_$915_storage_ptr_$attached_to$_t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$_$",
															"typeString": "function (mapping(bytes32 => struct Position.Info storage ref),address,int24,int24) view returns (struct Position.Info storage pointer)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2481:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2448:125:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2600:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 187,
															"name": "position",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "2584:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2593:6:0",
														"memberName": "update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "2584:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Info_$915_storage_ptr_$_t_uint128_$returns$__$attached_to$_t_struct$_Info_$915_storage_ptr_$",
															"typeString": "function (struct Position.Info storage pointer,uint128)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2584:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "2584:23:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "302e393938393736363138333437343235323830",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2630:26:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_998976618347425280_by_1",
															"typeString": "int_const 998976618347425280"
														},
														"value": "0.998976618347425280"
													},
													"src": "2620:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2620:36:0"
											},
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2667:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:10:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000000000000000000000_by_1",
															"typeString": "int_const 5000000000000000000000"
														},
														"value": "5000"
													},
													"src": "2667:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2667:20:0"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "2700:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 204,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "2721:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2713:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint128_$",
																"typeString": "type(uint128)"
															},
															"typeName": {
																"id": 202,
																"name": "uint128",
																"nodeType": "ElementaryTypeName",
																"src": "2713:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2713:15:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "2700:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "2700:28:0"
											},
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "balance0Before",
														"nameLocation": "2749:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "2741:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 210,
												"nodeType": "VariableDeclarationStatement",
												"src": "2741:22:0"
											},
											{
												"assignments": [
													212
												],
												"declarations": [
													{
														"constant": false,
														"id": 212,
														"mutability": "mutable",
														"name": "balance1Before",
														"nameLocation": "2782:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 281,
														"src": "2774:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"nodeType": "VariableDeclarationStatement",
												"src": "2774:22:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 214,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2821:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2811:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 222,
												"nodeType": "IfStatement",
												"src": "2807:44:0",
												"trueBody": {
													"expression": {
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 217,
															"name": "balance0Before",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "2824:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 218,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2841:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2841:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2824:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 221,
													"nodeType": "ExpressionStatement",
													"src": "2824:27:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 223,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2876:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2866:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"nodeType": "IfStatement",
												"src": "2862:44:0",
												"trueBody": {
													"expression": {
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 226,
															"name": "balance1Before",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "2879:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 227,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "2896:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2896:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2879:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 230,
													"nodeType": "ExpressionStatement",
													"src": "2879:27:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 238,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 239,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3032:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 233,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2940:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2944:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2940:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 232,
																"name": "IUniswapV3MintCallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "2917:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3MintCallback_$498_$",
																	"typeString": "type(contract IUniswapV3MintCallback)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2917:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3MintCallback_$498",
																"typeString": "contract IUniswapV3MintCallback"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2952:21:0",
														"memberName": "uniswapV3MintCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 497,
														"src": "2917:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,bytes memory) external"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2917:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "2917:130:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 242,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3072:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3062:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 245,
																"name": "balance0Before",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "3077:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 246,
																"name": "amount0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "3094:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3077:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 248,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "3104:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3104:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3077:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3062:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "3058:103:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 252,
															"name": "InsufficientInputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3136:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3136:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 254,
													"nodeType": "RevertStatement",
													"src": "3129:32:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 256,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3176:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3186:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3176:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 259,
																"name": "balance1Before",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "3191:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 260,
																"name": "amount1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "3208:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3191:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "3218:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3218:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3191:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3176:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 269,
												"nodeType": "IfStatement",
												"src": "3172:103:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 266,
															"name": "InsufficientInputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "3250:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3250:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 268,
													"nodeType": "RevertStatement",
													"src": "3243:32:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3298:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3302:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3298:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "3310:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "lowerTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "3317:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 275,
															"name": "upperTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3328:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"id": 276,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3339:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"id": 277,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "3347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 278,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "3356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "3293:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,int24,int24,uint128,uint256,uint256)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3293:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "EmitStatement",
												"src": "3288:76:0"
											}
										]
									},
									"functionSelector": "3c8a7d8d",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1713:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1736:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1728:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "lowerTick",
												"nameLocation": "1758:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 103,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "upperTick",
												"nameLocation": "1784:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 105,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1778:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1812:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1804:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 107,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1844:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1829:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1829:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:153:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1889:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1914:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1906:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1888:34:0"
									},
									"scope": 412,
									"src": "1704:1668:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "3509:824:0",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "nextTick",
														"nameLocation": "3526:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 374,
														"src": "3520:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 293,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "3520:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"hexValue": "3835313834",
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3537:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_85184_by_1",
														"typeString": "int_const 85184"
													},
													"value": "85184"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3520:22:0"
											},
											{
												"assignments": [
													298
												],
												"declarations": [
													{
														"constant": false,
														"id": 298,
														"mutability": "mutable",
														"name": "nextPrice",
														"nameLocation": "3561:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 374,
														"src": "3553:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 297,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 300,
												"initialValue": {
													"hexValue": "35363034343639333530393432333237383839343434373433343431313937",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3573:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_5604469350942327889444743441197_by_1",
														"typeString": "int_const 5604469350942327889444743441197"
													},
													"value": "5604469350942327889444743441197"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:51:0"
											},
											{
												"expression": {
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 301,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "3615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "3625:27:0",
														"subExpression": {
															"hexValue": "302e303038333936373134323432313632343434",
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3626:26:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8396714242162444_by_1",
																"typeString": "int_const 8396714242162444"
															},
															"value": "0.008396714242162444"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_rational_minus_8396714242162444_by_1",
															"typeString": "int_const -8396714242162444"
														}
													},
													"src": "3615:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "3615:37:0"
											},
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3432",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3673:8:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_42000000000000000000_by_1",
															"typeString": "int_const 42000000000000000000"
														},
														"value": "42"
													},
													"src": "3663:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "3663:18:0"
											},
											{
												"expression": {
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"expression": {
																	"id": 310,
																	"name": "slot0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "3693:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Slot0_$54_storage",
																		"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "3699:4:0",
																"memberName": "tick",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 53,
																"src": "3693:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 313,
																	"name": "slot0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "3705:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Slot0_$54_storage",
																		"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "3711:12:0",
																"memberName": "sqrtPriceX96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 51,
																"src": "3705:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"id": 315,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3692:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int24_$_t_uint160_$",
															"typeString": "tuple(int24,uint160)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"id": 316,
																"name": "nextTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "3728:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 317,
																"name": "nextPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "3738:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"id": 318,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3727:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int24_$_t_uint160_$",
															"typeString": "tuple(int24,uint160)"
														}
													},
													"src": "3692:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "3692:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "3793:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "-",
																	"prefix": true,
																	"src": "3812:8:0",
																	"subExpression": {
																		"id": 328,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "3813:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3804:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3804:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3804:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 322,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "3776:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 321,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "3769:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$484_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3769:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$484",
																"typeString": "contract IERC20"
															}
														},
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3784:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 433,
														"src": "3769:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "3769:53:0"
											},
											{
												"assignments": [
													334
												],
												"declarations": [
													{
														"constant": false,
														"id": 334,
														"mutability": "mutable",
														"name": "balance1Before",
														"nameLocation": "3841:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 374,
														"src": "3833:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3833:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 337,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 335,
														"name": "balance1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "3858:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3833:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3950:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 344,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "3972:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 345,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "3994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 339,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3902:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3906:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3902:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 338,
																"name": "IUniswapV3SwapCallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "3879:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3SwapCallback_$512_$",
																	"typeString": "type(contract IUniswapV3SwapCallback)"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3879:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$512",
																"typeString": "contract IUniswapV3SwapCallback"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3914:21:0",
														"memberName": "uniswapV3SwapCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 511,
														"src": "3879:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_int256_$_t_int256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (int256,int256,bytes memory) external"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3879:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "3879:130:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 348,
															"name": "balance1Before",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4024:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [
																{
																	"id": 351,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "4049:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4041:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4041:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4041:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4024:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 354,
															"name": "balance1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4060:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4060:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4024:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "4020:97:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 357,
															"name": "InsufficientInputAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4092:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4092:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 359,
													"nodeType": "RevertStatement",
													"src": "4085:32:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4154:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4158:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4154:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 364,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "4179:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 365,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4203:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 366,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "4225:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"expression": {
																"id": 367,
																"name": "slot0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "4247:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$54_storage",
																	"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4253:12:0",
															"memberName": "sqrtPriceX96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 51,
															"src": "4247:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 369,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "4280:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														{
															"expression": {
																"id": 370,
																"name": "slot0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "4304:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Slot0_$54_storage",
																	"typeString": "struct UniswapV3Pool.Slot0 storage ref"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4310:4:0",
															"memberName": "tick",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 53,
															"src": "4304:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 361,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "4135:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_int256_$_t_int256_$_t_uint160_$_t_uint128_$_t_int24_$returns$__$",
															"typeString": "function (address,address,int256,int256,uint160,uint128,int24)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4135:190:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "4130:195:0"
											}
										]
									},
									"functionSelector": "e3547335",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "3393:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3406:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3398:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3417:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3397:40:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3479:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3472:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 288,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3472:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3495:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 290,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3471:32:0"
									},
									"scope": 412,
									"src": "3384:949:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "4422:68:0",
										"statements": [
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 380,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "4433:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 387,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4476:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$412",
																			"typeString": "contract UniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$412",
																			"typeString": "contract UniswapV3Pool"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4468:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 385,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4468:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4468:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 382,
																		"name": "token0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "4450:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 381,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "4443:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$484_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4443:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$484",
																	"typeString": "contract IERC20"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4458:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 423,
															"src": "4443:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4443:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4433:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "4433:49:0"
											}
										]
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance0",
									"nameLocation": "4371:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:2:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4413:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "4405:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:17:0"
									},
									"scope": 412,
									"src": "4362:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "4579:68:0",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 398,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "4590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 405,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4633:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$412",
																			"typeString": "contract UniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UniswapV3Pool_$412",
																			"typeString": "contract UniswapV3Pool"
																		}
																	],
																	"id": 404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4625:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 403,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4625:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4625:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 400,
																		"name": "token1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 49,
																		"src": "4607:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 484,
																	"src": "4600:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$484_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4600:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$484",
																	"typeString": "contract IERC20"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4615:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 423,
															"src": "4600:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4600:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4590:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "4590:49:0"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance1",
									"nameLocation": "4528:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4536:2:0"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4570:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "4562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:17:0"
									},
									"scope": 412,
									"src": "4519:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 413,
							"src": "360:4292:0",
							"usedErrors": [
								41,
								43,
								45
							],
							"usedEvents": [
								522,
								539,
								554,
								569,
								586,
								601,
								608,
								619,
								630
							]
						}
					],
					"src": "33:4621:0"
				},
				"id": 0
			},
			"src/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							484
						]
					},
					"id": 485,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 414,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 415,
								"nodeType": "StructuredDocumentation",
								"src": "74:134:1",
								"text": "@title Minimal ERC20 interface for Uniswap\n @notice Contains a subset of the full ERC20 interface that is used in Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 484,
							"linearizedBaseContracts": [
								484
							],
							"name": "IERC20",
							"nameLocation": "218:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "232:203:1",
										"text": "@notice Returns the balance of a token\n @param account The account for which to look up the number of tokens it has, i.e. its balance\n @return The number of tokens held by the account"
									},
									"functionSelector": "70a08231",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "450:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "460:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:17:1"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "500:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:9:1"
									},
									"scope": 484,
									"src": "441:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "517:336:1",
										"text": "@notice Transfers the amount of token from the `msg.sender` to the recipient\n @param recipient The account that will receive the amount transferred\n @param amount The number of tokens to send from the sender to the recipient\n @return Returns true for a successful transfer, false for an unsuccessful transfer"
									},
									"functionSelector": "a9059cbb",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "868:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "885:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "877:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "904:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "896:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:35:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "930:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "930:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:6:1"
									},
									"scope": 484,
									"src": "859:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "944:253:1",
										"text": "@notice Returns the current allowance given to a spender by an owner\n @param owner The account of the token owner\n @param spender The account of the token spender\n @return The current allowance granted by `owner` to `spender`"
									},
									"functionSelector": "dd62ed3e",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1212:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1230:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1222:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1245:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1237:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:32:1"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1277:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:9:1"
									},
									"scope": 484,
									"src": "1203:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1294:346:1",
										"text": "@notice Sets the allowance of a spender from the `msg.sender` to the value `amount`\n @param spender The account which will be allowed to spend a given amount of the owners tokens\n @param amount The amount of tokens allowed to be used by `spender`\n @return Returns true for a successful approval, false for unsuccessful"
									},
									"functionSelector": "095ea7b3",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1655:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1671:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1663:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1688:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1680:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:33:1"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "1714:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1713:6:1"
									},
									"scope": 484,
									"src": "1646:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "1728:375:1",
										"text": "@notice Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`\n @param sender The account from which the transfer will be initiated\n @param recipient The recipient of the transfer\n @param amount The amount of the transfer\n @return Returns true for a successful transfer, false for unsuccessful"
									},
									"functionSelector": "23b872dd",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2118:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2149:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2141:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2141:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2174:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2166:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2202:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2194:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:85:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2234:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2234:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2233:6:1"
									},
									"scope": 484,
									"src": "2109:131:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "2248:372:1",
										"text": "@notice Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`.\n @param from The account from which the tokens were sent, i.e. the balance decreased\n @param to The account to which the tokens were sent, i.e. the balance increased\n @param value The amount of tokens that were transferred"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 474,
									"name": "Transfer",
									"nameLocation": "2632:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2657:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2641:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2679:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2663:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:57:1"
									},
									"src": "2626:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "2706:324:1",
										"text": "@notice Event emitted when the approval amount for the spender of a given owner's tokens changes.\n @param owner The account that approved spending of its tokens\n @param spender The account for which the spending allowance was modified\n @param value The new allowance from the owner to the spender"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 483,
									"name": "Approval",
									"nameLocation": "3042:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3067:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3051:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3051:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3090:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3074:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3074:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3107:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "3099:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:63:1"
									},
									"src": "3036:78:1"
								}
							],
							"scope": 485,
							"src": "208:2909:1",
							"usedErrors": [],
							"usedEvents": [
								474,
								483
							]
						}
					],
					"src": "46:3073:1"
				},
				"id": 1
			},
			"src/interfaces/callback/IUniswapV3MintCallback.sol": {
				"ast": {
					"absolutePath": "src/interfaces/callback/IUniswapV3MintCallback.sol",
					"exportedSymbols": {
						"IUniswapV3MintCallback": [
							498
						]
					},
					"id": 499,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 486,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3MintCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 487,
								"nodeType": "StructuredDocumentation",
								"src": "74:146:2",
								"text": "@title Callback for IUniswapV3PoolActions#mint\n @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface"
							},
							"fullyImplemented": false,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "IUniswapV3MintCallback",
							"nameLocation": "230:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "260:491:2",
										"text": "@notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\n @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n @param amount1Owed The amount of token1 due to the pool for the minted liquidity"
									},
									"functionSelector": "d3487997",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3MintCallback",
									"nameLocation": "766:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "amount0Owed",
												"nameLocation": "806:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "798:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "amount1Owed",
												"nameLocation": "836:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "828:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "873:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "858:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "858:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:97:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:2"
									},
									"scope": 498,
									"src": "757:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 499,
							"src": "220:677:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:853:2"
				},
				"id": 2
			},
			"src/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "src/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							512
						]
					},
					"id": 513,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "74:146:3",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 512,
							"linearizedBaseContracts": [
								512
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "230:22:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "260:807:3",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool."
									},
									"functionSelector": "fa461e33",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1082:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1121:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1114:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 503,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1114:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1151:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1144:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 505,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1189:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1174:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1174:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:97:3"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1209:0:3"
									},
									"scope": 512,
									"src": "1073:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 513,
							"src": "220:993:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1169:3"
				},
				"id": 3
			},
			"src/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "src/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							631
						]
					},
					"id": 632,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 514,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 515,
								"nodeType": "StructuredDocumentation",
								"src": "74:90:4",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "174:20:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "202:347:4",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 522,
									"name": "Initialize",
									"nameLocation": "561:10:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "580:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "572:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 517,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "600:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "594:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 519,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "594:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:34:4"
									},
									"src": "555:51:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "614:558:4",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 539,
									"name": "Mint",
									"nameLocation": "1184:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1207:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1199:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1240:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1224:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1270:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1256:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 528,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1256:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1304:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1290:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 530,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1290:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1332:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1324:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 532,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1383:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1375:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:209:4"
									},
									"src": "1178:220:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "1406:499:4",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 554,
									"name": "Collect",
									"nameLocation": "1917:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1951:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1935:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1975:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1967:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2009:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "1995:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 545,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1995:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2043:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2029:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 547,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2029:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2071:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2063:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 549,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2097:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2089:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 551,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:187:4"
									},
									"src": "1911:201:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "2120:530:4",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 569,
									"name": "Burn",
									"nameLocation": "2662:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2693:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2677:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2723:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2709:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 558,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2709:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2757:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2743:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 560,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2785:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2777:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 562,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2777:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2810:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2802:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2836:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2828:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2828:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:184:4"
									},
									"src": "2656:195:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "2859:607:4",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 586,
									"name": "Swap",
									"nameLocation": "3478:4:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3509:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "3493:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3542:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "3526:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3569:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "3562:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 575,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3594:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "3587:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 577,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3587:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3620:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "3612:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 579,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3651:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "3643:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 581,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3677:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "3671:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 583,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3671:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:206:4"
									},
									"src": "3472:217:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "3697:568:4",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 601,
									"name": "Flash",
									"nameLocation": "4277:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4309:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4293:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4293:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4342:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4326:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4370:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4362:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4396:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4388:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4388:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4422:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4414:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4414:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:176:4"
									},
									"src": "4271:188:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4467:455:4",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 608,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4934:34:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4986:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "4979:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 603,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4979:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "5033:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "5026:36:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 605,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5026:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:101:4"
									},
									"src": "4928:142:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "5078:374:4",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 619,
									"name": "SetFeeProtocol",
									"nameLocation": "5464:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5485:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5479:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 610,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5479:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5508:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5502:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 612,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5502:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5531:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5525:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 614,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5525:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5554:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5548:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 616,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5548:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5478:92:4"
									},
									"src": "5458:113:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "5579:388:4",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 630,
									"name": "CollectProtocol",
									"nameLocation": "5979:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6011:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "5995:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5995:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6035:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6019:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6054:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6046:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 625,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6071:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6063:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 627,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5994:85:4"
									},
									"src": "5973:107:4"
								}
							],
							"scope": 632,
							"src": "164:5919:4",
							"usedErrors": [],
							"usedEvents": [
								522,
								539,
								554,
								569,
								586,
								601,
								608,
								619,
								630
							]
						}
					],
					"src": "46:6039:4"
				},
				"id": 4
			},
			"src/lib/BitMath.sol": {
				"ast": {
					"absolutePath": "src/lib/BitMath.sol",
					"exportedSymbols": {
						"BitMath": [
							910
						]
					},
					"id": 911,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BitMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 634,
								"nodeType": "StructuredDocumentation",
								"src": "61:118:5",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 910,
							"linearizedBaseContracts": [
								910
							],
							"name": "BitMath",
							"nameLocation": "187:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 747,
										"nodeType": "Block",
										"src": "741:692:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 643,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "760:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "764:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "760:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "752:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "752:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "752:14:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 648,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "783:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "788:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "783:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 660,
												"nodeType": "IfStatement",
												"src": "779:105:5",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "825:59:5",
													"statements": [
														{
															"expression": {
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 651,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "840:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "846:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "840:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 654,
															"nodeType": "ExpressionStatement",
															"src": "840:9:5"
														},
														{
															"expression": {
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 655,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "864:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "869:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "864:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 658,
															"nodeType": "ExpressionStatement",
															"src": "864:8:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 661,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "898:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "903:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "898:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "894:87:5",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "924:57:5",
													"statements": [
														{
															"expression": {
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 664,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "939:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "945:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "939:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 667,
															"nodeType": "ExpressionStatement",
															"src": "939:8:5"
														},
														{
															"expression": {
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 668,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "962:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "967:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "962:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 671,
															"nodeType": "ExpressionStatement",
															"src": "962:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "995:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1000:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "995:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "991:79:5",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "1013:57:5",
													"statements": [
														{
															"expression": {
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 677,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "1028:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1034:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1028:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 680,
															"nodeType": "ExpressionStatement",
															"src": "1028:8:5"
														},
														{
															"expression": {
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 681,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "1051:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1056:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "1051:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 684,
															"nodeType": "ExpressionStatement",
															"src": "1051:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 687,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "1084:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1089:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "1084:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "IfStatement",
												"src": "1080:75:5",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "1098:57:5",
													"statements": [
														{
															"expression": {
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 690,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "1113:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1119:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1113:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 693,
															"nodeType": "ExpressionStatement",
															"src": "1113:8:5"
														},
														{
															"expression": {
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 694,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "1136:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1141:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "1136:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "1136:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 700,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "1169:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1174:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "1169:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "1165:71:5",
												"trueBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "1181:55:5",
													"statements": [
														{
															"expression": {
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 703,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "1196:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1202:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1196:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 706,
															"nodeType": "ExpressionStatement",
															"src": "1196:7:5"
														},
														{
															"expression": {
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 707,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "1218:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1223:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1218:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 710,
															"nodeType": "ExpressionStatement",
															"src": "1218:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 713,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "1250:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1255:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "1250:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 725,
												"nodeType": "IfStatement",
												"src": "1246:70:5",
												"trueBody": {
													"id": 724,
													"nodeType": "Block",
													"src": "1261:55:5",
													"statements": [
														{
															"expression": {
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 716,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "1276:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1282:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1276:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 719,
															"nodeType": "ExpressionStatement",
															"src": "1276:7:5"
														},
														{
															"expression": {
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 720,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "1298:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1303:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1298:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 723,
															"nodeType": "ExpressionStatement",
															"src": "1298:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 726,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "1330:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1335:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "1330:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "1326:69:5",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "1340:55:5",
													"statements": [
														{
															"expression": {
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 729,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "1355:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1361:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1355:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 732,
															"nodeType": "ExpressionStatement",
															"src": "1355:7:5"
														},
														{
															"expression": {
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 733,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "1377:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1382:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1377:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 736,
															"nodeType": "ExpressionStatement",
															"src": "1377:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "1409:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1414:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "1409:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 746,
												"nodeType": "IfStatement",
												"src": "1405:20:5",
												"trueBody": {
													"expression": {
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 742,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "1419:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1424:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1419:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 745,
													"nodeType": "ExpressionStatement",
													"src": "1419:6:5"
												}
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "202:462:5",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 748,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nameLocation": "679:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "706:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "698:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:11:5"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "738:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "732:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 639,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "732:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "731:9:5"
									},
									"scope": 910,
									"src": "670:763:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "2004:862:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 757,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2027:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2023:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2015:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2015:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "2015:14:5"
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 762,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "2042:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2046:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "2042:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "2042:7:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 766,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2064:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2073:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 768,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "2073:7:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 767,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2068:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2068:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2082:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2068:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "2064:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2088:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2064:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 784,
													"nodeType": "Block",
													"src": "2132:36:5",
													"statements": [
														{
															"expression": {
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 780,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2147:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2153:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2147:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "2147:9:5"
														}
													]
												},
												"id": 785,
												"nodeType": "IfStatement",
												"src": "2060:108:5",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "2091:35:5",
													"statements": [
														{
															"expression": {
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 775,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2106:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2111:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "2106:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "2106:8:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 786,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2182:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2191:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 788,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "2191:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 787,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2186:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2186:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2199:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2186:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "2182:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2205:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2182:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "2248:35:5",
													"statements": [
														{
															"expression": {
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 800,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2263:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2269:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2263:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 803,
															"nodeType": "ExpressionStatement",
															"src": "2263:8:5"
														}
													]
												},
												"id": 805,
												"nodeType": "IfStatement",
												"src": "2178:105:5",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "2208:34:5",
													"statements": [
														{
															"expression": {
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 795,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2223:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2228:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "2223:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 798,
															"nodeType": "ExpressionStatement",
															"src": "2223:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 806,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2297:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2306:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 808,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2306:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 807,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2301:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2301:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2314:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2301:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "2297:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2320:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2297:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 824,
													"nodeType": "Block",
													"src": "2363:35:5",
													"statements": [
														{
															"expression": {
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 820,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2378:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2378:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 823,
															"nodeType": "ExpressionStatement",
															"src": "2378:8:5"
														}
													]
												},
												"id": 825,
												"nodeType": "IfStatement",
												"src": "2293:105:5",
												"trueBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "2323:34:5",
													"statements": [
														{
															"expression": {
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 815,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2338:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2343:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2338:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 818,
															"nodeType": "ExpressionStatement",
															"src": "2338:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 826,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2412:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2421:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 828,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "2421:6:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 827,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2416:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2416:12:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2429:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2416:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "2412:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2435:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2412:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "2478:35:5",
													"statements": [
														{
															"expression": {
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 840,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2493:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2499:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2493:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"nodeType": "ExpressionStatement",
															"src": "2493:8:5"
														}
													]
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "2408:105:5",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "2438:34:5",
													"statements": [
														{
															"expression": {
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 835,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2453:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2458:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "2453:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "2453:7:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 846,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2527:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2536:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 848,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "2536:5:5",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 847,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2531:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2531:11:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2543:3:5",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2531:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2527:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2527:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 864,
													"nodeType": "Block",
													"src": "2591:34:5",
													"statements": [
														{
															"expression": {
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 860,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2606:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2612:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2606:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 863,
															"nodeType": "ExpressionStatement",
															"src": "2606:7:5"
														}
													]
												},
												"id": 865,
												"nodeType": "IfStatement",
												"src": "2523:102:5",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "2552:33:5",
													"statements": [
														{
															"expression": {
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 855,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2567:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2572:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2567:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 858,
															"nodeType": "ExpressionStatement",
															"src": "2567:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 866,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2639:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2643:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2649:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2639:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "2691:34:5",
													"statements": [
														{
															"expression": {
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 876,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2706:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2712:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2706:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "2706:7:5"
														}
													]
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "2635:90:5",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "2652:33:5",
													"statements": [
														{
															"expression": {
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 871,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2667:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2672:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2667:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 874,
															"nodeType": "ExpressionStatement",
															"src": "2667:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 882,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2739:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2743:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "2739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2749:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2739:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "2791:34:5",
													"statements": [
														{
															"expression": {
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 892,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "2806:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2812:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2806:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 895,
															"nodeType": "ExpressionStatement",
															"src": "2806:7:5"
														}
													]
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "2735:90:5",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "2752:33:5",
													"statements": [
														{
															"expression": {
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 887,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "2767:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2772:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2767:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 890,
															"nodeType": "ExpressionStatement",
															"src": "2767:6:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 898,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "2839:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2843:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "2839:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2849:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2839:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"nodeType": "IfStatement",
												"src": "2835:23:5",
												"trueBody": {
													"expression": {
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 903,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "2852:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2857:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2852:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 906,
													"nodeType": "ExpressionStatement",
													"src": "2852:6:5"
												}
											}
										]
									},
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "1441:485:5",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nameLocation": "1941:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1969:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1961:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1960:11:5"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2001:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1995:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 753,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1995:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:9:5"
									},
									"scope": 910,
									"src": "1932:934:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 911,
							"src": "179:2690:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:2838:5"
				},
				"id": 5
			},
			"src/lib/Position.sol": {
				"ast": {
					"absolutePath": "src/lib/Position.sol",
					"exportedSymbols": {
						"Position": [
							973
						]
					},
					"id": 974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Position",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 973,
							"linearizedBaseContracts": [
								973
							],
							"name": "Position",
							"nameLocation": "69:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Position.Info",
									"id": 915,
									"members": [
										{
											"constant": false,
											"id": 914,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "116:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 915,
											"src": "108:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 913,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "108:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nameLocation": "92:4:6",
									"nodeType": "StructDefinition",
									"scope": 973,
									"src": "85:48:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "213:169:6",
										"statements": [
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "liquidityBefore",
														"nameLocation": "232:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "224:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 923,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "224:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"expression": {
														"id": 925,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "250:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "255:9:6",
													"memberName": "liquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 914,
													"src": "250:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "224:40:6"
											},
											{
												"assignments": [
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "liquidityAfter",
														"nameLocation": "283:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 940,
														"src": "275:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 928,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "275:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 933,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "300:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 931,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "318:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "300:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "275:57:6"
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 934,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "343:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
																"typeString": "struct Position.Info storage pointer"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "348:9:6",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 914,
														"src": "343:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "liquidityAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "360:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "343:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "343:31:6"
											}
										]
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "154:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "174:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "161:17:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 916,
														"name": "Info",
														"nameLocations": [
															"161:4:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "161:4:6"
													},
													"referencedDeclaration": 915,
													"src": "161:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nameLocation": "188:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "180:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 919,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "160:43:6"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "213:0:6"
									},
									"scope": 973,
									"src": "145:237:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "589:116:6",
										"statements": [
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 958,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "600:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
															"typeString": "struct Position.Info storage pointer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 959,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "611:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$",
																"typeString": "mapping(bytes32 => struct Position.Info storage ref)"
															}
														},
														"id": 968,
														"indexExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 963,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "657:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 964,
																			"name": "lowerTick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "664:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		{
																			"id": 965,
																			"name": "upperTick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "675:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"expression": {
																			"id": 961,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "640:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "644:12:6",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "640:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "640:45:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 960,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "630:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "630:56:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "611:86:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$915_storage",
															"typeString": "struct Position.Info storage ref"
														}
													},
													"src": "600:97:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
														"typeString": "struct Position.Info storage pointer"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "600:97:6"
											}
										]
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "399:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "446:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "413:37:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$",
													"typeString": "mapping(bytes32 => struct Position.Info)"
												},
												"typeName": {
													"id": 945,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 942,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "421:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Mapping",
													"src": "413:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Info_$915_storage_$",
														"typeString": "mapping(bytes32 => struct Position.Info)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 944,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 943,
															"name": "Info",
															"nameLocations": [
																"432:4:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 915,
															"src": "432:4:6"
														},
														"referencedDeclaration": 915,
														"src": "432:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
															"typeString": "struct Position.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "469:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "461:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "lowerTick",
												"nameLocation": "491:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "485:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 949,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "485:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "upperTick",
												"nameLocation": "517:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "511:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 951,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "511:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:131:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "position",
												"nameLocation": "579:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "557:30:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
													"typeString": "struct Position.Info"
												},
												"typeName": {
													"id": 955,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 954,
														"name": "Position.Info",
														"nameLocations": [
															"557:8:6",
															"566:4:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 915,
														"src": "557:13:6"
													},
													"referencedDeclaration": 915,
													"src": "557:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$915_storage_ptr",
														"typeString": "struct Position.Info"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:32:6"
									},
									"scope": 973,
									"src": "390:315:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 974,
							"src": "61:649:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:677:6"
				},
				"id": 6
			},
			"src/lib/Tick.sol": {
				"ast": {
					"absolutePath": "src/lib/Tick.sol",
					"exportedSymbols": {
						"Tick": [
							1045
						]
					},
					"id": 1046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 975,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Tick",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1045,
							"linearizedBaseContracts": [
								1045
							],
							"name": "Tick",
							"nameLocation": "69:4:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Tick.Info",
									"id": 980,
									"members": [
										{
											"constant": false,
											"id": 977,
											"mutability": "mutable",
											"name": "initialized",
											"nameLocation": "109:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 980,
											"src": "104:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 976,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "104:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 979,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "139:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 980,
											"src": "131:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 978,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "131:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Info",
									"nameLocation": "88:4:7",
									"nodeType": "StructDefinition",
									"scope": 1045,
									"src": "81:75:7",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "328:385:7",
										"statements": [
											{
												"assignments": [
													998
												],
												"declarations": [
													{
														"constant": false,
														"id": 998,
														"mutability": "mutable",
														"name": "tickInfo",
														"nameLocation": "357:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "339:26:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$980_storage_ptr",
															"typeString": "struct Tick.Info"
														},
														"typeName": {
															"id": 997,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 996,
																"name": "Tick.Info",
																"nameLocations": [
																	"339:4:7",
																	"344:4:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 980,
																"src": "339:9:7"
															},
															"referencedDeclaration": 980,
															"src": "339:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$980_storage_ptr",
																"typeString": "struct Tick.Info"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"baseExpression": {
														"id": 999,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "368:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$",
															"typeString": "mapping(int24 => struct Tick.Info storage ref)"
														}
													},
													"id": 1001,
													"indexExpression": {
														"id": 1000,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "373:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "368:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Info_$980_storage",
														"typeString": "struct Tick.Info storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "339:39:7"
											},
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "liquidityBefore",
														"nameLocation": "397:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "389:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1003,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "389:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1007,
												"initialValue": {
													"expression": {
														"id": 1005,
														"name": "tickInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "415:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$980_storage_ptr",
															"typeString": "struct Tick.Info storage pointer"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "424:9:7",
													"memberName": "liquidity",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 979,
													"src": "415:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "389:44:7"
											},
											{
												"assignments": [
													1009
												],
												"declarations": [
													{
														"constant": false,
														"id": 1009,
														"mutability": "mutable",
														"name": "liquidityAfter",
														"nameLocation": "452:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "444:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1008,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "444:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1013,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "469:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1011,
														"name": "liquidityDelta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "487:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "469:32:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "444:57:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1014,
														"name": "liquidityBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "516:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "535:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "516:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "IfStatement",
												"src": "512:80:7",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "538:54:7",
													"statements": [
														{
															"expression": {
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1017,
																		"name": "tickInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 998,
																		"src": "553:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Info_$980_storage_ptr",
																			"typeString": "struct Tick.Info storage pointer"
																		}
																	},
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "562:11:7",
																	"memberName": "initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 977,
																	"src": "553:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "576:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "553:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "553:27:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1025,
															"name": "tickInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "602:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Info_$980_storage_ptr",
																"typeString": "struct Tick.Info storage pointer"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "611:9:7",
														"memberName": "liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 979,
														"src": "602:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1028,
														"name": "liquidityAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "623:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "602:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "602:35:7"
											},
											{
												"expression": {
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1031,
														"name": "flipped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "648:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1032,
																		"name": "liquidityAfter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1009,
																		"src": "659:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "677:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "659:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1035,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "658:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1036,
																		"name": "liquidityBefore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "684:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "703:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "684:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1039,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "683:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "658:47:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "648:57:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "648:57:7"
											}
										]
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "update",
									"nameLocation": "177:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "230:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "194:40:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$",
													"typeString": "mapping(int24 => struct Tick.Info)"
												},
												"typeName": {
													"id": 984,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 981,
														"name": "int24",
														"nodeType": "ElementaryTypeName",
														"src": "202:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Mapping",
													"src": "194:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int24_$_t_struct$_Info_$980_storage_$",
														"typeString": "mapping(int24 => struct Tick.Info)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 983,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 982,
															"name": "Tick.Info",
															"nameLocations": [
																"211:4:7",
																"216:4:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 980,
															"src": "211:9:7"
														},
														"referencedDeclaration": 980,
														"src": "211:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Info_$980_storage_ptr",
															"typeString": "struct Tick.Info"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "251:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "245:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 986,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "245:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "liquidityDelta",
												"nameLocation": "274:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "266:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 988,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:112:7"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "flipped",
												"nameLocation": "319:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "314:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 991,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "314:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:14:7"
									},
									"scope": 1045,
									"src": "168:545:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1046,
							"src": "61:657:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:685:7"
				},
				"id": 7
			},
			"src/lib/TickBitmap.sol": {
				"ast": {
					"absolutePath": "src/lib/TickBitmap.sol",
					"exportedSymbols": {
						"BitMath": [
							910
						],
						"TickBitmap": [
							1318
						]
					},
					"id": 1319,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1047,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".14"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "src/lib/BitMath.sol",
							"file": "./BitMath.sol",
							"id": 1048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1319,
							"sourceUnit": 911,
							"src": "61:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickBitmap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1049,
								"nodeType": "StructuredDocumentation",
								"src": "88:246:8",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 1318,
							"linearizedBaseContracts": [
								1318
							],
							"name": "TickBitmap",
							"nameLocation": "342:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "775:92:8",
										"statements": [
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "786:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1062,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "802:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "810:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "802:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "796:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 1060,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "796:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "796:16:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "786:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "786:26:8"
											},
											{
												"expression": {
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1068,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "823:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1073,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "845:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "323536",
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "852:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"src": "845:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "838:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 1071,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "838:6:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "838:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "832:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 1069,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "832:5:8",
																"typeDescriptions": {}
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "832:25:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "823:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1079,
												"nodeType": "ExpressionStatement",
												"src": "823:34:8"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "360:328:8",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nameLocation": "703:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "712:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1051,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "712:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:12:8"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "wordPos",
												"nameLocation": "752:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "746:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1054,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "746:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "bitPos",
												"nameLocation": "767:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "761:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1056,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "761:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:29:8"
									},
									"scope": 1318,
									"src": "694:173:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "1261:225:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1094,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "1280:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1095,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "1287:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1280:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1302:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1280:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1272:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1272:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "1272:32:8"
											},
											{
												"assignments": [
													1102,
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "wordPos",
														"nameLocation": "1356:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "1350:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 1101,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "1350:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "bitPos",
														"nameLocation": "1371:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "1365:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1103,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "1365:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1106,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1390:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1107,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "1397:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "1390:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 1105,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "1381:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1381:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1349:60:8"
											},
											{
												"assignments": [
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "1428:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "1420:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1420:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1435:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1114,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1440:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1435:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1420:26:8"
											},
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1117,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "1457:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 1119,
														"indexExpression": {
															"id": 1118,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "1462:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1457:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 1120,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1474:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1457:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "1457:21:8"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "875:248:8",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nameLocation": "1138:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1191:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1157:38:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 1085,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1083,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "1165:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "1157:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1084,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1174:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1212:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1206:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1087,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1206:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1233:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1227:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1089,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:105:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:0:8"
									},
									"scope": 1318,
									"src": "1129:357:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "2453:1773:8",
										"statements": [
											{
												"assignments": [
													1143
												],
												"declarations": [
													{
														"constant": false,
														"id": 1143,
														"mutability": "mutable",
														"name": "compressed",
														"nameLocation": "2470:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1316,
														"src": "2464:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1142,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "2464:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1144,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1131,
														"src": "2483:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1145,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "2490:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "2483:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2464:37:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1148,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1131,
															"src": "2516:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2523:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2516:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1151,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "2528:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1152,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "2535:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "2528:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2550:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2528:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2516:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "2512:53:8",
												"trueBody": {
													"expression": {
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "2553:12:8",
														"subExpression": {
															"id": 1157,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "2553:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 1159,
													"nodeType": "ExpressionStatement",
													"src": "2553:12:8"
												}
											},
											{
												"condition": {
													"id": 1161,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1135,
													"src": "2617:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1314,
													"nodeType": "Block",
													"src": "3372:847:8",
													"statements": [
														{
															"assignments": [
																1234,
																1236
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1234,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nameLocation": "3492:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1314,
																	"src": "3486:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 1233,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "3486:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1236,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nameLocation": "3507:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1314,
																	"src": "3501:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1235,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "3501:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1242,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1238,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "3526:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3539:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3526:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1237,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "3517:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3517:24:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3485:56:8"
														},
														{
															"assignments": [
																1244
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1244,
																	"mutability": "mutable",
																	"name": "mask",
																	"nameLocation": "3623:4:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1314,
																	"src": "3615:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1243,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3615:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1253,
															"initialValue": {
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "3630:20:8",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1247,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1245,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3633:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1246,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1236,
																							"src": "3638:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3633:11:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1248,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3632:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3648:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3632:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1251,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3631:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3615:35:8"
														},
														{
															"assignments": [
																1255
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1255,
																	"mutability": "mutable",
																	"name": "masked",
																	"nameLocation": "3673:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1314,
																	"src": "3665:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1254,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3665:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1261,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1256,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "3682:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 1258,
																	"indexExpression": {
																		"id": 1257,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1234,
																		"src": "3687:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3682:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1259,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "3698:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3682:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3665:37:8"
														},
														{
															"expression": {
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1262,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "3830:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1263,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "3844:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3854:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3844:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3830:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1267,
															"nodeType": "ExpressionStatement",
															"src": "3830:25:8"
														},
														{
															"expression": {
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1268,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "3981:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 1269,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "3988:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1307,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 1292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1290,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1143,
																							"src": "4134:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1291,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4147:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4134:14:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 1303,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"expression": {
																														"arguments": [
																															{
																																"id": 1299,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": true,
																																"lValueRequested": false,
																																"nodeType": "ElementaryTypeNameExpression",
																																"src": "4170:5:8",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_type$_t_uint8_$",
																																	"typeString": "type(uint8)"
																																},
																																"typeName": {
																																	"id": 1298,
																																	"name": "uint8",
																																	"nodeType": "ElementaryTypeName",
																																	"src": "4170:5:8",
																																	"typeDescriptions": {}
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_type$_t_uint8_$",
																																	"typeString": "type(uint8)"
																																}
																															],
																															"id": 1297,
																															"name": "type",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 4294967269,
																															"src": "4165:4:8",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																																"typeString": "function () pure"
																															}
																														},
																														"id": 1300,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"nameLocations": [],
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "4165:11:8",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_magic_meta_type_t_uint8",
																															"typeString": "type(uint8)"
																														}
																													},
																													"id": 1301,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"memberLocation": "4177:3:8",
																													"memberName": "max",
																													"nodeType": "MemberAccess",
																													"src": "4165:15:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"id": 1302,
																													"name": "bitPos",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1236,
																													"src": "4183:6:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "4165:24:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"id": 1304,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "4164:26:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 1296,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4157:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 1295,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "4157:6:8",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1305,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4157:34:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 1294,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4151:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1293,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4151:5:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1306,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4151:41:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4134:58:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1308,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4133:60:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1309,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1133,
																			"src": "4196:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4133:74:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3988:219:8",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1286,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 1272,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1270,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1143,
																							"src": "4020:10:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1271,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4033:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "4020:14:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"components": [
																											{
																												"commonType": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												},
																												"id": 1282,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"arguments": [
																														{
																															"id": 1279,
																															"name": "masked",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1255,
																															"src": "4079:6:8",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"expression": {
																														"argumentTypes": [
																															{
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														],
																														"expression": {
																															"id": 1277,
																															"name": "BitMath",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 910,
																															"src": "4051:7:8",
																															"typeDescriptions": {
																																"typeIdentifier": "t_type$_t_contract$_BitMath_$910_$",
																																"typeString": "type(library BitMath)"
																															}
																														},
																														"id": 1278,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "4059:19:8",
																														"memberName": "leastSignificantBit",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 909,
																														"src": "4051:27:8",
																														"typeDescriptions": {
																															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																															"typeString": "function (uint256) pure returns (uint8)"
																														}
																													},
																													"id": 1280,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"kind": "functionCall",
																													"lValueRequested": false,
																													"nameLocations": [],
																													"names": [],
																													"nodeType": "FunctionCall",
																													"src": "4051:35:8",
																													"tryCall": false,
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": "-",
																												"rightExpression": {
																													"id": 1281,
																													"name": "bitPos",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1236,
																													"src": "4089:6:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint8",
																														"typeString": "uint8"
																													}
																												},
																												"src": "4051:44:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											}
																										],
																										"id": 1283,
																										"isConstant": false,
																										"isInlineArray": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "TupleExpression",
																										"src": "4050:46:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 1276,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4043:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 1275,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "4043:6:8",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1284,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4043:54:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 1274,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4037:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1273,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "4037:5:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4037:61:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "4020:78:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1287,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4019:80:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1288,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1133,
																			"src": "4102:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "4019:94:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3981:226:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1313,
															"nodeType": "ExpressionStatement",
															"src": "3981:226:8"
														}
													]
												},
												"id": 1315,
												"nodeType": "IfStatement",
												"src": "2613:1606:8",
												"trueBody": {
													"id": 1232,
													"nodeType": "Block",
													"src": "2622:744:8",
													"statements": [
														{
															"assignments": [
																1163,
																1165
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1163,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nameLocation": "2644:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1232,
																	"src": "2638:13:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 1162,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "2638:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1165,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nameLocation": "2659:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1232,
																	"src": "2653:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1164,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2653:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1169,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1167,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "2678:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1166,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "2669:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2669:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2637:52:8"
														},
														{
															"assignments": [
																1171
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1171,
																	"mutability": "mutable",
																	"name": "mask",
																	"nameLocation": "2780:4:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1232,
																	"src": "2772:12:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1170,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1183,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1172,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2788:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1173,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "2793:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "2788:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1175,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2787:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2803:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2787:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2808:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1179,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "2813:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "2808:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1181,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2807:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2787:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2772:48:8"
														},
														{
															"assignments": [
																1185
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1185,
																	"mutability": "mutable",
																	"name": "masked",
																	"nameLocation": "2843:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1232,
																	"src": "2835:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1184,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2835:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1191,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1186,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "2852:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 1188,
																	"indexExpression": {
																		"id": 1187,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "2857:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2852:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1189,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1171,
																	"src": "2868:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2852:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2835:37:8"
														},
														{
															"expression": {
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1192,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "3008:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1193,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "3022:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3032:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3022:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3008:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1197,
															"nodeType": "ExpressionStatement",
															"src": "3008:25:8"
														},
														{
															"expression": {
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1198,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "3159:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 1199,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "3166:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1225,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1217,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1143,
																						"src": "3305:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1222,
																										"name": "bitPos",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1165,
																										"src": "3331:6:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 1221,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3324:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 1220,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3324:6:8",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1223,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3324:14:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 1219,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3318:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1218,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3318:5:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1224,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3318:21:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3305:34:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1226,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3304:36:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1227,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1133,
																			"src": "3343:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3304:50:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3166:188:8",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1200,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1143,
																						"src": "3198:10:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 1210,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 1205,
																											"name": "bitPos",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1165,
																											"src": "3224:6:8",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"arguments": [
																												{
																													"id": 1208,
																													"name": "masked",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1185,
																													"src": "3260:6:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"id": 1206,
																													"name": "BitMath",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 910,
																													"src": "3233:7:8",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_contract$_BitMath_$910_$",
																														"typeString": "type(library BitMath)"
																													}
																												},
																												"id": 1207,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "3241:18:8",
																												"memberName": "mostSignificantBit",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 748,
																												"src": "3233:26:8",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																													"typeString": "function (uint256) pure returns (uint8)"
																												}
																											},
																											"id": 1209,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"nameLocations": [],
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "3233:34:8",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "3224:43:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									],
																									"id": 1204,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "3217:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint24_$",
																										"typeString": "type(uint24)"
																									},
																									"typeName": {
																										"id": 1203,
																										"name": "uint24",
																										"nodeType": "ElementaryTypeName",
																										"src": "3217:6:8",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1211,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3217:51:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint24",
																									"typeString": "uint24"
																								}
																							],
																							"id": 1202,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3211:5:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1201,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "3211:5:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1212,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3211:58:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "3198:71:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1214,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3197:73:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1215,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1133,
																			"src": "3273:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "3197:87:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "3159:195:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "3159:195:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "1494:734:8",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nameLocation": "2243:32:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2320:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2286:38:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 1128,
													"keyName": "",
													"keyNameLocation": "-1:-1:-1",
													"keyType": {
														"id": 1126,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "2294:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "2286:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 1127,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2303:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "2341:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2335:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1130,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2335:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "2362:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2356:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1132,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2356:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "lte",
												"nameLocation": "2389:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2384:8:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2384:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:124:8"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "next",
												"nameLocation": "2429:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2423:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1137,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2423:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "2440:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2435:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2435:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:30:8"
									},
									"scope": 1318,
									"src": "2234:1992:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1319,
							"src": "334:3895:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:4198:8"
				},
				"id": 8
			}
		}
	}
}