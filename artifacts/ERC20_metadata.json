{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "initialSupply",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_symbol",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"params": {
						"owner": "The account that approved spending of its tokens",
						"spender": "The account for which the spending allowance was modified",
						"value": "The new allowance from the owner to the spender"
					}
				},
				"Transfer(address,address,uint256)": {
					"params": {
						"from": "The account from which the tokens were sent, i.e. the balance decreased",
						"to": "The account to which the tokens were sent, i.e. the balance increased",
						"value": "The amount of tokens that were transferred"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"params": {
						"owner": "The account of the token owner",
						"spender": "The account of the token spender"
					},
					"returns": {
						"_0": "The current allowance granted by `owner` to `spender`"
					}
				},
				"approve(address,uint256)": {
					"params": {
						"amount": "The amount of tokens allowed to be used by `spender`",
						"spender": "The account which will be allowed to spend a given amount of the owners tokens"
					},
					"returns": {
						"_0": "Returns true for a successful approval, false for unsuccessful"
					}
				},
				"balanceOf(address)": {
					"params": {
						"account": "The account for which to look up the number of tokens it has, i.e. its balance"
					},
					"returns": {
						"_0": "The number of tokens held by the account"
					}
				},
				"transfer(address,uint256)": {
					"params": {
						"amount": "The number of tokens to send from the sender to the recipient",
						"recipient": "The account that will receive the amount transferred"
					},
					"returns": {
						"_0": "Returns true for a successful transfer, false for an unsuccessful transfer"
					}
				},
				"transferFrom(address,address,uint256)": {
					"params": {
						"amount": "The amount of the transfer",
						"recipient": "The recipient of the transfer",
						"sender": "The account from which the transfer will be initiated"
					},
					"returns": {
						"_0": "Returns true for a successful transfer, false for unsuccessful"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"notice": "Event emitted when the approval amount for the spender of a given owner's tokens changes."
				},
				"Transfer(address,address,uint256)": {
					"notice": "Event emitted when tokens are transferred from one address to another, either via `#transfer` or `#transferFrom`."
				}
			},
			"kind": "user",
			"methods": {
				"allowance(address,address)": {
					"notice": "Returns the current allowance given to a spender by an owner"
				},
				"approve(address,uint256)": {
					"notice": "Sets the allowance of a spender from the `msg.sender` to the value `amount`"
				},
				"balanceOf(address)": {
					"notice": "Returns the balance of a token"
				},
				"transfer(address,uint256)": {
					"notice": "Transfers the amount of token from the `msg.sender` to the recipient"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Transfers `amount` tokens from `sender` to `recipient` up to the allowance given to the `msg.sender`"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"test/ERC20.sol": "ERC20"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"/src/interfaces/IERC20.sol": {
			"keccak256": "0x8f7e66ebc62dc73aa8871ca29cc1f93d1fffa19a569972bfd58dcbb674329a90",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://6b8cc533e3d0d71cbe0663f17395713b798dfc419cc543d79bd145c2062ffcab",
				"dweb:/ipfs/QmRHswF3a49hkXrBGssMSu1r2H2gBWBVbHJ3MrF56L5HRW"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0xf2560b5386574153057104d19a9e68a32ee912cf23c0c8df1fe9a0607f42d543",
			"license": "MIT",
			"urls": [
				"bzz-raw://a63166e036b040826baa513772451a79925daa304b38749100efb089ac07cdc2",
				"dweb:/ipfs/QmUtMTxUFKU6a5oFXsEJnTPvb3QPb7GDDmSv5yZ1jFHDwR"
			]
		},
		"test/ERC20.sol": {
			"keccak256": "0xbbb5fe47c15de4af3db910b79164debe125088ad59d24da73beedcd6bc6c96f9",
			"license": "MIT",
			"urls": [
				"bzz-raw://5b99c866cc0d09a9de805d453c339c80a47e7ad335bdf01361462f3ac29cc670",
				"dweb:/ipfs/Qme6nto9KEVFTfzpqWVWcde5vQxU84h6MJXj8MfdWgTj6i"
			]
		}
	},
	"version": 1
}